
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


====================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm firewall.node_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_3.finite.cpp firewall.node_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_3.finite.o firewall.node_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.035 seconds

[QRM NOTE]: Time elapsed since last: 7.035 seconds

[QRM NOTE]: Peak memory: 1177582 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        68

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 52


===========================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: allowed_in('node',)
predicate: sent('node', 'node')
predicate: internal('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']
representative states : 0, 3584, 1536, 512, 7176, 7240, 7242, 7246, 7178, 7182, 7180, 5128, 14528, 14532, 14564, 5130


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000
lex min decimal: 0
states:
000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000111000000000
lex min decimal: 3584
states:
000111000000000




=== State Orbit 2 =====================
size : 3
repr state: 000110000000000
lex min decimal: 1536
states:
000101000000000
000011000000000
000110000000000




=== State Orbit 3 =====================
size : 3
repr state: 000100000000000
lex min decimal: 512
states:
000010000000000
000100000000000
000001000000000




=== State Orbit 4 =====================
size : 6
repr state: 001110001000000
lex min decimal: 7176
states:
001110000001000
100011000100000
010101010000000
001110001000000
010101000000010
100011000000100




=== State Orbit 5 =====================
size : 3
repr state: 001110001001000
lex min decimal: 7240
states:
001110001001000
100011000100100
010101010000010




=== State Orbit 6 =====================
size : 6
repr state: 001110001001100
lex min decimal: 7242
states:
001110001001010
010101010100010
010101010001010
100011001100100
001110001001100
100011010100100




=== State Orbit 7 =====================
size : 3
repr state: 001110001001110
lex min decimal: 7246
states:
010101010101010
001110001001110
100011011100100




=== State Orbit 8 =====================
size : 6
repr state: 001110001000100
lex min decimal: 7178
states:
100011001000100
010101000001010
001110001000100
001110000001010
010101010100000
100011010100000




=== State Orbit 9 =====================
size : 6
repr state: 001110001000110
lex min decimal: 7182
states:
010101010101000
001110001000110
100011011100000
100011011000100
001110000001110
010101000101010




=== State Orbit 10 =====================
size : 6
repr state: 001110001000010
lex min decimal: 7180
states:
001110001000010
010101000100010
100011001100000
100011010000100
010101010001000
001110000001100




=== State Orbit 11 =====================
size : 6
repr state: 010100010000000
lex min decimal: 5128
states:
010001000000010
100001000000100
001100001000000
001010000001000
100010000100000
010100010000000




=== State Orbit 12 =====================
size : 3
repr state: 011100011000000
lex min decimal: 14528
states:
011100011000000
110001000000110
101010000101000




=== State Orbit 13 =====================
size : 6
repr state: 011100011100000
lex min decimal: 14532
states:
011100011100000
101010000101010
110001001000110
011100011000100
110001000001110
101010010101000




=== State Orbit 14 =====================
size : 3
repr state: 011100011100100
lex min decimal: 14564
states:
101010010101010
011100011100100
110001001001110




=== State Orbit 15 =====================
size : 6
repr state: 010100010100000
lex min decimal: 5130
states:
100010010100000
001100001000100
010001000001010
010100010100000
001010000001010
100001001000100



[QRM NOTE]: Time elapsed since start: 7.150 seconds

[QRM NOTE]: Time elapsed since last: 0.115 seconds

[QRM NOTE]: Peak memory: 1227785 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.153 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 190865 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

======================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
6 (*) : 1--------0--0--
6     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
7     : -1-----0-----0-
7     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
8     : --1-----0--0---
8     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
9 (*) : 1---0-------0--
9     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
10     : 1----0---0-----
10     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
11     : -1-0---------0-
11     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
12     : -1---0-0-------
12     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
13     : --10-------0---
13     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
14     : --1-0---0------
14     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
15 (*) : 11----------0--
15     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
16     : 1-1------0-----
16     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
17     : 11-----------0-
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
18     : -11----0-------
18     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
19     : 1-1--------0---
19     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
20     : -11-----0------
20     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
21 (*) : 11-------1-----
21     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
22     : 1-1---------1--
22     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
23     : 11-----1-------
23     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
24     : -11----------1-
24     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
25     : 1-1-----1------
25     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
26     : -11--------1---
26     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 3
num_suborbits: 1
27 (*) : 11---0---------
27     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
28     : 1-1-0----------
28     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
29     : -110-----------
29     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
30 (*) : 1---0----1-----
30     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
31     : 1----0------1--
31     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
32     : -1-0---1-------
32     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
33     : -1---0-------1-
33     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
34     : --10----1------
34     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
35     : --1-0------1---
35     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
36 (*) : 1---00---------
36     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
37     : -1-0-0---------
37     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
38     : --100----------
38     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
39 (*) : 1---0--1-------
39     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
40     : 1----0--1------
40     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
41     : -1-0-----1-----
41     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
42     : -1---0-----1---
42     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
43     : --10--------1--
43     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
44     : --1-0--------1-
44     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
45 (*) : 111------------
45     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
46 (*) : 0-0-----1------
46     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
47     : 00-----1-------
47     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
48     : -00--------1---
48     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
49     : 00-------1-----
49     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
50     : -00----------1-
50     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
51     : 0-0---------1--
51     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
52 (*) : 0--0----1------
52     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
53     : 0--0---1-------
53     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
54     : -0--0------1---
54     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
55     : -0--0----1-----
55     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
56     : --0--0-------1-
56     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
57     : --0--0------1--
57     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
58 (*) : --01----1------
58     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
59     : -0-1---1-------
59     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
60     : --0-1------1---
60     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
61     : 0---1----1-----
61     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
62     : -0---1-------1-
62     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
63     : 0----1------1--
63     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
64 (*) : --0--0-----1---
64     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
65     : -0--0--------1-
65     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
66     : --0--0--1------
66     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
67     : 0--0--------1--
67     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
68     : -0--0--1-------
68     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
69     : 0--0-----1-----
69     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
70 (*) : ---0-0------1--
70     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
71     : ---00----1-----
71     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
72     : ----00-------1-
72     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
73     : ---00--1-------
73     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
74     : ----00-----1---
74     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
75     : ---0-0--1------
75     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
76 (*) : -0---1-----1---
76     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
77     : --0-1--------1-
77     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
78     : 0----1--1------
78     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
79     : --01--------1--
79     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
80     : 0---1--1-------
80     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
81     : -0-1-----1-----
81     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
82 (*) : ----11-----1---
82     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
83     : ----11-------1-
83     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
84     : ---1-1--1------
84     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
85     : ---1-1------1--
85     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
86     : ---11--1-------
86     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
87     : ---11----1-----
87     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
88 (*) : ---------1--11-
88     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
89     : ---------1-11--
89     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
90     : -------1----11-
90     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
91     : -------11----1-
91     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
92     : --------11-1---
92     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
93     : -------11--1---
93     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 2
num_suborbits: 1
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
96 (*) : ---0-0-----0-1-
96     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
97     : ---00------1-0-
97     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
98     : ----00--0---1--
98     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
99     : ---00---1---0--
99     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
100     : ----00-0-1-----
100     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
101     : ---0-0-1-0-----
101     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
102 (*) : ---0----1---01-
102     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
103     : ---0---1-0-1---
103     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
104     : ----0------110-
104     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
105     : ----0--011-----
105     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
106     : -----0---1-0-1-
106     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
107     : -----0-10---1--
107     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
108 (*) : ---0----10--0--
108     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
109     : ---0---1-0--0--
109     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
110     : ----0--0---1-0-
110     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
111     : ----0--0-1---0-
111     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
112     : -----0--0--0-1-
112     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
113     : -----0--0--01--
113     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
114 (*) : -0-0--------11-
114     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
115     : --00-----1-1---
115     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
116     : 0---0-------11-
116     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
117     : --0-0--11------
117     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
118     : 0----0---1-1---
118     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
119     : -0---0-11------
119     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
120 (*) : -0-0-------0-1-
120     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
121     : --00-------1-0-
121     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
122     : 0---0---0---1--
122     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
123     : --0-0---1---0--
123     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
124     : 0----0-0-1-----
124     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
125     : -0---0-1-0-----
125     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
126 (*) : ---01------0-1-
126     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
127     : ---0-1-----1-0-
127     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
128     : ---10---0---1--
128     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
129     : ----01--1---0--
129     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
130     : ---1-0-0-1-----
130     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
131     : ----10-1-0-----
131     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
132 (*) : ---01------11--
132     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
133     : ---0-1---1---1-
133     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
134     : ---10---1----1-
134     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
135     : ----01-1----1--
135     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
136     : ---1-0-1---1---
136     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
137     : ----10--11-----
137     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
138 (*) : ---01-------11-
138     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
139     : ---0-1---1-1---
139     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
140     : ---10-------11-
140     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
141     : ----01-11------
141     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
142     : ---1-0---1-1---
142     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
143     : ----10-11------
143     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
144 (*) : -0-0-------11--
144     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
145     : --00-----1---1-
145     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
146     : 0---0---1----1-
146     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
147     : --0-0--1----1--
147     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
148     : 0----0-1---1---
148     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
149     : -0---0--11-----
149     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
150 (*) : ---0-------110-
150     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
151     : ---0-----1-0-1-
151     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
152     : ----0---1---01-
152     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
153     : ----0--10---1--
153     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
154     : -----0-1-0-1---
154     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
155     : -----0-011-----
155     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
156 (*) : ---0---1---0-1-
156     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
157     : ---0----1--1-0-
157     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
158     : ----0---01--1--
158     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
159     : ----0---1--10--
159     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
160     : -----0-0-1--1--
160     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
161     : -----0-1-0---1-
161     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
162 (*) : --00---1-----1-
162     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
163     : -0-0----1--1---
163     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
164     : --0-0----1--1--
164     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
165     : 0---0---1--1---
165     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
166     : -0---0---1--1--
166     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
167     : 0----0-1-----1-
167     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
168 (*) : ---0---1-0---1-
168     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
169     : ---0----1--10--
169     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
170     : ----0--0-1--1--
170     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
171     : ----0---1--1-0-
171     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
172     : -----0--01--1--
172     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
173     : -----0-1---0-1-
173     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
174 (*) : ---0-1-1-----1-
174     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
175     : ---01---1--1---
175     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
176     : ----01---1--1--
176     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
177     : ---10---1--1---
177     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
178     : ----10---1--1--
178     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
179     : ---1-0-1-----1-
179     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
180 (*) : --00---1---1---
180     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
181     : -0-0----1----1-
181     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
182     : --0-0---11-----
182     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
183     : 0---0------11--
183     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
184     : -0---0-1----1--
184     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
185     : 0----0---1---1-
185     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
186 (*) : --10---1-0-----
186     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
187     : -1-0----1---0--
187     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
188     : --1-0--0-1-----
188     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
189     : 1---0------1-0-
189     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
190     : -1---0--0---1--
190     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
191     : 1----0-----0-1-
191     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
192 (*) : ---0-1-1---1---
192     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
193     : ---01---1----1-
193     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
194     : ----01--11-----
194     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
195     : ---10------11--
195     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
196     : ----10-1----1--
196     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
197     : ---1-0---1---1-
197     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
198 (*) : --0-----10--0--
198     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
199     : -0-----1-0--0--
199     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
200     : --0----0---1-0-
200     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
201     : 0------0-1---0-
201     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
202     : -0------0--0-1-
202     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
203     : 0-------0--01--
203     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
204 (*) : -----1--10--0--
204     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
205     : ----1--1-0--0--
205     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
206     : -----1-0---1-0-
206     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
207     : ---1---0-1---0-
207     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
208     : ----1---0--0-1-
208     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
209     : ---1----0--01--
209     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
210 (*) : 1-------1--10--
210     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
211     : 1------1-0---1-
211     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
212     : -1------1--1-0-
212     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
213     : -1-----0-1--1--
213     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
214     : --1----1---0-1-
214     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
215     : --1-----01--1--
215     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
216 (*) : --0-----1--10--
216     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
217     : -0-----1-0---1-
217     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
218     : --0-----1--1-0-
218     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
219     : 0------0-1--1--
219     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
220     : -0-----1---0-1-
220     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
221     : 0-------01--1--
221     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 6
num_suborbits: 1
222 (*) : -----1--1--10--
222     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
223     : ----1--1-0---1-
223     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
224     : -----1--1--1-0-
224     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
225     : ---1---0-1--1--
225     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
226     : ----1--1---0-1-
226     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
227     : ---1----01--1--
227     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 6
num_suborbits: 1
228 (*) : 1-------1--1-0-
228     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
229     : 1------1---0-1-
229     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
230     : -1------1--10--
230     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
231     : -1------01--1--
231     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
232     : --1----1-0---1-
232     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
233     : --1----0-1--1--
233     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 6
num_suborbits: 1
234 (*) : 10------1--1---
234     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
235     : 1-0----1-----1-
235     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
236     : 01------1--1---
236     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
237     : -10------1--1--
237     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
238     : 0-1----1-----1-
238     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
239     : -01------1--1--
239     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 6
num_suborbits: 1
240 (*) : 1---1---1--1---
240     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
241     : 1----1-1-----1-
241     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
242     : -1-1----1--1---
242     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
243     : -1---1---1--1--
243     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
244     : --11---1-----1-
244     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
245     : --1-1----1--1--
245     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 6
num_suborbits: 1
246 (*) : ---1---011-----
246     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
247     : ---1---10---1--
247     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
248     : ----1--1-0-1---
248     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
249     : ----1----1-0-1-
249     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
250     : -----1--1---01-
250     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
251     : -----1-----110-
251     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 6
num_suborbits: 1
252 (*) : -01-----11-----
252     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
253     : -10----1----1--
253     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
254     : 0-1----1---1---
254     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
255     : 1-0------1---1-
255     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
256     : 01------1----1-
256     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
257     : 10---------11--
257     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 6
num_suborbits: 1
258 (*) : --1----011-----
258     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
259     : -1-----10---1--
259     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
260     : --1----1-0-1---
260     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
261     : 1--------1-0-1-
261     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
262     : -1------1---01-
262     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
263     : 1----------110-
263     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 6
num_suborbits: 1
264 (*) : --1-1---11-----
264     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
265     : -1---1-1----1--
265     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
266     : --11---1---1---
266     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
267     : 1----1---1---1-
267     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
268     : -1-1----1----1-
268     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
269     : 1---1------11--
269     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 6
num_suborbits: 1
270 (*) : --1-1--11------
270     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
271     : -1---1-11------
271     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
272     : --11-----1-1---
272     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
273     : 1----1---1-1---
273     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
274     : -1-1--------11-
274     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
275     : 1---1-------11-
275     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 6
num_suborbits: 1
276 (*) : -01----11------
276     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
277     : -10----11------
277     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
278     : 0-1------1-1---
278     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
279     : 1-0------1-1---
279     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
280     : 01----------11-
280     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
281     : 10----------11-
281     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 6
num_suborbits: 1
282 (*) : 0------011-----
282     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
283     : 0------10---1--
283     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
284     : -0-----1-0-1---
284     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
285     : -0-------1-0-1-
285     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
286     : --0-----1---01-
286     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
287     : --0--------110-
287     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 6
num_suborbits: 1
288 (*) : 10------1----1-
288     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
289     : 1-0----1---1---
289     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
290     : 01---------11--
290     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
291     : -10-----11-----
291     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
292     : 0-1------1---1-
292     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
293     : -01----1----1--
293     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 53 =====================
size : 6
num_suborbits: 1
294 (*) : 1---1---1----1-
294     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
295     : 1----1-1---1---
295     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
296     : -1-1-------11--
296     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
297     : -1---1--11-----
297     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
298     : --11-----1---1-
298     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
299     : --1-1--1----1--
299     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 54 =====================
size : 6
num_suborbits: 1
300 (*) : 1-------1---01-
300     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
301     : 1------1-0-1---
301     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
302     : -1---------110-
302     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
303     : -1-----011-----
303     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
304     : --1------1-0-1-
304     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
305     : --1----10---1--
305     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 55 =====================
size : 6
num_suborbits: 1
306 (*) : -1-1---01------
306     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
307     : --11---10------
307     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
308     : 1---1----0-1---
308     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
309     : --1-1----1-0---
309     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
310     : 1----1------01-
310     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
311     : -1---1------10-
311     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 56 =====================
size : 6
num_suborbits: 1
312 (*) : 01-----01------
312     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
313     : 0-1----10------
313     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
314     : 10-------0-1---
314     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
315     : -01------1-0---
315     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
316     : 1-0---------01-
316     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
317     : -10---------10-
317     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 57 =====================
size : 6
num_suborbits: 1
318 (*) : -10-----1----0-
318     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
319     : -01----1---0---
319     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
320     : 1-0--------10--
320     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
321     : 0-1-----01-----
321     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
322     : 10-------0---1-
322     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
323     : 01-----0----1--
323     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 58 =====================
size : 6
num_suborbits: 1
324 (*) : -1---1--1----0-
324     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
325     : --1-1--1---0---
325     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
326     : 1----1-----10--
326     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
327     : --11----01-----
327     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
328     : 1---1----0---1-
328     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
329     : -1-1---0----1--
329     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 59 =====================
size : 6
num_suborbits: 1
330 (*) : -10-----1---0--
330     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
331     : -01----1-0-----
331     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
332     : 1-0--------1-0-
332     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
333     : 0-1----0-1-----
333     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
334     : 10---------0-1-
334     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
335     : 01------0---1--
335     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 60 =====================
size : 6
num_suborbits: 1
336 (*) : -1---1--1---0--
336     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
337     : --1-1--1-0-----
337     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
338     : 1----1-----1-0-
338     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
339     : --11---0-1-----
339     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
340     : 1---1------0-1-
340     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
341     : -1-1----0---1--
341     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 61 =====================
size : 6
num_suborbits: 1
342 (*) : -1-----01---0--
342     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
343     : --1----100-----
343     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
344     : 1--------0-1-0-
344     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
345     : --1----0-1-0---
345     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
346     : 1----------001-
346     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
347     : -1------0---10-
347     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 62

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 7.230 seconds

[QRM NOTE]: Time elapsed since last: 0.077 seconds

[QRM NOTE]: Peak memory: 1574256 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=3]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : []

Essensial at level 0 : {0, 2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2]


Before reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2]

[QRM NOTE]: Time elapsed since start: 7.254 seconds

[QRM NOTE]: Time elapsed since last: 0.024 seconds

[QRM NOTE]: Peak memory: 508609 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
6 (*) : 1--------0--0--
6     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
7     : -1-----0-----0-
7     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
8     : --1-----0--0---
8     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
9 (*) : 1---0-------0--
9     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
10     : 1----0---0-----
10     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
11     : -1-0---------0-
11     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
12     : -1---0-0-------
12     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
13     : --10-------0---
13     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
14     : --1-0---0------
14     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
15 (*) : 11----------0--
15     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
16     : 1-1------0-----
16     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
17     : 11-----------0-
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
18     : -11----0-------
18     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
19     : 1-1--------0---
19     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
20     : -11-----0------
20     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$allowed_in$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$allowed_in$0$1 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$allowed_in$0$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$allowed_in$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$allowed_in$0$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$allowed_in$0': [node$0$allowed_in$0$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$allowed_in$0': node$0$allowed_in$0$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~allowed_in(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
21 (*) : 11-------1-----
21     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
22     : 1-1---------1--
22     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
23     : 11-----1-------
23     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
24     : -11----------1-
24     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
25     : 1-1-----1------
25     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
26     : -11--------1---
26     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', 'sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~allowed_in(NODE1) | ~sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 6 =====================
size : 3
num_suborbits: 1
27 (*) : 11---0---------
27     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
28     : 1-1-0----------
28     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
29     : -110-----------
29     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
30 (*) : 1---0----1-----
30     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
31     : 1----0------1--
31     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
32     : -1-0---1-------
32     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
33     : -1---0-------1-
33     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
34     : --10----1------
34     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
35     : --1-0------1---
35     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', '~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE1,NODE0) | internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
36 (*) : 1---00---------
36     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
37     : -1-0-0---------
37     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
38     : --100----------
38     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
39 (*) : 1---0--1-------
39     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
40     : 1----0--1------
40     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
41     : -1-0-----1-----
41     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
42     : -1---0-----1---
42     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
43     : --10--------1--
43     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
44     : --1-0--------1-
44     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
45 (*) : 111------------
45     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
46 (*) : 0-0-----1------
46     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
47     : 00-----1-------
47     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
48     : -00--------1---
48     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
49     : 00-------1-----
49     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
50     : -00----------1-
50     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
51     : 0-0---------1--
51     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE1)', '~allowed_in(NODE0)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE0,NODE1) | allowed_in(NODE0) | allowed_in(NODE1) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
52 (*) : 0--0----1------
52     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
53     : 0--0---1-------
53     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
54     : -0--0------1---
54     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
55     : -0--0----1-----
55     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
56     : --0--0-------1-
56     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
57     : --0--0------1--
57     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0; node$1$internal$0': [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0; node$1$internal$0': node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'sent(NODE0,NODE1)', '~allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
58 (*) : --01----1------
58     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
59     : -0-1---1-------
59     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
60     : --0-1------1---
60     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
61     : 0---1----1-----
61     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
62     : -0---1-------1-
62     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
63     : 0----1------1--
63     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE0,NODE1)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | NODE0 = NODE1


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
64 (*) : --0--0-----1---
64     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
65     : -0--0--------1-
65     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
66     : --0--0--1------
66     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
67     : 0--0--------1--
67     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
68     : -0--0--1-------
68     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
69     : 0--0-----1-----
69     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$internal$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$internal$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'sent(NODE0,NODE1)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | NODE0 = NODE1


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
70 (*) : ---0-0------1--
70     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
71     : ---00----1-----
71     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
72     : ----00-------1-
72     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
73     : ---00--1-------
73     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
74     : ----00-----1---
74     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
75     : ---0-0--1------
75     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~internal(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
76 (*) : -0---1-----1---
76     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
77     : --0-1--------1-
77     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
78     : 0----1--1------
78     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
79     : --01--------1--
79     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
80     : 0---1--1-------
80     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
81     : -0-1-----1-----
81     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'internal(node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE0)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE1,NODE0) | ~internal(NODE0) | allowed_in(NODE1) | NODE0 = NODE1


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
82 (*) : ----11-----1---
82     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
83     : ----11-------1-
83     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
84     : ---1-1--1------
84     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
85     : ---1-1------1--
85     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
86     : ---11--1-------
86     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
87     : ---11----1-----
87     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE1)', 'internal(NODE0)', 'internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE0,NODE1) | ~internal(NODE0) | ~internal(NODE1) | NODE0 = NODE1


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
88 (*) : ---------1--11-
88     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
89     : ---------1-11--
89     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
90     : -------1----11-
90     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
91     : -------11----1-
91     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
92     : --------11-1---
92     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
93     : -------11--1---
93     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$2], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$2, node$0$sent$0$1; node$0$sent$0$2, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$2, node$0$sent$0$1; node$0$sent$0$2, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$0$2 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$2], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$1; node$0$sent$0$2], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$2, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$1; node$0$sent$0$2, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 19 =====================
size : 2
num_suborbits: 1
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$1$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0, node$0$sent$1$1, node$0$sent$0$1, node$0$sent$1$2, node$0$sent$0$2, node$0$sent$1$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'sent(NODE2,NODE1)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE1) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
96 (*) : ---0-0-----0-1-
96     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
97     : ---00------1-0-
97     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
98     : ----00--0---1--
98     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
99     : ---00---1---0--
99     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
100     : ----00-0-1-----
100     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
101     : ---0-0-1-0-----
101     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$1$sent$1$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~internal(NODE2)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE0) | internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
102 (*) : ---0----1---01-
102     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
103     : ---0---1-0-1---
103     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
104     : ----0------110-
104     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
105     : ----0--011-----
105     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
106     : -----0---1-0-1-
106     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
107     : -----0-10---1--
107     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~internal(NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
108 (*) : ---0----10--0--
108     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
109     : ---0---1-0--0--
109     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
110     : ----0--0---1-0-
110     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
111     : ----0--0-1---0-
111     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
112     : -----0--0--0-1-
112     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
113     : -----0--0--01--
113     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1 | node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~internal(NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | internal(NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
114 (*) : -0-0--------11-
114     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
115     : --00-----1-1---
115     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
116     : 0---0-------11-
116     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
117     : --0-0--11------
117     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
118     : 0----0---1-1---
118     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
119     : -0---0-11------
119     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$1; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$1; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', '~internal(NODE1)', 'sent(NODE0,NODE1)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | internal(NODE1) | ~sent(NODE0,NODE1) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
120 (*) : -0-0-------0-1-
120     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
121     : --00-------1-0-
121     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
122     : 0---0---0---1--
122     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
123     : --0-0---1---0--
123     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
124     : 0----0-0-1-----
124     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
125     : -0---0-1-0-----
125     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
126 (*) : ---01------0-1-
126     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
127     : ---0-1-----1-0-
127     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
128     : ---10---0---1--
128     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
129     : ----01--1---0--
129     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
130     : ---1-0-0-1-----
130     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
131     : ----10-1-0-----
131     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', '~internal(NODE2)', '~sent(NODE0,NODE1)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | internal(NODE2) | sent(NODE0,NODE1) | ~internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
132 (*) : ---01------11--
132     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
133     : ---0-1---1---1-
133     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
134     : ---10---1----1-
134     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
135     : ----01-1----1--
135     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
136     : ---1-0-1---1---
136     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
137     : ----10--11-----
137     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$1; node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$1; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE1)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | ~internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
138 (*) : ---01-------11-
138     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
139     : ---0-1---1-1---
139     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
140     : ---10-------11-
140     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
141     : ----01-11------
141     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
142     : ---1-0---1-1---
142     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
143     : ----10-11------
143     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$1], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$1, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', '~internal(NODE2)', 'sent(NODE1,NODE2)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE1,NODE2) | ~internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
144 (*) : -0-0-------11--
144     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
145     : --00-----1---1-
145     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
146     : 0---0---1----1-
146     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
147     : --0-0--1----1--
147     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
148     : 0----0-1---1---
148     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
149     : -0---0--11-----
149     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$1; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$1; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE1)', '~allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
150 (*) : ---0-------110-
150     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
151     : ---0-----1-0-1-
151     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
152     : ----0---1---01-
152     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
153     : ----0--10---1--
153     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
154     : -----0-1-0-1---
154     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
155     : -----0-011-----
155     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$1; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$1; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~internal(NODE2)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
156 (*) : ---0---1---0-1-
156     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
157     : ---0----1--1-0-
157     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
158     : ----0---01--1--
158     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
159     : ----0---1--10--
159     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
160     : -----0-0-1--1--
160     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
161     : -----0-1-0---1-
161     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE0) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
162 (*) : --00---1-----1-
162     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
163     : -0-0----1--1---
163     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
164     : --0-0----1--1--
164     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
165     : 0---0---1--1---
165     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
166     : -0---0---1--1--
166     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
167     : 0----0-1-----1-
167     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$1; node$1$allowed_in$0$0], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$1; node$1$allowed_in$0$0, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE2)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
168 (*) : ---0---1-0---1-
168     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
169     : ---0----1--10--
169     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
170     : ----0--0-1--1--
170     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
171     : ----0---1--1-0-
171     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
172     : -----0--01--1--
172     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
173     : -----0-1---0-1-
173     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE0) | sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
174 (*) : ---0-1-1-----1-
174     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
175     : ---01---1--1---
175     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
176     : ----01---1--1--
176     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
177     : ---10---1--1---
177     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
178     : ----10---1--1--
178     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
179     : ---1-0-1-----1-
179     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$1], 'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$1, 'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'internal(NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
180 (*) : --00---1---1---
180     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
181     : -0-0----1----1-
181     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
182     : --0-0---11-----
182     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
183     : 0---0------11--
183     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
184     : -0---0-1----1--
184     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
185     : 0----0---1---1-
185     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$1; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$1; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', '~internal(NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
186 (*) : --10---1-0-----
186     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
187     : -1-0----1---0--
187     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
188     : --1-0--0-1-----
188     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
189     : 1---0------1-0-
189     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
190     : -1---0--0---1--
190     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
191     : 1----0-----0-1-
191     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE1) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
192 (*) : ---0-1-1---1---
192     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
193     : ---01---1----1-
193     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
194     : ----01--11-----
194     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
195     : ---10------11--
195     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
196     : ----10-1----1--
196     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
197     : ---1-0---1---1-
197     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$1], 'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$1, 'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE0)', '~internal(NODE1)', 'internal(NODE0)', 'sent(NODE1,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE0) | internal(NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
198 (*) : --0-----10--0--
198     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
199     : -0-----1-0--0--
199     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
200     : --0----0---1-0-
200     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
201     : 0------0-1---0-
201     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
202     : -0------0--0-1-
202     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
203     : 0-------0--01--
203     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1 | node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
204 (*) : -----1--10--0--
204     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
205     : ----1--1-0--0--
205     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
206     : -----1-0---1-0-
206     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
207     : ---1---0-1---0-
207     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
208     : ----1---0--0-1-
208     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
209     : ---1----0--01--
209     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', '~sent(NODE2,NODE1)', 'internal(NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | sent(NODE2,NODE1) | ~internal(NODE0) | sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
210 (*) : 1-------1--10--
210     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
211     : 1------1-0---1-
211     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
212     : -1------1--1-0-
212     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
213     : -1-----0-1--1--
213     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
214     : --1----1---0-1-
214     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
215     : --1-----01--1--
215     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE0)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
216 (*) : --0-----1--10--
216     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
217     : -0-----1-0---1-
217     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
218     : --0-----1--1-0-
218     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
219     : 0------0-1--1--
219     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
220     : -0-----1---0-1-
220     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
221     : 0-------01--1--
221     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', '~sent(NODE2,NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 41 =====================
size : 6
num_suborbits: 1
222 (*) : -----1--1--10--
222     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
223     : ----1--1-0---1-
223     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
224     : -----1--1--1-0-
224     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
225     : ---1---0-1--1--
225     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
226     : ----1--1---0-1-
226     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
227     : ---1----01--1--
227     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'sent(NODE2,NODE0)', 'internal(NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 42 =====================
size : 6
num_suborbits: 1
228 (*) : 1-------1--1-0-
228     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
229     : 1------1---0-1-
229     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
230     : -1------1--10--
230     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
231     : -1------01--1--
231     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
232     : --1----1-0---1-
232     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
233     : --1----0-1--1--
233     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1; node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1; node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 43 =====================
size : 6
num_suborbits: 1
234 (*) : 10------1--1---
234     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
235     : 1-0----1-----1-
235     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
236     : 01------1--1---
236     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
237     : -10------1--1--
237     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
238     : 0-1----1-----1-
238     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
239     : -01------1--1--
239     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$1; node$1$allowed_in$0$0], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$1; node$1$allowed_in$0$0, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'sent(NODE0,NODE2)', 'allowed_in(NODE0)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | ~allowed_in(NODE0) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 44 =====================
size : 6
num_suborbits: 1
240 (*) : 1---1---1--1---
240     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
241     : 1----1-1-----1-
241     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
242     : -1-1----1--1---
242     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
243     : -1---1---1--1--
243     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
244     : --11---1-----1-
244     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
245     : --1-1----1--1--
245     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$1], 'node$0$sent$1; node$0$sent$1': [node$0$sent$1$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$1, 'node$0$sent$1; node$0$sent$1': node$0$sent$1$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'internal(NODE1)', 'allowed_in(NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 45 =====================
size : 6
num_suborbits: 1
246 (*) : ---1---011-----
246     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
247     : ---1---10---1--
247     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
248     : ----1--1-0-1---
248     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
249     : ----1----1-0-1-
249     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
250     : -----1--1---01-
250     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
251     : -----1-----110-
251     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE0)', '~sent(NODE0,NODE1)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 46 =====================
size : 6
num_suborbits: 1
252 (*) : -01-----11-----
252     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
253     : -10----1----1--
253     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
254     : 0-1----1---1---
254     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
255     : 1-0------1---1-
255     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
256     : 01------1----1-
256     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
257     : 10---------11--
257     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$1], 'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$1; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$1, 'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$1; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', 'sent(NODE2,NODE1)', 'sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE2,NODE1) | ~sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 47 =====================
size : 6
num_suborbits: 1
258 (*) : --1----011-----
258     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
259     : -1-----10---1--
259     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
260     : --1----1-0-1---
260     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
261     : 1--------1-0-1-
261     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
262     : -1------1---01-
262     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
263     : 1----------110-
263     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'sent(NODE2,NODE1)', 'allowed_in(NODE0)', '~sent(NODE1,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE1) | ~allowed_in(NODE0) | sent(NODE1,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 48 =====================
size : 6
num_suborbits: 1
264 (*) : --1-1---11-----
264     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
265     : -1---1-1----1--
265     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
266     : --11---1---1---
266     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
267     : 1----1---1---1-
267     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
268     : -1-1----1----1-
268     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
269     : 1---1------11--
269     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$1], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$1, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE0)', 'sent(NODE1,NODE2)', 'internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 49 =====================
size : 6
num_suborbits: 1
270 (*) : --1-1--11------
270     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
271     : -1---1-11------
271     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
272     : --11-----1-1---
272     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
273     : 1----1---1-1---
273     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
274     : -1-1--------11-
274     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
275     : 1---1-------11-
275     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$1], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$1, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE0)', 'sent(NODE2,NODE1)', 'internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE0) | ~sent(NODE2,NODE1) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 50 =====================
size : 6
num_suborbits: 1
276 (*) : -01----11------
276     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
277     : -10----11------
277     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
278     : 0-1------1-1---
278     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
279     : 1-0------1-1---
279     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
280     : 01----------11-
280     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
281     : 10----------11-
281     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$1], 'node$0$sent$0; node$0$sent$0': [node$0$sent$0$0; node$0$sent$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$1, 'node$0$sent$0; node$0$sent$0': node$0$sent$0$0; node$0$sent$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', 'sent(NODE1,NODE0)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 51 =====================
size : 6
num_suborbits: 1
282 (*) : 0------011-----
282     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
283     : 0------10---1--
283     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
284     : -0-----1-0-1---
284     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
285     : -0-------1-0-1-
285     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
286     : --0-----1---01-
286     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
287     : --0--------110-
287     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', '~sent(NODE0,NODE1)', '~allowed_in(NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 52 =====================
size : 6
num_suborbits: 1
288 (*) : 10------1----1-
288     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
289     : 1-0----1---1---
289     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
290     : 01---------11--
290     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
291     : -10-----11-----
291     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
292     : 0-1------1---1-
292     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
293     : -01----1----1--
293     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$1; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$1; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 53 =====================
size : 6
num_suborbits: 1
294 (*) : 1---1---1----1-
294     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
295     : 1----1-1---1---
295     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
296     : -1-1-------11--
296     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
297     : -1---1--11-----
297     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
298     : --11-----1---1-
298     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
299     : --1-1--1----1--
299     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$1], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$1, 'node$0$sent$0; node$0$sent$1': node$0$sent$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE1)', 'internal(NODE1)', 'allowed_in(NODE0)', 'sent(NODE0,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE1) | ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 54 =====================
size : 6
num_suborbits: 1
300 (*) : 1-------1---01-
300     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
301     : 1------1-0-1---
301     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
302     : -1---------110-
302     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
303     : -1-----011-----
303     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
304     : --1------1-0-1-
304     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
305     : --1----10---1--
305     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0; node$0$sent$1; node$1$sent$0': [node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0; node$1$sent$1': node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0; node$0$sent$1; node$1$sent$0': node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 55 =====================
size : 6
num_suborbits: 1
306 (*) : -1-1---01------
306     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
307     : --11---10------
307     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
308     : 1---1----0-1---
308     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
309     : --1-1----1-0---
309     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
310     : 1----1------01-
310     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
311     : -1---1------10-
311     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$internal$0; node$0$sent$0; node$1$sent$0': [node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$internal$0; node$0$sent$0; node$1$sent$0': node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE1,NODE0)', 'internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 56 =====================
size : 6
num_suborbits: 1
312 (*) : 01-----01------
312     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
313     : 0-1----10------
313     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
314     : 10-------0-1---
314     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
315     : -01------1-0---
315     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
316     : 1-0---------01-
316     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
317     : -10---------10-
317     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$allowed_in$0; node$1$sent$0': node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 57 =====================
size : 6
num_suborbits: 1
318 (*) : -10-----1----0-
318     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
319     : -01----1---0---
319     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
320     : 1-0--------10--
320     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
321     : 0-1-----01-----
321     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
322     : 10-------0---1-
322     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
323     : 01-----0----1--
323     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', '~sent(NODE2,NODE0)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 58 =====================
size : 6
num_suborbits: 1
324 (*) : -1---1--1----0-
324     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
325     : --1-1--1---0---
325     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
326     : 1----1-----10--
326     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
327     : --11----01-----
327     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
328     : 1---1----0---1-
328     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
329     : -1-1---0----1--
329     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE1)', '~sent(NODE1,NODE0)', 'internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 59 =====================
size : 6
num_suborbits: 1
330 (*) : -10-----1---0--
330     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
331     : -01----1-0-----
331     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
332     : 1-0--------1-0-
332     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
333     : 0-1----0-1-----
333     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
334     : 10---------0-1-
334     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
335     : 01------0---1--
335     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', '~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 60 =====================
size : 6
num_suborbits: 1
336 (*) : -1---1--1---0--
336     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
337     : --1-1--1-0-----
337     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
338     : 1----1-----1-0-
338     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
339     : --11---0-1-----
339     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
340     : 1---1------0-1-
340     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
341     : -1-1----0---1--
341     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE1)', 'internal(NODE1)', 'allowed_in(NODE0)', '~sent(NODE1,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE1) | ~internal(NODE1) | ~allowed_in(NODE0) | sent(NODE1,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 61 =====================
size : 6
num_suborbits: 1
342 (*) : -1-----01---0--
342     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
343     : --1----100-----
343     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
344     : 1--------0-1-0-
344     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
345     : --1----0-1-0---
345     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
346     : 1----------001-
346     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
347     : -1------0---10-
347     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$1$sent$1$1, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

==============================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
6 (*) : 1--------0--0--
6     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
7     : -1-----0-----0-
7     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
8     : --1-----0--0---
8     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
9 (*) : 1---0-------0--
9     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
10     : 1----0---0-----
10     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
11     : -1-0---------0-
11     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
12     : -1---0-0-------
12     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
13     : --10-------0---
13     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
14     : --1-0---0------
14     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE1,NODE2. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
15 (*) : 11----------0--
15     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
16     : 1-1------0-----
16     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
17     : 11-----------0-
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
18     : -11----0-------
18     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
19     : 1-1--------0---
19     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
20     : -11-----0------
20     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE1,NODE2. ~allowed_in(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
21 (*) : 11-------1-----
21     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
22     : 1-1---------1--
22     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
23     : 11-----1-------
23     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
24     : -11----------1-
24     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
25     : 1-1-----1------
25     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
26     : -11--------1---
26     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~allowed_in(NODE1) | ~sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 6 =====================
size : 3
num_suborbits: 1
27 (*) : 11---0---------
27     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
28     : 1-1-0----------
28     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
29     : -110-----------
29     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
30 (*) : 1---0----1-----
30     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
31     : 1----0------1--
31     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
32     : -1-0---1-------
32     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
33     : -1---0-------1-
33     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
34     : --10----1------
34     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
35     : --1-0------1---
35     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE1,NODE0) | internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
36 (*) : 1---00---------
36     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
37     : -1-0-0---------
37     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
38     : --100----------
38     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
39 (*) : 1---0--1-------
39     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
40     : 1----0--1------
40     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
41     : -1-0-----1-----
41     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
42     : -1---0-----1---
42     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
43     : --10--------1--
43     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
44     : --1-0--------1-
44     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
45 (*) : 111------------
45     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
46 (*) : 0-0-----1------
46     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
47     : 00-----1-------
47     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
48     : -00--------1---
48     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
49     : 00-------1-----
49     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
50     : -00----------1-
50     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
51     : 0-0---------1--
51     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE0,NODE1) | allowed_in(NODE0) | allowed_in(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
52 (*) : 0--0----1------
52     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
53     : 0--0---1-------
53     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
54     : -0--0------1---
54     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
55     : -0--0----1-----
55     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
56     : --0--0-------1-
56     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
57     : --0--0------1--
57     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
58 (*) : --01----1------
58     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
59     : -0-1---1-------
59     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
60     : --0-1------1---
60     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
61     : 0---1----1-----
61     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
62     : -0---1-------1-
62     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
63     : 0----1------1--
63     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
64 (*) : --0--0-----1---
64     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
65     : -0--0--------1-
65     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
66     : --0--0--1------
66     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
67     : 0--0--------1--
67     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
68     : -0--0--1-------
68     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
69     : 0--0-----1-----
69     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
70 (*) : ---0-0------1--
70     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
71     : ---00----1-----
71     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
72     : ----00-------1-
72     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
73     : ---00--1-------
73     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
74     : ----00-----1---
74     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
75     : ---0-0--1------
75     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
76 (*) : -0---1-----1---
76     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
77     : --0-1--------1-
77     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
78     : 0----1--1------
78     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
79     : --01--------1--
79     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
80     : 0---1--1-------
80     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
81     : -0-1-----1-----
81     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE1,NODE0) | ~internal(NODE0) | allowed_in(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
82 (*) : ----11-----1---
82     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
83     : ----11-------1-
83     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
84     : ---1-1--1------
84     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
85     : ---1-1------1--
85     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
86     : ---11--1-------
86     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
87     : ---11----1-----
87     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE0,NODE1) | ~internal(NODE0) | ~internal(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
88 (*) : ---------1--11-
88     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
89     : ---------1-11--
89     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
90     : -------1----11-
90     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
91     : -------11----1-
91     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
92     : --------11-1---
92     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
93     : -------11--1---
93     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 19 =====================
size : 2
num_suborbits: 1
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE1) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
96 (*) : ---0-0-----0-1-
96     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
97     : ---00------1-0-
97     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
98     : ----00--0---1--
98     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
99     : ---00---1---0--
99     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
100     : ----00-0-1-----
100     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
101     : ---0-0-1-0-----
101     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE0) | internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
102 (*) : ---0----1---01-
102     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
103     : ---0---1-0-1---
103     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
104     : ----0------110-
104     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
105     : ----0--011-----
105     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
106     : -----0---1-0-1-
106     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
107     : -----0-10---1--
107     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
108 (*) : ---0----10--0--
108     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
109     : ---0---1-0--0--
109     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
110     : ----0--0---1-0-
110     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
111     : ----0--0-1---0-
111     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
112     : -----0--0--0-1-
112     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
113     : -----0--0--01--
113     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | internal(NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
114 (*) : -0-0--------11-
114     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
115     : --00-----1-1---
115     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
116     : 0---0-------11-
116     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
117     : --0-0--11------
117     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
118     : 0----0---1-1---
118     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
119     : -0---0-11------
119     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | internal(NODE1) | ~sent(NODE0,NODE1) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
120 (*) : -0-0-------0-1-
120     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
121     : --00-------1-0-
121     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
122     : 0---0---0---1--
122     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
123     : --0-0---1---0--
123     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
124     : 0----0-0-1-----
124     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
125     : -0---0-1-0-----
125     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE2) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
126 (*) : ---01------0-1-
126     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
127     : ---0-1-----1-0-
127     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
128     : ---10---0---1--
128     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
129     : ----01--1---0--
129     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
130     : ---1-0-0-1-----
130     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
131     : ----10-1-0-----
131     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | internal(NODE2) | sent(NODE0,NODE1) | ~internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
132 (*) : ---01------11--
132     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
133     : ---0-1---1---1-
133     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
134     : ---10---1----1-
134     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
135     : ----01-1----1--
135     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
136     : ---1-0-1---1---
136     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
137     : ----10--11-----
137     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | ~internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
138 (*) : ---01-------11-
138     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
139     : ---0-1---1-1---
139     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
140     : ---10-------11-
140     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
141     : ----01-11------
141     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
142     : ---1-0---1-1---
142     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
143     : ----10-11------
143     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE1,NODE2) | ~internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
144 (*) : -0-0-------11--
144     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
145     : --00-----1---1-
145     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
146     : 0---0---1----1-
146     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
147     : --0-0--1----1--
147     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
148     : 0----0-1---1---
148     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
149     : -0---0--11-----
149     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
150 (*) : ---0-------110-
150     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
151     : ---0-----1-0-1-
151     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
152     : ----0---1---01-
152     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
153     : ----0--10---1--
153     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
154     : -----0-1-0-1---
154     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
155     : -----0-011-----
155     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
156 (*) : ---0---1---0-1-
156     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
157     : ---0----1--1-0-
157     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
158     : ----0---01--1--
158     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
159     : ----0---1--10--
159     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
160     : -----0-0-1--1--
160     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
161     : -----0-1-0---1-
161     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE0) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
162 (*) : --00---1-----1-
162     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
163     : -0-0----1--1---
163     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
164     : --0-0----1--1--
164     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
165     : 0---0---1--1---
165     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
166     : -0---0---1--1--
166     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
167     : 0----0-1-----1-
167     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
168 (*) : ---0---1-0---1-
168     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
169     : ---0----1--10--
169     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
170     : ----0--0-1--1--
170     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
171     : ----0---1--1-0-
171     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
172     : -----0--01--1--
172     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
173     : -----0-1---0-1-
173     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE0) | sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
174 (*) : ---0-1-1-----1-
174     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
175     : ---01---1--1---
175     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
176     : ----01---1--1--
176     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
177     : ---10---1--1---
177     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
178     : ----10---1--1--
178     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
179     : ---1-0-1-----1-
179     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
180 (*) : --00---1---1---
180     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
181     : -0-0----1----1-
181     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
182     : --0-0---11-----
182     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
183     : 0---0------11--
183     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
184     : -0---0-1----1--
184     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
185     : 0----0---1---1-
185     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | internal(NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
186 (*) : --10---1-0-----
186     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
187     : -1-0----1---0--
187     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
188     : --1-0--0-1-----
188     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
189     : 1---0------1-0-
189     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
190     : -1---0--0---1--
190     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
191     : 1----0-----0-1-
191     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. internal(NODE1) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
192 (*) : ---0-1-1---1---
192     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
193     : ---01---1----1-
193     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
194     : ----01--11-----
194     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
195     : ---10------11--
195     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
196     : ----10-1----1--
196     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
197     : ---1-0---1---1-
197     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE0) | internal(NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
198 (*) : --0-----10--0--
198     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
199     : -0-----1-0--0--
199     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
200     : --0----0---1-0-
200     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
201     : 0------0-1---0-
201     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
202     : -0------0--0-1-
202     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
203     : 0-------0--01--
203     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
204 (*) : -----1--10--0--
204     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
205     : ----1--1-0--0--
205     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
206     : -----1-0---1-0-
206     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
207     : ---1---0-1---0-
207     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
208     : ----1---0--0-1-
208     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
209     : ---1----0--01--
209     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | sent(NODE2,NODE1) | ~internal(NODE0) | sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
210 (*) : 1-------1--10--
210     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
211     : 1------1-0---1-
211     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
212     : -1------1--1-0-
212     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
213     : -1-----0-1--1--
213     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
214     : --1----1---0-1-
214     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
215     : --1-----01--1--
215     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
216 (*) : --0-----1--10--
216     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
217     : -0-----1-0---1-
217     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
218     : --0-----1--1-0-
218     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
219     : 0------0-1--1--
219     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
220     : -0-----1---0-1-
220     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
221     : 0-------01--1--
221     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 41 =====================
size : 6
num_suborbits: 1
222 (*) : -----1--1--10--
222     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
223     : ----1--1-0---1-
223     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
224     : -----1--1--1-0-
224     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
225     : ---1---0-1--1--
225     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
226     : ----1--1---0-1-
226     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
227     : ---1----01--1--
227     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 42 =====================
size : 6
num_suborbits: 1
228 (*) : 1-------1--1-0-
228     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
229     : 1------1---0-1-
229     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
230     : -1------1--10--
230     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
231     : -1------01--1--
231     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
232     : --1----1-0---1-
232     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
233     : --1----0-1--1--
233     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 43 =====================
size : 6
num_suborbits: 1
234 (*) : 10------1--1---
234     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
235     : 1-0----1-----1-
235     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
236     : 01------1--1---
236     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
237     : -10------1--1--
237     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
238     : 0-1----1-----1-
238     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
239     : -01------1--1--
239     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | ~sent(NODE0,NODE2) | ~allowed_in(NODE0) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 44 =====================
size : 6
num_suborbits: 1
240 (*) : 1---1---1--1---
240     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
241     : 1----1-1-----1-
241     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
242     : -1-1----1--1---
242     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
243     : -1---1---1--1--
243     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
244     : --11---1-----1-
244     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
245     : --1-1----1--1--
245     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 45 =====================
size : 6
num_suborbits: 1
246 (*) : ---1---011-----
246     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
247     : ---1---10---1--
247     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
248     : ----1--1-0-1---
248     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
249     : ----1----1-0-1-
249     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
250     : -----1--1---01-
250     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
251     : -----1-----110-
251     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 46 =====================
size : 6
num_suborbits: 1
252 (*) : -01-----11-----
252     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
253     : -10----1----1--
253     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
254     : 0-1----1---1---
254     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
255     : 1-0------1---1-
255     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
256     : 01------1----1-
256     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
257     : 10---------11--
257     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE2,NODE1) | ~sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 47 =====================
size : 6
num_suborbits: 1
258 (*) : --1----011-----
258     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
259     : -1-----10---1--
259     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
260     : --1----1-0-1---
260     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
261     : 1--------1-0-1-
261     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
262     : -1------1---01-
262     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
263     : 1----------110-
263     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | ~sent(NODE2,NODE1) | ~allowed_in(NODE0) | sent(NODE1,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 48 =====================
size : 6
num_suborbits: 1
264 (*) : --1-1---11-----
264     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
265     : -1---1-1----1--
265     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
266     : --11---1---1---
266     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
267     : 1----1---1---1-
267     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
268     : -1-1----1----1-
268     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
269     : 1---1------11--
269     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 49 =====================
size : 6
num_suborbits: 1
270 (*) : --1-1--11------
270     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
271     : -1---1-11------
271     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
272     : --11-----1-1---
272     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
273     : 1----1---1-1---
273     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
274     : -1-1--------11-
274     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
275     : 1---1-------11-
275     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE0) | ~sent(NODE2,NODE1) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 50 =====================
size : 6
num_suborbits: 1
276 (*) : -01----11------
276     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
277     : -10----11------
277     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
278     : 0-1------1-1---
278     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
279     : 1-0------1-1---
279     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
280     : 01----------11-
280     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
281     : 10----------11-
281     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 51 =====================
size : 6
num_suborbits: 1
282 (*) : 0------011-----
282     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
283     : 0------10---1--
283     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
284     : -0-----1-0-1---
284     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
285     : -0-------1-0-1-
285     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
286     : --0-----1---01-
286     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
287     : --0--------110-
287     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 52 =====================
size : 6
num_suborbits: 1
288 (*) : 10------1----1-
288     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
289     : 1-0----1---1---
289     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
290     : 01---------11--
290     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
291     : -10-----11-----
291     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
292     : 0-1------1---1-
292     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
293     : -01----1----1--
293     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 53 =====================
size : 6
num_suborbits: 1
294 (*) : 1---1---1----1-
294     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
295     : 1----1-1---1---
295     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
296     : -1-1-------11--
296     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
297     : -1---1--11-----
297     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
298     : --11-----1---1-
298     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
299     : --1-1--1----1--
299     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE1) | ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE0,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 54 =====================
size : 6
num_suborbits: 1
300 (*) : 1-------1---01-
300     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
301     : 1------1-0-1---
301     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
302     : -1---------110-
302     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
303     : -1-----011-----
303     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
304     : --1------1-0-1-
304     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
305     : --1----10---1--
305     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 55 =====================
size : 6
num_suborbits: 1
306 (*) : -1-1---01------
306     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
307     : --11---10------
307     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
308     : 1---1----0-1---
308     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
309     : --1-1----1-0---
309     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
310     : 1----1------01-
310     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
311     : -1---1------10-
311     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 56 =====================
size : 6
num_suborbits: 1
312 (*) : 01-----01------
312     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
313     : 0-1----10------
313     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
314     : 10-------0-1---
314     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
315     : -01------1-0---
315     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
316     : 1-0---------01-
316     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
317     : -10---------10-
317     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 57 =====================
size : 6
num_suborbits: 1
318 (*) : -10-----1----0-
318     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
319     : -01----1---0---
319     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
320     : 1-0--------10--
320     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
321     : 0-1-----01-----
321     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
322     : 10-------0---1-
322     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
323     : 01-----0----1--
323     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | sent(NODE2,NODE0) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 58 =====================
size : 6
num_suborbits: 1
324 (*) : -1---1--1----0-
324     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
325     : --1-1--1---0---
325     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
326     : 1----1-----10--
326     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
327     : --11----01-----
327     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
328     : 1---1----0---1-
328     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
329     : -1-1---0----1--
329     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 59 =====================
size : 6
num_suborbits: 1
330 (*) : -10-----1---0--
330     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
331     : -01----1-0-----
331     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
332     : 1-0--------1-0-
332     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
333     : 0-1----0-1-----
333     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
334     : 10---------0-1-
334     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
335     : 01------0---1--
335     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 60 =====================
size : 6
num_suborbits: 1
336 (*) : -1---1--1---0--
336     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
337     : --1-1--1-0-----
337     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
338     : 1----1-----1-0-
338     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
339     : --11---0-1-----
339     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
340     : 1---1------0-1-
340     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
341     : -1-1----0---1--
341     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE2,NODE1) | ~internal(NODE1) | ~allowed_in(NODE0) | sent(NODE1,NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 61 =====================
size : 6
num_suborbits: 1
342 (*) : -1-----01---0--
342     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
343     : --1----100-----
343     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
344     : 1--------0-1-0-
344     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
345     : --1----0-1-0---
345     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
346     : 1----------001-
346     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
347     : -1------0---10-
347     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10



[QRM NOTE]: Time elapsed since start: 7.596 seconds

[QRM NOTE]: Time elapsed since last: 0.342 seconds

[QRM NOTE]: Peak memory: 2358715 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=3]

=============================================================================


New level: 1
 pending : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2]


Before reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 1 among pending : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, 1024), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1]


New level: 2
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, 512), (12, 512), (13, 256), (14, 512), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 2 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, 512), (12, 512), (13, 256), (14, 512), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 11 with phase True at level 2

After decision at level 2
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]


New level: 3
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, 512), (12, 512), (13, 256), (14, 512), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, 0), (14, 128), (15, 512), (16, 0), (17, 0), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, 0), (38, 0), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 3 : {37, 38, 13, 16, 17}

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, 0), (14, 128), (15, 512), (16, 0), (17, 0), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, 0), (38, 0), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 3 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 15 with phase True at level 3

After decision at level 3
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 15]


New level: 4
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 15]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 15]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 4 : {3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 15]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 15]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 15]


Solution : [0, 2, 1, 11, 15] has cost 22.


Before backtrack at level 4
 pending : []
 solution : [0, 2, 1, 11, 15]

After backtrack at level 4
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 15]


Invert decision for 15 at level 3


New level: 4
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 4 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 18 with phase True at level 4

After decision at level 4
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 18]


New level: 5
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 18]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 32), (23, 16), (24, 16), (25, 8), (26, 16), (27, 8), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 2), (43, 4), (44, 2), (45, 1), (46, 16), (47, 64), (48, 8), (49, 4), (50, 8), (51, 2), (52, 16), (53, 8), (54, 16), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

Covered at level 5 : {40, 41, 39}

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 18]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 32), (23, 16), (24, 16), (25, 8), (26, 16), (27, 8), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 2), (43, 4), (44, 2), (45, 1), (46, 16), (47, 64), (48, 8), (49, 4), (50, 8), (51, 2), (52, 16), (53, 8), (54, 16), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 32), (23, 16), (24, 16), (25, 8), (26, 16), (27, 8), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2), (43, 4), (44, 2), (45, 1), (46, 16), (47, 64), (48, 8), (49, 4), (50, 8), (51, 2), (52, 16), (53, 8), (54, 16), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 18]


Solution : [0, 2, 1, 11, 18] has cost 25.


Before backtrack at level 5
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
 solution : [0, 2, 1, 11, 18]

After backtrack at level 5
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 18]


Invert decision for 18 at level 4


New level: 5
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 32), (23, 16), (24, 16), (25, 8), (26, 16), (27, 8), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 2), (43, 4), (44, 2), (45, 1), (46, 16), (47, 64), (48, 8), (49, 4), (50, 8), (51, 2), (52, 16), (53, 8), (54, 16), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 5 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 19 with phase True at level 5

After decision at level 5
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 19]


New level: 6
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 19]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 32), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, 0), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, 0), (52, 8), (53, 4), (54, 0), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 4)]

Covered at level 6 : {51, 45, 54}

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 19]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 32), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, 0), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, 0), (52, 8), (53, 4), (54, 0), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 32), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, -1), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, -1), (52, 8), (53, 4), (54, -1), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 4)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 19]


Solution : [0, 2, 1, 11, 19] has cost 25.


Before backtrack at level 6
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41]
 solution : [0, 2, 1, 11, 19]

After backtrack at level 6
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]
 solution : [0, 2, 1, 11, 19]


Invert decision for 19 at level 5


New level: 6
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]
 solution : [0, 2, 1, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 32), (34, 32), (35, 128), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, -1), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, -1), (52, 8), (53, 4), (54, -1), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 6 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 7 with phase True at level 6

After decision at level 6
 pending : [3, 4, 5, 6, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]
 solution : [0, 2, 1, 11, 7]


New level: 7
 pending : [3, 4, 5, 6, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]
 solution : [0, 2, 1, 11, 7]


Before reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 12, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54]
 solution : [0, 2, 1, 11, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, 0), (9, 2), (10, 0), (11, -1), (12, 0), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 2), (29, 256), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 7 : {3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [9, 14, 23, 26, 27, 28, 29]
 solution : [0, 2, 1, 11, 7]


Before reduction : 
 pending  : [9, 14, 23, 26, 27, 28, 29]
 solution : [0, 2, 1, 11, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, 0), (9, 2), (10, 0), (11, -1), (12, 0), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 2), (29, 256), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [9, 14, 23, 26, 27, 28, 29]
 solution : [0, 2, 1, 11, 7]


Solution : [0, 2, 1, 11, 7] has cost 22.


Decide in level 7 among pending : [9, 14, 23, 26, 27, 28, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 29 with phase True at level 7

After decision at level 7
 pending : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 29]


New level: 8
 pending : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 29]


Before reduction : 
 pending  : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 1), (27, 1), (28, 1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 29]


Solution : [0, 2, 1, 11, 7, 29] has cost 32.


Before backtrack at level 8
 pending : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 29]

After backtrack at level 8
 pending : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 29]


Invert decision for 29 at level 7


New level: 8
 pending : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]


Before reduction : 
 pending  : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 1), (27, 1), (28, 1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]


Solution : [0, 2, 1, 11, 7] has cost 22.


Decide in level 8 among pending : [9, 14, 23, 26, 27, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 9]


New level: 9
 pending : [14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 9]


Before reduction : 
 pending  : [14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : {14, 23, 26, 27, 28}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 9]


Solution : [0, 2, 1, 11, 7, 9] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 11, 7, 9]

After backtrack at level 9
 pending : [14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]


Before reduction : 
 pending  : [14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [14, 23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]


Solution : [0, 2, 1, 11, 7] has cost 22.


Decide in level 9 among pending : [14, 23, 26, 27, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 14 with phase True at level 9

After decision at level 9
 pending : [23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 14]


New level: 10
 pending : [23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 14]


Before reduction : 
 pending  : [23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : {26, 27, 28, 23}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 14]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 14]


Solution : [0, 2, 1, 11, 7, 14] has cost 28.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 11, 7, 14]

After backtrack at level 10
 pending : [23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7, 14]


Invert decision for 14 at level 9


New level: 10
 pending : [23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]


Before reduction : 
 pending  : [23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 26, 27, 28]
 solution : [0, 2, 1, 11, 7]


Solution : [0, 2, 1, 11, 7] has cost 22.


Decide in level 10 among pending : [23, 26, 27, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [23, 27, 28]
 solution : [0, 2, 1, 11, 7, 26]


New level: 11
 pending : [23, 27, 28]
 solution : [0, 2, 1, 11, 7, 26]


Before reduction : 
 pending  : [23, 27, 28]
 solution : [0, 2, 1, 11, 7, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : {27, 28, 23}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 26]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 26]


Solution : [0, 2, 1, 11, 7, 26] has cost 32.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 11, 7, 26]

After backtrack at level 11
 pending : [23, 27, 28]
 solution : [0, 2, 1, 11, 7, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [23, 27, 28]
 solution : [0, 2, 1, 11, 7]


Before reduction : 
 pending  : [23, 27, 28]
 solution : [0, 2, 1, 11, 7]

Essensial at level 11 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : {27, 23}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 28]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 7, 28]


Solution : [0, 2, 1, 11, 7, 28] has cost 32.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 11, 7, 28]

After backtrack at level 11
 pending : [28, 23, 27]
 solution : [0, 2, 1, 11, 7]


Before backtrack at level 10
 pending : [28, 23, 27]
 solution : [0, 2, 1, 11, 7]

After backtrack at level 10
 pending : [28, 23, 27, 26]
 solution : [0, 2, 1, 11, 7]


Before backtrack at level 9
 pending : [28, 23, 27, 26]
 solution : [0, 2, 1, 11, 7]

After backtrack at level 9
 pending : [28, 23, 27, 26, 14]
 solution : [0, 2, 1, 11, 7]


Before backtrack at level 8
 pending : [28, 23, 27, 26, 14]
 solution : [0, 2, 1, 11, 7]

After backtrack at level 8
 pending : [28, 23, 27, 26, 14, 9]
 solution : [0, 2, 1, 11, 7]


Before backtrack at level 7
 pending : [28, 23, 27, 26, 14, 9]
 solution : [0, 2, 1, 11, 7]

After backtrack at level 7
 pending : [28, 23, 27, 26, 14, 9, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]
 solution : [0, 2, 1, 11, 7]


Invert decision for 7 at level 6


New level: 7
 pending : [28, 23, 27, 26, 14, 9, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [28, 23, 27, 26, 14, 9, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]
 solution : [0, 2, 1, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 23, 27, 26, 14, 9, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 7 among pending : [28, 23, 27, 26, 14, 9, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [28, 23, 27, 26, 14, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]
 solution : [0, 2, 1, 11, 9]


New level: 8
 pending : [28, 23, 27, 26, 14, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]
 solution : [0, 2, 1, 11, 9]


Before reduction : 
 pending  : [28, 23, 27, 26, 14, 3, 4, 5, 6, 8, 10, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29]
 solution : [0, 2, 1, 11, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, 256), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 0), (5, 0), (6, 1), (7, -1), (8, 64), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 8 : {4, 5, 10, 14, 23, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [3, 6, 8, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36]
 solution : [0, 2, 1, 11, 9]


Before reduction : 
 pending  : [3, 6, 8, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36]
 solution : [0, 2, 1, 11, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 0), (5, 0), (6, 1), (7, -1), (8, 64), (9, -1), (10, 0), (11, -1), (12, 64), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 6, 8, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36]
 solution : [0, 2, 1, 11, 9]


Solution : [0, 2, 1, 11, 9] has cost 22.


Decide in level 8 among pending : [3, 6, 8, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 20 with phase True at level 8

After decision at level 8
 pending : [3, 6, 8, 12, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36]
 solution : [0, 2, 1, 11, 9, 20]


New level: 9
 pending : [3, 6, 8, 12, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36]
 solution : [0, 2, 1, 11, 9, 20]


Before reduction : 
 pending  : [3, 6, 8, 12, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36]
 solution : [0, 2, 1, 11, 9, 20]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 4), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, 2), (33, 2), (34, 1), (35, 0), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : {35, 6, 8, 24, 25}

After reduction : 
 pending  : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36]
 solution : [0, 2, 1, 11, 9, 20]


Before reduction : 
 pending  : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36]
 solution : [0, 2, 1, 11, 9, 20]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 4), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, 2), (33, 2), (34, 1), (35, 0), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, 2), (33, 2), (34, 1), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36]
 solution : [0, 2, 1, 11, 9, 20]


Solution : [0, 2, 1, 11, 9, 20] has cost 32.


Before backtrack at level 9
 pending : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36]
 solution : [0, 2, 1, 11, 9, 20]

After backtrack at level 9
 pending : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 20]


Invert decision for 20 at level 8


New level: 9
 pending : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9]


Before reduction : 
 pending  : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, 2), (33, 2), (34, 1), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9]


Solution : [0, 2, 1, 11, 9] has cost 22.


Decide in level 9 among pending : [3, 12, 21, 22, 30, 31, 32, 33, 34, 36, 6, 8, 24, 25, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 32 with phase True at level 9

After decision at level 9
 pending : [3, 12, 21, 22, 30, 31, 33, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 32]


New level: 10
 pending : [3, 12, 21, 22, 30, 31, 33, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 32]


Before reduction : 
 pending  : [3, 12, 21, 22, 30, 31, 33, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 32]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 256), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 16), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 1), (35, 1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : {33, 30, 31}

After reduction : 
 pending  : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 32]


Before reduction : 
 pending  : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 32]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 16), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 1), (35, 1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 16), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, 1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 32]


Solution : [0, 2, 1, 11, 9, 32] has cost 32.


Before backtrack at level 10
 pending : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35]
 solution : [0, 2, 1, 11, 9, 32]

After backtrack at level 10
 pending : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 32]


Invert decision for 32 at level 9


New level: 10
 pending : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9]


Before reduction : 
 pending  : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, 16), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, 1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9]


Solution : [0, 2, 1, 11, 9] has cost 22.


Decide in level 10 among pending : [3, 12, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 12]


New level: 11
 pending : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 12]


Before reduction : 
 pending  : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : {33, 34, 3, 36, 35, 6, 8, 21, 22, 24, 25, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 9, 12]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 9, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 9, 12]


Solution : [0, 2, 1, 11, 9, 12] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 11, 9, 12]

After backtrack at level 11
 pending : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9]


Before reduction : 
 pending  : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9]


Solution : [0, 2, 1, 11, 9] has cost 22.


Decide in level 11 among pending : [3, 21, 22, 34, 36, 6, 8, 24, 25, 35, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [3, 21, 22, 34, 36, 6, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 8]


New level: 12
 pending : [3, 21, 22, 34, 36, 6, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 8]


Before reduction : 
 pending  : [3, 21, 22, 34, 36, 6, 24, 25, 35, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 4), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, -1), (33, 2), (34, 2), (35, 0), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : {35, 6}

After reduction : 
 pending  : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 8]


Before reduction : 
 pending  : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 4), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, -1), (33, 2), (34, 2), (35, 0), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 4), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 8]


Solution : [0, 2, 1, 11, 9, 8] has cost 27.


Before backtrack at level 12
 pending : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 8]

After backtrack at level 12
 pending : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9]


Before reduction : 
 pending  : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 4), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1), (31, 2), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9]


Solution : [0, 2, 1, 11, 9] has cost 22.


Decide in level 12 among pending : [3, 21, 22, 34, 36, 24, 25, 30, 31, 33, 6, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Decide 22 with phase True at level 12

After decision at level 12
 pending : [3, 21, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9, 22]


New level: 13
 pending : [3, 21, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9, 22]


Before reduction : 
 pending  : [3, 21, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9, 22]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : {33, 34, 3, 36, 35, 6, 21, 24, 25, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 9, 22]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 9, 22]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 11, 9, 22]


Solution : [0, 2, 1, 11, 9, 22] has cost 32.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 11, 9, 22]

After backtrack at level 13
 pending : [3, 21, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9, 22]


Invert decision for 22 at level 12


New level: 13
 pending : [3, 21, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9]


Before reduction : 
 pending  : [3, 21, 34, 36, 24, 25, 30, 31, 33, 6, 35]
 solution : [0, 2, 1, 11, 9]

Essensial at level 13 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 1), (35, 0), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : {24, 25, 35, 6}

After reduction : 
 pending  : [21, 34, 36, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 3]


Before reduction : 
 pending  : [21, 34, 36, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 1), (35, 0), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 1), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [21, 34, 36, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 3]


Solution : [0, 2, 1, 11, 9, 3] has cost 31.


Before backtrack at level 13
 pending : [21, 34, 36, 30, 31, 33]
 solution : [0, 2, 1, 11, 9, 3]

After backtrack at level 13
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35]
 solution : [0, 2, 1, 11, 9]


Before backtrack at level 12
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35]
 solution : [0, 2, 1, 11, 9]

After backtrack at level 12
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22]
 solution : [0, 2, 1, 11, 9]


Before backtrack at level 11
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22]
 solution : [0, 2, 1, 11, 9]

After backtrack at level 11
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8]
 solution : [0, 2, 1, 11, 9]


Before backtrack at level 10
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8]
 solution : [0, 2, 1, 11, 9]

After backtrack at level 10
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12]
 solution : [0, 2, 1, 11, 9]


Before backtrack at level 9
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12]
 solution : [0, 2, 1, 11, 9]

After backtrack at level 9
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32]
 solution : [0, 2, 1, 11, 9]


Before backtrack at level 8
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32]
 solution : [0, 2, 1, 11, 9]

After backtrack at level 8
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]
 solution : [0, 2, 1, 11, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]
 solution : [0, 2, 1, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, -1), (33, 2), (34, 1), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 8 among pending : [21, 34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 21 with phase True at level 8

After decision at level 8
 pending : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]
 solution : [0, 2, 1, 11, 21]


New level: 9
 pending : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]
 solution : [0, 2, 1, 11, 21]


Before reduction : 
 pending  : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 45, 51, 54, 29, 20]
 solution : [0, 2, 1, 11, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 16), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 64), (29, 16), (30, 256), (31, 64), (32, 128), (33, 32), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, 0), (46, 32), (47, 8), (48, 16), (49, 16), (50, 32), (51, 0), (52, 16), (53, 8), (54, 0), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 2)]

Covered at level 9 : {51, 45, 54}

After reduction : 
 pending  : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20]
 solution : [0, 2, 1, 11, 21]


Before reduction : 
 pending  : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20]
 solution : [0, 2, 1, 11, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 16), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 64), (29, 16), (30, 256), (31, 64), (32, 128), (33, 32), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, 0), (46, 32), (47, 8), (48, 16), (49, 16), (50, 32), (51, 0), (52, 16), (53, 8), (54, 0), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 16), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 64), (29, 16), (30, 256), (31, 64), (32, 128), (33, 32), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, -1), (46, 32), (47, 8), (48, 16), (49, 16), (50, 32), (51, -1), (52, 16), (53, 8), (54, -1), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 2)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20]
 solution : [0, 2, 1, 11, 21]


Solution : [0, 2, 1, 11, 21] has cost 26.


Before backtrack at level 9
 pending : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20]
 solution : [0, 2, 1, 11, 21]

After backtrack at level 9
 pending : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 21]


Invert decision for 21 at level 8


New level: 9
 pending : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 16), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 64), (29, 16), (30, 256), (31, 64), (32, 128), (33, 32), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 32), (40, 2), (41, 1), (42, 128), (43, 32), (44, 16), (45, -1), (46, 32), (47, 8), (48, 16), (49, 16), (50, 32), (51, -1), (52, 16), (53, 8), (54, -1), (55, 4), (56, 8), (57, 16), (58, 8), (59, 4), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 9 among pending : [34, 36, 30, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 30 with phase True at level 9

After decision at level 9
 pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 30]


New level: 10
 pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 30]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 40, 41, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, 128), (30, -1), (31, 32), (32, 8), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, 0), (43, 16), (44, 8), (45, 1), (46, 32), (47, 64), (48, 16), (49, 16), (50, 32), (51, 2), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

Covered at level 10 : {40, 41, 42}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 30]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, 128), (30, -1), (31, 32), (32, 8), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, 0), (43, 16), (44, 8), (45, 1), (46, 32), (47, 64), (48, 16), (49, 16), (50, 32), (51, 2), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, 128), (30, -1), (31, 32), (32, 8), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 16), (44, 8), (45, 1), (46, 32), (47, 64), (48, 16), (49, 16), (50, 32), (51, 2), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 30]


Solution : [0, 2, 1, 11, 30] has cost 26.


Before backtrack at level 10
 pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54]
 solution : [0, 2, 1, 11, 30]

After backtrack at level 10
 pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 30]


Invert decision for 30 at level 9


New level: 10
 pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, 128), (30, -1), (31, 32), (32, 8), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 16), (44, 8), (45, 1), (46, 32), (47, 64), (48, 16), (49, 16), (50, 32), (51, 2), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 10 among pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 8, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8]


New level: 11
 pending : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 6, 35, 22, 12, 32, 28, 23, 27, 26, 14, 4, 5, 10, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, 256), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, 256), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 11 : {10, 6}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 32, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 32, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, 256), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, 256), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 32, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 11 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 32, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, 256), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 32 with phase True at level 11

After decision at level 11
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8, 32]


New level: 12
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8, 32]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 39, 29, 20, 45, 51, 54, 42, 40, 41]
 solution : [0, 2, 1, 11, 8, 32]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, 256), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 2), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 4), (43, 8), (44, 8), (45, 2), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 32), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

Covered at level 12 : {40, 41, 39}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42]
 solution : [0, 2, 1, 11, 8, 32]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42]
 solution : [0, 2, 1, 11, 8, 32]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 2), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 4), (43, 8), (44, 8), (45, 2), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 32), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 2), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 8), (44, 8), (45, 2), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 32), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42]
 solution : [0, 2, 1, 11, 8, 32]


Solution : [0, 2, 1, 11, 8, 32] has cost 31.


Before backtrack at level 12
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42]
 solution : [0, 2, 1, 11, 8, 32]

After backtrack at level 12
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 32]


Invert decision for 32 at level 11


New level: 12
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 2), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 8), (44, 8), (45, 2), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 32), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 12 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 29, 20, 45, 51, 54, 42, 39, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 29 with phase True at level 12

After decision at level 12
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 20, 45, 51, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 29]


New level: 13
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 20, 45, 51, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 29]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 20, 45, 51, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 16), (27, 32), (28, 16), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, 0), (46, 8), (47, 0), (48, 8), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, 0)]

Covered at level 13 : {51, 45, 61, 47}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 29]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 16), (27, 32), (28, 16), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, 0), (46, 8), (47, 0), (48, 8), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 16), (27, 32), (28, 16), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 29]


Solution : [0, 2, 1, 11, 8, 29] has cost 31.


Before backtrack at level 13
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 29]

After backtrack at level 13
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 29]


Invert decision for 29 at level 12


New level: 13
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 16), (27, 32), (28, 16), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 13 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 42, 39, 40, 41, 47, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 42 with phase True at level 13

After decision at level 13
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 42]


New level: 14
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 42]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 42]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

Covered at level 14 : {40, 41}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 42]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 42]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 42]


Solution : [0, 2, 1, 11, 8, 42] has cost 31.


Before backtrack at level 14
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 42]

After backtrack at level 14
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 42]


Invert decision for 42 at level 13


New level: 14
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 14 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 47, 61, 45, 51, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 47 with phase True at level 14

After decision at level 14
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 47]


New level: 15
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 47]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 47]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, 0), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, 0)]

Covered at level 15 : {51, 45, 61}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 47]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 47]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, 0), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 47]


Solution : [0, 2, 1, 11, 8, 47] has cost 31.


Before backtrack at level 15
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41]
 solution : [0, 2, 1, 11, 8, 47]

After backtrack at level 15
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 47]


Invert decision for 47 at level 14


New level: 15
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 15 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 54, 39, 40, 41, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 54 with phase True at level 15

After decision at level 15
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 54]


New level: 16
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 54]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 54]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 32), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, 0), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 0), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 2), (60, 2), (61, 2)]

Covered at level 16 : {51, 45}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61]
 solution : [0, 2, 1, 11, 8, 54]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61]
 solution : [0, 2, 1, 11, 8, 54]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 32), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, 0), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 0), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 32), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 2), (60, 2), (61, 2)]

Covered at level 16 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61]
 solution : [0, 2, 1, 11, 8, 54]


Solution : [0, 2, 1, 11, 8, 54] has cost 31.


Before backtrack at level 16
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61]
 solution : [0, 2, 1, 11, 8, 54]

After backtrack at level 16
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 54]


Invert decision for 54 at level 15


New level: 16
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, -1), (38, -1), (39, 32), (40, 1), (41, 1), (42, -1), (43, 16), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 16 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 39, 40, 41, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 39 with phase True at level 16

After decision at level 16
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 39]


New level: 17
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 39]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 40, 41, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 39]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 2), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

Covered at level 17 : {40, 41}

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 39]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 39]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 2), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 2), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 39]


Solution : [0, 2, 1, 11, 8, 39] has cost 31.


Before backtrack at level 17
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51]
 solution : [0, 2, 1, 11, 8, 39]

After backtrack at level 17
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 39]


Invert decision for 39 at level 16


New level: 17
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 32), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 2), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 4), (58, 4), (59, 4), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 17 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 61, 45, 51, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 61 with phase True at level 17

After decision at level 17
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 61]


New level: 18
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 61]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 61]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, 2), (41, 2), (42, -1), (43, 16), (44, 16), (45, 1), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 4), (60, 4), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 61]


Solution : [0, 2, 1, 11, 8, 61] has cost 31.


Before backtrack at level 18
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 61]

After backtrack at level 18
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 61]


Invert decision for 61 at level 17


New level: 18
 pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 4), (36, 32), (37, -1), (38, -1), (39, -1), (40, 2), (41, 2), (42, -1), (43, 16), (44, 16), (45, 1), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 4), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 18 among pending : [34, 36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Decide 34 with phase True at level 18

After decision at level 18
 pending : [36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 34]


New level: 19
 pending : [36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 34]


Before reduction : 
 pending  : [36, 31, 33, 3, 24, 25, 35, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 34]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 2), (23, 4), (24, 0), (25, 0), (26, 16), (27, 4), (28, 16), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 0), (46, 8), (47, -1), (48, 8), (49, 2), (50, 2), (51, 0), (52, 0), (53, 0), (54, -1), (55, 4), (56, 4), (57, 1), (58, 1), (59, 0), (60, 0), (61, -1)]

Covered at level 19 : {35, 36, 40, 41, 45, 51, 52, 53, 20, 24, 25, 59, 60}

After reduction : 
 pending  : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58]
 solution : [0, 2, 1, 11, 8, 34]


Before reduction : 
 pending  : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58]
 solution : [0, 2, 1, 11, 8, 34]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 2), (23, 4), (24, 0), (25, 0), (26, 16), (27, 4), (28, 16), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 0), (46, 8), (47, -1), (48, 8), (49, 2), (50, 2), (51, 0), (52, 0), (53, 0), (54, -1), (55, 4), (56, 4), (57, 1), (58, 1), (59, 0), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 4), (24, -1), (25, -1), (26, 16), (27, 4), (28, 16), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, -1), (46, 8), (47, -1), (48, 8), (49, 2), (50, 2), (51, -1), (52, -1), (53, -1), (54, -1), (55, 4), (56, 4), (57, 1), (58, 1), (59, -1), (60, -1), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58]
 solution : [0, 2, 1, 11, 8, 34]


Solution : [0, 2, 1, 11, 8, 34] has cost 31.


Before backtrack at level 19
 pending : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58]
 solution : [0, 2, 1, 11, 8, 34]

After backtrack at level 19
 pending : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 34]


Invert decision for 34 at level 18


New level: 19
 pending : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 4), (24, -1), (25, -1), (26, 16), (27, 4), (28, 16), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, -1), (46, 8), (47, -1), (48, 8), (49, 2), (50, 2), (51, -1), (52, -1), (53, -1), (54, -1), (55, 4), (56, 4), (57, 1), (58, 1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 19 among pending : [31, 33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Decide 31 with phase True at level 19

After decision at level 19
 pending : [33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 31]


New level: 20
 pending : [33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 31]


Before reduction : 
 pending  : [33, 3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 43, 44, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 31]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 2), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, 8), (36, 16), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 0), (44, 0), (45, 2), (46, 4), (47, -1), (48, 4), (49, 8), (50, 8), (51, 2), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 20 : {33, 43, 44}

After reduction : 
 pending  : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 31]


Before reduction : 
 pending  : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 31]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 2), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, 8), (36, 16), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 0), (44, 0), (45, 2), (46, 4), (47, -1), (48, 4), (49, 8), (50, 8), (51, 2), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 2), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 8), (36, 16), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, -1), (44, -1), (45, 2), (46, 4), (47, -1), (48, 4), (49, 8), (50, 8), (51, 2), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 31]


Solution : [0, 2, 1, 11, 8, 31] has cost 31.


Before backtrack at level 20
 pending : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 31]

After backtrack at level 20
 pending : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 31]


Invert decision for 31 at level 19


New level: 20
 pending : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]
 solution : [0, 2, 1, 11, 8]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 2), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 8), (36, 16), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, -1), (44, -1), (45, 2), (46, 4), (47, -1), (48, 4), (49, 8), (50, 8), (51, 2), (52, 8), (53, 8), (54, -1), (55, 4), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 20 among pending : [3, 22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Decide 3 with phase True at level 20

After decision at level 20
 pending : [22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 3]


New level: 21
 pending : [22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 3]


Before reduction : 
 pending  : [22, 12, 28, 23, 27, 26, 14, 4, 5, 46, 48, 49, 50, 55, 56, 57, 58, 36, 24, 25, 35, 52, 53, 59, 60, 20, 45, 51, 40, 41, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 3]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 8), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 2), (23, 16), (24, 0), (25, 0), (26, 32), (27, 16), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 0), (36, 16), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 0), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, -1), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, -1)]

Covered at level 21 : {35, 4, 40, 41, 45, 51, 25, 20, 55, 56, 57, 58, 59, 60, 24}

After reduction : 
 pending  : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 3]


Before reduction : 
 pending  : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 3]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 8), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, 2), (23, 16), (24, 0), (25, 0), (26, 32), (27, 16), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 0), (36, 16), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 0), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, -1), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 8), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 16), (24, -1), (25, -1), (26, 32), (27, 16), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, -1), (36, 16), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, -1), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 3]


Solution : [0, 2, 1, 11, 8, 3] has cost 30.


Before backtrack at level 21
 pending : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44]
 solution : [0, 2, 1, 11, 8, 3]

After backtrack at level 21
 pending : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 3]


Invert decision for 3 at level 20


New level: 21
 pending : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 8), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 2), (23, 16), (24, -1), (25, -1), (26, 32), (27, 16), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, -1), (36, 16), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, -1), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 21 among pending : [22, 12, 28, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Decide 28 with phase True at level 21

After decision at level 21
 pending : [22, 12, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 28]


New level: 22
 pending : [22, 12, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 28]


Before reduction : 
 pending  : [22, 12, 23, 27, 26, 14, 5, 46, 48, 49, 50, 36, 52, 53, 33, 43, 44, 4, 55, 56, 57, 58, 24, 25, 35, 59, 60, 20, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 8, 28]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, 4), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 4), (24, 8), (25, 8), (26, 0), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 2), (36, 16), (37, -1), (38, -1), (39, -1), (40, 1), (41, 1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 2), (50, 2), (51, 0), (52, 2), (53, 2), (54, -1), (55, 0), (56, 0), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

Covered at level 22 : {43, 44, 45, 46, 48, 51, 55, 56, 26}

After reduction : 
 pending  : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41]
 solution : [0, 2, 1, 11, 8, 28]


Before reduction : 
 pending  : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41]
 solution : [0, 2, 1, 11, 8, 28]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, 4), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 4), (24, 8), (25, 8), (26, 0), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 2), (36, 16), (37, -1), (38, -1), (39, -1), (40, 1), (41, 1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 2), (50, 2), (51, 0), (52, 2), (53, 2), (54, -1), (55, 0), (56, 0), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, 4), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 4), (24, 8), (25, 8), (26, -1), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 2), (36, 16), (37, -1), (38, -1), (39, -1), (40, 1), (41, 1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, 2), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41]
 solution : [0, 2, 1, 11, 8, 28]


Solution : [0, 2, 1, 11, 8, 28] has cost 31.


Before backtrack at level 22
 pending : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41]
 solution : [0, 2, 1, 11, 8, 28]

After backtrack at level 22
 pending : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 28]


Invert decision for 28 at level 21


New level: 22
 pending : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, 4), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, 4), (23, 4), (24, 8), (25, 8), (26, -1), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, -1), (35, 2), (36, 16), (37, -1), (38, -1), (39, -1), (40, 1), (41, 1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, 2), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 22 among pending : [22, 12, 23, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Decide 23 with phase True at level 22

After decision at level 22
 pending : [22, 12, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 23]


New level: 23
 pending : [22, 12, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 23]


Before reduction : 
 pending  : [22, 12, 27, 14, 5, 49, 50, 36, 52, 53, 33, 4, 57, 58, 24, 25, 35, 59, 60, 20, 40, 41, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 23]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, -1), (22, 4), (23, -1), (24, 4), (25, 4), (26, 16), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, -1), (35, 1), (36, 8), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 8), (47, -1), (48, 8), (49, 0), (50, 0), (51, 1), (52, 2), (53, 2), (54, -1), (55, 4), (56, 4), (57, 0), (58, 0), (59, 1), (60, 1), (61, -1)]

Covered at level 23 : {40, 41, 49, 50, 57, 58, 27}

After reduction : 
 pending  : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 23]


Before reduction : 
 pending  : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 23]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, -1), (22, 4), (23, -1), (24, 4), (25, 4), (26, 16), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, -1), (35, 1), (36, 8), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 8), (47, -1), (48, 8), (49, 0), (50, 0), (51, 1), (52, 2), (53, 2), (54, -1), (55, 4), (56, 4), (57, 0), (58, 0), (59, 1), (60, 1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, -1), (22, 4), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, -1), (35, 1), (36, 8), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 8), (47, -1), (48, 8), (49, -1), (50, -1), (51, 1), (52, 2), (53, 2), (54, -1), (55, 4), (56, 4), (57, -1), (58, -1), (59, 1), (60, 1), (61, -1)]

Covered at level 23 : set()

After reduction : 
 pending  : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 23]


Solution : [0, 2, 1, 11, 8, 23] has cost 31.


Before backtrack at level 23
 pending : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51]
 solution : [0, 2, 1, 11, 8, 23]

After backtrack at level 23
 pending : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8, 23]


Invert decision for 23 at level 22


New level: 23
 pending : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 16), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 4), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4), (21, -1), (22, 4), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, -1), (35, 1), (36, 8), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 8), (47, -1), (48, 8), (49, -1), (50, -1), (51, 1), (52, 2), (53, 2), (54, -1), (55, 4), (56, 4), (57, -1), (58, -1), (59, 1), (60, 1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, -1), (24, 16), (25, 16), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Covered at level 23 : set()

After reduction : 
 pending  : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8]


Solution : [0, 2, 1, 11, 8] has cost 21.


Decide in level 23 among pending : [22, 12, 14, 5, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, -1), (24, 16), (25, 16), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

Decide 5 with phase True at level 23

After decision at level 23
 pending : [22, 12, 14, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8, 5]


New level: 24
 pending : [22, 12, 14, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8, 5]


Before reduction : 
 pending  : [22, 12, 14, 36, 52, 53, 33, 4, 24, 25, 35, 59, 60, 20, 26, 46, 48, 43, 44, 55, 56, 45, 51, 27, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8, 5]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, -1), (22, 4), (23, -1), (24, 16), (25, 16), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 8), (36, 32), (37, -1), (38, -1), (39, -1), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, -1), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 4), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 0), (36, 4), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, -1), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, -1)]

Covered at level 24 : {4, 35, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60}

After reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27]
 solution : [0, 2, 1, 11, 8, 5]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27]
 solution : [0, 2, 1, 11, 8, 5]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 4), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 0), (36, 4), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, -1), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 4), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, -1), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 24 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27]
 solution : [0, 2, 1, 11, 8, 5]


Solution : [0, 2, 1, 11, 8, 5] has cost 27.


Before backtrack at level 24
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27]
 solution : [0, 2, 1, 11, 8, 5]

After backtrack at level 24
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 4, 35, 59, 60, 46, 48, 43, 44, 55, 56, 45, 51, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8, 5]


Invert decision for 5 at level 23


New level: 24
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 4, 35, 59, 60, 46, 48, 43, 44, 55, 56, 45, 51, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 4, 35, 59, 60, 46, 48, 43, 44, 55, 56, 45, 51, 49, 50, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8]

Essensial at level 24 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 4), (27, 4), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, -1), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 0), (36, 32), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 0), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, -1), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, -1)]

Covered at level 24 : {35, 40, 41, 45, 51, 55, 56, 57, 58, 59, 60}

After reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50]
 solution : [0, 2, 1, 11, 8, 4]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50]
 solution : [0, 2, 1, 11, 8, 4]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, 0), (36, 32), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 0), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, -1), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, -1), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, -1), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 24 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50]
 solution : [0, 2, 1, 11, 8, 4]


Solution : [0, 2, 1, 11, 8, 4] has cost 30.


Before backtrack at level 24
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50]
 solution : [0, 2, 1, 11, 8, 4]

After backtrack at level 24
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 23
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 23
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 22
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 22
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 21
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 21
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 20
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 20
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 19
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 19
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 18
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 18
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 17
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 17
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 16
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 16
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 15
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 15
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 14
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 14
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 13
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 13
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 12
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 12
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29]
 solution : [0, 2, 1, 11, 8]


Before backtrack at level 11
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29]
 solution : [0, 2, 1, 11, 8]

After backtrack at level 11
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, 4), (23, -1), (24, 2), (25, 2), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, -1), (35, -1), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, -1), (46, 8), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 11 among pending : [22, 12, 14, 36, 33, 24, 25, 20, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [22, 12, 14, 36, 33, 24, 25, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 20]


New level: 12
 pending : [22, 12, 14, 36, 33, 24, 25, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 20]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 24, 25, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 35, 59, 60, 55, 56, 45, 51, 57, 58, 40, 41, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 32), (24, 0), (25, 0), (26, 32), (27, 16), (28, 64), (29, 16), (30, -1), (31, 64), (32, 16), (33, 32), (34, 32), (35, 0), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 32), (44, 16), (45, 0), (46, 32), (47, 8), (48, 16), (49, 8), (50, 16), (51, 0), (52, 16), (53, 8), (54, 2), (55, 4), (56, 8), (57, 4), (58, 2), (59, 0), (60, 0), (61, 2)]

Covered at level 12 : {35, 40, 41, 45, 51, 24, 25, 59, 60}

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 20]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 32), (24, 0), (25, 0), (26, 32), (27, 16), (28, 64), (29, 16), (30, -1), (31, 64), (32, 16), (33, 32), (34, 32), (35, 0), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 32), (44, 16), (45, 0), (46, 32), (47, 8), (48, 16), (49, 8), (50, 16), (51, 0), (52, 16), (53, 8), (54, 2), (55, 4), (56, 8), (57, 4), (58, 2), (59, 0), (60, 0), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 32), (24, -1), (25, -1), (26, 32), (27, 16), (28, 64), (29, 16), (30, -1), (31, 64), (32, 16), (33, 32), (34, 32), (35, -1), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 32), (44, 16), (45, -1), (46, 32), (47, 8), (48, 16), (49, 8), (50, 16), (51, -1), (52, 16), (53, 8), (54, 2), (55, 4), (56, 8), (57, 4), (58, 2), (59, -1), (60, -1), (61, 2)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 20]


Solution : [0, 2, 1, 11, 20] has cost 26.


Before backtrack at level 12
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32]
 solution : [0, 2, 1, 11, 20]

After backtrack at level 12
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]
 solution : [0, 2, 1, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 32), (24, -1), (25, -1), (26, 32), (27, 16), (28, 64), (29, 16), (30, -1), (31, 64), (32, 16), (33, 32), (34, 32), (35, -1), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 32), (44, 16), (45, -1), (46, 32), (47, 8), (48, 16), (49, 8), (50, 16), (51, -1), (52, 16), (53, 8), (54, 2), (55, 4), (56, 8), (57, 4), (58, 2), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 12 among pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 29, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 29 with phase True at level 12

After decision at level 12
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 29]


New level: 13
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 29]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 61, 39, 54, 47, 42, 6, 10, 32, 24, 25, 35, 59, 60, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, 256), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, -1), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 2), (41, 1), (42, 32), (43, 32), (44, 16), (45, 0), (46, 16), (47, 0), (48, 8), (49, 16), (50, 32), (51, 0), (52, 32), (53, 16), (54, 1), (55, 2), (56, 4), (57, 16), (58, 8), (59, 4), (60, 2), (61, 0)]

Covered at level 13 : {51, 45, 61, 47}

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41]
 solution : [0, 2, 1, 11, 29]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41]
 solution : [0, 2, 1, 11, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, -1), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 2), (41, 1), (42, 32), (43, 32), (44, 16), (45, 0), (46, 16), (47, 0), (48, 8), (49, 16), (50, 32), (51, 0), (52, 32), (53, 16), (54, 1), (55, 2), (56, 4), (57, 16), (58, 8), (59, 4), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, -1), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 2), (41, 1), (42, 32), (43, 32), (44, 16), (45, -1), (46, 16), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 1), (55, 2), (56, 4), (57, 16), (58, 8), (59, 4), (60, 2), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41]
 solution : [0, 2, 1, 11, 29]


Solution : [0, 2, 1, 11, 29] has cost 26.


Before backtrack at level 13
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41]
 solution : [0, 2, 1, 11, 29]

After backtrack at level 13
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 29]


Invert decision for 29 at level 12


New level: 13
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 16), (25, 8), (26, 16), (27, 32), (28, 32), (29, -1), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 2), (41, 1), (42, 32), (43, 32), (44, 16), (45, -1), (46, 16), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 1), (55, 2), (56, 4), (57, 16), (58, 8), (59, 4), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 13 among pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 32, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 32 with phase True at level 13

After decision at level 13
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 32]


New level: 14
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 32]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 39, 54, 42, 6, 10, 24, 25, 35, 59, 60, 40, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 32]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, 256), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 32), (32, -1), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 4), (43, 16), (44, 8), (45, 2), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

Covered at level 14 : {40, 41, 39}

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 32]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 32]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 32), (32, -1), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 4), (43, 16), (44, 8), (45, 2), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 32), (32, -1), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 16), (44, 8), (45, 2), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 32]


Solution : [0, 2, 1, 11, 32] has cost 26.


Before backtrack at level 14
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51]
 solution : [0, 2, 1, 11, 32]

After backtrack at level 14
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 32]


Invert decision for 32 at level 13


New level: 14
 pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 32), (32, -1), (33, 16), (34, 64), (35, 64), (36, 32), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 16), (44, 8), (45, 2), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 32), (55, 8), (56, 16), (57, 8), (58, 4), (59, 8), (60, 4), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 14 among pending : [22, 12, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [22, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


New level: 15
 pending : [22, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


Before reduction : 
 pending  : [22, 14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 15 : {22}

After reduction : 
 pending  : [14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


Before reduction : 
 pending  : [14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


Solution : [0, 2, 1, 11, 12] has cost 22.


Decide in level 15 among pending : [14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 5, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 5]


New level: 16
 pending : [14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 5]


Before reduction : 
 pending  : [14, 36, 33, 26, 27, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 23, 28, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 16 : {3, 4, 6, 10, 24, 25, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [14, 26, 27, 23, 28]
 solution : [0, 2, 1, 11, 12, 5]


Before reduction : 
 pending  : [14, 26, 27, 23, 28]
 solution : [0, 2, 1, 11, 12, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28]
 solution : [0, 2, 1, 11, 12, 5]


Solution : [0, 2, 1, 11, 12, 5] has cost 28.


Before backtrack at level 16
 pending : [14, 26, 27, 23, 28]
 solution : [0, 2, 1, 11, 12, 5]

After backtrack at level 16
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


Solution : [0, 2, 1, 11, 12] has cost 22.


Decide in level 16 among pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 42, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 42 with phase True at level 16

After decision at level 16
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 42]


New level: 17
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 42]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 42]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

Covered at level 17 : {40, 41}

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39]
 solution : [0, 2, 1, 11, 12, 42]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39]
 solution : [0, 2, 1, 11, 12, 42]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39]
 solution : [0, 2, 1, 11, 12, 42]


Solution : [0, 2, 1, 11, 12, 42] has cost 32.


Before backtrack at level 17
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39]
 solution : [0, 2, 1, 11, 12, 42]

After backtrack at level 17
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 42]


Invert decision for 42 at level 16


New level: 17
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12]


Solution : [0, 2, 1, 11, 12] has cost 22.


Decide in level 17 among pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 6, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 6 with phase True at level 17

After decision at level 17
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 6]


New level: 18
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 6]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 10, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 18 : {10}

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 6]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 6]


Solution : [0, 2, 1, 11, 12, 6] has cost 27.


Before backtrack at level 18
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 6]

After backtrack at level 18
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10]
 solution : [0, 2, 1, 11, 12, 6]


Invert decision for 6 at level 17


New level: 18
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10]
 solution : [0, 2, 1, 11, 12]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10]
 solution : [0, 2, 1, 11, 12]

Essensial at level 18 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 8), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 10]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 10]


Solution : [0, 2, 1, 11, 12, 10] has cost 24.


Before backtrack at level 18
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41]
 solution : [0, 2, 1, 11, 12, 10]

After backtrack at level 18
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10]
 solution : [0, 2, 1, 11, 12]


Before backtrack at level 17
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10]
 solution : [0, 2, 1, 11, 12]

After backtrack at level 17
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6]
 solution : [0, 2, 1, 11, 12]


Before backtrack at level 16
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6]
 solution : [0, 2, 1, 11, 12]

After backtrack at level 16
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42]
 solution : [0, 2, 1, 11, 12]


Before backtrack at level 15
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42]
 solution : [0, 2, 1, 11, 12]

After backtrack at level 15
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 16), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 16), (32, -1), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11]


Solution : [0, 2, 1, 11] has cost 16.


Decide in level 15 among pending : [14, 26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 14 with phase True at level 15

After decision at level 15
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14]


New level: 16
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 32), (25, 16), (26, 32), (27, 32), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 64), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 32), (51, 8), (52, 32), (53, 16), (54, 64), (55, 8), (56, 16), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14]


Solution : [0, 2, 1, 11, 14] has cost 22.


Decide in level 16 among pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 3, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14, 3]


New level: 17
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14, 3]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 4, 55, 56, 57, 58, 31, 34, 54, 24, 25, 35, 59, 60, 61, 47, 45, 51, 39, 40, 41, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, 0), (25, 0), (26, 8), (27, 4), (28, 16), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 16), (35, 1), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 16), (44, 8), (45, 0), (46, 16), (47, 8), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 17 : {4, 40, 41, 45, 51, 25, 55, 56, 57, 58, 59, 60, 61, 24}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14, 3]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, 0), (25, 0), (26, 8), (27, 4), (28, 16), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 16), (35, 1), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 16), (44, 8), (45, 0), (46, 16), (47, 8), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, 8), (27, 4), (28, 16), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 16), (35, 1), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 16), (44, 8), (45, -1), (46, 16), (47, 8), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14, 3]


Solution : [0, 2, 1, 11, 14, 3] has cost 31.


Before backtrack at level 17
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 22, 5]
 solution : [0, 2, 1, 11, 14, 3]

After backtrack at level 17
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 22, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 14, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 22, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 22, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 14]

Essensial at level 17 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, 8), (27, 4), (28, 16), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 16), (35, 1), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 16), (44, 8), (45, -1), (46, 16), (47, 8), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 14, 22]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 14, 22]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 14, 22]


Solution : [0, 2, 1, 11, 14, 22] has cost 32.


Before backtrack at level 17
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11, 14, 22]

After backtrack at level 17
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 22]
 solution : [0, 2, 1, 11, 14]


Before backtrack at level 16
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 22]
 solution : [0, 2, 1, 11, 14]

After backtrack at level 16
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 22, 3]
 solution : [0, 2, 1, 11, 14]


Invert decision for 14 at level 15


New level: 16
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 22, 3]
 solution : [0, 2, 1, 11]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 22, 3]
 solution : [0, 2, 1, 11]

Essensial at level 16 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 32), (24, 0), (25, 0), (26, 32), (27, 16), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 2), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 16), (44, 8), (45, 0), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, 0), (52, 8), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 16 : {4, 40, 41, 45, 51, 25, 55, 56, 57, 58, 59, 60, 61, 24}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22]
 solution : [0, 2, 1, 11, 3]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22]
 solution : [0, 2, 1, 11, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 32), (24, 0), (25, 0), (26, 32), (27, 16), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 2), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 16), (44, 8), (45, 0), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, 0), (52, 8), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 32), (24, -1), (25, -1), (26, 32), (27, 16), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 2), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 16), (44, 8), (45, -1), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, -1), (52, 8), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22]
 solution : [0, 2, 1, 11, 3]


Solution : [0, 2, 1, 11, 3] has cost 25.


Before backtrack at level 16
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22]
 solution : [0, 2, 1, 11, 3]

After backtrack at level 16
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11]


Before backtrack at level 15
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41]
 solution : [0, 2, 1, 11]

After backtrack at level 15
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14]
 solution : [0, 2, 1, 11]


Before backtrack at level 14
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14]
 solution : [0, 2, 1, 11]

After backtrack at level 14
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12]
 solution : [0, 2, 1, 11]


Before backtrack at level 13
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12]
 solution : [0, 2, 1, 11]

After backtrack at level 13
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32]
 solution : [0, 2, 1, 11]


Before backtrack at level 12
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32]
 solution : [0, 2, 1, 11]

After backtrack at level 12
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29]
 solution : [0, 2, 1, 11]


Before backtrack at level 11
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29]
 solution : [0, 2, 1, 11]

After backtrack at level 11
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20]
 solution : [0, 2, 1, 11]


Before backtrack at level 10
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20]
 solution : [0, 2, 1, 11]

After backtrack at level 10
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8]
 solution : [0, 2, 1, 11]


Before backtrack at level 9
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8]
 solution : [0, 2, 1, 11]

After backtrack at level 9
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30]
 solution : [0, 2, 1, 11]


Before backtrack at level 8
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30]
 solution : [0, 2, 1, 11]

After backtrack at level 8
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21]
 solution : [0, 2, 1, 11]


Before backtrack at level 7
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21]
 solution : [0, 2, 1, 11]

After backtrack at level 7
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9]
 solution : [0, 2, 1, 11]


Before backtrack at level 6
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9]
 solution : [0, 2, 1, 11]

After backtrack at level 6
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7]
 solution : [0, 2, 1, 11]


Before backtrack at level 5
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7]
 solution : [0, 2, 1, 11]

After backtrack at level 5
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19]
 solution : [0, 2, 1, 11]


Before backtrack at level 4
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19]
 solution : [0, 2, 1, 11]

After backtrack at level 4
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18]
 solution : [0, 2, 1, 11]


Before backtrack at level 3
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18]
 solution : [0, 2, 1, 11]

After backtrack at level 3
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 11]


Invert decision for 11 at level 2


New level: 3
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 8), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 32), (24, -1), (25, -1), (26, 32), (27, 16), (28, 64), (29, -1), (30, -1), (31, 64), (32, -1), (33, 32), (34, 32), (35, 2), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 16), (44, 8), (45, -1), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, -1), (52, 8), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 512), (13, 256), (14, 512), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 3 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 3 among pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 14, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 512), (13, 256), (14, 512), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 14 with phase True at level 3

After decision at level 3
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14]


New level: 4
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 512), (13, 256), (14, 512), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 4 among pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 19, 18, 13, 16, 17, 37, 38, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 19 with phase True at level 4

After decision at level 4
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14, 19]


New level: 5
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14, 19]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 54, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 256), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 64), (47, 32), (48, 32), (49, 64), (50, 64), (51, 32), (52, 16), (53, 16), (54, 0), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

Covered at level 5 : {54}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14, 19]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 256), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 64), (47, 32), (48, 32), (49, 64), (50, 64), (51, 32), (52, 16), (53, 16), (54, 0), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 256), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 64), (47, 32), (48, 32), (49, 64), (50, 64), (51, 32), (52, 16), (53, 16), (54, -1), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14, 19]


Solution : [0, 2, 1, 14, 19] has cost 25.


Before backtrack at level 5
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15]
 solution : [0, 2, 1, 14, 19]

After backtrack at level 5
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 19]


Invert decision for 19 at level 4


New level: 5
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 256), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 64), (47, 32), (48, 32), (49, 64), (50, 64), (51, 32), (52, 16), (53, 16), (54, -1), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 5 among pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 18, 13, 16, 17, 37, 38, 15, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 18]


New level: 6
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 18]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 39, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, 512), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 128), (26, 32), (27, 16), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 0), (40, 16), (41, 16), (42, 8), (43, 16), (44, 8), (45, 64), (46, 64), (47, 64), (48, 32), (49, 16), (50, 16), (51, 64), (52, 32), (53, 32), (54, 16), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

Covered at level 6 : {39}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 18]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 128), (26, 32), (27, 16), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 0), (40, 16), (41, 16), (42, 8), (43, 16), (44, 8), (45, 64), (46, 64), (47, 64), (48, 32), (49, 16), (50, 16), (51, 64), (52, 32), (53, 32), (54, 16), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 128), (26, 32), (27, 16), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, -1), (40, 16), (41, 16), (42, 8), (43, 16), (44, 8), (45, 64), (46, 64), (47, 64), (48, 32), (49, 16), (50, 16), (51, 64), (52, 32), (53, 32), (54, 16), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 18]


Solution : [0, 2, 1, 14, 18] has cost 25.


Before backtrack at level 6
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54]
 solution : [0, 2, 1, 14, 18]

After backtrack at level 6
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 128), (26, 32), (27, 16), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, -1), (40, 16), (41, 16), (42, 8), (43, 16), (44, 8), (45, 64), (46, 64), (47, 64), (48, 32), (49, 16), (50, 16), (51, 64), (52, 32), (53, 32), (54, 16), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 6 among pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 31, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 31 with phase True at level 6

After decision at level 6
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 31]


New level: 7
 pending : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 31]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 33, 52, 53, 46, 48, 43, 44, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 31]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 128), (30, 16), (31, -1), (32, 16), (33, 0), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 16), (43, 0), (44, 0), (45, 128), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 7 : {33, 43, 44}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 31]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 31]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 128), (30, 16), (31, -1), (32, 16), (33, 0), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 16), (43, 0), (44, 0), (45, 128), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 128), (30, 16), (31, -1), (32, 16), (33, -1), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 16), (43, -1), (44, -1), (45, 128), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 31]


Solution : [0, 2, 1, 14, 31] has cost 26.


Before backtrack at level 7
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39]
 solution : [0, 2, 1, 14, 31]

After backtrack at level 7
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]
 solution : [0, 2, 1, 14, 31]


Invert decision for 31 at level 6


New level: 7
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]
 solution : [0, 2, 1, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, 64), (28, 64), (29, 128), (30, 16), (31, -1), (32, 16), (33, -1), (34, 64), (35, 128), (36, 64), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 16), (43, -1), (44, -1), (45, 128), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 7 among pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 32, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 32 with phase True at level 7

After decision at level 7
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]
 solution : [0, 2, 1, 14, 32]


New level: 8
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]
 solution : [0, 2, 1, 14, 32]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 39, 33, 43, 44]
 solution : [0, 2, 1, 14, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 16), (31, -1), (32, -1), (33, 32), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, 0), (40, 32), (41, 32), (42, 16), (43, 64), (44, 32), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

Covered at level 8 : {39}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44]
 solution : [0, 2, 1, 14, 32]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44]
 solution : [0, 2, 1, 14, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 16), (31, -1), (32, -1), (33, 32), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, 0), (40, 32), (41, 32), (42, 16), (43, 64), (44, 32), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 16), (31, -1), (32, -1), (33, 32), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, -1), (40, 32), (41, 32), (42, 16), (43, 64), (44, 32), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44]
 solution : [0, 2, 1, 14, 32]


Solution : [0, 2, 1, 14, 32] has cost 26.


Before backtrack at level 8
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44]
 solution : [0, 2, 1, 14, 32]

After backtrack at level 8
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 32]


Invert decision for 32 at level 7


New level: 8
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 16), (31, -1), (32, -1), (33, 32), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, -1), (40, 32), (41, 32), (42, 16), (43, 64), (44, 32), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 32), (55, 32), (56, 64), (57, 16), (58, 16), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 8 among pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 20, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 20 with phase True at level 8

After decision at level 8
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 20]


New level: 9
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 20]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 35, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 20]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 32), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 64), (24, 32), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 64), (31, -1), (32, -1), (33, 128), (34, 128), (35, 0), (36, 128), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 32), (43, 128), (44, 64), (45, 128), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 16), (55, 32), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

Covered at level 9 : {35}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 20]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 20]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 32), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 64), (24, 32), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 64), (31, -1), (32, -1), (33, 128), (34, 128), (35, 0), (36, 128), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 32), (43, 128), (44, 64), (45, 128), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 16), (55, 32), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 32), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 64), (24, 32), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 64), (31, -1), (32, -1), (33, 128), (34, 128), (35, -1), (36, 128), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 32), (43, 128), (44, 64), (45, 128), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 16), (55, 32), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 20]


Solution : [0, 2, 1, 14, 20] has cost 26.


Before backtrack at level 9
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39]
 solution : [0, 2, 1, 14, 20]

After backtrack at level 9
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 20]


Invert decision for 20 at level 8


New level: 9
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 32), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 64), (24, 32), (25, 32), (26, 64), (27, 64), (28, 128), (29, 32), (30, 64), (31, -1), (32, -1), (33, 128), (34, 128), (35, -1), (36, 128), (37, 64), (38, 64), (39, 16), (40, 128), (41, 128), (42, 32), (43, 128), (44, 64), (45, 128), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 16), (55, 32), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 9 among pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 8, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8]


New level: 10
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 10, 6, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, 0), (7, 64), (8, -1), (9, 32), (10, 0), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : {10, 6}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, 0), (7, 64), (8, -1), (9, 32), (10, 0), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 10 among pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 30, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 30 with phase True at level 10

After decision at level 10
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8, 30]


New level: 11
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8, 30]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 42, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8, 30]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 16), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, 0), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 11 : {42}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8, 30]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8, 30]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 16), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, 0), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 16), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, -1), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8, 30]


Solution : [0, 2, 1, 14, 8, 30] has cost 31.


Before backtrack at level 11
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35]
 solution : [0, 2, 1, 14, 8, 30]

After backtrack at level 11
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 30]


Invert decision for 30 at level 10


New level: 11
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 16), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, -1), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 11 among pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 21, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 21]


New level: 12
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 21]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 54, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, -1), (31, -1), (32, -1), (33, 128), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, 0), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

Covered at level 12 : {54}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 21]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, -1), (31, -1), (32, -1), (33, 128), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, 0), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, -1), (31, -1), (32, -1), (33, 128), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, -1), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 21]


Solution : [0, 2, 1, 14, 8, 21] has cost 31.


Before backtrack at level 12
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42]
 solution : [0, 2, 1, 14, 8, 21]

After backtrack at level 12
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 64), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, -1), (31, -1), (32, -1), (33, 128), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 32), (46, 128), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, -1), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 12 among pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 16, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 16]


New level: 13
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 16]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 13, 17, 37, 38, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 4), (13, 0), (14, -1), (15, 64), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, 0), (38, 0), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 13 : {17, 37, 13, 38}

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 16]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 4), (13, 0), (14, -1), (15, 64), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, 0), (38, 0), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 4), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 16]


Solution : [0, 2, 1, 14, 8, 16] has cost 27.


Before backtrack at level 13
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54]
 solution : [0, 2, 1, 14, 8, 16]

After backtrack at level 13
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 4), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 4), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 13 among pending : [26, 27, 23, 28, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 28 with phase True at level 13

After decision at level 13
 pending : [26, 27, 23, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 28]


New level: 14
 pending : [26, 27, 23, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 28]


Before reduction : 
 pending  : [26, 27, 23, 36, 52, 53, 46, 48, 49, 50, 34, 47, 5, 22, 3, 4, 55, 56, 57, 58, 24, 25, 59, 60, 61, 45, 51, 40, 41, 12, 29, 9, 7, 15, 33, 43, 44, 39, 35, 42, 54, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 4), (5, 4), (6, -1), (7, 32), (8, -1), (9, 4), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 128), (25, 128), (26, 0), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 8), (43, 4), (44, 2), (45, 32), (46, 0), (47, 0), (48, 0), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 0), (55, 0), (56, 0), (57, 16), (58, 16), (59, 64), (60, 64), (61, 0)]

Covered at level 14 : {46, 47, 48, 29, 54, 55, 56, 26, 61}

After reduction : 
 pending  : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 28]


Before reduction : 
 pending  : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 4), (5, 4), (6, -1), (7, 32), (8, -1), (9, 4), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 128), (25, 128), (26, 0), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 8), (43, 4), (44, 2), (45, 32), (46, 0), (47, 0), (48, 0), (49, 32), (50, 32), (51, 32), (52, 64), (53, 64), (54, 0), (55, 0), (56, 0), (57, 16), (58, 16), (59, 64), (60, 64), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 4), (5, 4), (6, -1), (7, 32), (8, -1), (9, 4), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 128), (25, 128), (26, -1), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 8), (40, 128), (41, 128), (42, 8), (43, 4), (44, 2), (45, 32), (46, -1), (47, -1), (48, -1), (49, 32), (50, 32), (51, 32), (52, 8), (53, 8), (54, -1), (55, -1), (56, -1), (57, 16), (58, 16), (59, 16), (60, 16), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 28]


Solution : [0, 2, 1, 14, 8, 28] has cost 31.


Before backtrack at level 14
 pending : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38]
 solution : [0, 2, 1, 14, 8, 28]

After backtrack at level 14
 pending : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]
 solution : [0, 2, 1, 14, 8, 28]


Invert decision for 28 at level 13


New level: 14
 pending : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]
 solution : [0, 2, 1, 14, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 4), (5, 4), (6, -1), (7, 32), (8, -1), (9, 4), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 128), (25, 128), (26, -1), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 8), (40, 128), (41, 128), (42, 8), (43, 4), (44, 2), (45, 32), (46, -1), (47, -1), (48, -1), (49, 32), (50, 32), (51, 32), (52, 8), (53, 8), (54, -1), (55, -1), (56, -1), (57, 16), (58, 16), (59, 16), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 14 among pending : [27, 23, 36, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 36 with phase True at level 14

After decision at level 14
 pending : [27, 23, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]
 solution : [0, 2, 1, 14, 8, 36]


New level: 15
 pending : [27, 23, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]
 solution : [0, 2, 1, 14, 8, 36]


Before reduction : 
 pending  : [27, 23, 52, 53, 49, 50, 34, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 54]
 solution : [0, 2, 1, 14, 8, 36]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 32), (26, 64), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 0), (35, 8), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 32), (45, 128), (46, 128), (47, 128), (48, 32), (49, 32), (50, 32), (51, 128), (52, 0), (53, 0), (54, 0), (55, 32), (56, 64), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

Covered at level 15 : {34, 52, 53, 54}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29]
 solution : [0, 2, 1, 14, 8, 36]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29]
 solution : [0, 2, 1, 14, 8, 36]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 32), (26, 64), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 0), (35, 8), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 32), (45, 128), (46, 128), (47, 128), (48, 32), (49, 32), (50, 32), (51, 128), (52, 0), (53, 0), (54, 0), (55, 32), (56, 64), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 32), (26, 64), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, -1), (35, 8), (36, -1), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 32), (45, 128), (46, 128), (47, 128), (48, 32), (49, 32), (50, 32), (51, 128), (52, -1), (53, -1), (54, -1), (55, 32), (56, 64), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29]
 solution : [0, 2, 1, 14, 8, 36]


Solution : [0, 2, 1, 14, 8, 36] has cost 31.


Before backtrack at level 15
 pending : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29]
 solution : [0, 2, 1, 14, 8, 36]

After backtrack at level 15
 pending : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 36]


Invert decision for 36 at level 14


New level: 15
 pending : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 32), (26, 64), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, -1), (35, 8), (36, -1), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 128), (44, 32), (45, 128), (46, 128), (47, 128), (48, 32), (49, 32), (50, 32), (51, 128), (52, -1), (53, -1), (54, -1), (55, 32), (56, 64), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 15 among pending : [27, 23, 49, 50, 5, 22, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 22 with phase True at level 15

After decision at level 15
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 22]


New level: 16
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 22]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 12, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 0), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : {12}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 22]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 0), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 22]


Solution : [0, 2, 1, 14, 8, 22] has cost 31.


Before backtrack at level 16
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54]
 solution : [0, 2, 1, 14, 8, 22]

After backtrack at level 16
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 22]


Invert decision for 22 at level 15


New level: 16
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 16 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 24, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 24 with phase True at level 16

After decision at level 16
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 24]


New level: 17
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 24]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 25, 59, 60, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 35, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 24]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 0), (26, 64), (27, 32), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 64), (35, 0), (36, -1), (37, 16), (38, 16), (39, 64), (40, 32), (41, 32), (42, 8), (43, 128), (44, 64), (45, 32), (46, 128), (47, 8), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, 0), (60, 0), (61, 2)]

Covered at level 17 : {25, 59, 60, 35}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 24]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 24]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 0), (26, 64), (27, 32), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 64), (35, 0), (36, -1), (37, 16), (38, 16), (39, 64), (40, 32), (41, 32), (42, 8), (43, 128), (44, 64), (45, 32), (46, 128), (47, 8), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, 0), (60, 0), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, -1), (26, 64), (27, 32), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 64), (35, -1), (36, -1), (37, 16), (38, 16), (39, 64), (40, 32), (41, 32), (42, 8), (43, 128), (44, 64), (45, 32), (46, 128), (47, 8), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, -1), (60, -1), (61, 2)]

Covered at level 17 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 24]


Solution : [0, 2, 1, 14, 8, 24] has cost 31.


Before backtrack at level 17
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12]
 solution : [0, 2, 1, 14, 8, 24]

After backtrack at level 17
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 24]


Invert decision for 24 at level 16


New level: 17
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 8), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, -1), (26, 64), (27, 32), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 64), (35, -1), (36, -1), (37, 16), (38, 16), (39, 64), (40, 32), (41, 32), (42, 8), (43, 128), (44, 64), (45, 32), (46, 128), (47, 8), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 17 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 45, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 45 with phase True at level 17

After decision at level 17
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 45]


New level: 18
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 45]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 51, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 45]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 64), (41, 64), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 8), (48, 64), (49, 64), (50, 64), (51, 0), (52, 64), (53, 64), (54, 2), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 2)]

Covered at level 18 : {51}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 45]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 45]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 64), (41, 64), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 8), (48, 64), (49, 64), (50, 64), (51, 0), (52, 64), (53, 64), (54, 2), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 64), (41, 64), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 8), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 2), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 2)]

Covered at level 18 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 45]


Solution : [0, 2, 1, 14, 8, 45] has cost 31.


Before backtrack at level 18
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35]
 solution : [0, 2, 1, 14, 8, 45]

After backtrack at level 18
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 45]


Invert decision for 45 at level 17


New level: 18
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 8), (36, -1), (37, 32), (38, 32), (39, 64), (40, 64), (41, 64), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 8), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 2), (55, 16), (56, 64), (57, 32), (58, 32), (59, 16), (60, 16), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 18 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 40, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 40 with phase True at level 18

After decision at level 18
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 40]


New level: 19
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 40]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 41, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 40]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 16), (36, -1), (37, 32), (38, 32), (39, 4), (40, -1), (41, 0), (42, 8), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 19 : {41}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 40]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 40]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 16), (36, -1), (37, 32), (38, 32), (39, 4), (40, -1), (41, 0), (42, 8), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 16), (36, -1), (37, 32), (38, 32), (39, 4), (40, -1), (41, -1), (42, 8), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 40]


Solution : [0, 2, 1, 14, 8, 40] has cost 31.


Before backtrack at level 19
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51]
 solution : [0, 2, 1, 14, 8, 40]

After backtrack at level 19
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 40]


Invert decision for 40 at level 18


New level: 19
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 64), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 16), (36, -1), (37, 32), (38, 32), (39, 4), (40, -1), (41, -1), (42, 8), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 64), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 19 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 33, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 33 with phase True at level 19

After decision at level 19
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 33]


New level: 20
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 33]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 44, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 33]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 64), (35, 32), (36, -1), (37, 64), (38, 64), (39, 8), (40, -1), (41, 128), (42, 16), (43, 4), (44, 0), (45, -1), (46, 128), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : {44}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 33]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 33]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 64), (35, 32), (36, -1), (37, 64), (38, 64), (39, 8), (40, -1), (41, 128), (42, 16), (43, 4), (44, 0), (45, -1), (46, 128), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 64), (35, 32), (36, -1), (37, 64), (38, 64), (39, 8), (40, -1), (41, 128), (42, 16), (43, 4), (44, -1), (45, -1), (46, 128), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 33]


Solution : [0, 2, 1, 14, 8, 33] has cost 31.


Before backtrack at level 20
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 33]

After backtrack at level 20
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 33]


Invert decision for 33 at level 19


New level: 20
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 32), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 32), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 64), (35, 32), (36, -1), (37, 64), (38, 64), (39, 8), (40, -1), (41, 128), (42, 16), (43, 4), (44, -1), (45, -1), (46, 128), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 20 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 43, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 43 with phase True at level 20

After decision at level 20
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 43]


New level: 21
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 43]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 43]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, 128), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 64), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 4), (40, -1), (41, 128), (42, 4), (43, -1), (44, 0), (45, -1), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 21 : {44}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 43]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 43]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 64), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 4), (40, -1), (41, 128), (42, 4), (43, -1), (44, 0), (45, -1), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 64), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 4), (40, -1), (41, 128), (42, 4), (43, -1), (44, -1), (45, -1), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 43]


Solution : [0, 2, 1, 14, 8, 43] has cost 31.


Before backtrack at level 21
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41]
 solution : [0, 2, 1, 14, 8, 43]

After backtrack at level 21
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 43]


Invert decision for 43 at level 20


New level: 21
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 16), (6, -1), (7, 64), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 32), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 4), (40, -1), (41, 128), (42, 4), (43, -1), (44, -1), (45, -1), (46, 64), (47, 128), (48, 32), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 64), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 21 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 42, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 42 with phase True at level 21

After decision at level 21
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 42]


New level: 22
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 42]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 42]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, 128), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 16), (36, -1), (37, 64), (38, 64), (39, 8), (40, -1), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 22 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 42]


Solution : [0, 2, 1, 14, 8, 42] has cost 31.


Before backtrack at level 22
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 42]

After backtrack at level 22
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 42]


Invert decision for 42 at level 21


New level: 22
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 16), (36, -1), (37, 64), (38, 64), (39, 8), (40, -1), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 22 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8]


Solution : [0, 2, 1, 14, 8] has cost 21.


Decide in level 22 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 13, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 13 with phase True at level 22

After decision at level 22
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 13]


New level: 23
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 13]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 17, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 13]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, 128), (14, -1), (15, 64), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, -1), (25, 128), (26, 64), (27, 64), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 128), (35, 32), (36, -1), (37, 64), (38, 64), (39, 64), (40, -1), (41, 128), (42, -1), (43, -1), (44, 64), (45, -1), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 23 : {17}

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 13]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 13]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 13]


Solution : [0, 2, 1, 14, 8, 13] has cost 27.


Before backtrack at level 23
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 13]

After backtrack at level 23
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17]
 solution : [0, 2, 1, 14, 8, 13]


Invert decision for 13 at level 22


New level: 23
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17]
 solution : [0, 2, 1, 14, 8]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17]
 solution : [0, 2, 1, 14, 8]

Essensial at level 23 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 17]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 17]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 17]


Solution : [0, 2, 1, 14, 8, 17] has cost 27.


Before backtrack at level 23
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44]
 solution : [0, 2, 1, 14, 8, 17]

After backtrack at level 23
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 22
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 22
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 21
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 21
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 20
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 20
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 19
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 19
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 18
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 18
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 17
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 17
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 16
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 16
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 15
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 15
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 14
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 14
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 13
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 13
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 12
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 12
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 11
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 11
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21]
 solution : [0, 2, 1, 14, 8]


Before backtrack at level 10
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21]
 solution : [0, 2, 1, 14, 8]

After backtrack at level 10
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]
 solution : [0, 2, 1, 14, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]
 solution : [0, 2, 1, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 16), (5, 32), (6, -1), (7, 64), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, 64), (26, 16), (27, 32), (28, -1), (29, 128), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 32), (36, -1), (37, 32), (38, 32), (39, 64), (40, -1), (41, 32), (42, -1), (43, -1), (44, 16), (45, -1), (46, 128), (47, 128), (48, 16), (49, 32), (50, 32), (51, 16), (52, 16), (53, 16), (54, 64), (55, 8), (56, 64), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 10 among pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 7, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]
 solution : [0, 2, 1, 14, 7]


New level: 11
 pending : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]
 solution : [0, 2, 1, 14, 7]


Before reduction : 
 pending  : [27, 23, 49, 50, 5, 3, 4, 57, 58, 9, 15, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 10, 6, 30]
 solution : [0, 2, 1, 14, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, 128), (14, -1), (15, 0), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, 64), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Covered at level 11 : {3, 4, 5, 6, 9, 10, 15}

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 30]
 solution : [0, 2, 1, 14, 7]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 30]
 solution : [0, 2, 1, 14, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, 128), (14, -1), (15, 0), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, 64), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, 64), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 30]
 solution : [0, 2, 1, 14, 7]


Solution : [0, 2, 1, 14, 7] has cost 22.


Decide in level 11 among pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 16, 21, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, 64), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7, 16]


New level: 12
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7, 16]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, 64), (31, -1), (32, -1), (33, 32), (34, 32), (35, 8), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, -1), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 12 : {12, 13, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 14, 7, 16]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 14, 7, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, -1), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 14, 7, 16]


Solution : [0, 2, 1, 14, 7, 16] has cost 28.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 14, 7, 16]

After backtrack at level 12
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7]


Solution : [0, 2, 1, 14, 7] has cost 22.


Decide in level 12 among pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 51, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Decide 51 with phase True at level 12

After decision at level 12
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7, 51]


New level: 13
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7, 51]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 47, 55, 56, 61, 29, 52, 53, 34, 54, 12, 25, 59, 60, 35, 41, 44, 17, 13, 42, 43, 33, 40, 45, 24, 22, 36, 28, 21, 30]
 solution : [0, 2, 1, 14, 7, 51]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 0), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, 0), (30, 16), (31, -1), (32, -1), (33, 32), (34, 8), (35, 0), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 32), (44, 16), (45, 0), (46, 8), (47, 0), (48, 8), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, 0), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, 0)]

Covered at level 13 : {35, 45, 47, 61, 21, 54, 29}

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30]
 solution : [0, 2, 1, 14, 7, 51]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30]
 solution : [0, 2, 1, 14, 7, 51]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 0), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, 0), (30, 16), (31, -1), (32, -1), (33, 32), (34, 8), (35, 0), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 32), (44, 16), (45, 0), (46, 8), (47, 0), (48, 8), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, 0), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, -1), (30, 16), (31, -1), (32, -1), (33, 32), (34, 8), (35, -1), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 32), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, -1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30]
 solution : [0, 2, 1, 14, 7, 51]


Solution : [0, 2, 1, 14, 7, 51] has cost 32.


Before backtrack at level 13
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30]
 solution : [0, 2, 1, 14, 7, 51]

After backtrack at level 13
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 51]


Invert decision for 51 at level 12


New level: 13
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, -1), (30, 16), (31, -1), (32, -1), (33, 32), (34, 8), (35, -1), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 32), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, -1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7]


Solution : [0, 2, 1, 14, 7] has cost 22.


Decide in level 13 among pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 41, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Decide 41 with phase True at level 13

After decision at level 13
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 41]


New level: 14
 pending : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 41]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 39, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 42, 43, 33, 40, 24, 22, 36, 28, 30, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 41]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 32), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, 0), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, 0), (40, 0), (41, -1), (42, 0), (43, 4), (44, 4), (45, 64), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

Covered at level 14 : {40, 42, 30, 39}

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 41]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 41]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 32), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, 0), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, 0), (40, 0), (41, -1), (42, 0), (43, 4), (44, 4), (45, 64), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 32), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, 4), (44, 4), (45, 64), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 41]


Solution : [0, 2, 1, 14, 7, 41] has cost 32.


Before backtrack at level 14
 pending : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21]
 solution : [0, 2, 1, 14, 7, 41]

After backtrack at level 14
 pending : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 41]


Invert decision for 41 at level 13


New level: 14
 pending : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]
 solution : [0, 2, 1, 14, 7]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]
 solution : [0, 2, 1, 14, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 32), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, 4), (44, 4), (45, 64), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, -1), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]
 solution : [0, 2, 1, 14, 7]


Solution : [0, 2, 1, 14, 7] has cost 22.


Decide in level 14 among pending : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 17, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, -1), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 17]


New level: 15
 pending : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 17]


Before reduction : 
 pending  : [27, 23, 49, 50, 57, 58, 37, 38, 26, 46, 48, 55, 56, 52, 53, 34, 12, 25, 59, 60, 44, 13, 43, 33, 24, 22, 36, 28, 47, 61, 29, 54, 35, 45, 21, 39, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 64), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, 32), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, -1), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, -1), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, -1), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

Covered at level 15 : {33, 34, 26, 36, 39, 44, 13, 48, 49, 50, 52, 55, 53, 23, 54, 57, 58, 27}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 17]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, -1), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, -1), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 17]


Solution : [0, 2, 1, 14, 7, 17] has cost 28.


Before backtrack at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 17]

After backtrack at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 13, 33, 36, 54, 39]
 solution : [0, 2, 1, 14, 7, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 13, 33, 36, 54, 39]
 solution : [0, 2, 1, 14, 7]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 13, 33, 36, 54, 39]
 solution : [0, 2, 1, 14, 7]

Essensial at level 15 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, -1), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, -1), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

Covered at level 15 : {33, 34, 26, 36, 39, 44, 48, 49, 50, 52, 55, 53, 23, 54, 57, 58, 27}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 13]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, -1), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, -1), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 13]


Solution : [0, 2, 1, 14, 7, 13] has cost 28.


Before backtrack at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30]
 solution : [0, 2, 1, 14, 7, 13]

After backtrack at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39]
 solution : [0, 2, 1, 14, 7]


Before backtrack at level 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39]
 solution : [0, 2, 1, 14, 7]

After backtrack at level 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17]
 solution : [0, 2, 1, 14, 7]


Before backtrack at level 13
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17]
 solution : [0, 2, 1, 14, 7]

After backtrack at level 13
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41]
 solution : [0, 2, 1, 14, 7]


Before backtrack at level 12
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41]
 solution : [0, 2, 1, 14, 7]

After backtrack at level 12
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51]
 solution : [0, 2, 1, 14, 7]


Before backtrack at level 11
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51]
 solution : [0, 2, 1, 14, 7]

After backtrack at level 11
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, -1), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 11 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 21, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 21]


New level: 12
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 21]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 32), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, 0), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

Covered at level 12 : {54}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 21]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 32), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, 0), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 32), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, -1), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 21]


Solution : [0, 2, 1, 14, 21] has cost 26.


Before backtrack at level 12
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16]
 solution : [0, 2, 1, 14, 21]

After backtrack at level 12
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 32), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 32), (36, 32), (37, 64), (38, 64), (39, 32), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, 32), (52, 32), (53, 32), (54, -1), (55, 16), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 12 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 30, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 30 with phase True at level 12

After decision at level 12
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 30]


New level: 13
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 30]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 42, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 30]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, 0), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 13 : {42}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 30]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 30]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, 0), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, -1), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 30]


Solution : [0, 2, 1, 14, 30] has cost 26.


Before backtrack at level 13
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54]
 solution : [0, 2, 1, 14, 30]

After backtrack at level 13
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54, 42]
 solution : [0, 2, 1, 14, 30]


Invert decision for 30 at level 12


New level: 13
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54, 42]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54, 42]
 solution : [0, 2, 1, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 64), (25, 64), (26, 64), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 128), (35, 64), (36, 128), (37, 64), (38, 64), (39, 8), (40, 32), (41, 32), (42, -1), (43, 32), (44, 32), (45, 128), (46, 128), (47, 64), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54, 42]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 13 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 15, 10, 6, 16, 54, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 10, 6, 16, 54, 42]
 solution : [0, 2, 1, 14, 15]


New level: 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 10, 6, 16, 54, 42]
 solution : [0, 2, 1, 14, 15]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 5, 3, 4, 9, 10, 6, 16, 54, 42]
 solution : [0, 2, 1, 14, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, 256), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Covered at level 14 : {3, 4, 5, 6, 9, 10}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 16, 54, 42]
 solution : [0, 2, 1, 14, 15]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 16, 54, 42]
 solution : [0, 2, 1, 14, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 16, 54, 42]
 solution : [0, 2, 1, 14, 15]


Solution : [0, 2, 1, 14, 15] has cost 22.


Decide in level 14 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 16, 54, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15, 16]


New level: 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15, 16]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 128), (25, 128), (26, 16), (27, 16), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 32), (43, 32), (44, 16), (45, 128), (46, 32), (47, 32), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 15 : {12, 13, 17, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 14, 15, 16]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 14, 15, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 14, 15, 16]


Solution : [0, 2, 1, 14, 15, 16] has cost 28.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 14, 15, 16]

After backtrack at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15]


Solution : [0, 2, 1, 14, 15] has cost 22.


Decide in level 15 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 45, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Decide 45 with phase True at level 15

After decision at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15, 45]


New level: 16
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15, 45]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 51, 54, 42]
 solution : [0, 2, 1, 14, 15, 45]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, 0), (30, -1), (31, -1), (32, -1), (33, 32), (34, 8), (35, 0), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 16), (44, 16), (45, -1), (46, 8), (47, 0), (48, 8), (49, 16), (50, 16), (51, 0), (52, 8), (53, 8), (54, 0), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, 0)]

Covered at level 16 : {35, 47, 51, 61, 54, 29}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42]
 solution : [0, 2, 1, 14, 15, 45]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42]
 solution : [0, 2, 1, 14, 15, 45]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, 0), (30, -1), (31, -1), (32, -1), (33, 32), (34, 8), (35, 0), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 16), (44, 16), (45, -1), (46, 8), (47, 0), (48, 8), (49, 16), (50, 16), (51, 0), (52, 8), (53, 8), (54, 0), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 8), (35, -1), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, -1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42]
 solution : [0, 2, 1, 14, 15, 45]


Solution : [0, 2, 1, 14, 15, 45] has cost 32.


Before backtrack at level 16
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42]
 solution : [0, 2, 1, 14, 15, 45]

After backtrack at level 16
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 45]


Invert decision for 45 at level 15


New level: 16
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 16), (24, 32), (25, 32), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 8), (35, -1), (36, 8), (37, 32), (38, 32), (39, 2), (40, 64), (41, 64), (42, 2), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 8), (53, 8), (54, -1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 4), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, -1), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15]


Solution : [0, 2, 1, 14, 15] has cost 22.


Decide in level 16 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 40, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, -1), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Decide 40 with phase True at level 16

After decision at level 16
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 40]


New level: 17
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 40]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 39, 17, 41, 42, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 40]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, 128), (41, 128), (42, 16), (43, 32), (44, 16), (45, -1), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, 0), (40, -1), (41, 0), (42, 0), (43, 4), (44, 4), (45, -1), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

Covered at level 17 : {41, 42, 39}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 40]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 40]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, 0), (40, -1), (41, 0), (42, 0), (43, 4), (44, 4), (45, -1), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, 4), (44, 4), (45, -1), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 40]


Solution : [0, 2, 1, 14, 15, 40] has cost 32.


Before backtrack at level 17
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54]
 solution : [0, 2, 1, 14, 15, 40]

After backtrack at level 17
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]
 solution : [0, 2, 1, 14, 15, 40]


Invert decision for 40 at level 16


New level: 17
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]
 solution : [0, 2, 1, 14, 15]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]
 solution : [0, 2, 1, 14, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 32), (25, 32), (26, 16), (27, 16), (28, 32), (29, 8), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, 1), (36, 32), (37, 32), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, 4), (44, 4), (45, -1), (46, 32), (47, 8), (48, 16), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 1), (55, 8), (56, 16), (57, 4), (58, 4), (59, 16), (60, 16), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, -1), (41, 128), (42, 16), (43, 32), (44, 16), (45, -1), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]
 solution : [0, 2, 1, 14, 15]


Solution : [0, 2, 1, 14, 15] has cost 22.


Decide in level 17 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 13, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, -1), (41, 128), (42, 16), (43, 32), (44, 16), (45, -1), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

Decide 13 with phase True at level 17

After decision at level 17
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]
 solution : [0, 2, 1, 14, 15, 13]


New level: 18
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]
 solution : [0, 2, 1, 14, 15, 13]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 47, 61, 29, 35, 51, 54, 39, 41, 42]
 solution : [0, 2, 1, 14, 15, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 64), (25, 64), (26, 16), (27, 16), (28, 32), (29, 16), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 2), (36, 32), (37, 64), (38, 64), (39, 4), (40, -1), (41, 128), (42, 16), (43, 32), (44, 16), (45, -1), (46, 32), (47, 16), (48, 16), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 4), (55, 8), (56, 16), (57, 8), (58, 8), (59, 32), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 8), (25, 8), (26, 0), (27, 0), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, -1), (41, 4), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

Covered at level 18 : {33, 34, 26, 36, 39, 44, 48, 49, 50, 17, 52, 55, 53, 23, 54, 57, 58, 27}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 13]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 8), (25, 8), (26, 0), (27, 0), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, -1), (41, 4), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, -1), (41, 4), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 18 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 13]


Solution : [0, 2, 1, 14, 15, 13] has cost 28.


Before backtrack at level 18
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 13]

After backtrack at level 18
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 54, 39]
 solution : [0, 2, 1, 14, 15, 13]


Invert decision for 13 at level 17


New level: 18
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 54, 39]
 solution : [0, 2, 1, 14, 15]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 17, 54, 39]
 solution : [0, 2, 1, 14, 15]

Essensial at level 18 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, -1), (41, 4), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 8), (25, 8), (26, 0), (27, 0), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, -1), (41, 4), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

Covered at level 18 : {33, 34, 26, 36, 39, 44, 48, 49, 50, 52, 55, 53, 23, 54, 57, 58, 27}

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 17]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 8), (25, 8), (26, 0), (27, 0), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, -1), (41, 4), (42, 1), (43, 1), (44, 0), (45, -1), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, -1), (41, 4), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 18 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 17]


Solution : [0, 2, 1, 14, 15, 17] has cost 28.


Before backtrack at level 18
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42]
 solution : [0, 2, 1, 14, 15, 17]

After backtrack at level 18
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39]
 solution : [0, 2, 1, 14, 15]


Before backtrack at level 17
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39]
 solution : [0, 2, 1, 14, 15]

After backtrack at level 17
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13]
 solution : [0, 2, 1, 14, 15]


Before backtrack at level 16
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13]
 solution : [0, 2, 1, 14, 15]

After backtrack at level 16
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40]
 solution : [0, 2, 1, 14, 15]


Before backtrack at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40]
 solution : [0, 2, 1, 14, 15]

After backtrack at level 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45]
 solution : [0, 2, 1, 14, 15]


Before backtrack at level 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45]
 solution : [0, 2, 1, 14, 15]

After backtrack at level 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6, 16]
 solution : [0, 2, 1, 14, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6, 16]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6, 16]
 solution : [0, 2, 1, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, -1), (41, 4), (42, 1), (43, 1), (44, -1), (45, -1), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6, 16]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 14 among pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16]


New level: 15
 pending : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [37, 38, 46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 17, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 13, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, 0), (38, 0), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 15 : {17, 13, 37, 38}

After reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, 0), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, 0), (38, 0), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16]


Solution : [0, 2, 1, 14, 16] has cost 22.


Decide in level 15 among pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 47, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 45, 5, 3, 4, 9, 10, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 47 with phase True at level 15

After decision at level 15
 pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16, 47]


New level: 16
 pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16, 47]


Before reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 61, 29, 35, 51, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 45, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16, 47]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, 0), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, 0), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, 0)]

Covered at level 16 : {45, 29, 51, 61}

After reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16, 47]


Before reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16, 47]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, 0), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, 0), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16, 47]


Solution : [0, 2, 1, 14, 16, 47] has cost 32.


Before backtrack at level 16
 pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6]
 solution : [0, 2, 1, 14, 16, 47]

After backtrack at level 16
 pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]
 solution : [0, 2, 1, 14, 16, 47]


Invert decision for 47 at level 15


New level: 16
 pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]
 solution : [0, 2, 1, 14, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 8), (27, 16), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 32), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 1), (55, 2), (56, 2), (57, 8), (58, 8), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]
 solution : [0, 2, 1, 14, 16]


Solution : [0, 2, 1, 14, 16] has cost 22.


Decide in level 16 among pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 35, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 35 with phase True at level 16

After decision at level 16
 pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]
 solution : [0, 2, 1, 14, 16, 35]


New level: 17
 pending : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]
 solution : [0, 2, 1, 14, 16, 35]


Before reduction : 
 pending  : [46, 56, 12, 25, 59, 60, 43, 24, 22, 28, 41, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 40, 5, 3, 4, 9, 10, 6, 61, 29, 51, 45]
 solution : [0, 2, 1, 14, 16, 35]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 8), (24, 1), (25, 1), (26, 16), (27, 8), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 16), (44, 16), (45, 0), (46, 16), (47, -1), (48, 16), (49, 8), (50, 8), (51, 0), (52, 8), (53, 8), (54, 2), (55, 4), (56, 8), (57, 2), (58, 2), (59, 0), (60, 0), (61, 2)]

Covered at level 17 : {40, 41, 45, 51, 59, 60}

After reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29]
 solution : [0, 2, 1, 14, 16, 35]


Before reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29]
 solution : [0, 2, 1, 14, 16, 35]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 8), (24, 1), (25, 1), (26, 16), (27, 8), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, 8), (43, 16), (44, 16), (45, 0), (46, 16), (47, -1), (48, 16), (49, 8), (50, 8), (51, 0), (52, 8), (53, 8), (54, 2), (55, 4), (56, 8), (57, 2), (58, 2), (59, 0), (60, 0), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 8), (24, 1), (25, 1), (26, 16), (27, 8), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 16), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 8), (50, 8), (51, -1), (52, 8), (53, 8), (54, 2), (55, 4), (56, 8), (57, 2), (58, 2), (59, -1), (60, -1), (61, 2)]

Covered at level 17 : set()

After reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29]
 solution : [0, 2, 1, 14, 16, 35]


Solution : [0, 2, 1, 14, 16, 35] has cost 32.


Before backtrack at level 17
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29]
 solution : [0, 2, 1, 14, 16, 35]

After backtrack at level 17
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]
 solution : [0, 2, 1, 14, 16, 35]


Invert decision for 35 at level 16


New level: 17
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]
 solution : [0, 2, 1, 14, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 8), (24, 1), (25, 1), (26, 16), (27, 8), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 8), (43, 16), (44, 16), (45, -1), (46, 16), (47, -1), (48, 16), (49, 8), (50, 8), (51, -1), (52, 8), (53, 8), (54, 2), (55, 4), (56, 8), (57, 2), (58, 2), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]
 solution : [0, 2, 1, 14, 16]


Solution : [0, 2, 1, 14, 16] has cost 22.


Decide in level 17 among pending : [46, 56, 12, 25, 43, 24, 22, 28, 42, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 42 with phase True at level 17

After decision at level 17
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]
 solution : [0, 2, 1, 14, 16, 42]


New level: 18
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]
 solution : [0, 2, 1, 14, 16, 42]


Before reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 41, 40, 51, 45]
 solution : [0, 2, 1, 14, 16, 42]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, 128), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

Covered at level 18 : {40, 41}

After reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45]
 solution : [0, 2, 1, 14, 16, 42]


Before reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45]
 solution : [0, 2, 1, 14, 16, 42]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45]
 solution : [0, 2, 1, 14, 16, 42]


Solution : [0, 2, 1, 14, 16, 42] has cost 32.


Before backtrack at level 18
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45]
 solution : [0, 2, 1, 14, 16, 42]

After backtrack at level 18
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 42]


Invert decision for 42 at level 17


New level: 18
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 4), (58, 4), (59, 4), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]


Solution : [0, 2, 1, 14, 16] has cost 22.


Decide in level 18 among pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 5, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 5 with phase True at level 18

After decision at level 18
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 5]


New level: 19
 pending : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 5]


Before reduction : 
 pending  : [46, 56, 12, 25, 43, 24, 22, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 34, 44, 33, 36, 54, 39, 3, 4, 9, 10, 6, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 0), (5, -1), (6, 1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 19 : {4, 9, 10, 23, 26, 27, 28, 29, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [12, 25, 24, 22, 34, 33, 36, 3, 6]
 solution : [0, 2, 1, 14, 16, 5]


Before reduction : 
 pending  : [12, 25, 24, 22, 34, 33, 36, 3, 6]
 solution : [0, 2, 1, 14, 16, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 0), (5, -1), (6, 1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [12, 25, 24, 22, 34, 33, 36, 3, 6]
 solution : [0, 2, 1, 14, 16, 5]


Solution : [0, 2, 1, 14, 16, 5] has cost 28.


Before backtrack at level 19
 pending : [12, 25, 24, 22, 34, 33, 36, 3, 6]
 solution : [0, 2, 1, 14, 16, 5]

After backtrack at level 19
 pending : [12, 25, 24, 22, 34, 33, 36, 3, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 5]


Invert decision for 5 at level 18


New level: 19
 pending : [12, 25, 24, 22, 34, 33, 36, 3, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [12, 25, 24, 22, 34, 33, 36, 3, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [12, 25, 24, 22, 34, 33, 36, 3, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]


Solution : [0, 2, 1, 14, 16] has cost 22.


Decide in level 19 among pending : [12, 25, 24, 22, 34, 33, 36, 3, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 3 with phase True at level 19

After decision at level 19
 pending : [12, 25, 24, 22, 34, 33, 36, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 3]


New level: 20
 pending : [12, 25, 24, 22, 34, 33, 36, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 3]


Before reduction : 
 pending  : [12, 25, 24, 22, 34, 33, 36, 6, 46, 56, 43, 28, 27, 23, 49, 50, 57, 58, 26, 48, 55, 52, 53, 44, 54, 39, 4, 9, 10, 61, 29, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 3]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 8), (7, -1), (8, -1), (9, 32), (10, 1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, 0), (25, 0), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, -1), (43, 16), (44, 8), (45, 0), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 20 : {58, 4, 40, 41, 45, 51, 55, 24, 25, 56, 59, 60, 61, 57}

After reduction : 
 pending  : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29]
 solution : [0, 2, 1, 14, 16, 3]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29]
 solution : [0, 2, 1, 14, 16, 3]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 8), (7, -1), (8, -1), (9, 32), (10, 1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, 0), (25, 0), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 16), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, -1), (43, 16), (44, 8), (45, 0), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, 32), (10, 1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, -1), (43, 16), (44, 8), (45, -1), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29]
 solution : [0, 2, 1, 14, 16, 3]


Solution : [0, 2, 1, 14, 16, 3] has cost 31.


Before backtrack at level 20
 pending : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29]
 solution : [0, 2, 1, 14, 16, 3]

After backtrack at level 20
 pending : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 3]


Invert decision for 3 at level 19


New level: 20
 pending : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, 32), (10, 1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 16), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, -1), (43, 16), (44, 8), (45, -1), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]


Solution : [0, 2, 1, 14, 16] has cost 22.


Decide in level 20 among pending : [12, 22, 34, 33, 36, 6, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 6 with phase True at level 20

After decision at level 20
 pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 6]


New level: 21
 pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 6]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 10, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 6]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 0), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 21 : {10}

After reduction : 
 pending  : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 6]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 6]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 0), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 6]


Solution : [0, 2, 1, 14, 16, 6] has cost 27.


Before backtrack at level 21
 pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16, 6]

After backtrack at level 21
 pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16, 6]


Invert decision for 6 at level 20


New level: 21
 pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 16), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16]


Solution : [0, 2, 1, 14, 16] has cost 22.


Decide in level 21 among pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 9, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Decide 9 with phase True at level 21

After decision at level 21
 pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16, 9]


New level: 22
 pending : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16, 9]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 25, 24, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16, 9]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 16), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 32), (44, 16), (45, 4), (46, 32), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 16), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 22 : {4, 10, 23, 26, 27, 28, 29, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24]
 solution : [0, 2, 1, 14, 16, 9]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24]
 solution : [0, 2, 1, 14, 16, 9]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24]
 solution : [0, 2, 1, 14, 16, 9]


Solution : [0, 2, 1, 14, 16, 9] has cost 28.


Before backtrack at level 22
 pending : [12, 22, 34, 33, 36, 25, 24]
 solution : [0, 2, 1, 14, 16, 9]

After backtrack at level 22
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16, 9]


Invert decision for 9 at level 21


New level: 22
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 56, 57, 58, 55, 4, 61, 59, 60, 51, 45, 41, 40, 10]
 solution : [0, 2, 1, 14, 16]

Essensial at level 22 : {10, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 2), (34, 2), (35, -1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, -1), (43, 16), (44, 8), (45, 0), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 22 : {40, 41, 45, 51, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29]
 solution : [0, 2, 1, 14, 16, 10, 4]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29]
 solution : [0, 2, 1, 14, 16, 10, 4]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, -1), (43, 16), (44, 8), (45, 0), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, -1), (43, 16), (44, 8), (45, -1), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29]
 solution : [0, 2, 1, 14, 16, 10, 4]


Solution : [0, 2, 1, 14, 16, 10, 4] has cost 33.


Before backtrack at level 22
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29]
 solution : [0, 2, 1, 14, 16, 10, 4]

After backtrack at level 22
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]


Before backtrack at level 21
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40]
 solution : [0, 2, 1, 14, 16]

After backtrack at level 21
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9]
 solution : [0, 2, 1, 14, 16]


Before backtrack at level 20
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9]
 solution : [0, 2, 1, 14, 16]

After backtrack at level 20
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6]
 solution : [0, 2, 1, 14, 16]


Before backtrack at level 19
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6]
 solution : [0, 2, 1, 14, 16]

After backtrack at level 19
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3]
 solution : [0, 2, 1, 14, 16]


Before backtrack at level 18
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3]
 solution : [0, 2, 1, 14, 16]

After backtrack at level 18
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5]
 solution : [0, 2, 1, 14, 16]


Before backtrack at level 17
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5]
 solution : [0, 2, 1, 14, 16]

After backtrack at level 17
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42]
 solution : [0, 2, 1, 14, 16]


Before backtrack at level 16
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42]
 solution : [0, 2, 1, 14, 16]

After backtrack at level 16
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35]
 solution : [0, 2, 1, 14, 16]


Before backtrack at level 15
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35]
 solution : [0, 2, 1, 14, 16]

After backtrack at level 15
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 32), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, -1), (43, 16), (44, 8), (45, -1), (46, 16), (47, -1), (48, 8), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14]


Solution : [0, 2, 1, 14] has cost 16.


Decide in level 15 among pending : [12, 22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 12 with phase True at level 15

After decision at level 15
 pending : [22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12]


New level: 16
 pending : [22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [22, 34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : {22}

After reduction : 
 pending  : [34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12]


Solution : [0, 2, 1, 14, 12] has cost 22.


Decide in level 16 among pending : [34, 33, 36, 25, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 25 with phase True at level 16

After decision at level 16
 pending : [34, 33, 36, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12, 25]


New level: 17
 pending : [34, 33, 36, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12, 25]


Before reduction : 
 pending  : [34, 33, 36, 24, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 59, 60, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12, 25]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, 0), (25, -1), (26, 64), (27, 32), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 8), (36, 32), (37, 8), (38, 8), (39, 64), (40, 32), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 0), (60, 0), (61, 16)]

Covered at level 17 : {24, 59, 60}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12, 25]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12, 25]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, 0), (25, -1), (26, 64), (27, 32), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 8), (36, 32), (37, 8), (38, 8), (39, 64), (40, 32), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 0), (60, 0), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, -1), (26, 64), (27, 32), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 8), (36, 32), (37, 8), (38, 8), (39, 64), (40, 32), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, -1), (60, -1), (61, 16)]

Covered at level 17 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12, 25]


Solution : [0, 2, 1, 14, 12, 25] has cost 32.


Before backtrack at level 17
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47]
 solution : [0, 2, 1, 14, 12, 25]

After backtrack at level 17
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 25]


Invert decision for 25 at level 16


New level: 17
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]
 solution : [0, 2, 1, 14, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 32), (24, -1), (25, -1), (26, 64), (27, 32), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 8), (36, 32), (37, 8), (38, 8), (39, 64), (40, 32), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, -1), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]
 solution : [0, 2, 1, 14, 12]


Solution : [0, 2, 1, 14, 12] has cost 22.


Decide in level 17 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 29, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 29 with phase True at level 17

After decision at level 17
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 29]


New level: 18
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 29]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 61, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 47, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 29]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 32), (27, 64), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 8), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 32), (43, 64), (44, 64), (45, 32), (46, 32), (47, 0), (48, 32), (49, 64), (50, 64), (51, 32), (52, 64), (53, 64), (54, 8), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, 0)]

Covered at level 18 : {61, 47}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 29]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 29]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 32), (27, 64), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 8), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 32), (43, 64), (44, 64), (45, 32), (46, 32), (47, 0), (48, 32), (49, 64), (50, 64), (51, 32), (52, 64), (53, 64), (54, 8), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 32), (27, 64), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 8), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 32), (43, 64), (44, 64), (45, 32), (46, 32), (47, -1), (48, 32), (49, 64), (50, 64), (51, 32), (52, 64), (53, 64), (54, 8), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 29]


Solution : [0, 2, 1, 14, 12, 29] has cost 32.


Before backtrack at level 18
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60]
 solution : [0, 2, 1, 14, 12, 29]

After backtrack at level 18
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 29]


Invert decision for 29 at level 17


New level: 18
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 32), (27, 64), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 8), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 32), (43, 64), (44, 64), (45, 32), (46, 32), (47, -1), (48, 32), (49, 64), (50, 64), (51, 32), (52, 64), (53, 64), (54, 8), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12]


Solution : [0, 2, 1, 14, 12] has cost 22.


Decide in level 18 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 51, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 51 with phase True at level 18

After decision at level 18
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 51]


New level: 19
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 51]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 45, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 51]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 64), (40, 64), (41, 64), (42, 128), (43, 64), (44, 64), (45, 0), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 16), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

Covered at level 19 : {45}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 51]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 51]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 64), (40, 64), (41, 64), (42, 128), (43, 64), (44, 64), (45, 0), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 16), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 64), (40, 64), (41, 64), (42, 128), (43, 64), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 16), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

Covered at level 19 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 51]


Solution : [0, 2, 1, 14, 12, 51] has cost 32.


Before backtrack at level 19
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47]
 solution : [0, 2, 1, 14, 12, 51]

After backtrack at level 19
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 51]


Invert decision for 51 at level 18


New level: 19
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 64), (40, 64), (41, 64), (42, 128), (43, 64), (44, 64), (45, -1), (46, 64), (47, 32), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 16), (55, 16), (56, 16), (57, 32), (58, 32), (59, 16), (60, 16), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12]


Solution : [0, 2, 1, 14, 12] has cost 22.


Decide in level 19 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 41, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 41 with phase True at level 19

After decision at level 19
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 41]


New level: 20
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 41]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 40, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 41]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 16), (40, 0), (41, -1), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 20 : {40}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 41]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 41]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 16), (40, 0), (41, -1), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 41]


Solution : [0, 2, 1, 14, 12, 41] has cost 32.


Before backtrack at level 20
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45]
 solution : [0, 2, 1, 14, 12, 41]

After backtrack at level 20
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 41]


Invert decision for 41 at level 19


New level: 20
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 64), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 16), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12]


Solution : [0, 2, 1, 14, 12] has cost 22.


Decide in level 20 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 9, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 9 with phase True at level 20

After decision at level 20
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 9]


New level: 21
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 9]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 4, 10, 56, 57, 58, 55, 6, 3, 5, 42, 35, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 9]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 128), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 0), (36, 16), (37, 32), (38, 32), (39, 4), (40, 128), (41, -1), (42, 8), (43, 16), (44, 16), (45, 128), (46, 16), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 8), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Covered at level 21 : {3, 4, 5, 6, 35, 10}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 9]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 9]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 128), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 0), (36, 16), (37, 32), (38, 32), (39, 4), (40, 128), (41, -1), (42, 8), (43, 16), (44, 16), (45, 128), (46, 16), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 8), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 128), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, -1), (36, 16), (37, 32), (38, 32), (39, 4), (40, 128), (41, -1), (42, 8), (43, 16), (44, 16), (45, 128), (46, 16), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 8), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

Covered at level 21 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 9]


Solution : [0, 2, 1, 14, 12, 9] has cost 28.


Before backtrack at level 21
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40]
 solution : [0, 2, 1, 14, 12, 9]

After backtrack at level 21
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 9]


Invert decision for 9 at level 20


New level: 21
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 128), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, -1), (36, 16), (37, 32), (38, 32), (39, 4), (40, 128), (41, -1), (42, 8), (43, 16), (44, 16), (45, 128), (46, 16), (47, 8), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 4), (55, 8), (56, 8), (57, 8), (58, 8), (59, 64), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12]


Solution : [0, 2, 1, 14, 12] has cost 22.


Decide in level 21 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 42, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 42 with phase True at level 21

After decision at level 21
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 42]


New level: 22
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 42]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 42]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 64), (35, 16), (36, 64), (37, 32), (38, 32), (39, 8), (40, 32), (41, -1), (42, -1), (43, 32), (44, 32), (45, 128), (46, 64), (47, 64), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 22 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 42]


Solution : [0, 2, 1, 14, 12, 42] has cost 32.


Before backtrack at level 22
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 42]

After backtrack at level 22
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 42]


Invert decision for 42 at level 21


New level: 22
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 64), (35, 16), (36, 64), (37, 32), (38, 32), (39, 8), (40, 32), (41, -1), (42, -1), (43, 32), (44, 32), (45, 128), (46, 64), (47, 64), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 22 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12]


Solution : [0, 2, 1, 14, 12] has cost 22.


Decide in level 22 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 17, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Decide 17 with phase True at level 22

After decision at level 22
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 17]


New level: 23
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 17]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 37, 38, 13, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 17]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, -1), (26, 64), (27, 64), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 32), (36, 64), (37, 32), (38, 32), (39, 64), (40, 128), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, 0), (38, 0), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 23 : {13, 37, 38}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 17]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 17]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, 0), (38, 0), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 17]


Solution : [0, 2, 1, 14, 12, 17] has cost 28.


Before backtrack at level 23
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 17]

After backtrack at level 23
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 37, 38, 13]
 solution : [0, 2, 1, 14, 12, 17]


Invert decision for 17 at level 22


New level: 23
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 37, 38, 13]
 solution : [0, 2, 1, 14, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 37, 38, 13]
 solution : [0, 2, 1, 14, 12]

Essensial at level 23 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, 0), (38, 0), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 23 : {37, 38}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 13]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 13]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, 0), (38, 0), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 23 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 13]


Solution : [0, 2, 1, 14, 12, 13] has cost 28.


Before backtrack at level 23
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35]
 solution : [0, 2, 1, 14, 12, 13]

After backtrack at level 23
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38]
 solution : [0, 2, 1, 14, 12]


Before backtrack at level 22
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38]
 solution : [0, 2, 1, 14, 12]

After backtrack at level 22
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17]
 solution : [0, 2, 1, 14, 12]


Before backtrack at level 21
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17]
 solution : [0, 2, 1, 14, 12]

After backtrack at level 21
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42]
 solution : [0, 2, 1, 14, 12]


Before backtrack at level 20
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42]
 solution : [0, 2, 1, 14, 12]

After backtrack at level 20
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9]
 solution : [0, 2, 1, 14, 12]


Before backtrack at level 19
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9]
 solution : [0, 2, 1, 14, 12]

After backtrack at level 19
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41]
 solution : [0, 2, 1, 14, 12]


Before backtrack at level 18
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41]
 solution : [0, 2, 1, 14, 12]

After backtrack at level 18
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51]
 solution : [0, 2, 1, 14, 12]


Before backtrack at level 17
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51]
 solution : [0, 2, 1, 14, 12]

After backtrack at level 17
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29]
 solution : [0, 2, 1, 14, 12]


Before backtrack at level 16
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29]
 solution : [0, 2, 1, 14, 12]

After backtrack at level 16
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 22, 25]
 solution : [0, 2, 1, 14, 12]


Invert decision for 12 at level 15


New level: 16
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 22, 25]
 solution : [0, 2, 1, 14]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 22, 25]
 solution : [0, 2, 1, 14]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16), (24, 8), (25, -1), (26, 16), (27, 16), (28, 16), (29, -1), (30, -1), (31, -1), (32, -1), (33, 16), (34, 16), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, 4), (41, -1), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25]
 solution : [0, 2, 1, 14, 22]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25]
 solution : [0, 2, 1, 14, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25]
 solution : [0, 2, 1, 14, 22]


Solution : [0, 2, 1, 14, 22] has cost 26.


Before backtrack at level 16
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25]
 solution : [0, 2, 1, 14, 22]

After backtrack at level 16
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22]
 solution : [0, 2, 1, 14]


Before backtrack at level 15
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22]
 solution : [0, 2, 1, 14]

After backtrack at level 15
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12]
 solution : [0, 2, 1, 14]


Before backtrack at level 14
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12]
 solution : [0, 2, 1, 14]

After backtrack at level 14
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16]
 solution : [0, 2, 1, 14]


Before backtrack at level 13
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16]
 solution : [0, 2, 1, 14]

After backtrack at level 13
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15]
 solution : [0, 2, 1, 14]


Before backtrack at level 12
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15]
 solution : [0, 2, 1, 14]

After backtrack at level 12
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30]
 solution : [0, 2, 1, 14]


Before backtrack at level 11
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30]
 solution : [0, 2, 1, 14]

After backtrack at level 11
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21]
 solution : [0, 2, 1, 14]


Before backtrack at level 10
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21]
 solution : [0, 2, 1, 14]

After backtrack at level 10
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7]
 solution : [0, 2, 1, 14]


Before backtrack at level 9
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7]
 solution : [0, 2, 1, 14]

After backtrack at level 9
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8]
 solution : [0, 2, 1, 14]


Before backtrack at level 8
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8]
 solution : [0, 2, 1, 14]

After backtrack at level 8
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20]
 solution : [0, 2, 1, 14]


Before backtrack at level 7
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20]
 solution : [0, 2, 1, 14]

After backtrack at level 7
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32]
 solution : [0, 2, 1, 14]


Before backtrack at level 6
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32]
 solution : [0, 2, 1, 14]

After backtrack at level 6
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31]
 solution : [0, 2, 1, 14]


Before backtrack at level 5
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31]
 solution : [0, 2, 1, 14]

After backtrack at level 5
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18]
 solution : [0, 2, 1, 14]


Before backtrack at level 4
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18]
 solution : [0, 2, 1, 14]

After backtrack at level 4
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1, 14]


Invert decision for 14 at level 3


New level: 4
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 64), (24, 128), (25, 128), (26, 64), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 32), (36, 128), (37, 32), (38, 32), (39, 64), (40, 128), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 64), (51, 128), (52, 64), (53, 64), (54, 64), (55, 32), (56, 64), (57, 32), (58, 32), (59, 64), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 512), (13, 256), (14, -1), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 4 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 12, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 512), (13, 256), (14, -1), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 12 with phase True at level 4

After decision at level 4
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1, 12]


New level: 5
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 22, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, 128), (7, 256), (8, 256), (9, 256), (10, 64), (11, -1), (12, 512), (13, 256), (14, -1), (15, 512), (16, 256), (17, 128), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 256), (35, 128), (36, 128), (37, 128), (38, 64), (39, 64), (40, 256), (41, 128), (42, 128), (43, 128), (44, 64), (45, 128), (46, 128), (47, 128), (48, 64), (49, 64), (50, 128), (51, 256), (52, 128), (53, 64), (54, 64), (55, 32), (56, 64), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 32), (21, 64), (22, 0), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 5 : {22}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 32), (21, 64), (22, 0), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]
 solution : [0, 2, 1, 12]


Solution : [0, 2, 1, 12] has cost 16.


Decide in level 5 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 32, 31, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 32, 31, 19]
 solution : [0, 2, 1, 12, 18]


New level: 6
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 32, 31, 19]
 solution : [0, 2, 1, 12, 18]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 39, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 32, 31, 19]
 solution : [0, 2, 1, 12, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, 512), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, 64), (20, 16), (21, 16), (22, -1), (23, 64), (24, 256), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 4), (31, 8), (32, 0), (33, 8), (34, 64), (35, 16), (36, 32), (37, 64), (38, 32), (39, 0), (40, 16), (41, 8), (42, 4), (43, 8), (44, 8), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, 32), (51, 64), (52, 64), (53, 32), (54, 16), (55, 32), (56, 32), (57, 32), (58, 16), (59, 128), (60, 64), (61, 64)]

Covered at level 6 : {32, 39}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19]
 solution : [0, 2, 1, 12, 18]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19]
 solution : [0, 2, 1, 12, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, 64), (20, 16), (21, 16), (22, -1), (23, 64), (24, 256), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 4), (31, 8), (32, 0), (33, 8), (34, 64), (35, 16), (36, 32), (37, 64), (38, 32), (39, 0), (40, 16), (41, 8), (42, 4), (43, 8), (44, 8), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, 32), (51, 64), (52, 64), (53, 32), (54, 16), (55, 32), (56, 32), (57, 32), (58, 16), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, 64), (20, 16), (21, 16), (22, -1), (23, 64), (24, 256), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 4), (31, 8), (32, -1), (33, 8), (34, 64), (35, 16), (36, 32), (37, 64), (38, 32), (39, -1), (40, 16), (41, 8), (42, 4), (43, 8), (44, 8), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, 32), (51, 64), (52, 64), (53, 32), (54, 16), (55, 32), (56, 32), (57, 32), (58, 16), (59, 128), (60, 64), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19]
 solution : [0, 2, 1, 12, 18]


Solution : [0, 2, 1, 12, 18] has cost 25.


Before backtrack at level 6
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19]
 solution : [0, 2, 1, 12, 18]

After backtrack at level 6
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19, 39, 32]
 solution : [0, 2, 1, 12, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19, 39, 32]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19, 39, 32]
 solution : [0, 2, 1, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, 64), (20, 16), (21, 16), (22, -1), (23, 64), (24, 256), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 4), (31, 8), (32, -1), (33, 8), (34, 64), (35, 16), (36, 32), (37, 64), (38, 32), (39, -1), (40, 16), (41, 8), (42, 4), (43, 8), (44, 8), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, 32), (51, 64), (52, 64), (53, 32), (54, 16), (55, 32), (56, 32), (57, 32), (58, 16), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19, 39, 32]
 solution : [0, 2, 1, 12]


Solution : [0, 2, 1, 12] has cost 16.


Decide in level 6 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 19, 39, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 39, 32]
 solution : [0, 2, 1, 12, 19]


New level: 7
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 39, 32]
 solution : [0, 2, 1, 12, 19]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 54, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 21, 7, 8, 20, 31, 39, 32]
 solution : [0, 2, 1, 12, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, 0), (22, -1), (23, 256), (24, 256), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 128), (31, 64), (32, 32), (33, 64), (34, 32), (35, 8), (36, 16), (37, 64), (38, 32), (39, 32), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 16), (46, 32), (47, 16), (48, 32), (49, 64), (50, 128), (51, 16), (52, 32), (53, 16), (54, 0), (55, 16), (56, 16), (57, 64), (58, 32), (59, 128), (60, 64), (61, 8)]

Covered at level 7 : {21, 54}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32]
 solution : [0, 2, 1, 12, 19]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32]
 solution : [0, 2, 1, 12, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, 0), (22, -1), (23, 256), (24, 256), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 128), (31, 64), (32, 32), (33, 64), (34, 32), (35, 8), (36, 16), (37, 64), (38, 32), (39, 32), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 16), (46, 32), (47, 16), (48, 32), (49, 64), (50, 128), (51, 16), (52, 32), (53, 16), (54, 0), (55, 16), (56, 16), (57, 64), (58, 32), (59, 128), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 256), (24, 256), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 128), (31, 64), (32, 32), (33, 64), (34, 32), (35, 8), (36, 16), (37, 64), (38, 32), (39, 32), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 16), (46, 32), (47, 16), (48, 32), (49, 64), (50, 128), (51, 16), (52, 32), (53, 16), (54, -1), (55, 16), (56, 16), (57, 64), (58, 32), (59, 128), (60, 64), (61, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32]
 solution : [0, 2, 1, 12, 19]


Solution : [0, 2, 1, 12, 19] has cost 25.


Before backtrack at level 7
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32]
 solution : [0, 2, 1, 12, 19]

After backtrack at level 7
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 256), (24, 256), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 128), (31, 64), (32, 32), (33, 64), (34, 32), (35, 8), (36, 16), (37, 64), (38, 32), (39, 32), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 16), (46, 32), (47, 16), (48, 32), (49, 64), (50, 128), (51, 16), (52, 32), (53, 16), (54, -1), (55, 16), (56, 16), (57, 64), (58, 32), (59, 128), (60, 64), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12]


Solution : [0, 2, 1, 12] has cost 16.


Decide in level 7 among pending : [34, 33, 36, 46, 43, 28, 27, 23, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [34, 33, 36, 46, 43, 28, 27, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 23]


New level: 8
 pending : [34, 33, 36, 46, 43, 28, 27, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 23]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 27, 49, 50, 26, 48, 52, 53, 44, 56, 57, 58, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, 256), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, 128), (25, 64), (26, 64), (27, 0), (28, 64), (29, 256), (30, 128), (31, 64), (32, 16), (33, 64), (34, 16), (35, 32), (36, 16), (37, 64), (38, 32), (39, 16), (40, 256), (41, 32), (42, 128), (43, 64), (44, 64), (45, 128), (46, 32), (47, 128), (48, 32), (49, 0), (50, 0), (51, 128), (52, 16), (53, 16), (54, 64), (55, 16), (56, 16), (57, 0), (58, 0), (59, 16), (60, 16), (61, 64)]

Covered at level 8 : {49, 50, 57, 58, 27}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 23]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, 128), (25, 64), (26, 64), (27, 0), (28, 64), (29, 256), (30, 128), (31, 64), (32, 16), (33, 64), (34, 16), (35, 32), (36, 16), (37, 64), (38, 32), (39, 16), (40, 256), (41, 32), (42, 128), (43, 64), (44, 64), (45, 128), (46, 32), (47, 128), (48, 32), (49, 0), (50, 0), (51, 128), (52, 16), (53, 16), (54, 64), (55, 16), (56, 16), (57, 0), (58, 0), (59, 16), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, 128), (25, 64), (26, 64), (27, -1), (28, 64), (29, 256), (30, 128), (31, 64), (32, 16), (33, 64), (34, 16), (35, 32), (36, 16), (37, 64), (38, 32), (39, 16), (40, 64), (41, 32), (42, 128), (43, 64), (44, 64), (45, 128), (46, 32), (47, 128), (48, 32), (49, -1), (50, -1), (51, 128), (52, 16), (53, 16), (54, 64), (55, 16), (56, 16), (57, -1), (58, -1), (59, 16), (60, 16), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 23]


Solution : [0, 2, 1, 12, 23] has cost 26.


Before backtrack at level 8
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21]
 solution : [0, 2, 1, 12, 23]

After backtrack at level 8
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, 128), (25, 64), (26, 64), (27, -1), (28, 64), (29, 256), (30, 128), (31, 64), (32, 16), (33, 64), (34, 16), (35, 32), (36, 16), (37, 64), (38, 32), (39, 16), (40, 64), (41, 32), (42, 128), (43, 64), (44, 64), (45, 128), (46, 32), (47, 128), (48, 32), (49, -1), (50, -1), (51, 128), (52, 16), (53, 16), (54, 64), (55, 16), (56, 16), (57, -1), (58, -1), (59, 16), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12]


Solution : [0, 2, 1, 12] has cost 16.


Decide in level 8 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 24, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 24]


New level: 9
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 24]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 59, 60, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 25, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, 256), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 0), (26, 128), (27, 64), (28, 128), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 8), (36, 32), (37, 16), (38, 8), (39, 64), (40, 64), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 0), (60, 0), (61, 16)]

Covered at level 9 : {25, 59, 60}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 24]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 0), (26, 128), (27, 64), (28, 128), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 8), (36, 32), (37, 16), (38, 8), (39, 64), (40, 64), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, 0), (60, 0), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, 128), (27, 64), (28, 128), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 8), (36, 32), (37, 16), (38, 8), (39, 64), (40, 64), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, -1), (60, -1), (61, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 24]


Solution : [0, 2, 1, 12, 24] has cost 26.


Before backtrack at level 9
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58]
 solution : [0, 2, 1, 12, 24]

After backtrack at level 9
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, 128), (27, 64), (28, 128), (29, 64), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 8), (36, 32), (37, 16), (38, 8), (39, 64), (40, 64), (41, 32), (42, 32), (43, 64), (44, 64), (45, 32), (46, 64), (47, 32), (48, 64), (49, 32), (50, 32), (51, 32), (52, 32), (53, 32), (54, 64), (55, 32), (56, 32), (57, 16), (58, 16), (59, -1), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12]


Solution : [0, 2, 1, 12] has cost 16.


Decide in level 9 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 40, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 40 with phase True at level 9

After decision at level 9
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 40]


New level: 10
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 40]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 41, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, 256), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 16), (33, 64), (34, 128), (35, 32), (36, 64), (37, 32), (38, 16), (39, 16), (40, -1), (41, 0), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 16), (59, 64), (60, 32), (61, 64)]

Covered at level 10 : {41}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 40]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 40]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 16), (33, 64), (34, 128), (35, 32), (36, 64), (37, 32), (38, 16), (39, 16), (40, -1), (41, 0), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 16), (59, 64), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 16), (33, 64), (34, 128), (35, 32), (36, 64), (37, 32), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 16), (59, 64), (60, 32), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 40]


Solution : [0, 2, 1, 12, 40] has cost 26.


Before backtrack at level 10
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25]
 solution : [0, 2, 1, 12, 40]

After backtrack at level 10
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 40]


Invert decision for 40 at level 9


New level: 10
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 32), (31, 64), (32, 16), (33, 64), (34, 128), (35, 32), (36, 64), (37, 32), (38, 16), (39, 16), (40, -1), (41, -1), (42, 32), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 32), (58, 16), (59, 64), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, -1), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12]


Solution : [0, 2, 1, 12] has cost 16.


Decide in level 10 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 13, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, -1), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]


New level: 11
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 37, 38, 17, 42, 9, 51, 29, 16, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, 256), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, 64), (38, 32), (39, 64), (40, -1), (41, 128), (42, 128), (43, 64), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 128), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 0), (17, 0), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, 0), (38, 0), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 11 : {16, 17, 37, 38}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 9, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 9, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 0), (17, 0), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, 0), (38, 0), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 9, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 11 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 9, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 9]


New level: 12
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 9]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 12 : {3, 4, 5, 6, 7, 8, 10, 15, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 12, 13, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 12, 13, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 12, 13, 9]


Solution : [0, 2, 1, 12, 13, 9] has cost 28.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 12, 13, 9]

After backtrack at level 12
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 12 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 29, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 29 with phase True at level 12

After decision at level 12
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 29]


New level: 13
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 29]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 61, 47, 45, 4, 10, 6, 3, 5, 35, 42, 51, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 16), (27, 32), (28, 16), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, 32), (43, 16), (44, 16), (45, 0), (46, 8), (47, 0), (48, 8), (49, 16), (50, 32), (51, 0), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, 0)]

Covered at level 13 : {51, 45, 61, 47}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 29]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 16), (27, 32), (28, 16), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, 32), (43, 16), (44, 16), (45, 0), (46, 8), (47, 0), (48, 8), (49, 16), (50, 32), (51, 0), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 16), (27, 32), (28, 16), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, 32), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 29]


Solution : [0, 2, 1, 12, 13, 29] has cost 32.


Before backtrack at level 13
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41]
 solution : [0, 2, 1, 12, 13, 29]

After backtrack at level 13
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 29]


Invert decision for 29 at level 12


New level: 13
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 16), (27, 32), (28, 16), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, 32), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 13 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 15, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 15]


New level: 14
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 15]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 14 : {3, 4, 5, 6, 7, 8, 10, 20, 21, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 12, 13, 15]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 12, 13, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 12, 13, 15]


Solution : [0, 2, 1, 12, 13, 15] has cost 28.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 12, 13, 15]

After backtrack at level 14
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 14 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 8, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 8 with phase True at level 14

After decision at level 14
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 8]


New level: 15
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 8]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 10, 6, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, 32), (6, 0), (7, 32), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 15 : {10, 6}

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 8]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, 32), (6, 0), (7, 32), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, 32), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 8]


Solution : [0, 2, 1, 12, 13, 8] has cost 27.


Before backtrack at level 15
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51]
 solution : [0, 2, 1, 12, 13, 8]

After backtrack at level 15
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 8]


Invert decision for 8 at level 14


New level: 15
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, 32), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 15 among pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 5, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 5]


New level: 16
 pending : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 5]


Before reduction : 
 pending  : [34, 33, 36, 46, 43, 28, 26, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 27, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 2), (27, 1), (28, 2), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 16 : {3, 4, 6, 7, 10, 20, 21, 25, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 5]


Before reduction : 
 pending  : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 2), (27, 1), (28, 2), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 5]


Solution : [0, 2, 1, 12, 13, 5] has cost 28.


Before backtrack at level 16
 pending : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 5]

After backtrack at level 16
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 16 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 42, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 42 with phase True at level 16

After decision at level 16
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 42]


New level: 17
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 42]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 30, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 41, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 42]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, 0), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, -1), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

Covered at level 17 : {41, 30}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 42]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 42]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, 0), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, -1), (41, 0), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 42]


Solution : [0, 2, 1, 12, 13, 42] has cost 32.


Before backtrack at level 17
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13, 42]

After backtrack at level 17
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 42]


Invert decision for 42 at level 16


New level: 17
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 4), (26, 32), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 8), (44, 8), (45, 1), (46, 16), (47, 64), (48, 16), (49, 16), (50, 32), (51, 1), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 4), (59, 8), (60, 4), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 17 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 7, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 7 with phase True at level 17

After decision at level 17
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 7]


New level: 18
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 7]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 2), (27, 1), (28, 2), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 18 : {3, 4, 6, 10, 20, 21, 25, 30, 31, 32, 33, 34, 35, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 7]


Before reduction : 
 pending  : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, 2), (27, 1), (28, 2), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 0), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 7]


Solution : [0, 2, 1, 12, 13, 7] has cost 28.


Before backtrack at level 18
 pending : [28, 26, 27]
 solution : [0, 2, 1, 12, 13, 7]

After backtrack at level 18
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 7]


Invert decision for 7 at level 17


New level: 18
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 18 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 47, 45, 51, 10, 6, 30, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 47 with phase True at level 18

After decision at level 18
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 47]


New level: 19
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 47]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 61, 45, 51, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 47]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, 128), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 32), (27, 32), (28, 32), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, -1), (43, 16), (44, 16), (45, 0), (46, 8), (47, -1), (48, 8), (49, 16), (50, 32), (51, 0), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, 0)]

Covered at level 19 : {51, 45, 61}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 47]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 47]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 32), (27, 32), (28, 32), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, -1), (43, 16), (44, 16), (45, 0), (46, 8), (47, -1), (48, 8), (49, 16), (50, 32), (51, 0), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 32), (27, 32), (28, 32), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, -1), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 47]


Solution : [0, 2, 1, 12, 13, 47] has cost 32.


Before backtrack at level 19
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41]
 solution : [0, 2, 1, 12, 13, 47]

After backtrack at level 19
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 47]


Invert decision for 47 at level 18


New level: 19
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 1), (22, -1), (23, -1), (24, -1), (25, 2), (26, 32), (27, 32), (28, 32), (29, -1), (30, 32), (31, 16), (32, 64), (33, 16), (34, 32), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 1), (42, -1), (43, 16), (44, 16), (45, -1), (46, 8), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 1), (55, 2), (56, 2), (57, 16), (58, 8), (59, 4), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13]


Solution : [0, 2, 1, 12, 13] has cost 22.


Decide in level 19 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 6, 30, 41, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Decide 6 with phase True at level 19

After decision at level 19
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 6]


New level: 20
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 6]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 10, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 20 : {10}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 6]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 6]


Solution : [0, 2, 1, 12, 13, 6] has cost 27.


Before backtrack at level 20
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 6]

After backtrack at level 20
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10]
 solution : [0, 2, 1, 12, 13, 6]


Invert decision for 6 at level 19


New level: 20
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10]
 solution : [0, 2, 1, 12, 13]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10]
 solution : [0, 2, 1, 12, 13]

Essensial at level 20 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 16), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 16), (35, 8), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 16), (51, 4), (52, 16), (53, 16), (54, 64), (55, 8), (56, 8), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 10]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

Covered at level 20 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 10]


Solution : [0, 2, 1, 12, 13, 10] has cost 24.


Before backtrack at level 20
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51]
 solution : [0, 2, 1, 12, 13, 10]

After backtrack at level 20
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 19
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 19
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 18
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 18
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 17
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 17
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 16
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 16
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 15
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 15
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 14
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 14
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 13
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 13
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 12
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 12
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29]
 solution : [0, 2, 1, 12, 13]


Before backtrack at level 11
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29]
 solution : [0, 2, 1, 12, 13]

After backtrack at level 11
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 37, 38, 17, 16, 9]
 solution : [0, 2, 1, 12, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 37, 38, 17, 16, 9]
 solution : [0, 2, 1, 12]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 37, 38, 17, 16, 9]
 solution : [0, 2, 1, 12]

Essensial at level 11 : {37}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, 32), (29, -1), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 16), (36, 16), (37, -1), (38, -1), (39, 64), (40, -1), (41, 4), (42, -1), (43, 16), (44, 16), (45, 4), (46, 16), (47, -1), (48, 16), (49, 16), (50, 32), (51, 4), (52, 32), (53, 16), (54, 64), (55, 8), (56, 8), (57, 16), (58, 8), (59, 16), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 32), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, -1), (38, 0), (39, 64), (40, -1), (41, 64), (42, 128), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

Covered at level 11 : {38}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9]
 solution : [0, 2, 1, 12, 37]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9]
 solution : [0, 2, 1, 12, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 32), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, -1), (38, 0), (39, 64), (40, -1), (41, 64), (42, 128), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 32), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, -1), (38, -1), (39, 64), (40, -1), (41, 64), (42, 128), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9]
 solution : [0, 2, 1, 12, 37]


Solution : [0, 2, 1, 12, 37] has cost 26.


Before backtrack at level 11
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9]
 solution : [0, 2, 1, 12, 37]

After backtrack at level 11
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38]
 solution : [0, 2, 1, 12]


Before backtrack at level 10
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38]
 solution : [0, 2, 1, 12]

After backtrack at level 10
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13]
 solution : [0, 2, 1, 12]


Before backtrack at level 9
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13]
 solution : [0, 2, 1, 12]

After backtrack at level 9
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40]
 solution : [0, 2, 1, 12]


Before backtrack at level 8
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40]
 solution : [0, 2, 1, 12]

After backtrack at level 8
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24]
 solution : [0, 2, 1, 12]


Before backtrack at level 7
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24]
 solution : [0, 2, 1, 12]

After backtrack at level 7
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24, 23]
 solution : [0, 2, 1, 12]


Before backtrack at level 6
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24, 23]
 solution : [0, 2, 1, 12]

After backtrack at level 6
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24, 23, 19]
 solution : [0, 2, 1, 12]


Before backtrack at level 5
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24, 23, 19]
 solution : [0, 2, 1, 12]

After backtrack at level 5
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24, 23, 19, 22, 18]
 solution : [0, 2, 1, 12]


Invert decision for 12 at level 4


New level: 5
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24, 23, 19, 22, 18]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 4, 3, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 10, 6, 47, 7, 42, 5, 8, 15, 29, 17, 16, 9, 37, 38, 13, 40, 24, 23, 19, 22, 18]
 solution : [0, 2, 1]

Essensial at level 5 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 64), (5, 128), (6, 128), (7, 128), (8, 256), (9, 256), (10, 64), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 128), (17, 128), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, -1), (24, -1), (25, 32), (26, 128), (27, 128), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 64), (34, 128), (35, 32), (36, 64), (37, -1), (38, -1), (39, 64), (40, -1), (41, 64), (42, 128), (43, 64), (44, 64), (45, 64), (46, 64), (47, 128), (48, 64), (49, 64), (50, 128), (51, 64), (52, 128), (53, 64), (54, 64), (55, 32), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, 512), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Covered at level 5 : {3, 4, 5, 6, 7, 8, 9, 10}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 19, 22, 18]
 solution : [0, 2, 1, 15]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 19, 22, 18]
 solution : [0, 2, 1, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, 512), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, 512), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 19, 22, 18]
 solution : [0, 2, 1, 15]


Solution : [0, 2, 1, 15] has cost 16.


Decide in level 5 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 19, 22, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, 512), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Decide 19 with phase True at level 5

After decision at level 5
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18]
 solution : [0, 2, 1, 15, 19]


New level: 6
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18]
 solution : [0, 2, 1, 15, 19]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 54, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18]
 solution : [0, 2, 1, 15, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, 512), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 256), (19, -1), (20, 8), (21, 16), (22, 32), (23, 64), (24, 128), (25, 64), (26, 16), (27, 32), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 32), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, 2), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 32), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, 64), (52, 8), (53, 4), (54, 0), (55, 4), (56, 8), (57, 16), (58, 8), (59, 64), (60, 32), (61, 4)]

Covered at level 6 : {54}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18]
 solution : [0, 2, 1, 15, 19]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18]
 solution : [0, 2, 1, 15, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 256), (19, -1), (20, 8), (21, 16), (22, 32), (23, 64), (24, 128), (25, 64), (26, 16), (27, 32), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 32), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, 2), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 32), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, 64), (52, 8), (53, 4), (54, 0), (55, 4), (56, 8), (57, 16), (58, 8), (59, 64), (60, 32), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 256), (19, -1), (20, 8), (21, 16), (22, 32), (23, 64), (24, 128), (25, 64), (26, 16), (27, 32), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 32), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, 2), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 32), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, 64), (52, 8), (53, 4), (54, -1), (55, 4), (56, 8), (57, 16), (58, 8), (59, 64), (60, 32), (61, 4)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18]
 solution : [0, 2, 1, 15, 19]


Solution : [0, 2, 1, 15, 19] has cost 25.


Before backtrack at level 6
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18]
 solution : [0, 2, 1, 15, 19]

After backtrack at level 6
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18, 54]
 solution : [0, 2, 1, 15, 19]


Invert decision for 19 at level 5


New level: 6
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18, 54]
 solution : [0, 2, 1, 15]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18, 54]
 solution : [0, 2, 1, 15]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 256), (19, -1), (20, 8), (21, 16), (22, 32), (23, 64), (24, 128), (25, 64), (26, 16), (27, 32), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 32), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, 2), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 32), (46, 16), (47, 8), (48, 8), (49, 16), (50, 32), (51, 64), (52, 8), (53, 4), (54, -1), (55, 4), (56, 8), (57, 16), (58, 8), (59, 64), (60, 32), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18, 54]
 solution : [0, 2, 1, 15]


Solution : [0, 2, 1, 15] has cost 16.


Decide in level 6 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 18, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54]
 solution : [0, 2, 1, 15, 18]


New level: 7
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54]
 solution : [0, 2, 1, 15, 18]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 39, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54]
 solution : [0, 2, 1, 15, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, 512), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, 16), (24, 128), (25, 64), (26, 16), (27, 8), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, 0), (40, 32), (41, 16), (42, 2), (43, 4), (44, 2), (45, 64), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, 128), (52, 16), (53, 8), (54, 1), (55, 8), (56, 16), (57, 8), (58, 4), (59, 64), (60, 32), (61, 8)]

Covered at level 7 : {39}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54]
 solution : [0, 2, 1, 15, 18]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54]
 solution : [0, 2, 1, 15, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, 16), (24, 128), (25, 64), (26, 16), (27, 8), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, 0), (40, 32), (41, 16), (42, 2), (43, 4), (44, 2), (45, 64), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, 128), (52, 16), (53, 8), (54, 1), (55, 8), (56, 16), (57, 8), (58, 4), (59, 64), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, 16), (24, 128), (25, 64), (26, 16), (27, 8), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, -1), (40, 32), (41, 16), (42, 2), (43, 4), (44, 2), (45, 64), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, 128), (52, 16), (53, 8), (54, 1), (55, 8), (56, 16), (57, 8), (58, 4), (59, 64), (60, 32), (61, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54]
 solution : [0, 2, 1, 15, 18]


Solution : [0, 2, 1, 15, 18] has cost 25.


Before backtrack at level 7
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54]
 solution : [0, 2, 1, 15, 18]

After backtrack at level 7
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]
 solution : [0, 2, 1, 15, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]
 solution : [0, 2, 1, 15]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]
 solution : [0, 2, 1, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, 16), (24, 128), (25, 64), (26, 16), (27, 8), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 8), (34, 32), (35, 2), (36, 16), (37, 128), (38, 64), (39, -1), (40, 32), (41, 16), (42, 2), (43, 4), (44, 2), (45, 64), (46, 16), (47, 8), (48, 8), (49, 4), (50, 8), (51, 128), (52, 16), (53, 8), (54, 1), (55, 8), (56, 16), (57, 8), (58, 4), (59, 64), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]
 solution : [0, 2, 1, 15]


Solution : [0, 2, 1, 15] has cost 16.


Decide in level 7 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 51, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Decide 51 with phase True at level 7

After decision at level 7
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]
 solution : [0, 2, 1, 15, 51]


New level: 8
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]
 solution : [0, 2, 1, 15, 51]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 35, 20, 31, 32, 21, 49, 50, 57, 58, 59, 60, 25, 30, 41, 61, 45, 47, 42, 29, 17, 16, 37, 38, 13, 40, 24, 23, 22, 54, 39]
 solution : [0, 2, 1, 15, 51]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, 256), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 2), (21, 0), (22, 8), (23, 64), (24, 64), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 64), (32, 16), (33, 32), (34, 32), (35, 0), (36, 16), (37, 64), (38, 32), (39, 2), (40, 128), (41, 64), (42, 2), (43, 32), (44, 16), (45, 0), (46, 16), (47, 0), (48, 8), (49, 16), (50, 32), (51, -1), (52, 16), (53, 8), (54, 0), (55, 2), (56, 4), (57, 16), (58, 8), (59, 8), (60, 4), (61, 0)]

Covered at level 8 : {35, 45, 47, 29, 21, 54, 61}

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39]
 solution : [0, 2, 1, 15, 51]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39]
 solution : [0, 2, 1, 15, 51]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 2), (21, 0), (22, 8), (23, 64), (24, 64), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 64), (32, 16), (33, 32), (34, 32), (35, 0), (36, 16), (37, 64), (38, 32), (39, 2), (40, 128), (41, 64), (42, 2), (43, 32), (44, 16), (45, 0), (46, 16), (47, 0), (48, 8), (49, 16), (50, 32), (51, -1), (52, 16), (53, 8), (54, 0), (55, 2), (56, 4), (57, 16), (58, 8), (59, 8), (60, 4), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 2), (21, -1), (22, 8), (23, 64), (24, 64), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 64), (32, 16), (33, 32), (34, 32), (35, -1), (36, 16), (37, 64), (38, 32), (39, 2), (40, 128), (41, 64), (42, 2), (43, 32), (44, 16), (45, -1), (46, 16), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 16), (53, 8), (54, -1), (55, 2), (56, 4), (57, 16), (58, 8), (59, 8), (60, 4), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39]
 solution : [0, 2, 1, 15, 51]


Solution : [0, 2, 1, 15, 51] has cost 26.


Before backtrack at level 8
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39]
 solution : [0, 2, 1, 15, 51]

After backtrack at level 8
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]
 solution : [0, 2, 1, 15, 51]


Invert decision for 51 at level 7


New level: 8
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]
 solution : [0, 2, 1, 15]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]
 solution : [0, 2, 1, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 2), (21, -1), (22, 8), (23, 64), (24, 64), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 64), (32, 16), (33, 32), (34, 32), (35, -1), (36, 16), (37, 64), (38, 32), (39, 2), (40, 128), (41, 64), (42, 2), (43, 32), (44, 16), (45, -1), (46, 16), (47, -1), (48, 8), (49, 16), (50, 32), (51, -1), (52, 16), (53, 8), (54, -1), (55, 2), (56, 4), (57, 16), (58, 8), (59, 8), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]
 solution : [0, 2, 1, 15]


Solution : [0, 2, 1, 15] has cost 16.


Decide in level 8 among pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 16, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

Decide 16 with phase True at level 8

After decision at level 8
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]
 solution : [0, 2, 1, 15, 16]


New level: 9
 pending : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]
 solution : [0, 2, 1, 15, 16]


Before reduction : 
 pending  : [28, 26, 27, 34, 33, 36, 46, 43, 48, 52, 53, 44, 56, 55, 20, 31, 32, 49, 50, 57, 58, 59, 60, 25, 30, 41, 42, 17, 37, 38, 13, 40, 24, 23, 22, 39, 35, 21, 61, 45, 47, 29, 54]
 solution : [0, 2, 1, 15, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 256), (17, 128), (18, -1), (19, -1), (20, 8), (21, 64), (22, 32), (23, 64), (24, 128), (25, 64), (26, 32), (27, 32), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 32), (34, 64), (35, 2), (36, 32), (37, 128), (38, 64), (39, 4), (40, 256), (41, 128), (42, 16), (43, 32), (44, 16), (45, 128), (46, 32), (47, 16), (48, 16), (49, 16), (50, 32), (51, -1), (52, 32), (53, 16), (54, 4), (55, 8), (56, 16), (57, 16), (58, 8), (59, 64), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 4), (24, 8), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 1), (35, 0), (36, 0), (37, 32), (38, 0), (39, 0), (40, 1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 2), (51, -1), (52, 1), (53, 0), (54, 0), (55, 0), (56, 0), (57, 2), (58, 0), (59, 2), (60, 0), (61, 0)]

Covered at level 9 : {17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 58, 60, 61}

After reduction : 
 pending  : [34, 52, 50, 57, 59, 37, 13, 40, 24, 23]
 solution : [0, 2, 1, 15, 16]


Before reduction : 
 pending  : [34, 52, 50, 57, 59, 37, 13, 40, 24, 23]
 solution : [0, 2, 1, 15, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 4), (24, 8), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 1), (35, 0), (36, 0), (37, 32), (38, 0), (39, 0), (40, 1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 2), (51, -1), (52, 1), (53, 0), (54, 0), (55, 0), (56, 0), (57, 2), (58, 0), (59, 2), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 8), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, -1), (36, -1), (37, 32), (38, -1), (39, -1), (40, 1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 2), (58, -1), (59, 2), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 52, 50, 57, 59, 37, 13, 40, 24, 23]
 solution : [0, 2, 1, 15, 16]


Solution : [0, 2, 1, 15, 16] has cost 22.


Decide in level 9 among pending : [34, 52, 50, 57, 59, 37, 13, 40, 24, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 8), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, -1), (36, -1), (37, 32), (38, -1), (39, -1), (40, 1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 2), (58, -1), (59, 2), (60, -1), (61, -1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [34, 52, 50, 57, 59, 37, 40, 24, 23]
 solution : [0, 2, 1, 15, 16, 13]


New level: 10
 pending : [34, 52, 50, 57, 59, 37, 40, 24, 23]
 solution : [0, 2, 1, 15, 16, 13]


Before reduction : 
 pending  : [34, 52, 50, 57, 59, 37, 40, 24, 23]
 solution : [0, 2, 1, 15, 16, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 64), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 8), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, -1), (36, -1), (37, 32), (38, -1), (39, -1), (40, 1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 2), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 2), (58, -1), (59, 2), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 0), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, -1), (57, 0), (58, -1), (59, 0), (60, -1), (61, -1)]

Covered at level 10 : {34, 37, 40, 50, 52, 23, 24, 57, 59}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 16, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 16, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, -1), (40, 0), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 0), (51, -1), (52, 0), (53, -1), (54, -1), (55, -1), (56, -1), (57, 0), (58, -1), (59, 0), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 16, 13]


Solution : [0, 2, 1, 15, 16, 13] has cost 28.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 15, 16, 13]

After backtrack at level 10
 pending : [34, 52, 50, 57, 59, 37, 40, 24, 23]
 solution : [0, 2, 1, 15, 16, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [34, 52, 50, 57, 59, 37, 40, 24, 23]
 solution : [0, 2, 1, 15, 16]


Before reduction : 
 pending  : [34, 52, 50, 57, 59, 37, 40, 24, 23]
 solution : [0, 2, 1, 15, 16]

Essensial at level 10 : {37}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, 1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 1), (58, -1), (59, 1), (60, -1), (61, -1)]

Covered at level 10 : {40}

After reduction : 
 pending  : [34, 52, 50, 57, 59, 24, 23]
 solution : [0, 2, 1, 15, 16, 37]


Before reduction : 
 pending  : [34, 52, 50, 57, 59, 24, 23]
 solution : [0, 2, 1, 15, 16, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, 1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 1), (58, -1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, 1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 1), (58, -1), (59, 1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 52, 50, 57, 59, 24, 23]
 solution : [0, 2, 1, 15, 16, 37]


Solution : [0, 2, 1, 15, 16, 37] has cost 32.


Before backtrack at level 10
 pending : [34, 52, 50, 57, 59, 24, 23]
 solution : [0, 2, 1, 15, 16, 37]

After backtrack at level 10
 pending : [34, 52, 50, 57, 59, 24, 23, 37, 40]
 solution : [0, 2, 1, 15, 16]


Before backtrack at level 9
 pending : [34, 52, 50, 57, 59, 24, 23, 37, 40]
 solution : [0, 2, 1, 15, 16]

After backtrack at level 9
 pending : [34, 52, 50, 57, 59, 24, 23, 37, 40, 28, 26, 27, 33, 36, 46, 43, 48, 53, 44, 56, 55, 20, 31, 32, 49, 58, 60, 25, 30, 41, 42, 17, 38, 22, 39, 35, 21, 61, 45, 47, 29, 54, 13]
 solution : [0, 2, 1, 15, 16]


Invert decision for 16 at level 8


New level: 9
 pending : [34, 52, 50, 57, 59, 24, 23, 37, 40, 28, 26, 27, 33, 36, 46, 43, 48, 53, 44, 56, 55, 20, 31, 32, 49, 58, 60, 25, 30, 41, 42, 17, 38, 22, 39, 35, 21, 61, 45, 47, 29, 54, 13]
 solution : [0, 2, 1, 15]


Before reduction : 
 pending  : [34, 52, 50, 57, 59, 24, 23, 37, 40, 28, 26, 27, 33, 36, 46, 43, 48, 53, 44, 56, 55, 20, 31, 32, 49, 58, 60, 25, 30, 41, 42, 17, 38, 22, 39, 35, 21, 61, 45, 47, 29, 54, 13]
 solution : [0, 2, 1, 15]

Essensial at level 9 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, 1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, 1), (51, -1), (52, 1), (53, -1), (54, -1), (55, -1), (56, -1), (57, 1), (58, -1), (59, 1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, 0), (24, 8), (25, 8), (26, 0), (27, 0), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 4), (41, 4), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, -1), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

Covered at level 9 : {33, 34, 36, 58, 39, 44, 48, 49, 50, 17, 52, 53, 55, 23, 54, 57, 26, 27}

After reduction : 
 pending  : [59, 24, 37, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]


Before reduction : 
 pending  : [59, 24, 37, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, 0), (24, 8), (25, 8), (26, 0), (27, 0), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 4), (41, 4), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, -1), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 4), (41, 4), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 9 : set()

After reduction : 
 pending  : [59, 24, 37, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]


Solution : [0, 2, 1, 15, 13] has cost 22.


Decide in level 9 among pending : [59, 24, 37, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 4), (41, 4), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 37]


New level: 10
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 37]


Before reduction : 
 pending  : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 4), (41, 4), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, -1), (58, -1), (59, 0), (60, 0), (61, 0)]

Covered at level 10 : {20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 38, 40, 41, 42, 43, 45, 46, 47, 56, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 37]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, -1), (58, -1), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 37]


Solution : [0, 2, 1, 15, 13, 37] has cost 32.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 15, 13, 37]

After backtrack at level 10
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]


Before reduction : 
 pending  : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, -1), (34, -1), (35, 2), (36, -1), (37, -1), (38, 32), (39, -1), (40, 4), (41, 4), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 10 : set()

After reduction : 
 pending  : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]


Solution : [0, 2, 1, 15, 13] has cost 22.


Decide in level 10 among pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 38, 22, 35, 21, 61, 45, 47, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, -1), (34, -1), (35, 2), (36, -1), (37, -1), (38, 32), (39, -1), (40, 4), (41, 4), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 38]


New level: 11
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 38]


Before reduction : 
 pending  : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 2), (22, 32), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, 2), (29, 2), (30, 4), (31, 4), (32, 4), (33, -1), (34, -1), (35, 2), (36, -1), (37, -1), (38, 32), (39, -1), (40, 4), (41, 4), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, -1), (58, -1), (59, 0), (60, 0), (61, 0)]

Covered at level 11 : {20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 45, 46, 47, 56, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 38]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, -1), (58, -1), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 38]


Solution : [0, 2, 1, 15, 13, 38] has cost 32.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 15, 13, 38]

After backtrack at level 11
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]


Before reduction : 
 pending  : [59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 22, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]

Essensial at level 11 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, -1), (58, -1), (59, 0), (60, 0), (61, 0)]

Covered at level 11 : {20, 21, 24, 25, 28, 29, 30, 31, 32, 35, 40, 41, 42, 43, 45, 46, 47, 56, 59, 60, 61}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 22]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1), (34, -1), (35, 0), (36, -1), (37, -1), (38, -1), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, 0), (57, -1), (58, -1), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 15, 13, 22]


Solution : [0, 2, 1, 15, 13, 22] has cost 32.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 15, 13, 22]

After backtrack at level 11
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]


Before backtrack at level 10
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29]
 solution : [0, 2, 1, 15, 13]

After backtrack at level 10
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38]
 solution : [0, 2, 1, 15, 13]


Before backtrack at level 9
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38]
 solution : [0, 2, 1, 15, 13]

After backtrack at level 9
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37]
 solution : [0, 2, 1, 15]


Before backtrack at level 8
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37]
 solution : [0, 2, 1, 15]

After backtrack at level 8
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16]
 solution : [0, 2, 1, 15]


Before backtrack at level 7
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16]
 solution : [0, 2, 1, 15]

After backtrack at level 7
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51]
 solution : [0, 2, 1, 15]


Before backtrack at level 6
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51]
 solution : [0, 2, 1, 15]

After backtrack at level 6
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18]
 solution : [0, 2, 1, 15]


Before backtrack at level 5
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18]
 solution : [0, 2, 1, 15]

After backtrack at level 5
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19]
 solution : [0, 2, 1]


Before backtrack at level 4
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19]
 solution : [0, 2, 1]

After backtrack at level 4
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12]
 solution : [0, 2, 1]


Before backtrack at level 3
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12]
 solution : [0, 2, 1]

After backtrack at level 3
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14]
 solution : [0, 2, 1]


Before backtrack at level 2
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14]
 solution : [0, 2, 1]

After backtrack at level 2
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 2 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 13, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 13 with phase True at level 2

After decision at level 2
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13]


New level: 3
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, 512), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 3 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 18, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 18 with phase True at level 3

After decision at level 3
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18]


New level: 4
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 39, 54, 37, 16, 51, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 0), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 4 : {39}

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 0), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 4 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 15, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 15 with phase True at level 4

After decision at level 4
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18, 15]


New level: 5
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18, 15]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 34, 52, 50, 57, 23, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 14, 11]
 solution : [0, 2, 13, 18, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 64), (9, 128), (10, 512), (11, 64), (12, 128), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 16), (21, 32), (22, 64), (23, 0), (24, 8), (25, 256), (26, 16), (27, 8), (28, 16), (29, 32), (30, 16), (31, 16), (32, 16), (33, 16), (34, 0), (35, 128), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 8), (51, 16), (52, 8), (53, 128), (54, 32), (55, 64), (56, 128), (57, 8), (58, 64), (59, 64), (60, 256), (61, 128)]

Covered at level 5 : {34, 14, 23}

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11]
 solution : [0, 2, 13, 18, 15]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11]
 solution : [0, 2, 13, 18, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 64), (9, 128), (10, 512), (11, 64), (12, 128), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 16), (21, 32), (22, 64), (23, 0), (24, 8), (25, 256), (26, 16), (27, 8), (28, 16), (29, 32), (30, 16), (31, 16), (32, 16), (33, 16), (34, 0), (35, 128), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 8), (51, 16), (52, 8), (53, 128), (54, 32), (55, 64), (56, 128), (57, 8), (58, 64), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 64), (9, 128), (10, 512), (11, 64), (12, 128), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 8), (28, 16), (29, 32), (30, 16), (31, 16), (32, 16), (33, 16), (34, -1), (35, 128), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 8), (51, 16), (52, 8), (53, 128), (54, 32), (55, 64), (56, 128), (57, 8), (58, 64), (59, 64), (60, 256), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11]
 solution : [0, 2, 13, 18, 15]


Solution : [0, 2, 13, 18, 15] has cost 28.


Before backtrack at level 5
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11]
 solution : [0, 2, 13, 18, 15]

After backtrack at level 5
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 15]


Invert decision for 15 at level 4


New level: 5
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 64), (9, 128), (10, 512), (11, 64), (12, 128), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 8), (28, 16), (29, 32), (30, 16), (31, 16), (32, 16), (33, 16), (34, -1), (35, 128), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 8), (51, 16), (52, 8), (53, 128), (54, 32), (55, 64), (56, 128), (57, 8), (58, 64), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 5 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 10, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 10 with phase True at level 5

After decision at level 5
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 10]


New level: 6
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 10]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 8), (45, 64), (46, 128), (47, 128), (48, 32), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 32), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 10]


Solution : [0, 2, 13, 18, 10] has cost 24.


Before backtrack at level 6
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 10]

After backtrack at level 6
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 10]


Invert decision for 10 at level 5


New level: 6
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 8), (45, 64), (46, 128), (47, 128), (48, 32), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 32), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 6 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 6, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 6]


New level: 7
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 6]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 16), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 6]


Solution : [0, 2, 13, 18, 6] has cost 27.


Before backtrack at level 7
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 6]

After backtrack at level 7
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 16), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 7 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 7, 5, 8, 9, 19, 12, 11, 34, 23, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 7]


New level: 8
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 7]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 50, 57, 26, 27, 33, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 3, 5, 8, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, 256), (6, -1), (7, -1), (8, 0), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 64), (21, 64), (22, 64), (23, 16), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 64), (30, 8), (31, 16), (32, 8), (33, 0), (34, 32), (35, 16), (36, 32), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, 0), (51, 64), (52, 4), (53, 128), (54, 16), (55, 32), (56, 32), (57, 0), (58, 16), (59, 16), (60, 256), (61, 64)]

Covered at level 8 : {33, 3, 8, 50, 57}

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 7]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, 256), (6, -1), (7, -1), (8, 0), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 64), (21, 64), (22, 64), (23, 16), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 64), (30, 8), (31, 16), (32, 8), (33, 0), (34, 32), (35, 16), (36, 32), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, 0), (51, 64), (52, 4), (53, 128), (54, 16), (55, 32), (56, 32), (57, 0), (58, 16), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 64), (21, 64), (22, 64), (23, 16), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 64), (30, 8), (31, 16), (32, 8), (33, -1), (34, 32), (35, 16), (36, 32), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, -1), (51, 64), (52, 4), (53, 128), (54, 16), (55, 32), (56, 32), (57, -1), (58, 16), (59, 16), (60, 256), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 7]


Solution : [0, 2, 13, 18, 7] has cost 28.


Before backtrack at level 8
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14]
 solution : [0, 2, 13, 18, 7]

After backtrack at level 8
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 64), (21, 64), (22, 64), (23, 16), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 64), (30, 8), (31, 16), (32, 8), (33, -1), (34, 32), (35, 16), (36, 32), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 32), (47, 64), (48, 32), (49, 16), (50, -1), (51, 64), (52, 4), (53, 128), (54, 16), (55, 32), (56, 32), (57, -1), (58, 16), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 8 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 5, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 5]


New level: 9
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 5]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 48, 53, 44, 55, 49, 58, 17, 54, 37, 16, 51, 4, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, -1), (8, 512), (9, 128), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 8), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, 0), (45, 16), (46, 32), (47, 32), (48, 0), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, 0), (56, 32), (57, 16), (58, 16), (59, 128), (60, 256), (61, 32)]

Covered at level 9 : {48, 44, 4, 55}

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 5]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, -1), (8, 512), (9, 128), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 8), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, 0), (45, 16), (46, 32), (47, 32), (48, 0), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, 0), (56, 32), (57, 16), (58, 16), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, 128), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 8), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, -1), (45, 16), (46, 32), (47, 32), (48, -1), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, -1), (56, 32), (57, 16), (58, 16), (59, 128), (60, 256), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 5]


Solution : [0, 2, 13, 18, 5] has cost 28.


Before backtrack at level 9
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8]
 solution : [0, 2, 13, 18, 5]

After backtrack at level 9
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 512), (9, 128), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 8), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, -1), (45, 16), (46, 32), (47, 32), (48, -1), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, -1), (56, 32), (57, 16), (58, 16), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 9 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 9, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 9]


New level: 10
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 9]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 52, 26, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 0), (27, 16), (28, 32), (29, 32), (30, 32), (31, 64), (32, 32), (33, 8), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 128), (47, 128), (48, 32), (49, 64), (50, 16), (51, 64), (52, 0), (53, 32), (54, 1), (55, 32), (56, 128), (57, 16), (58, 64), (59, 32), (60, 256), (61, 128)]

Covered at level 10 : {26, 52}

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 9]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 0), (27, 16), (28, 32), (29, 32), (30, 32), (31, 64), (32, 32), (33, 8), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 128), (47, 128), (48, 32), (49, 64), (50, 16), (51, 64), (52, 0), (53, 32), (54, 1), (55, 32), (56, 128), (57, 16), (58, 64), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, -1), (27, 16), (28, 32), (29, 32), (30, 32), (31, 64), (32, 32), (33, 8), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 128), (47, 128), (48, 32), (49, 64), (50, 16), (51, 64), (52, -1), (53, 32), (54, 1), (55, 32), (56, 128), (57, 16), (58, 64), (59, 32), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 9]


Solution : [0, 2, 13, 18, 9] has cost 28.


Before backtrack at level 10
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4]
 solution : [0, 2, 13, 18, 9]

After backtrack at level 10
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, -1), (27, 16), (28, 32), (29, 32), (30, 32), (31, 64), (32, 32), (33, 8), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 8), (43, 8), (44, 4), (45, 64), (46, 128), (47, 128), (48, 32), (49, 64), (50, 16), (51, 64), (52, -1), (53, 32), (54, 1), (55, 32), (56, 128), (57, 16), (58, 64), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 10 among pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 12, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 12]


New level: 11
 pending : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 12]


Before reduction : 
 pending  : [22, 59, 24, 40, 28, 46, 43, 56, 20, 31, 32, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 37, 16, 51, 19, 11, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, 256), (18, -1), (19, 64), (20, 16), (21, 16), (22, 0), (23, 16), (24, 8), (25, 256), (26, 64), (27, 64), (28, 32), (29, 128), (30, 2), (31, 4), (32, 0), (33, 8), (34, 16), (35, 32), (36, 64), (37, 0), (38, 32), (39, -1), (40, 0), (41, 8), (42, 4), (43, 8), (44, 16), (45, 64), (46, 32), (47, 128), (48, 64), (49, 64), (50, 16), (51, 2), (52, 32), (53, 128), (54, 32), (55, 64), (56, 32), (57, 16), (58, 64), (59, 16), (60, 256), (61, 128)]

Covered at level 11 : {32, 37, 40, 11, 22}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 12]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, 256), (18, -1), (19, 64), (20, 16), (21, 16), (22, 0), (23, 16), (24, 8), (25, 256), (26, 64), (27, 64), (28, 32), (29, 128), (30, 2), (31, 4), (32, 0), (33, 8), (34, 16), (35, 32), (36, 64), (37, 0), (38, 32), (39, -1), (40, 0), (41, 8), (42, 4), (43, 8), (44, 16), (45, 64), (46, 32), (47, 128), (48, 64), (49, 64), (50, 16), (51, 2), (52, 32), (53, 128), (54, 32), (55, 64), (56, 32), (57, 16), (58, 64), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, 256), (18, -1), (19, 64), (20, 16), (21, 16), (22, -1), (23, 16), (24, 8), (25, 256), (26, 64), (27, 64), (28, 32), (29, 128), (30, 2), (31, 4), (32, -1), (33, 8), (34, 16), (35, 32), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 8), (42, 4), (43, 8), (44, 16), (45, 64), (46, 32), (47, 128), (48, 64), (49, 64), (50, 16), (51, 2), (52, 32), (53, 128), (54, 32), (55, 64), (56, 32), (57, 16), (58, 64), (59, 16), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 12]


Solution : [0, 2, 13, 18, 12] has cost 28.


Before backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26]
 solution : [0, 2, 13, 18, 12]

After backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, 256), (18, -1), (19, 64), (20, 16), (21, 16), (22, -1), (23, 16), (24, 8), (25, 256), (26, 64), (27, 64), (28, 32), (29, 128), (30, 2), (31, 4), (32, -1), (33, 8), (34, 16), (35, 32), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 8), (42, 4), (43, 8), (44, 16), (45, 64), (46, 32), (47, 128), (48, 64), (49, 64), (50, 16), (51, 2), (52, 32), (53, 128), (54, 32), (55, 64), (56, 32), (57, 16), (58, 64), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18]


Solution : [0, 2, 13, 18] has cost 22.


Decide in level 11 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 8, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 8]


New level: 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 8]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 64), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 128), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 16), (51, 64), (52, 32), (53, 128), (54, 32), (55, 64), (56, 128), (57, 16), (58, 64), (59, 64), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 8]


Solution : [0, 2, 13, 18, 8] has cost 27.


Before backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 8]

After backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 48, 44, 55, 4, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18]

Essensial at level 12 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 128), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 64), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 32), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 16), (43, 32), (44, 16), (45, 64), (46, 128), (47, 128), (48, 64), (49, 64), (50, 16), (51, 64), (52, 32), (53, 128), (54, 32), (55, 64), (56, 128), (57, 16), (58, 64), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 16), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, 0), (45, 8), (46, 32), (47, 16), (48, 0), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, 0), (56, 32), (57, 16), (58, 16), (59, 64), (60, 128), (61, 16)]

Covered at level 12 : {48, 44, 55}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 4]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 16), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, 0), (45, 8), (46, 32), (47, 16), (48, 0), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, 0), (56, 32), (57, 16), (58, 16), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 16), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, -1), (45, 8), (46, 32), (47, 16), (48, -1), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, -1), (56, 32), (57, 16), (58, 16), (59, 64), (60, 128), (61, 16)]

Covered at level 12 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 4]


Solution : [0, 2, 13, 18, 4] has cost 31.


Before backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11]
 solution : [0, 2, 13, 18, 4]

After backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55]
 solution : [0, 2, 13, 18]


Before backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55]
 solution : [0, 2, 13, 18]

After backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8]
 solution : [0, 2, 13, 18]


Before backtrack at level 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8]
 solution : [0, 2, 13, 18]

After backtrack at level 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12]
 solution : [0, 2, 13, 18]


Before backtrack at level 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12]
 solution : [0, 2, 13, 18]

After backtrack at level 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9]
 solution : [0, 2, 13, 18]


Before backtrack at level 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9]
 solution : [0, 2, 13, 18]

After backtrack at level 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5]
 solution : [0, 2, 13, 18]


Before backtrack at level 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5]
 solution : [0, 2, 13, 18]

After backtrack at level 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7]
 solution : [0, 2, 13, 18]


Before backtrack at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7]
 solution : [0, 2, 13, 18]

After backtrack at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6]
 solution : [0, 2, 13, 18]


Before backtrack at level 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6]
 solution : [0, 2, 13, 18]

After backtrack at level 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10]
 solution : [0, 2, 13, 18]


Before backtrack at level 4
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10]
 solution : [0, 2, 13, 18]

After backtrack at level 4
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 18]


Invert decision for 18 at level 3


New level: 4
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 32), (24, 128), (25, 256), (26, 16), (27, 64), (28, 128), (29, 128), (30, 32), (31, 64), (32, 32), (33, 8), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, -1), (40, 8), (41, 32), (42, 2), (43, 4), (44, -1), (45, 8), (46, 32), (47, 16), (48, -1), (49, 16), (50, 16), (51, 64), (52, 16), (53, 16), (54, 2), (55, -1), (56, 32), (57, 16), (58, 16), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 4 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 19, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 19 with phase True at level 4

After decision at level 4
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]


New level: 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 54, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, 0), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 5 : {54}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, 0), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 5 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 8, 12, 9, 5, 7, 6, 10, 39, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 8 with phase True at level 5

After decision at level 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 8]


New level: 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 8]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 128), (7, 256), (8, -1), (9, 256), (10, 512), (11, 256), (12, 512), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 64), (51, 32), (52, 16), (53, 64), (54, -1), (55, 32), (56, 64), (57, 32), (58, 128), (59, 64), (60, 256), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 8]


Solution : [0, 2, 13, 19, 8] has cost 27.


Before backtrack at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 8]

After backtrack at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 8]


Invert decision for 8 at level 5


New level: 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 128), (7, 256), (8, -1), (9, 256), (10, 512), (11, 256), (12, 512), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 64), (51, 32), (52, 16), (53, 64), (54, -1), (55, 32), (56, 64), (57, 32), (58, 128), (59, 64), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 6 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 12, 9, 5, 7, 6, 10, 39, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 12]


New level: 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 12]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 21, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 51, 34, 23, 14, 50, 57, 33, 3, 52, 26, 22, 40, 32, 37, 11, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 0), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 0), (22, 0), (23, 64), (24, 4), (25, 256), (26, 64), (27, 256), (28, 32), (29, 16), (30, 128), (31, 32), (32, 32), (33, 64), (34, 8), (35, 16), (36, 32), (37, 0), (38, 32), (39, 64), (40, 2), (41, 256), (42, 256), (43, 64), (44, 128), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 0), (52, 16), (53, 64), (54, -1), (55, 32), (56, 16), (57, 32), (58, 128), (59, 8), (60, 256), (61, 8)]

Covered at level 7 : {37, 11, 51, 21, 22}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 12]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, 0), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 0), (22, 0), (23, 64), (24, 4), (25, 256), (26, 64), (27, 256), (28, 32), (29, 16), (30, 128), (31, 32), (32, 32), (33, 64), (34, 8), (35, 16), (36, 32), (37, 0), (38, 32), (39, 64), (40, 2), (41, 256), (42, 256), (43, 64), (44, 128), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, 0), (52, 16), (53, 64), (54, -1), (55, 32), (56, 16), (57, 32), (58, 128), (59, 8), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, -1), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 64), (24, 4), (25, 256), (26, 64), (27, 256), (28, 32), (29, 16), (30, 128), (31, 32), (32, 32), (33, 64), (34, 8), (35, 16), (36, 32), (37, -1), (38, 32), (39, 64), (40, 2), (41, 256), (42, 256), (43, 64), (44, 128), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, -1), (52, 16), (53, 64), (54, -1), (55, 32), (56, 16), (57, 32), (58, 128), (59, 8), (60, 256), (61, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 12]


Solution : [0, 2, 13, 19, 12] has cost 28.


Before backtrack at level 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15]
 solution : [0, 2, 13, 19, 12]

After backtrack at level 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 512), (10, 512), (11, -1), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, 64), (24, 4), (25, 256), (26, 64), (27, 256), (28, 32), (29, 16), (30, 128), (31, 32), (32, 32), (33, 64), (34, 8), (35, 16), (36, 32), (37, -1), (38, 32), (39, 64), (40, 2), (41, 256), (42, 256), (43, 64), (44, 128), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 64), (51, -1), (52, 16), (53, 64), (54, -1), (55, 32), (56, 16), (57, 32), (58, 128), (59, 8), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 7 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 9, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 9]


New level: 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 9]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 52, 26, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, -1), (9, -1), (10, 128), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 32), (46, 128), (47, 64), (48, 32), (49, 256), (50, 64), (51, 32), (52, 0), (53, 16), (54, -1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 32)]

Covered at level 8 : {26, 52}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 9]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, -1), (9, -1), (10, 128), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 32), (46, 128), (47, 64), (48, 32), (49, 256), (50, 64), (51, 32), (52, 0), (53, 16), (54, -1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, -1), (9, -1), (10, 128), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 32), (46, 128), (47, 64), (48, 32), (49, 256), (50, 64), (51, 32), (52, -1), (53, 16), (54, -1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 9]


Solution : [0, 2, 13, 19, 9] has cost 28.


Before backtrack at level 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11]
 solution : [0, 2, 13, 19, 9]

After backtrack at level 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, -1), (9, -1), (10, 128), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 64), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 32), (46, 128), (47, 64), (48, 32), (49, 256), (50, 64), (51, 32), (52, -1), (53, 16), (54, -1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 8 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 5, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 5]


New level: 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 5]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 4, 48, 44, 55, 7, 6, 10, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, 16), (7, 256), (8, -1), (9, -1), (10, 0), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 4), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 16), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, 0), (45, 8), (46, 32), (47, 16), (48, 0), (49, 64), (50, 64), (51, 32), (52, 8), (53, 8), (54, -1), (55, 0), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

Covered at level 9 : {4, 10, 44, 48, 55}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 5]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, 16), (7, 256), (8, -1), (9, -1), (10, 0), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 4), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 16), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, 0), (45, 8), (46, 32), (47, 16), (48, 0), (49, 64), (50, 64), (51, 32), (52, 8), (53, 8), (54, -1), (55, 0), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 16), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 4), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 16), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 8), (46, 32), (47, 16), (48, -1), (49, 64), (50, 64), (51, 32), (52, 8), (53, 8), (54, -1), (55, -1), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 5]


Solution : [0, 2, 13, 19, 5] has cost 28.


Before backtrack at level 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26]
 solution : [0, 2, 13, 19, 5]

After backtrack at level 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 16), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 4), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 16), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 8), (46, 32), (47, 16), (48, -1), (49, 64), (50, 64), (51, 32), (52, 8), (53, 8), (54, -1), (55, -1), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, 512), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 9 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 7, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, 512), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 7]


New level: 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 7]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 50, 57, 33, 3, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 52, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, 512), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 128), (29, 64), (30, 32), (31, 64), (32, 32), (33, 0), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 8), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 32), (46, 32), (47, 32), (48, 32), (49, 64), (50, 0), (51, 32), (52, 0), (53, 16), (54, -1), (55, 16), (56, 16), (57, 0), (58, 32), (59, 4), (60, 256), (61, 16)]

Covered at level 10 : {33, 3, 50, 52, 57}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 7]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 128), (29, 64), (30, 32), (31, 64), (32, 32), (33, 0), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 8), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 32), (46, 32), (47, 32), (48, 32), (49, 64), (50, 0), (51, 32), (52, 0), (53, 16), (54, -1), (55, 16), (56, 16), (57, 0), (58, 32), (59, 4), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 128), (29, 64), (30, 32), (31, 64), (32, 32), (33, -1), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 8), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 32), (46, 32), (47, 32), (48, 32), (49, 64), (50, -1), (51, 32), (52, -1), (53, 16), (54, -1), (55, 16), (56, 16), (57, -1), (58, 32), (59, 4), (60, 256), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 7]


Solution : [0, 2, 13, 19, 7] has cost 28.


Before backtrack at level 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10]
 solution : [0, 2, 13, 19, 7]

After backtrack at level 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 128), (29, 64), (30, 32), (31, 64), (32, 32), (33, -1), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 8), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 32), (46, 32), (47, 32), (48, 32), (49, 64), (50, -1), (51, 32), (52, -1), (53, 16), (54, -1), (55, 16), (56, 16), (57, -1), (58, 32), (59, 4), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 10 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 6, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 6]


New level: 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 6]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 6]


Solution : [0, 2, 13, 19, 6] has cost 27.


Before backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 6]

After backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 11 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 15, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 15]


New level: 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 15]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 34, 23, 14, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 64), (12, -1), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, 0), (24, 8), (25, 256), (26, 16), (27, 32), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 0), (35, 128), (36, 32), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 16), (51, 8), (52, 2), (53, 64), (54, -1), (55, 32), (56, 64), (57, 8), (58, 128), (59, 64), (60, 256), (61, 32)]

Covered at level 12 : {34, 14, 23}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 15]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 64), (12, -1), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, 0), (24, 8), (25, 256), (26, 16), (27, 32), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, 0), (35, 128), (36, 32), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 16), (51, 8), (52, 2), (53, 64), (54, -1), (55, 32), (56, 64), (57, 8), (58, 128), (59, 64), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 64), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 32), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 32), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 16), (51, 8), (52, 2), (53, 64), (54, -1), (55, 32), (56, 64), (57, 8), (58, 128), (59, 64), (60, 256), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 15]


Solution : [0, 2, 13, 19, 15] has cost 28.


Before backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52]
 solution : [0, 2, 13, 19, 15]

After backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 64), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 32), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 32), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 16), (51, 8), (52, 2), (53, 64), (54, -1), (55, 32), (56, 64), (57, 8), (58, 128), (59, 64), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19]


Solution : [0, 2, 13, 19] has cost 22.


Decide in level 12 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 10, 50, 57, 33, 3, 52, 34, 23, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 10]


New level: 13
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 10]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 32), (46, 128), (47, 64), (48, 64), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 32), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 32), (46, 128), (47, 64), (48, 32), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 16), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 10]


Solution : [0, 2, 13, 19, 10] has cost 24.


Before backtrack at level 13
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 10]

After backtrack at level 13
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 4, 48, 44, 55, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19]

Essensial at level 13 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 32), (46, 128), (47, 64), (48, 32), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 16), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 256), (44, 16), (45, 32), (46, 128), (47, 64), (48, 16), (49, 256), (50, 128), (51, 32), (52, 8), (53, 8), (54, -1), (55, 0), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

Covered at level 13 : {55}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 4]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 256), (44, 16), (45, 32), (46, 128), (47, 64), (48, 16), (49, 256), (50, 128), (51, 32), (52, 8), (53, 8), (54, -1), (55, 0), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 256), (44, 16), (45, 32), (46, 128), (47, 64), (48, 16), (49, 256), (50, 128), (51, 32), (52, 8), (53, 8), (54, -1), (55, -1), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 4]


Solution : [0, 2, 13, 19, 4] has cost 31.


Before backtrack at level 13
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14]
 solution : [0, 2, 13, 19, 4]

After backtrack at level 13
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55]
 solution : [0, 2, 13, 19]


Before backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55]
 solution : [0, 2, 13, 19]

After backtrack at level 12
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10]
 solution : [0, 2, 13, 19]


Before backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10]
 solution : [0, 2, 13, 19]

After backtrack at level 11
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15]
 solution : [0, 2, 13, 19]


Before backtrack at level 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15]
 solution : [0, 2, 13, 19]

After backtrack at level 10
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6]
 solution : [0, 2, 13, 19]


Before backtrack at level 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6]
 solution : [0, 2, 13, 19]

After backtrack at level 9
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7]
 solution : [0, 2, 13, 19]


Before backtrack at level 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7]
 solution : [0, 2, 13, 19]

After backtrack at level 8
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5]
 solution : [0, 2, 13, 19]


Before backtrack at level 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5]
 solution : [0, 2, 13, 19]

After backtrack at level 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9]
 solution : [0, 2, 13, 19]


Before backtrack at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9]
 solution : [0, 2, 13, 19]

After backtrack at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9, 12]
 solution : [0, 2, 13, 19]


Before backtrack at level 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9, 12]
 solution : [0, 2, 13, 19]

After backtrack at level 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 19]


Invert decision for 19 at level 4


New level: 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 64), (35, 128), (36, 128), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 256), (44, 16), (45, 32), (46, 128), (47, 64), (48, 16), (49, 256), (50, 128), (51, 32), (52, 8), (53, 8), (54, -1), (55, -1), (56, 16), (57, 32), (58, 32), (59, 64), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 5 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 10, 15, 6, 7, 5, 9, 12, 54, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 10 with phase True at level 5

After decision at level 5
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10]


New level: 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 15, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10]


Solution : [0, 2, 13, 10] has cost 15.


Decide in level 6 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 15, 6, 7, 5, 9, 12, 54, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15]


New level: 7
 pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 34, 23, 14, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 128), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, 0), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 0), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 7 : {34, 14, 23}

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 128), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, 0), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 0), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 128), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 7 among pending : [59, 24, 28, 46, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 4, 55, 6, 7, 5, 9, 12, 54, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 128), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 46 with phase True at level 7

After decision at level 7
 pending : [59, 24, 28, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15, 46]


New level: 8
 pending : [59, 24, 28, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15, 46]


Before reduction : 
 pending  : [59, 24, 28, 43, 56, 20, 31, 60, 25, 30, 41, 42, 35, 61, 45, 47, 29, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 39, 21, 51, 22, 37, 11, 26, 48, 44, 50, 57, 33, 3, 52, 4, 55, 6, 7, 5, 9, 12, 54, 8]
 solution : [0, 2, 13, 10, 15, 46]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 128), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 128), (7, 256), (8, 64), (9, 4), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 4), (21, 0), (22, 32), (23, -1), (24, 2), (25, 256), (26, 0), (27, 2), (28, 0), (29, 0), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 1), (37, 16), (38, 128), (39, 0), (40, 1), (41, 256), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, 0), (48, 0), (49, 256), (50, 8), (51, 0), (52, 1), (53, 256), (54, 0), (55, 0), (56, 0), (57, 4), (58, 128), (59, 64), (60, 256), (61, 0)]

Covered at level 8 : {39, 42, 43, 44, 45, 47, 48, 29, 51, 21, 54, 55, 56, 26, 28, 61}

After reduction : 
 pending  : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8]
 solution : [0, 2, 13, 10, 15, 46]


Before reduction : 
 pending  : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8]
 solution : [0, 2, 13, 10, 15, 46]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 128), (7, 256), (8, 64), (9, 4), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 4), (21, 0), (22, 32), (23, -1), (24, 2), (25, 256), (26, 0), (27, 2), (28, 0), (29, 0), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 1), (37, 16), (38, 128), (39, 0), (40, 1), (41, 256), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, 0), (48, 0), (49, 256), (50, 8), (51, 0), (52, 1), (53, 256), (54, 0), (55, 0), (56, 0), (57, 4), (58, 128), (59, 64), (60, 256), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 128), (7, 256), (8, 64), (9, 4), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 32), (23, -1), (24, 2), (25, 256), (26, -1), (27, 2), (28, -1), (29, -1), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 1), (37, 16), (38, 128), (39, -1), (40, 1), (41, 256), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 256), (50, 8), (51, -1), (52, 1), (53, 128), (54, -1), (55, -1), (56, -1), (57, 4), (58, 128), (59, 4), (60, 64), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8]
 solution : [0, 2, 13, 10, 15, 46]


Solution : [0, 2, 13, 10, 15, 46] has cost 31.


Before backtrack at level 8
 pending : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8]
 solution : [0, 2, 13, 10, 15, 46]

After backtrack at level 8
 pending : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]
 solution : [0, 2, 13, 10, 15, 46]


Invert decision for 46 at level 7


New level: 8
 pending : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]
 solution : [0, 2, 13, 10, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 128), (7, 256), (8, 64), (9, 4), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 32), (23, -1), (24, 2), (25, 256), (26, -1), (27, 2), (28, -1), (29, -1), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 1), (37, 16), (38, 128), (39, -1), (40, 1), (41, 256), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 256), (50, 8), (51, -1), (52, 1), (53, 128), (54, -1), (55, -1), (56, -1), (57, 4), (58, 128), (59, 4), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 8 among pending : [59, 24, 20, 31, 60, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 60 with phase True at level 8

After decision at level 8
 pending : [59, 24, 20, 31, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]
 solution : [0, 2, 13, 10, 15, 60]


New level: 9
 pending : [59, 24, 20, 31, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]
 solution : [0, 2, 13, 10, 15, 60]


Before reduction : 
 pending  : [59, 24, 20, 31, 25, 30, 41, 35, 38, 27, 36, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 28, 43, 56, 42, 61, 45, 47, 29, 39, 21, 51, 26, 48, 44, 55, 54]
 solution : [0, 2, 13, 10, 15, 60]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 128), (7, 256), (8, 64), (9, 32), (10, -1), (11, 64), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 32), (7, 256), (8, 64), (9, 8), (10, -1), (11, 8), (12, 16), (13, -1), (14, -1), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 4), (21, 0), (22, 16), (23, -1), (24, 2), (25, 64), (26, 0), (27, 0), (28, 0), (29, 0), (30, 16), (31, 16), (32, 16), (33, 1), (34, -1), (35, 0), (36, 0), (37, 8), (38, 32), (39, 0), (40, 1), (41, 32), (42, 1), (43, 2), (44, 2), (45, 0), (46, -1), (47, 2), (48, 16), (49, 2), (50, 2), (51, 0), (52, 1), (53, 1), (54, 0), (55, 16), (56, 128), (57, 2), (58, 2), (59, 0), (60, -1), (61, 2)]

Covered at level 9 : {35, 36, 39, 59, 45, 51, 21, 54, 26, 27, 28, 29}

After reduction : 
 pending  : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55]
 solution : [0, 2, 13, 10, 15, 60]


Before reduction : 
 pending  : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55]
 solution : [0, 2, 13, 10, 15, 60]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 32), (7, 256), (8, 64), (9, 8), (10, -1), (11, 8), (12, 16), (13, -1), (14, -1), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 4), (21, 0), (22, 16), (23, -1), (24, 2), (25, 64), (26, 0), (27, 0), (28, 0), (29, 0), (30, 16), (31, 16), (32, 16), (33, 1), (34, -1), (35, 0), (36, 0), (37, 8), (38, 32), (39, 0), (40, 1), (41, 32), (42, 1), (43, 2), (44, 2), (45, 0), (46, -1), (47, 2), (48, 16), (49, 2), (50, 2), (51, 0), (52, 1), (53, 1), (54, 0), (55, 16), (56, 128), (57, 2), (58, 2), (59, 0), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, 256), (8, 64), (9, 8), (10, -1), (11, 8), (12, 16), (13, -1), (14, -1), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 4), (21, -1), (22, 16), (23, -1), (24, 2), (25, 64), (26, -1), (27, -1), (28, -1), (29, -1), (30, 16), (31, 16), (32, 16), (33, 1), (34, -1), (35, -1), (36, -1), (37, 8), (38, 32), (39, -1), (40, 1), (41, 32), (42, 1), (43, 2), (44, 2), (45, -1), (46, -1), (47, 2), (48, 8), (49, 2), (50, 2), (51, -1), (52, 1), (53, 1), (54, -1), (55, 16), (56, 128), (57, 2), (58, 2), (59, -1), (60, -1), (61, 2)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55]
 solution : [0, 2, 13, 10, 15, 60]


Solution : [0, 2, 13, 10, 15, 60] has cost 31.


Before backtrack at level 9
 pending : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55]
 solution : [0, 2, 13, 10, 15, 60]

After backtrack at level 9
 pending : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 60]


Invert decision for 60 at level 8


New level: 9
 pending : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]
 solution : [0, 2, 13, 10, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, 256), (8, 64), (9, 8), (10, -1), (11, 8), (12, 16), (13, -1), (14, -1), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 4), (21, -1), (22, 16), (23, -1), (24, 2), (25, 64), (26, -1), (27, -1), (28, -1), (29, -1), (30, 16), (31, 16), (32, 16), (33, 1), (34, -1), (35, -1), (36, -1), (37, 8), (38, 32), (39, -1), (40, 1), (41, 32), (42, 1), (43, 2), (44, 2), (45, -1), (46, -1), (47, 2), (48, 8), (49, 2), (50, 2), (51, -1), (52, 1), (53, 1), (54, -1), (55, 16), (56, 128), (57, 2), (58, 2), (59, -1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 9 among pending : [24, 20, 31, 25, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [24, 20, 31, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 25]


New level: 10
 pending : [24, 20, 31, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 25]


Before reduction : 
 pending  : [24, 20, 31, 30, 41, 38, 53, 49, 58, 17, 16, 40, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 27, 36, 28, 45, 29, 39, 21, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 8), (10, -1), (11, 4), (12, 32), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 2), (22, 32), (23, -1), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 2), (33, 2), (34, -1), (35, 64), (36, 2), (37, 4), (38, 64), (39, 32), (40, 0), (41, 64), (42, 128), (43, 256), (44, 64), (45, 8), (46, -1), (47, 16), (48, 64), (49, 128), (50, 8), (51, 0), (52, 2), (53, 2), (54, 0), (55, 32), (56, 128), (57, 8), (58, 128), (59, 4), (60, -1), (61, 128)]

Covered at level 10 : {40, 51, 20, 54, 24, 26, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21]
 solution : [0, 2, 13, 10, 15, 25]


Before reduction : 
 pending  : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21]
 solution : [0, 2, 13, 10, 15, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 8), (10, -1), (11, 4), (12, 32), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 2), (22, 32), (23, -1), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 2), (33, 2), (34, -1), (35, 64), (36, 2), (37, 4), (38, 64), (39, 32), (40, 0), (41, 64), (42, 128), (43, 256), (44, 64), (45, 8), (46, -1), (47, 16), (48, 64), (49, 128), (50, 8), (51, 0), (52, 2), (53, 2), (54, 0), (55, 32), (56, 128), (57, 8), (58, 128), (59, 4), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 8), (10, -1), (11, 4), (12, 32), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 2), (33, 2), (34, -1), (35, 64), (36, 2), (37, 4), (38, 64), (39, 16), (40, -1), (41, 64), (42, 128), (43, 256), (44, 64), (45, 8), (46, -1), (47, 16), (48, 64), (49, 128), (50, 8), (51, -1), (52, 2), (53, 2), (54, -1), (55, 16), (56, 64), (57, 8), (58, 128), (59, 4), (60, -1), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21]
 solution : [0, 2, 13, 10, 15, 25]


Solution : [0, 2, 13, 10, 15, 25] has cost 31.


Before backtrack at level 10
 pending : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21]
 solution : [0, 2, 13, 10, 15, 25]

After backtrack at level 10
 pending : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 8), (10, -1), (11, 4), (12, 32), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 2), (22, 32), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 2), (33, 2), (34, -1), (35, 64), (36, 2), (37, 4), (38, 64), (39, 16), (40, -1), (41, 64), (42, 128), (43, 256), (44, 64), (45, 8), (46, -1), (47, 16), (48, 64), (49, 128), (50, 8), (51, -1), (52, 2), (53, 2), (54, -1), (55, 16), (56, 64), (57, 8), (58, 128), (59, 4), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 10 among pending : [41, 38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 41]


New level: 11
 pending : [38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 41]


Before reduction : 
 pending  : [38, 53, 49, 58, 17, 16, 32, 22, 37, 11, 50, 57, 33, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 31, 30, 40, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 16), (12, 32), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, -1), (26, 4), (27, 4), (28, 16), (29, 32), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 2), (40, 0), (41, -1), (42, 4), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 64), (59, 32), (60, -1), (61, 128)]

Covered at level 11 : {32, 33, 40, 30, 31}

After reduction : 
 pending  : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 41]


Before reduction : 
 pending  : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 16), (12, 32), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, -1), (26, 4), (27, 4), (28, 16), (29, 32), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 2), (40, 0), (41, -1), (42, 4), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 64), (59, 32), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 16), (12, 32), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, -1), (26, 4), (27, 4), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 2), (40, -1), (41, -1), (42, 4), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 64), (59, 32), (60, -1), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 41]


Solution : [0, 2, 13, 10, 15, 41] has cost 31.


Before backtrack at level 11
 pending : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54]
 solution : [0, 2, 13, 10, 15, 41]

After backtrack at level 11
 pending : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 16), (12, 32), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, -1), (26, 4), (27, 4), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 2), (40, -1), (41, -1), (42, 4), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 64), (59, 32), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 11 among pending : [38, 53, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 53 with phase True at level 11

After decision at level 11
 pending : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 53]


New level: 12
 pending : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 53]


Before reduction : 
 pending  : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 52, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 54, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 53]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, 4), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 8), (51, 8), (52, 0), (53, -1), (54, 0), (55, 16), (56, 128), (57, 4), (58, 64), (59, 16), (60, -1), (61, 128)]

Covered at level 12 : {52, 54}

After reduction : 
 pending  : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 53]


Before reduction : 
 pending  : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 53]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, 4), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 8), (51, 8), (52, 0), (53, -1), (54, 0), (55, 16), (56, 128), (57, 4), (58, 64), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, 4), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 16), (40, 4), (41, -1), (42, 128), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 8), (51, 8), (52, -1), (53, -1), (54, -1), (55, 16), (56, 128), (57, 4), (58, 64), (59, 16), (60, -1), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 53]


Solution : [0, 2, 13, 10, 15, 53] has cost 31.


Before backtrack at level 12
 pending : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40]
 solution : [0, 2, 13, 10, 15, 53]

After backtrack at level 12
 pending : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 53]


Invert decision for 53 at level 11


New level: 12
 pending : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, 4), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 16), (40, 4), (41, -1), (42, 128), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 8), (51, 8), (52, -1), (53, -1), (54, -1), (55, 16), (56, 128), (57, 4), (58, 64), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 12 among pending : [38, 49, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 49 with phase True at level 12

After decision at level 12
 pending : [38, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 49]


New level: 13
 pending : [38, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 49]


Before reduction : 
 pending  : [38, 58, 17, 16, 22, 37, 11, 50, 57, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 39, 21, 24, 20, 27, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, 0), (28, 16), (29, 32), (30, 128), (31, 64), (32, 128), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, 0), (40, 4), (41, -1), (42, 128), (43, 256), (44, 16), (45, 64), (46, -1), (47, 256), (48, 32), (49, -1), (50, 0), (51, 16), (52, 1), (53, -1), (54, 128), (55, 16), (56, 128), (57, 0), (58, 0), (59, 16), (60, -1), (61, 128)]

Covered at level 13 : {39, 50, 57, 58, 27}

After reduction : 
 pending  : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 49]


Before reduction : 
 pending  : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 49]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, 0), (28, 16), (29, 32), (30, 128), (31, 64), (32, 128), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, 0), (40, 4), (41, -1), (42, 128), (43, 256), (44, 16), (45, 64), (46, -1), (47, 256), (48, 32), (49, -1), (50, 0), (51, 16), (52, 1), (53, -1), (54, 128), (55, 16), (56, 128), (57, 0), (58, 0), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, -1), (28, 16), (29, 32), (30, 128), (31, 64), (32, 128), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, -1), (42, 128), (43, 256), (44, 4), (45, 64), (46, -1), (47, 256), (48, 16), (49, -1), (50, -1), (51, 16), (52, 1), (53, -1), (54, 128), (55, 16), (56, 128), (57, -1), (58, -1), (59, 16), (60, -1), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 49]


Solution : [0, 2, 13, 10, 15, 49] has cost 31.


Before backtrack at level 13
 pending : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54]
 solution : [0, 2, 13, 10, 15, 49]

After backtrack at level 13
 pending : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]
 solution : [0, 2, 13, 10, 15, 49]


Invert decision for 49 at level 12


New level: 13
 pending : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]
 solution : [0, 2, 13, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 4), (27, -1), (28, 16), (29, 32), (30, 128), (31, 64), (32, 128), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, -1), (42, 128), (43, 256), (44, 4), (45, 64), (46, -1), (47, 256), (48, 16), (49, -1), (50, -1), (51, 16), (52, 1), (53, -1), (54, 128), (55, 16), (56, 128), (57, -1), (58, -1), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 13 among pending : [38, 17, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]
 solution : [0, 2, 13, 10, 15, 17]


New level: 14
 pending : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]
 solution : [0, 2, 13, 10, 15, 17]


Before reduction : 
 pending  : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 36, 45, 21, 24, 20, 28, 29, 51, 26, 32, 33, 31, 30, 40, 52, 54, 58, 50, 57, 39, 27]
 solution : [0, 2, 13, 10, 15, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, 0), (27, 0), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, 0), (34, -1), (35, 128), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, -1), (42, 128), (43, 256), (44, 2), (45, 4), (46, -1), (47, 256), (48, 4), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, 0), (55, 4), (56, 128), (57, 8), (58, 16), (59, 64), (60, -1), (61, 128)]

Covered at level 14 : {33, 36, 39, 54, 26, 27}

After reduction : 
 pending  : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 17]


Before reduction : 
 pending  : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, 0), (27, 0), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, 0), (34, -1), (35, 128), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, -1), (42, 128), (43, 256), (44, 2), (45, 4), (46, -1), (47, 256), (48, 4), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, 0), (55, 4), (56, 128), (57, 8), (58, 16), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 128), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, -1), (42, 32), (43, 64), (44, 2), (45, 4), (46, -1), (47, 32), (48, 4), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, -1), (55, 4), (56, 64), (57, 8), (58, 16), (59, 64), (60, -1), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 17]


Solution : [0, 2, 13, 10, 15, 17] has cost 27.


Before backtrack at level 14
 pending : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 17]

After backtrack at level 14
 pending : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 128), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, -1), (42, 32), (43, 64), (44, 2), (45, 4), (46, -1), (47, 32), (48, 4), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, -1), (55, 4), (56, 64), (57, 8), (58, 16), (59, 64), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15]


Solution : [0, 2, 13, 10, 15] has cost 21.


Decide in level 14 among pending : [38, 16, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [38, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 16]


New level: 15
 pending : [38, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 16]


Before reduction : 
 pending  : [38, 22, 37, 11, 3, 4, 6, 7, 5, 9, 12, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 52, 58, 50, 57, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 8), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 128), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 128), (5, 256), (6, 64), (7, 16), (8, 64), (9, 8), (10, -1), (11, 0), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, 1), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, -1), (42, 1), (43, 2), (44, 2), (45, 0), (46, -1), (47, 2), (48, 4), (49, -1), (50, 4), (51, 0), (52, 2), (53, -1), (54, 0), (55, 4), (56, 4), (57, 4), (58, 4), (59, 1), (60, -1), (61, 128)]

Covered at level 15 : {11, 12, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 45, 51, 54}

After reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 16]


Before reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 128), (5, 256), (6, 64), (7, 16), (8, 64), (9, 8), (10, -1), (11, 0), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, -1), (35, 1), (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, -1), (42, 1), (43, 2), (44, 2), (45, 0), (46, -1), (47, 2), (48, 4), (49, -1), (50, 4), (51, 0), (52, 2), (53, -1), (54, 0), (55, 4), (56, 4), (57, 4), (58, 4), (59, 1), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 128), (5, 256), (6, 16), (7, 16), (8, 64), (9, 8), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 1), (43, 2), (44, 2), (45, -1), (46, -1), (47, 2), (48, 4), (49, -1), (50, 4), (51, -1), (52, 2), (53, -1), (54, -1), (55, 4), (56, 4), (57, 4), (58, 4), (59, 1), (60, -1), (61, 2)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 16]


Solution : [0, 2, 13, 10, 15, 16] has cost 27.


Before backtrack at level 15
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57]
 solution : [0, 2, 13, 10, 15, 16]

After backtrack at level 15
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 38, 22, 37, 11, 12, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 38, 22, 37, 11, 12, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15]


Before reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 38, 22, 37, 11, 12, 45, 21, 24, 20, 28, 29, 51, 32, 31, 30, 40, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15]

Essensial at level 15 : {38}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 128), (5, 256), (6, 16), (7, 16), (8, 64), (9, 8), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 1), (43, 2), (44, 2), (45, -1), (46, -1), (47, 2), (48, 4), (49, -1), (50, 4), (51, -1), (52, 2), (53, -1), (54, -1), (55, 4), (56, 4), (57, 4), (58, 4), (59, 1), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 0), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 2), (22, 0), (23, -1), (24, 0), (25, -1), (26, 4), (27, 4), (28, 4), (29, 4), (30, 16), (31, 8), (32, 1), (33, 4), (34, -1), (35, 4), (36, 8), (37, 0), (38, -1), (39, 32), (40, 0), (41, -1), (42, 128), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 2), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 4), (60, -1), (61, 128)]

Covered at level 15 : {37, 40, 11, 12, 20, 22, 24}

After reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 38]


Before reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 38]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, 0), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 2), (22, 0), (23, -1), (24, 0), (25, -1), (26, 4), (27, 4), (28, 4), (29, 4), (30, 16), (31, 8), (32, 1), (33, 4), (34, -1), (35, 4), (36, 8), (37, 0), (38, -1), (39, 32), (40, 0), (41, -1), (42, 128), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, -1), (50, 16), (51, 2), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 8), (58, 128), (59, 4), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, 4), (28, 4), (29, 4), (30, 4), (31, 4), (32, 1), (33, 4), (34, -1), (35, 4), (36, 8), (37, -1), (38, -1), (39, 32), (40, -1), (41, -1), (42, 128), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, -1), (50, 8), (51, 2), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 4), (58, 128), (59, 4), (60, -1), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 38]


Solution : [0, 2, 13, 10, 15, 38] has cost 31.


Before backtrack at level 15
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27]
 solution : [0, 2, 13, 10, 15, 38]

After backtrack at level 15
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 14
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 14
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 13
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 13
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 12
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 12
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 11
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 11
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 10
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 10
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 9
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 9
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 8
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 8
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60]
 solution : [0, 2, 13, 10, 15]


Before backtrack at level 7
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60]
 solution : [0, 2, 13, 10, 15]

After backtrack at level 7
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10]


Before reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 256), (8, 64), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, 4), (28, 4), (29, 4), (30, 4), (31, 4), (32, 1), (33, 4), (34, -1), (35, 4), (36, 8), (37, -1), (38, -1), (39, 32), (40, -1), (41, -1), (42, 128), (43, 256), (44, 64), (45, 64), (46, -1), (47, 256), (48, 64), (49, -1), (50, 8), (51, 2), (52, 8), (53, -1), (54, 128), (55, 32), (56, 128), (57, 4), (58, 128), (59, 4), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10]


Solution : [0, 2, 13, 10] has cost 15.


Decide in level 7 among pending : [3, 4, 6, 7, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [3, 4, 6, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7]


New level: 8
 pending : [3, 4, 6, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [3, 4, 6, 5, 9, 8, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 50, 57, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 33, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 32), (5, 64), (6, 1), (7, -1), (8, 0), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, 0), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 256), (43, 256), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, 0), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, 0), (58, 8), (59, 16), (60, 256), (61, 64)]

Covered at level 8 : {33, 3, 8, 50, 57}

After reduction : 
 pending  : [4, 6, 5, 9, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [4, 6, 5, 9, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 32), (5, 64), (6, 1), (7, -1), (8, 0), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, 0), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 256), (43, 256), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, 0), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, 0), (58, 8), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 256), (43, 256), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [4, 6, 5, 9, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7]


Solution : [0, 2, 13, 10, 7] has cost 21.


Decide in level 8 among pending : [4, 6, 5, 9, 43, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 256), (43, 256), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Decide 43 with phase True at level 8

After decision at level 8
 pending : [4, 6, 5, 9, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7, 43]


New level: 9
 pending : [4, 6, 5, 9, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7, 43]


Before reduction : 
 pending  : [4, 6, 5, 9, 56, 42, 61, 47, 48, 44, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 39, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7, 43]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 256), (43, 256), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 256), (29, 128), (30, 16), (31, 32), (32, 16), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, 0), (40, 16), (41, 256), (42, 0), (43, -1), (44, 0), (45, 128), (46, 32), (47, 128), (48, 4), (49, 4), (50, -1), (51, 128), (52, 8), (53, 256), (54, 64), (55, 4), (56, 16), (57, -1), (58, 4), (59, 16), (60, 256), (61, 64)]

Covered at level 9 : {42, 44, 39}

After reduction : 
 pending  : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7, 43]


Before reduction : 
 pending  : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7, 43]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 256), (29, 128), (30, 16), (31, 32), (32, 16), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, 0), (40, 16), (41, 256), (42, 0), (43, -1), (44, 0), (45, 128), (46, 32), (47, 128), (48, 4), (49, 4), (50, -1), (51, 128), (52, 8), (53, 256), (54, 64), (55, 4), (56, 16), (57, -1), (58, 4), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 256), (29, 128), (30, 16), (31, 32), (32, 16), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, -1), (43, -1), (44, -1), (45, 128), (46, 32), (47, 128), (48, 4), (49, 4), (50, -1), (51, 128), (52, 8), (53, 256), (54, 64), (55, 4), (56, 16), (57, -1), (58, 4), (59, 16), (60, 256), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7, 43]


Solution : [0, 2, 13, 10, 7, 43] has cost 31.


Before backtrack at level 9
 pending : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46]
 solution : [0, 2, 13, 10, 7, 43]

After backtrack at level 9
 pending : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 43]


Invert decision for 43 at level 8


New level: 9
 pending : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 128), (28, 256), (29, 128), (30, 16), (31, 32), (32, 16), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, -1), (43, -1), (44, -1), (45, 128), (46, 32), (47, 128), (48, 4), (49, 4), (50, -1), (51, 128), (52, 8), (53, 256), (54, 64), (55, 4), (56, 16), (57, -1), (58, 4), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7]


Solution : [0, 2, 13, 10, 7] has cost 21.


Decide in level 9 among pending : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 28, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 28]


New level: 10
 pending : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 28]


Before reduction : 
 pending  : [4, 6, 5, 9, 56, 61, 47, 48, 55, 59, 35, 52, 58, 45, 21, 29, 51, 32, 31, 30, 36, 26, 54, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 256), (12, 256), (13, -1), (14, 32), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, 8), (24, 16), (25, 64), (26, 0), (27, 32), (28, -1), (29, 0), (30, 8), (31, 8), (32, 8), (33, -1), (34, 4), (35, 1), (36, 32), (37, 64), (38, 128), (39, 1), (40, 8), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 16), (47, 128), (48, 4), (49, 16), (50, -1), (51, 8), (52, 0), (53, 1), (54, 0), (55, 2), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

Covered at level 10 : {9, 52, 54, 26, 29}

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 28]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 256), (12, 256), (13, -1), (14, 32), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, 8), (24, 16), (25, 64), (26, 0), (27, 32), (28, -1), (29, 0), (30, 8), (31, 8), (32, 8), (33, -1), (34, 4), (35, 1), (36, 32), (37, 64), (38, 128), (39, 1), (40, 8), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 16), (47, 128), (48, 4), (49, 16), (50, -1), (51, 8), (52, 0), (53, 1), (54, 0), (55, 2), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 32), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, 8), (24, 16), (25, 64), (26, -1), (27, 32), (28, -1), (29, -1), (30, 8), (31, 8), (32, 8), (33, -1), (34, 4), (35, 1), (36, 32), (37, 64), (38, 128), (39, 1), (40, 8), (41, 256), (42, 128), (43, -1), (44, 16), (45, 16), (46, 16), (47, 16), (48, 4), (49, 16), (50, -1), (51, 8), (52, -1), (53, 1), (54, -1), (55, 2), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 28]


Solution : [0, 2, 13, 10, 7, 28] has cost 31.


Before backtrack at level 10
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39]
 solution : [0, 2, 13, 10, 7, 28]

After backtrack at level 10
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 32), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, 8), (24, 16), (25, 64), (26, -1), (27, 32), (28, -1), (29, -1), (30, 8), (31, 8), (32, 8), (33, -1), (34, 4), (35, 1), (36, 32), (37, 64), (38, 128), (39, 1), (40, 8), (41, 256), (42, 128), (43, -1), (44, 16), (45, 16), (46, 16), (47, 16), (48, 4), (49, 16), (50, -1), (51, 8), (52, -1), (53, 1), (54, -1), (55, 2), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7]


Solution : [0, 2, 13, 10, 7] has cost 21.


Decide in level 10 among pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 27, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Decide 27 with phase True at level 10

After decision at level 10
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 27]


New level: 11
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 27]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 16), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 32), (24, 64), (25, 64), (26, 16), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 32), (37, 64), (38, 128), (39, 1), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 4), (50, -1), (51, 128), (52, 8), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 2), (59, 16), (60, 256), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 27]


Solution : [0, 2, 13, 10, 7, 27] has cost 31.


Before backtrack at level 11
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 27]

After backtrack at level 11
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 27]


Invert decision for 27 at level 10


New level: 11
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 16), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 32), (24, 64), (25, 64), (26, 16), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 32), (37, 64), (38, 128), (39, 1), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 4), (50, -1), (51, 128), (52, 8), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 2), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7]


Solution : [0, 2, 13, 10, 7] has cost 21.


Decide in level 11 among pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 11, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 11]


New level: 12
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 11]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 32, 31, 30, 36, 38, 22, 37, 12, 24, 20, 40, 16, 17, 49, 53, 41, 25, 60, 34, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 0), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 1), (22, 0), (23, 1), (24, 0), (25, 16), (26, 32), (27, -1), (28, -1), (29, 16), (30, 0), (31, 0), (32, 0), (33, -1), (34, 0), (35, 1), (36, 4), (37, 0), (38, 32), (39, 4), (40, 0), (41, 32), (42, 8), (43, -1), (44, 16), (45, 128), (46, 16), (47, 128), (48, 16), (49, 16), (50, -1), (51, 1), (52, 2), (53, 256), (54, 64), (55, 8), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

Covered at level 12 : {32, 34, 37, 40, 12, 20, 22, 24, 30, 31}

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 11]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 0), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 1), (22, 0), (23, 1), (24, 0), (25, 16), (26, 32), (27, -1), (28, -1), (29, 16), (30, 0), (31, 0), (32, 0), (33, -1), (34, 0), (35, 1), (36, 4), (37, 0), (38, 32), (39, 4), (40, 0), (41, 32), (42, 8), (43, -1), (44, 16), (45, 128), (46, 16), (47, 128), (48, 16), (49, 16), (50, -1), (51, 1), (52, 2), (53, 256), (54, 64), (55, 8), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 1), (22, -1), (23, 1), (24, -1), (25, 16), (26, 32), (27, -1), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 1), (36, 4), (37, -1), (38, 32), (39, 4), (40, -1), (41, 32), (42, 8), (43, -1), (44, 16), (45, 128), (46, 16), (47, 128), (48, 16), (49, 16), (50, -1), (51, 1), (52, 2), (53, 256), (54, 64), (55, 8), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 11]


Solution : [0, 2, 13, 10, 7, 11] has cost 27.


Before backtrack at level 12
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54]
 solution : [0, 2, 13, 10, 7, 11]

After backtrack at level 12
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 1), (22, -1), (23, 1), (24, -1), (25, 16), (26, 32), (27, -1), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, 1), (36, 4), (37, -1), (38, 32), (39, 4), (40, -1), (41, 32), (42, 8), (43, -1), (44, 16), (45, 128), (46, 16), (47, 128), (48, 16), (49, 16), (50, -1), (51, 1), (52, 2), (53, 256), (54, 64), (55, 8), (56, 8), (57, -1), (58, 8), (59, 1), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7]


Solution : [0, 2, 13, 10, 7] has cost 21.


Decide in level 12 among pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 16, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 16]


New level: 13
 pending : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 16]


Before reduction : 
 pending  : [4, 6, 5, 56, 61, 47, 48, 55, 59, 35, 58, 45, 21, 51, 36, 38, 17, 49, 53, 41, 25, 60, 23, 14, 46, 42, 44, 39, 9, 52, 29, 26, 54, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, 2), (6, 1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 64), (24, 16), (25, 0), (26, 2), (27, -1), (28, -1), (29, 32), (30, 8), (31, 16), (32, 16), (33, -1), (34, 16), (35, 0), (36, 0), (37, 16), (38, 0), (39, 0), (40, 8), (41, 0), (42, 0), (43, -1), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, 8), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, -1), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 13 : {25, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 60, 61}

After reduction : 
 pending  : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 16]


Before reduction : 
 pending  : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, 2), (6, 1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 64), (24, 16), (25, 0), (26, 2), (27, -1), (28, -1), (29, 32), (30, 8), (31, 16), (32, 16), (33, -1), (34, 16), (35, 0), (36, 0), (37, 16), (38, 0), (39, 0), (40, 8), (41, 0), (42, 0), (43, -1), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, -1), (51, 8), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, -1), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, 2), (6, 1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 64), (24, 16), (25, -1), (26, 2), (27, -1), (28, -1), (29, 32), (30, 8), (31, 16), (32, 8), (33, -1), (34, 16), (35, -1), (36, -1), (37, 16), (38, -1), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 16]


Solution : [0, 2, 13, 10, 7, 16] has cost 27.


Before backtrack at level 13
 pending : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34]
 solution : [0, 2, 13, 10, 7, 16]

After backtrack at level 13
 pending : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]
 solution : [0, 2, 13, 10, 7, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]
 solution : [0, 2, 13, 10, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 2), (5, 2), (6, 1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 16), (21, 8), (22, 16), (23, 64), (24, 16), (25, -1), (26, 2), (27, -1), (28, -1), (29, 32), (30, 8), (31, 16), (32, 8), (33, -1), (34, 16), (35, -1), (36, -1), (37, 16), (38, -1), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]
 solution : [0, 2, 13, 10, 7]


Solution : [0, 2, 13, 10, 7] has cost 21.


Decide in level 13 among pending : [4, 6, 5, 21, 51, 17, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [4, 6, 5, 21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]
 solution : [0, 2, 13, 10, 7, 17]


New level: 14
 pending : [4, 6, 5, 21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]
 solution : [0, 2, 13, 10, 7, 17]


Before reduction : 
 pending  : [4, 6, 5, 21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 48, 55, 59, 35, 58, 45, 36, 38, 49, 53, 41, 25, 60, 46, 42, 44, 39, 52, 54]
 solution : [0, 2, 13, 10, 7, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, -1), (44, 16), (45, 128), (46, 64), (47, 128), (48, 16), (49, 16), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 4), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, 0), (40, 32), (41, 16), (42, 2), (43, -1), (44, 0), (45, 4), (46, 4), (47, 4), (48, 0), (49, 0), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, 0), (56, 4), (57, -1), (58, 0), (59, 4), (60, 4), (61, 4)]

Covered at level 14 : {4, 5, 6, 39, 44, 48, 49, 55, 58}

After reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 38, 53, 41, 25, 60, 46, 42, 52, 54]
 solution : [0, 2, 13, 10, 7, 17]


Before reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 38, 53, 41, 25, 60, 46, 42, 52, 54]
 solution : [0, 2, 13, 10, 7, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 4), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, 0), (40, 32), (41, 16), (42, 2), (43, -1), (44, 0), (45, 4), (46, 4), (47, 4), (48, 0), (49, 0), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, 0), (56, 4), (57, -1), (58, 0), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 4), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, -1), (40, 32), (41, 16), (42, 2), (43, -1), (44, -1), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, -1), (56, 4), (57, -1), (58, -1), (59, 4), (60, 4), (61, 4)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 38, 53, 41, 25, 60, 46, 42, 52, 54]
 solution : [0, 2, 13, 10, 7, 17]


Solution : [0, 2, 13, 10, 7, 17] has cost 27.


Before backtrack at level 14
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 38, 53, 41, 25, 60, 46, 42, 52, 54]
 solution : [0, 2, 13, 10, 7, 17]

After backtrack at level 14
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 38, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39]
 solution : [0, 2, 13, 10, 7, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 38, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39]
 solution : [0, 2, 13, 10, 7]


Before reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 38, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39]
 solution : [0, 2, 13, 10, 7]

Essensial at level 14 : {38}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 4), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, -1), (40, 32), (41, 16), (42, 2), (43, -1), (44, -1), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, -1), (56, 4), (57, -1), (58, -1), (59, 4), (60, 4), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 16), (23, 64), (24, 64), (25, 64), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 16), (38, -1), (39, 1), (40, 32), (41, 8), (42, 1), (43, -1), (44, 1), (45, 64), (46, 16), (47, 64), (48, 2), (49, 2), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 1), (56, 8), (57, -1), (58, 1), (59, 8), (60, 128), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39]
 solution : [0, 2, 13, 10, 7, 38]


Before reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39]
 solution : [0, 2, 13, 10, 7, 38]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 16), (23, 64), (24, 64), (25, 64), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 16), (38, -1), (39, 1), (40, 32), (41, 8), (42, 1), (43, -1), (44, 1), (45, 64), (46, 16), (47, 64), (48, 2), (49, 2), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 1), (56, 8), (57, -1), (58, 1), (59, 8), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 16), (23, 64), (24, 64), (25, 64), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 16), (38, -1), (39, 1), (40, 32), (41, 8), (42, 1), (43, -1), (44, 1), (45, 64), (46, 16), (47, 64), (48, 2), (49, 2), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 1), (56, 8), (57, -1), (58, 1), (59, 8), (60, 128), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39]
 solution : [0, 2, 13, 10, 7, 38]


Solution : [0, 2, 13, 10, 7, 38] has cost 31.


Before backtrack at level 14
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39]
 solution : [0, 2, 13, 10, 7, 38]

After backtrack at level 14
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38]
 solution : [0, 2, 13, 10, 7]


Before backtrack at level 13
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38]
 solution : [0, 2, 13, 10, 7]

After backtrack at level 13
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17]
 solution : [0, 2, 13, 10, 7]


Before backtrack at level 12
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17]
 solution : [0, 2, 13, 10, 7]

After backtrack at level 12
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16]
 solution : [0, 2, 13, 10, 7]


Before backtrack at level 11
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16]
 solution : [0, 2, 13, 10, 7]

After backtrack at level 11
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11]
 solution : [0, 2, 13, 10, 7]


Before backtrack at level 10
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11]
 solution : [0, 2, 13, 10, 7]

After backtrack at level 10
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27]
 solution : [0, 2, 13, 10, 7]


Before backtrack at level 9
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27]
 solution : [0, 2, 13, 10, 7]

After backtrack at level 9
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28]
 solution : [0, 2, 13, 10, 7]


Before backtrack at level 8
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28]
 solution : [0, 2, 13, 10, 7]

After backtrack at level 8
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10]


Before reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 256), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 16), (23, 64), (24, 64), (25, 64), (26, 32), (27, -1), (28, -1), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 16), (38, -1), (39, 1), (40, 32), (41, 8), (42, 1), (43, -1), (44, 1), (45, 64), (46, 16), (47, 64), (48, 2), (49, 2), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 1), (56, 8), (57, -1), (58, 1), (59, 8), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10]


Solution : [0, 2, 13, 10] has cost 15.


Decide in level 8 among pending : [21, 51, 23, 14, 9, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [21, 51, 23, 14, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9]


New level: 9
 pending : [21, 51, 23, 14, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [21, 51, 23, 14, 29, 26, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 52, 54, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, 0), (53, 2), (54, 0), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 9 : {26, 52, 54}

After reduction : 
 pending  : [21, 51, 23, 14, 29, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [21, 51, 23, 14, 29, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, 0), (53, 2), (54, 0), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 51, 23, 14, 29, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 9 among pending : [21, 51, 23, 14, 29, 32, 31, 30, 22, 37, 12, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 12 with phase True at level 9

After decision at level 9
 pending : [21, 51, 23, 14, 29, 32, 31, 30, 22, 37, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9, 12]


New level: 10
 pending : [21, 51, 23, 14, 29, 32, 31, 30, 22, 37, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9, 12]


Before reduction : 
 pending  : [21, 51, 23, 14, 29, 32, 31, 30, 22, 37, 24, 20, 40, 34, 56, 61, 47, 59, 35, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 11, 27, 28, 3, 8, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 32), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 32), (5, 64), (6, 1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 32), (26, -1), (27, 4), (28, 0), (29, 0), (30, 64), (31, 2), (32, 2), (33, 2), (34, 0), (35, 0), (36, 2), (37, 0), (38, 32), (39, 4), (40, 0), (41, 256), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 8), (48, 16), (49, 256), (50, 2), (51, 0), (52, -1), (53, 2), (54, -1), (55, 8), (56, 8), (57, 1), (58, 128), (59, 0), (60, 32), (61, 64)]

Covered at level 10 : {34, 35, 37, 40, 8, 11, 14, 51, 20, 21, 22, 23, 24, 59, 28, 29}

After reduction : 
 pending  : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9, 12]


Before reduction : 
 pending  : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 32), (5, 64), (6, 1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 32), (26, -1), (27, 4), (28, 0), (29, 0), (30, 64), (31, 2), (32, 2), (33, 2), (34, 0), (35, 0), (36, 2), (37, 0), (38, 32), (39, 4), (40, 0), (41, 256), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 8), (48, 16), (49, 256), (50, 2), (51, 0), (52, -1), (53, 2), (54, -1), (55, 8), (56, 8), (57, 1), (58, 128), (59, 0), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, 2), (32, 2), (33, 2), (34, -1), (35, -1), (36, 2), (37, -1), (38, 32), (39, 4), (40, -1), (41, 256), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 8), (48, 16), (49, 256), (50, 2), (51, -1), (52, -1), (53, 2), (54, -1), (55, 8), (56, 8), (57, 1), (58, 128), (59, -1), (60, 32), (61, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9, 12]


Solution : [0, 2, 13, 10, 9, 12] has cost 27.


Before backtrack at level 10
 pending : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43]
 solution : [0, 2, 13, 10, 9, 12]

After backtrack at level 10
 pending : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 12]


Invert decision for 12 at level 9


New level: 10
 pending : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 32), (5, 64), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, 2), (32, 2), (33, 2), (34, -1), (35, -1), (36, 2), (37, -1), (38, 32), (39, 4), (40, -1), (41, 256), (42, 128), (43, 16), (44, 16), (45, 4), (46, 16), (47, 8), (48, 16), (49, 256), (50, 2), (51, -1), (52, -1), (53, 2), (54, -1), (55, 8), (56, 8), (57, 1), (58, 128), (59, -1), (60, 32), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 128), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 10 among pending : [32, 31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 128), (61, 64)]

Decide 32 with phase True at level 10

After decision at level 10
 pending : [31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 32]


New level: 11
 pending : [31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 32]


Before reduction : 
 pending  : [31, 30, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 33, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 40, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 32]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 128), (57, 32), (58, 128), (59, 32), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, -1), (27, 32), (28, 64), (29, 16), (30, 0), (31, 4), (32, -1), (33, 0), (34, 64), (35, 32), (36, 256), (37, 32), (38, 128), (39, 1), (40, 0), (41, 64), (42, 4), (43, 4), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 16), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

Covered at level 11 : {40, 33, 30}

After reduction : 
 pending  : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 32]


Before reduction : 
 pending  : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 32]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, -1), (27, 32), (28, 64), (29, 16), (30, 0), (31, 4), (32, -1), (33, 0), (34, 64), (35, 32), (36, 256), (37, 32), (38, 128), (39, 1), (40, 0), (41, 64), (42, 4), (43, 4), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 16), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, -1), (27, 32), (28, 64), (29, 16), (30, -1), (31, 4), (32, -1), (33, -1), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 1), (40, -1), (41, 64), (42, 4), (43, 4), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 16), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 32]


Solution : [0, 2, 13, 10, 9, 32] has cost 31.


Before backtrack at level 11
 pending : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8]
 solution : [0, 2, 13, 10, 9, 32]

After backtrack at level 11
 pending : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 32]


Invert decision for 32 at level 10


New level: 11
 pending : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, 128), (26, -1), (27, 32), (28, 64), (29, 16), (30, -1), (31, 4), (32, -1), (33, -1), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 1), (40, -1), (41, 64), (42, 4), (43, 4), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 16), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 11 among pending : [31, 56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 31 with phase True at level 11

After decision at level 11
 pending : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 31]


New level: 12
 pending : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 31]


Before reduction : 
 pending  : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 31]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, -1), (27, 32), (28, 16), (29, 32), (30, 1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 2), (40, 0), (41, 128), (42, 128), (43, 8), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 32), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

Covered at level 12 : {40}

After reduction : 
 pending  : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33]
 solution : [0, 2, 13, 10, 9, 31]


Before reduction : 
 pending  : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33]
 solution : [0, 2, 13, 10, 9, 31]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, -1), (27, 32), (28, 16), (29, 32), (30, 1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 2), (40, 0), (41, 128), (42, 128), (43, 8), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 32), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, -1), (27, 32), (28, 16), (29, 32), (30, 1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 2), (40, -1), (41, 128), (42, 128), (43, 8), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 32), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33]
 solution : [0, 2, 13, 10, 9, 31]


Solution : [0, 2, 13, 10, 9, 31] has cost 31.


Before backtrack at level 12
 pending : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33]
 solution : [0, 2, 13, 10, 9, 31]

After backtrack at level 12
 pending : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 31]


Invert decision for 31 at level 11


New level: 12
 pending : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, -1), (27, 32), (28, 16), (29, 32), (30, 1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 2), (40, -1), (41, 128), (42, 128), (43, 8), (44, 4), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 32), (51, 64), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 16), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 12 among pending : [56, 61, 47, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 47 with phase True at level 12

After decision at level 12
 pending : [56, 61, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 47]


New level: 13
 pending : [56, 61, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 47]


Before reduction : 
 pending  : [56, 61, 45, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 47]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 16), (43, 16), (44, 1), (45, 0), (46, 32), (47, -1), (48, 2), (49, 256), (50, 64), (51, 16), (52, -1), (53, 2), (54, -1), (55, 1), (56, 8), (57, 32), (58, 128), (59, 8), (60, 32), (61, 0)]

Covered at level 13 : {45, 61}

After reduction : 
 pending  : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 47]


Before reduction : 
 pending  : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 47]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 16), (43, 16), (44, 1), (45, 0), (46, 32), (47, -1), (48, 2), (49, 256), (50, 64), (51, 16), (52, -1), (53, 2), (54, -1), (55, 1), (56, 8), (57, 32), (58, 128), (59, 8), (60, 32), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 16), (43, 16), (44, 1), (45, -1), (46, 32), (47, -1), (48, 2), (49, 256), (50, 64), (51, 16), (52, -1), (53, 2), (54, -1), (55, 1), (56, 8), (57, 32), (58, 128), (59, 8), (60, 32), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 47]


Solution : [0, 2, 13, 10, 9, 47] has cost 31.


Before backtrack at level 13
 pending : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40]
 solution : [0, 2, 13, 10, 9, 47]

After backtrack at level 13
 pending : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 47]


Invert decision for 47 at level 12


New level: 13
 pending : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 16), (43, 16), (44, 1), (45, -1), (46, 32), (47, -1), (48, 2), (49, 256), (50, 64), (51, 16), (52, -1), (53, 2), (54, -1), (55, 1), (56, 8), (57, 32), (58, 128), (59, 8), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 13 among pending : [56, 36, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 36 with phase True at level 13

After decision at level 13
 pending : [56, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 36]


New level: 14
 pending : [56, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 36]


Before reduction : 
 pending  : [56, 53, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 36]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 64), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 32), (34, 16), (35, 64), (36, -1), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 64), (52, -1), (53, 0), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 14 : {53}

After reduction : 
 pending  : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 36]


Before reduction : 
 pending  : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 36]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 64), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 32), (34, 16), (35, 64), (36, -1), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 64), (52, -1), (53, 0), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 64), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 32), (34, 16), (35, 64), (36, -1), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 64), (52, -1), (53, -1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 36]


Solution : [0, 2, 13, 10, 9, 36] has cost 31.


Before backtrack at level 14
 pending : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45]
 solution : [0, 2, 13, 10, 9, 36]

After backtrack at level 14
 pending : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 36]


Invert decision for 36 at level 13


New level: 14
 pending : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, 64), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 32), (34, 16), (35, 64), (36, -1), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 64), (52, -1), (53, -1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 14 among pending : [56, 41, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 41 with phase True at level 14

After decision at level 14
 pending : [56, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 41]


New level: 15
 pending : [56, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 41]


Before reduction : 
 pending  : [56, 25, 60, 46, 42, 4, 6, 5, 48, 55, 58, 49, 44, 39, 38, 17, 16, 27, 3, 50, 57, 43, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 41]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, 256), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 0), (40, 8), (41, -1), (42, 0), (43, 0), (44, 0), (45, 64), (46, 256), (47, -1), (48, 8), (49, 256), (50, 64), (51, 128), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 64), (59, 16), (60, 64), (61, 16)]

Covered at level 15 : {42, 43, 44, 39}

After reduction : 
 pending  : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 41]


Before reduction : 
 pending  : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 41]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 0), (40, 8), (41, -1), (42, 0), (43, 0), (44, 0), (45, 64), (46, 256), (47, -1), (48, 8), (49, 256), (50, 64), (51, 128), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 64), (59, 16), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, 64), (46, 256), (47, -1), (48, 8), (49, 256), (50, 64), (51, 128), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 64), (59, 16), (60, 64), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 41]


Solution : [0, 2, 13, 10, 9, 41] has cost 31.


Before backtrack at level 15
 pending : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53]
 solution : [0, 2, 13, 10, 9, 41]

After backtrack at level 15
 pending : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 41]


Invert decision for 41 at level 14


New level: 15
 pending : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, 128), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, -1), (45, 64), (46, 256), (47, -1), (48, 8), (49, 256), (50, 64), (51, 128), (52, -1), (53, 1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 64), (59, 16), (60, 64), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 15 among pending : [56, 25, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 25 with phase True at level 15

After decision at level 15
 pending : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 25]


New level: 16
 pending : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 25]


Before reduction : 
 pending  : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 27, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 53, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 25]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, 0), (28, 64), (29, 16), (30, 32), (31, -1), (32, -1), (33, 16), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 1), (40, 8), (41, -1), (42, 8), (43, 8), (44, 4), (45, 8), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 16), (52, -1), (53, 0), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

Covered at level 16 : {27, 53}

After reduction : 
 pending  : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 25]


Before reduction : 
 pending  : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 25]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, 0), (28, 64), (29, 16), (30, 32), (31, -1), (32, -1), (33, 16), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 1), (40, 8), (41, -1), (42, 8), (43, 8), (44, 4), (45, 8), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 16), (52, -1), (53, 0), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, -1), (28, 64), (29, 16), (30, 32), (31, -1), (32, -1), (33, 16), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 1), (40, 8), (41, -1), (42, 8), (43, 8), (44, 4), (45, 8), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 16), (52, -1), (53, -1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 25]


Solution : [0, 2, 13, 10, 9, 25] has cost 31.


Before backtrack at level 16
 pending : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43]
 solution : [0, 2, 13, 10, 9, 25]

After backtrack at level 16
 pending : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 25]


Invert decision for 25 at level 15


New level: 16
 pending : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, -1), (28, 64), (29, 16), (30, 32), (31, -1), (32, -1), (33, 16), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 1), (40, 8), (41, -1), (42, 8), (43, 8), (44, 4), (45, 8), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 16), (52, -1), (53, -1), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 16 among pending : [56, 60, 46, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 46 with phase True at level 16

After decision at level 16
 pending : [56, 60, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 46]


New level: 17
 pending : [56, 60, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 46]


Before reduction : 
 pending  : [56, 60, 4, 6, 5, 48, 55, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 61, 45, 42, 44, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 46]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 128), (46, 256), (47, -1), (48, 16), (49, 256), (50, 64), (51, 128), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 2), (5, 2), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 16), (29, 8), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 16), (36, -1), (37, 64), (38, 128), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, 0), (45, 0), (46, -1), (47, -1), (48, 0), (49, 256), (50, 8), (51, 16), (52, -1), (53, 1), (54, -1), (55, 0), (56, 0), (57, 8), (58, 128), (59, 8), (60, 32), (61, 0)]

Covered at level 17 : {44, 45, 48, 55, 56, 61}

After reduction : 
 pending  : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 46]


Before reduction : 
 pending  : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 46]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 2), (5, 2), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 16), (29, 8), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 16), (36, -1), (37, 64), (38, 128), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, 0), (45, 0), (46, -1), (47, -1), (48, 0), (49, 256), (50, 8), (51, 16), (52, -1), (53, 1), (54, -1), (55, 0), (56, 0), (57, 8), (58, 128), (59, 8), (60, 32), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 2), (5, 2), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 16), (29, 8), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 16), (36, -1), (37, 64), (38, 128), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 256), (50, 8), (51, 16), (52, -1), (53, 1), (54, -1), (55, -1), (56, -1), (57, 8), (58, 128), (59, 8), (60, 32), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 46]


Solution : [0, 2, 13, 10, 9, 46] has cost 31.


Before backtrack at level 17
 pending : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53]
 solution : [0, 2, 13, 10, 9, 46]

After backtrack at level 17
 pending : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 46]


Invert decision for 46 at level 16


New level: 17
 pending : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 2), (5, 2), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 16), (29, 8), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 16), (36, -1), (37, 64), (38, 128), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 256), (50, 8), (51, 16), (52, -1), (53, 1), (54, -1), (55, -1), (56, -1), (57, 8), (58, 128), (59, 8), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, 256), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 17 among pending : [60, 4, 6, 5, 58, 49, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, 256), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 49 with phase True at level 17

After decision at level 17
 pending : [60, 4, 6, 5, 58, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 49]


New level: 18
 pending : [60, 4, 6, 5, 58, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 49]


Before reduction : 
 pending  : [60, 4, 6, 5, 58, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 39, 43, 27, 53, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 49]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, 256), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 0), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 16), (46, -1), (47, -1), (48, 4), (49, -1), (50, 8), (51, 64), (52, -1), (53, 0), (54, -1), (55, 4), (56, 64), (57, 4), (58, 0), (59, 32), (60, 16), (61, 32)]

Covered at level 18 : {58, 53, 39}

After reduction : 
 pending  : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 49]


Before reduction : 
 pending  : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 49]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 0), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 16), (46, -1), (47, -1), (48, 4), (49, -1), (50, 8), (51, 64), (52, -1), (53, 0), (54, -1), (55, 4), (56, 64), (57, 4), (58, 0), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, -1), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 16), (46, -1), (47, -1), (48, 4), (49, -1), (50, 8), (51, 64), (52, -1), (53, -1), (54, -1), (55, 4), (56, 64), (57, 4), (58, -1), (59, 32), (60, 16), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 49]


Solution : [0, 2, 13, 10, 9, 49] has cost 31.


Before backtrack at level 18
 pending : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44]
 solution : [0, 2, 13, 10, 9, 49]

After backtrack at level 18
 pending : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]
 solution : [0, 2, 13, 10, 9, 49]


Invert decision for 49 at level 17


New level: 18
 pending : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]
 solution : [0, 2, 13, 10, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 8), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, -1), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 16), (46, -1), (47, -1), (48, 4), (49, -1), (50, 8), (51, 64), (52, -1), (53, -1), (54, -1), (55, 4), (56, 64), (57, 4), (58, -1), (59, 32), (60, 16), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 18 among pending : [60, 4, 6, 5, 38, 17, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 17 with phase True at level 18

After decision at level 18
 pending : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]
 solution : [0, 2, 13, 10, 9, 17]


New level: 19
 pending : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]
 solution : [0, 2, 13, 10, 9, 17]


Before reduction : 
 pending  : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 44, 58, 39, 53]
 solution : [0, 2, 13, 10, 9, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, 0), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, 0), (54, -1), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 19 : {44, 53}

After reduction : 
 pending  : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39]
 solution : [0, 2, 13, 10, 9, 17]


Before reduction : 
 pending  : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39]
 solution : [0, 2, 13, 10, 9, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, 0), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, 0), (54, -1), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, -1), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, -1), (54, -1), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

Covered at level 19 : set()

After reduction : 
 pending  : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39]
 solution : [0, 2, 13, 10, 9, 17]


Solution : [0, 2, 13, 10, 9, 17] has cost 27.


Before backtrack at level 19
 pending : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39]
 solution : [0, 2, 13, 10, 9, 17]

After backtrack at level 19
 pending : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 17]


Invert decision for 17 at level 18


New level: 19
 pending : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]
 solution : [0, 2, 13, 10, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, -1), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, -1), (54, -1), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Covered at level 19 : set()

After reduction : 
 pending  : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]
 solution : [0, 2, 13, 10, 9]


Solution : [0, 2, 13, 10, 9] has cost 21.


Decide in level 19 among pending : [60, 4, 6, 5, 38, 16, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

Decide 16 with phase True at level 19

After decision at level 19
 pending : [60, 4, 6, 5, 38, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 16]


New level: 20
 pending : [60, 4, 6, 5, 38, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 16]


Before reduction : 
 pending  : [60, 4, 6, 5, 38, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 42, 43, 27, 56, 48, 55, 61, 45, 58, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 64), (41, -1), (42, 128), (43, 64), (44, 16), (45, 32), (46, -1), (47, -1), (48, 16), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 8), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, 0), (28, 32), (29, 64), (30, 32), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, 0), (39, 0), (40, 64), (41, -1), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 16), (52, -1), (53, 0), (54, -1), (55, 2), (56, 16), (57, 32), (58, 1), (59, 8), (60, 0), (61, 8)]

Covered at level 20 : {38, 39, 42, 43, 44, 45, 53, 27, 60}

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58]
 solution : [0, 2, 13, 10, 9, 16]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58]
 solution : [0, 2, 13, 10, 9, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, 0), (28, 32), (29, 64), (30, 32), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, 0), (39, 0), (40, 64), (41, -1), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 16), (52, -1), (53, 0), (54, -1), (55, 2), (56, 16), (57, 32), (58, 1), (59, 8), (60, 0), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, -1), (28, 32), (29, 64), (30, 32), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, -1), (40, 64), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 16), (52, -1), (53, -1), (54, -1), (55, 2), (56, 16), (57, 32), (58, 1), (59, 8), (60, -1), (61, 8)]

Covered at level 20 : set()

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58]
 solution : [0, 2, 13, 10, 9, 16]


Solution : [0, 2, 13, 10, 9, 16] has cost 27.


Before backtrack at level 20
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58]
 solution : [0, 2, 13, 10, 9, 16]

After backtrack at level 20
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 38, 42, 43, 27, 45, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 16]


Invert decision for 16 at level 19


New level: 20
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 38, 42, 43, 27, 45, 39, 44, 53]
 solution : [0, 2, 13, 10, 9]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 38, 42, 43, 27, 45, 39, 44, 53]
 solution : [0, 2, 13, 10, 9]

Essensial at level 20 : {38}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 32), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, -1), (28, 32), (29, 64), (30, 32), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, -1), (40, 64), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, 2), (49, -1), (50, 64), (51, 16), (52, -1), (53, -1), (54, -1), (55, 2), (56, 16), (57, 32), (58, 1), (59, 8), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, 1), (45, 0), (46, -1), (47, -1), (48, 4), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 2), (56, 64), (57, 32), (58, 128), (59, 8), (60, 2), (61, 8)]

Covered at level 20 : {45}

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 38]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 38]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, 1), (45, 0), (46, -1), (47, -1), (48, 4), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 2), (56, 64), (57, 32), (58, 128), (59, 8), (60, 2), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, 1), (45, -1), (46, -1), (47, -1), (48, 4), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 2), (56, 64), (57, 32), (58, 128), (59, 8), (60, 2), (61, 8)]

Covered at level 20 : set()

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 38]


Solution : [0, 2, 13, 10, 9, 38] has cost 31.


Before backtrack at level 20
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53]
 solution : [0, 2, 13, 10, 9, 38]

After backtrack at level 20
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 19
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 19
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 18
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 18
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 17
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 17
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 16
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 16
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 15
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 15
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 14
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 14
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 13
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 13
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 12
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 12
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 11
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 11
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 10
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 10
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32]
 solution : [0, 2, 13, 10, 9]


Before backtrack at level 9
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32]
 solution : [0, 2, 13, 10, 9]

After backtrack at level 9
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 32), (5, 64), (6, 64), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, 256), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 1), (40, 64), (41, -1), (42, 1), (43, 1), (44, 1), (45, -1), (46, -1), (47, -1), (48, 4), (49, -1), (50, 64), (51, 64), (52, -1), (53, 2), (54, -1), (55, 2), (56, 64), (57, 32), (58, 128), (59, 8), (60, 2), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10]


Solution : [0, 2, 13, 10] has cost 15.


Decide in level 9 among pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 8, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10, 8]


New level: 10
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 10 among pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54]
 solution : [0, 2, 13, 10, 8, 12]


New level: 11
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54]
 solution : [0, 2, 13, 10, 8, 12]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 22, 37, 24, 20, 34, 59, 35, 11, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54]
 solution : [0, 2, 13, 10, 8, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, 0), (23, 32), (24, 8), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, 0), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 11 : {11, 37, 22}

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54]
 solution : [0, 2, 13, 10, 8, 12]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54]
 solution : [0, 2, 13, 10, 8, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, 0), (23, 32), (24, 8), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, 0), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 32), (24, 8), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, -1), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54]
 solution : [0, 2, 13, 10, 8, 12]


Solution : [0, 2, 13, 10, 8, 12] has cost 26.


Before backtrack at level 11
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54]
 solution : [0, 2, 13, 10, 8, 12]

After backtrack at level 11
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 32), (24, 8), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, -1), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 11 among pending : [4, 6, 5, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [4, 6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 5]


New level: 12
 pending : [4, 6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 5]


Before reduction : 
 pending  : [4, 6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 48, 55, 61, 58, 60, 42, 43, 27, 39, 44, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 8), (43, 8), (44, 0), (45, 32), (46, 16), (47, 32), (48, 0), (49, 64), (50, 16), (51, 128), (52, 8), (53, 32), (54, 2), (55, 0), (56, 8), (57, 8), (58, 32), (59, 32), (60, 128), (61, 8)]

Covered at level 12 : {48, 4, 44, 55}

After reduction : 
 pending  : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 5]


Before reduction : 
 pending  : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 8), (43, 8), (44, 0), (45, 32), (46, 16), (47, 32), (48, 0), (49, 64), (50, 16), (51, 128), (52, 8), (53, 32), (54, 2), (55, 0), (56, 8), (57, 8), (58, 32), (59, 32), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 8), (43, 8), (44, -1), (45, 32), (46, 16), (47, 32), (48, -1), (49, 64), (50, 16), (51, 128), (52, 8), (53, 32), (54, 2), (55, -1), (56, 8), (57, 8), (58, 32), (59, 32), (60, 128), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 5]


Solution : [0, 2, 13, 10, 8, 5] has cost 26.


Before backtrack at level 12
 pending : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11]
 solution : [0, 2, 13, 10, 8, 5]

After backtrack at level 12
 pending : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 8), (43, 8), (44, -1), (45, 32), (46, 16), (47, 32), (48, -1), (49, 64), (50, 16), (51, 128), (52, 8), (53, 32), (54, 2), (55, -1), (56, 8), (57, 8), (58, 32), (59, 32), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 12 among pending : [6, 3, 50, 57, 21, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [6, 3, 50, 57, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 21]


New level: 13
 pending : [6, 3, 50, 57, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 21]


Before reduction : 
 pending  : [6, 3, 50, 57, 51, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 128), (33, 128), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 256), (47, 32), (48, 64), (49, 256), (50, 64), (51, 0), (52, 64), (53, 256), (54, 1), (55, 32), (56, 128), (57, 32), (58, 128), (59, 16), (60, 256), (61, 16)]

Covered at level 13 : {51}

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 21]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 128), (33, 128), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 256), (47, 32), (48, 64), (49, 256), (50, 64), (51, 0), (52, 64), (53, 256), (54, 1), (55, 32), (56, 128), (57, 32), (58, 128), (59, 16), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 128), (33, 128), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 256), (47, 32), (48, 64), (49, 256), (50, 64), (51, -1), (52, 64), (53, 256), (54, 1), (55, 32), (56, 32), (57, 32), (58, 128), (59, 16), (60, 256), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 21]


Solution : [0, 2, 13, 10, 8, 21] has cost 30.


Before backtrack at level 13
 pending : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44]
 solution : [0, 2, 13, 10, 8, 21]

After backtrack at level 13
 pending : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 128), (33, 128), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 256), (47, 32), (48, 64), (49, 256), (50, 64), (51, -1), (52, 64), (53, 256), (54, 1), (55, 32), (56, 32), (57, 32), (58, 128), (59, 16), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 13 among pending : [6, 3, 50, 57, 23, 14, 29, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 29 with phase True at level 13

After decision at level 13
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 29]


New level: 14
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 29]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, 64), (29, -1), (30, 128), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 1), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 29]


Solution : [0, 2, 13, 10, 8, 29] has cost 30.


Before backtrack at level 14
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 29]

After backtrack at level 14
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 29]


Invert decision for 29 at level 13


New level: 14
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, 64), (29, -1), (30, 128), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 1), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, -1), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 14 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 28, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, -1), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 28 with phase True at level 14

After decision at level 14
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 28]


New level: 15
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 28]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 26, 52, 54, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 28]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, -1), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 256), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 64), (47, 32), (48, 16), (49, 256), (50, 64), (51, 8), (52, 16), (53, 256), (54, 0), (55, 8), (56, 32), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 15 : {26, 54}

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 28]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 28]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 256), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 64), (47, 32), (48, 16), (49, 256), (50, 64), (51, 8), (52, 16), (53, 256), (54, 0), (55, 8), (56, 32), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 256), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 64), (47, 32), (48, 16), (49, 256), (50, 64), (51, 8), (52, 16), (53, 64), (54, -1), (55, 8), (56, 32), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 28]


Solution : [0, 2, 13, 10, 8, 28] has cost 30.


Before backtrack at level 15
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51]
 solution : [0, 2, 13, 10, 8, 28]

After backtrack at level 15
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 28]


Invert decision for 28 at level 14


New level: 15
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 256), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 16), (46, 64), (47, 32), (48, 16), (49, 256), (50, 64), (51, 8), (52, 16), (53, 64), (54, -1), (55, 8), (56, 32), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 15 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 30, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 30 with phase True at level 15

After decision at level 15
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 30]


New level: 16
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 30]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 40, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 30]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 64), (32, 32), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 16), (40, 0), (41, 64), (42, 16), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 16 : {40}

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 30]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 30]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 64), (32, 32), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 16), (40, 0), (41, 64), (42, 16), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 64), (32, 32), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 16), (40, -1), (41, 64), (42, 16), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 30]


Solution : [0, 2, 13, 10, 8, 30] has cost 30.


Before backtrack at level 16
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54]
 solution : [0, 2, 13, 10, 8, 30]

After backtrack at level 16
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 30]


Invert decision for 30 at level 15


New level: 16
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 64), (32, 32), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 16), (40, -1), (41, 64), (42, 16), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 16 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 60, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 60 with phase True at level 16

After decision at level 16
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 60]


New level: 17
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 60]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 59, 35, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 45, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 60]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 0), (36, 256), (37, 64), (38, 32), (39, 128), (40, 32), (41, 32), (42, 16), (43, 32), (44, 32), (45, 0), (46, 256), (47, 16), (48, 64), (49, 16), (50, 16), (51, 32), (52, 16), (53, 16), (54, 128), (55, 8), (56, 8), (57, 4), (58, 4), (59, 0), (60, -1), (61, 4)]

Covered at level 17 : {35, 59, 45}

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 60]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 60]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 0), (36, 256), (37, 64), (38, 32), (39, 128), (40, 32), (41, 32), (42, 16), (43, 32), (44, 32), (45, 0), (46, 256), (47, 16), (48, 64), (49, 16), (50, 16), (51, 32), (52, 16), (53, 16), (54, 128), (55, 8), (56, 8), (57, 4), (58, 4), (59, 0), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, -1), (36, 256), (37, 64), (38, 32), (39, 8), (40, 32), (41, 32), (42, 16), (43, 32), (44, 32), (45, -1), (46, 256), (47, 16), (48, 32), (49, 16), (50, 16), (51, 32), (52, 16), (53, 16), (54, 128), (55, 8), (56, 8), (57, 4), (58, 4), (59, -1), (60, -1), (61, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 60]


Solution : [0, 2, 13, 10, 8, 60] has cost 30.


Before backtrack at level 17
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40]
 solution : [0, 2, 13, 10, 8, 60]

After backtrack at level 17
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 60]


Invert decision for 60 at level 16


New level: 17
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 16), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, -1), (36, 256), (37, 64), (38, 32), (39, 8), (40, 32), (41, 32), (42, 16), (43, 32), (44, 32), (45, -1), (46, 256), (47, 16), (48, 32), (49, 16), (50, 16), (51, 32), (52, 16), (53, 16), (54, 128), (55, 8), (56, 8), (57, 4), (58, 4), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 17 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 42, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 42 with phase True at level 17

After decision at level 17
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 42]


New level: 18
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 42]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 42]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 128), (33, 128), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 4), (40, 16), (41, 32), (42, -1), (43, 16), (44, 16), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, -1), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 42]


Solution : [0, 2, 13, 10, 8, 42] has cost 30.


Before backtrack at level 18
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 42]

After backtrack at level 18
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 42]


Invert decision for 42 at level 17


New level: 18
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 128), (33, 128), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 4), (40, 16), (41, 32), (42, -1), (43, 16), (44, 16), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 18 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 43, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 43 with phase True at level 18

After decision at level 18
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 43]


New level: 19
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 43]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 44, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 43]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, -1), (43, -1), (44, 0), (45, 128), (46, 128), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, 32), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 19 : {44}

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 43]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 43]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, -1), (43, -1), (44, 0), (45, 128), (46, 128), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, 32), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, -1), (43, -1), (44, -1), (45, 128), (46, 128), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, 32), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 43]


Solution : [0, 2, 13, 10, 8, 43] has cost 30.


Before backtrack at level 19
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45]
 solution : [0, 2, 13, 10, 8, 43]

After backtrack at level 19
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 43]


Invert decision for 43 at level 18


New level: 19
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, 256), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, -1), (43, -1), (44, -1), (45, 128), (46, 128), (47, 256), (48, 16), (49, 256), (50, 64), (51, 128), (52, 32), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 19 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 27, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 27 with phase True at level 19

After decision at level 19
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 27]


New level: 20
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 27]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 27]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 16), (24, 128), (25, 128), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 128), (39, 32), (40, 32), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 128), (50, 16), (51, 128), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 64), (59, 64), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 27]


Solution : [0, 2, 13, 10, 8, 27] has cost 30.


Before backtrack at level 20
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 27]

After backtrack at level 20
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 27]


Invert decision for 27 at level 19


New level: 20
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 16), (24, 128), (25, 128), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 128), (37, 64), (38, 128), (39, 32), (40, 32), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 128), (50, 16), (51, 128), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 8), (58, 64), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 20 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 53, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 53 with phase True at level 20

After decision at level 20
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 53]


New level: 21
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 53]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 52, 22, 37, 11, 4, 48, 55, 51, 26, 54, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 53]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 32), (36, 64), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 32), (51, 128), (52, 0), (53, -1), (54, 0), (55, 16), (56, 128), (57, 16), (58, 64), (59, 16), (60, -1), (61, 128)]

Covered at level 21 : {52, 54}

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 53]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 53]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 32), (36, 64), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 32), (51, 128), (52, 0), (53, -1), (54, 0), (55, 16), (56, 128), (57, 16), (58, 64), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 32), (36, 64), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, -1), (43, -1), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 32), (51, 128), (52, -1), (53, -1), (54, -1), (55, 16), (56, 128), (57, 16), (58, 64), (59, 16), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 53]


Solution : [0, 2, 13, 10, 8, 53] has cost 30.


Before backtrack at level 21
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44]
 solution : [0, 2, 13, 10, 8, 53]

After backtrack at level 21
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 53]


Invert decision for 53 at level 20


New level: 21
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 32), (36, 64), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, -1), (43, -1), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 32), (51, 128), (52, -1), (53, -1), (54, -1), (55, 16), (56, 128), (57, 16), (58, 64), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 21 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 16, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 16 with phase True at level 21

After decision at level 21
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 16]


New level: 22
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 16]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 38, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 16]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 128), (37, 16), (38, 0), (39, 128), (40, 64), (41, 4), (42, -1), (43, -1), (44, 32), (45, 4), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 64), (52, 32), (53, -1), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, -1), (61, 128)]

Covered at level 22 : {38}

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 16]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 16]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 128), (37, 16), (38, 0), (39, 128), (40, 64), (41, 4), (42, -1), (43, -1), (44, 32), (45, 4), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 64), (52, 32), (53, -1), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 128), (37, 16), (38, -1), (39, 128), (40, 64), (41, 4), (42, -1), (43, -1), (44, 32), (45, 4), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 64), (52, 32), (53, -1), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, -1), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 16]


Solution : [0, 2, 13, 10, 8, 16] has cost 26.


Before backtrack at level 22
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 16]

After backtrack at level 22
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8, 16]


Invert decision for 16 at level 21


New level: 22
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 16), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 128), (37, 16), (38, -1), (39, 128), (40, 64), (41, 4), (42, -1), (43, -1), (44, 32), (45, 4), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 64), (52, 32), (53, -1), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8]


Solution : [0, 2, 13, 10, 8] has cost 20.


Decide in level 22 among pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 17, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 17 with phase True at level 22

After decision at level 22
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8, 17]


New level: 23
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8, 17]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8, 17]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, -1), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 64), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 32), (34, 128), (35, 128), (36, 64), (37, 64), (38, 64), (39, 128), (40, 64), (41, 32), (42, -1), (43, -1), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, -1), (61, 128)]

Covered at level 23 : set()

After reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8, 17]


Solution : [0, 2, 13, 10, 8, 17] has cost 26.


Before backtrack at level 23
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8, 17]

After backtrack at level 23
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8, 17]


Invert decision for 17 at level 22


New level: 23
 pending : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8]


Before reduction : 
 pending  : [6, 3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 4, 48, 55, 51, 26, 40, 59, 35, 45, 44, 52, 54, 38]
 solution : [0, 2, 13, 10, 8]

Essensial at level 23 : {4, 38}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 128), (24, 128), (25, 64), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 32), (34, 128), (35, 128), (36, 64), (37, 64), (38, 64), (39, 128), (40, 64), (41, 32), (42, -1), (43, -1), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 128), (52, 64), (53, -1), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 128), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 8), (36, 256), (37, 16), (38, -1), (39, 64), (40, 64), (41, 128), (42, -1), (43, -1), (44, 32), (45, 16), (46, 256), (47, 64), (48, 32), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 16), (55, 0), (56, 2), (57, 2), (58, 8), (59, 8), (60, -1), (61, 2)]

Covered at level 23 : {6, 55}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 4, 38]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 4, 38]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 128), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 8), (36, 256), (37, 16), (38, -1), (39, 64), (40, 64), (41, 128), (42, -1), (43, -1), (44, 32), (45, 16), (46, 256), (47, 64), (48, 32), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 16), (55, 0), (56, 2), (57, 2), (58, 8), (59, 8), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 128), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 8), (36, 256), (37, 16), (38, -1), (39, 64), (40, 64), (41, 128), (42, -1), (43, -1), (44, 32), (45, 16), (46, 256), (47, 64), (48, 32), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 16), (55, -1), (56, 2), (57, 2), (58, 8), (59, 8), (60, -1), (61, 2)]

Covered at level 23 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 4, 38]


Solution : [0, 2, 13, 10, 8, 4, 38] has cost 39.


Before backtrack at level 23
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54]
 solution : [0, 2, 13, 10, 8, 4, 38]

After backtrack at level 23
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 22
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 22
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 21
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 21
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 20
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 20
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 19
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 19
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 18
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 18
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 17
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 17
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 16
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 16
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 15
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 15
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 14
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 14
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 13
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 13
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 12
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 12
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 11
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 11
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 8]


Before backtrack at level 10
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 8]

After backtrack at level 10
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 12]
 solution : [0, 2, 13, 10, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 12]
 solution : [0, 2, 13, 10]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 12]
 solution : [0, 2, 13, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, -1), (22, 32), (23, 128), (24, 128), (25, 128), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 256), (32, 256), (33, 128), (34, 128), (35, 8), (36, 256), (37, 16), (38, -1), (39, 64), (40, 64), (41, 128), (42, -1), (43, -1), (44, 32), (45, 16), (46, 256), (47, 64), (48, 32), (49, 256), (50, 64), (51, 128), (52, 64), (53, -1), (54, 16), (55, -1), (56, 2), (57, 2), (58, 8), (59, 8), (60, -1), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 12]
 solution : [0, 2, 13, 10]


Solution : [0, 2, 13, 10] has cost 15.


Decide in level 10 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12]


New level: 11
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 22, 37, 11, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 0), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, 0), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 11 : {11, 37, 22}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 0), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, 0), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 11 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 49, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 49 with phase True at level 11

After decision at level 11
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12, 49]


New level: 12
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12, 49]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 58, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 2), (28, 64), (29, 256), (30, 128), (31, 16), (32, 32), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, 32), (39, 64), (40, 1), (41, 16), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 4), (51, 2), (52, 64), (53, 64), (54, 128), (55, 16), (56, 16), (57, 4), (58, 0), (59, 32), (60, 64), (61, 128)]

Covered at level 12 : {58}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12, 49]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 2), (28, 64), (29, 256), (30, 128), (31, 16), (32, 32), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, 32), (39, 64), (40, 1), (41, 16), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 4), (51, 2), (52, 64), (53, 64), (54, 128), (55, 16), (56, 16), (57, 4), (58, 0), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 2), (28, 64), (29, 256), (30, 128), (31, 16), (32, 32), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, 32), (39, 64), (40, 1), (41, 8), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 4), (51, 2), (52, 64), (53, 64), (54, 128), (55, 16), (56, 16), (57, 4), (58, -1), (59, 32), (60, 64), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12, 49]


Solution : [0, 2, 13, 10, 12, 49] has cost 31.


Before backtrack at level 12
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5]
 solution : [0, 2, 13, 10, 12, 49]

After backtrack at level 12
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 49]


Invert decision for 49 at level 11


New level: 12
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 2), (28, 64), (29, 256), (30, 128), (31, 16), (32, 32), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, 32), (39, 64), (40, 1), (41, 8), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, -1), (50, 4), (51, 2), (52, 64), (53, 64), (54, 128), (55, 16), (56, 16), (57, 4), (58, -1), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 12 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 25, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 25 with phase True at level 12

After decision at level 12
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 25]


New level: 13
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 25]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 51, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 128), (27, 64), (28, 32), (29, 64), (30, 64), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 8), (37, -1), (38, 16), (39, 128), (40, 1), (41, 64), (42, 256), (43, 64), (44, 64), (45, 4), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 0), (52, 64), (53, 32), (54, 2), (55, 16), (56, 32), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

Covered at level 13 : {51}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 25]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 25]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 128), (27, 64), (28, 32), (29, 64), (30, 64), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 8), (37, -1), (38, 16), (39, 128), (40, 1), (41, 64), (42, 256), (43, 64), (44, 64), (45, 4), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 0), (52, 64), (53, 32), (54, 2), (55, 16), (56, 32), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, 32), (28, 32), (29, 64), (30, 64), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 8), (37, -1), (38, 16), (39, 128), (40, 1), (41, 64), (42, 256), (43, 64), (44, 64), (45, 4), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, -1), (52, 64), (53, 32), (54, 2), (55, 16), (56, 16), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 25]


Solution : [0, 2, 13, 10, 12, 25] has cost 31.


Before backtrack at level 13
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 25]

After backtrack at level 13
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 25]


Invert decision for 25 at level 12


New level: 13
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 16), (17, 256), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, 32), (28, 32), (29, 64), (30, 64), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 8), (37, -1), (38, 16), (39, 128), (40, 1), (41, 64), (42, 256), (43, 64), (44, 64), (45, 4), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, -1), (52, 64), (53, 32), (54, 2), (55, 16), (56, 16), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 13 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 41, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 41 with phase True at level 13

After decision at level 13
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 41]


New level: 14
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 41]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 41]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 32), (17, 128), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 64), (31, 16), (32, 32), (33, 16), (34, 32), (35, 32), (36, 128), (37, -1), (38, 16), (39, 64), (40, 1), (41, -1), (42, 128), (43, 32), (44, 32), (45, 64), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 4), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 64), (59, 32), (60, 128), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 41]


Solution : [0, 2, 13, 10, 12, 41] has cost 31.


Before backtrack at level 14
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 41]

After backtrack at level 14
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 41]


Invert decision for 41 at level 13


New level: 14
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 32), (17, 128), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 64), (31, 16), (32, 32), (33, 16), (34, 32), (35, 32), (36, 128), (37, -1), (38, 16), (39, 64), (40, 1), (41, -1), (42, 128), (43, 32), (44, 32), (45, 64), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 4), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 64), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 14 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 47, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 47 with phase True at level 14

After decision at level 14
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 47]


New level: 15
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 47]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 61, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 45, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 51]
 solution : [0, 2, 13, 10, 12, 47]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, 256), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 32), (17, 128), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 64), (27, 256), (28, 32), (29, 1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 8), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, 64), (43, 64), (44, 64), (45, 0), (46, 16), (47, -1), (48, 16), (49, -1), (50, 64), (51, 0), (52, 64), (53, 256), (54, 1), (55, 4), (56, 4), (57, 32), (58, 128), (59, 8), (60, 64), (61, 0)]

Covered at level 15 : {51, 45, 61}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 47]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 47]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 32), (17, 128), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 64), (27, 256), (28, 32), (29, 1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 8), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, 64), (43, 64), (44, 64), (45, 0), (46, 16), (47, -1), (48, 16), (49, -1), (50, 64), (51, 0), (52, 64), (53, 256), (54, 1), (55, 4), (56, 4), (57, 32), (58, 128), (59, 8), (60, 64), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 32), (17, 128), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 64), (27, 256), (28, 32), (29, 1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 8), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, 64), (43, 64), (44, 64), (45, -1), (46, 16), (47, -1), (48, 16), (49, -1), (50, 64), (51, -1), (52, 64), (53, 256), (54, 1), (55, 4), (56, 4), (57, 32), (58, 128), (59, 8), (60, 64), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 47]


Solution : [0, 2, 13, 10, 12, 47] has cost 31.


Before backtrack at level 15
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58]
 solution : [0, 2, 13, 10, 12, 47]

After backtrack at level 15
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 47]


Invert decision for 47 at level 14


New level: 15
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 32), (17, 128), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 64), (27, 256), (28, 32), (29, 1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 8), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, 64), (43, 64), (44, 64), (45, -1), (46, 16), (47, -1), (48, 16), (49, -1), (50, 64), (51, -1), (52, 64), (53, 256), (54, 1), (55, 4), (56, 4), (57, 32), (58, 128), (59, 8), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 15 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 17, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 17 with phase True at level 15

After decision at level 15
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 17]


New level: 16
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 17]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 38, 6, 55, 16, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 64), (27, 64), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, 0), (39, 128), (40, 8), (41, -1), (42, 256), (43, 32), (44, 32), (45, 4), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 4), (52, 64), (53, 32), (54, 128), (55, 16), (56, 16), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

Covered at level 16 : {16, 38}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 17]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 64), (27, 64), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, 0), (39, 128), (40, 8), (41, -1), (42, 256), (43, 32), (44, 32), (45, 4), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 4), (52, 64), (53, 32), (54, 128), (55, 16), (56, 16), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 64), (27, 64), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 128), (40, 8), (41, -1), (42, 256), (43, 32), (44, 32), (45, 4), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 4), (52, 64), (53, 32), (54, 128), (55, 16), (56, 16), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 17]


Solution : [0, 2, 13, 10, 12, 17] has cost 27.


Before backtrack at level 16
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51]
 solution : [0, 2, 13, 10, 12, 17]

After backtrack at level 16
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]
 solution : [0, 2, 13, 10, 12, 17]


Invert decision for 17 at level 15


New level: 16
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]
 solution : [0, 2, 13, 10, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 64), (27, 64), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 32), (35, 32), (36, 16), (37, -1), (38, -1), (39, 128), (40, 8), (41, -1), (42, 256), (43, 32), (44, 32), (45, 4), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 4), (52, 64), (53, 32), (54, 128), (55, 16), (56, 16), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 16 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 53, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 53 with phase True at level 16

After decision at level 16
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]
 solution : [0, 2, 13, 10, 12, 53]


New level: 17
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]
 solution : [0, 2, 13, 10, 12, 53]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 36, 31, 32, 48, 26, 40, 59, 35, 44, 52, 54, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 21, 5, 58, 61, 45, 51, 38, 16]
 solution : [0, 2, 13, 10, 12, 53]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 0), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 2), (35, 4), (36, 0), (37, -1), (38, 32), (39, 128), (40, 1), (41, -1), (42, 256), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 0), (52, 4), (53, -1), (54, 0), (55, 16), (56, 16), (57, 32), (58, 64), (59, 4), (60, 16), (61, 128)]

Covered at level 17 : {51, 36, 21, 54}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16]
 solution : [0, 2, 13, 10, 12, 53]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16]
 solution : [0, 2, 13, 10, 12, 53]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, 0), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 2), (35, 4), (36, 0), (37, -1), (38, 32), (39, 128), (40, 1), (41, -1), (42, 256), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 0), (52, 4), (53, -1), (54, 0), (55, 16), (56, 16), (57, 32), (58, 64), (59, 4), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 2), (35, 4), (36, -1), (37, -1), (38, 32), (39, 64), (40, 1), (41, -1), (42, 256), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, -1), (52, 4), (53, -1), (54, -1), (55, 16), (56, 16), (57, 32), (58, 64), (59, 4), (60, 16), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16]
 solution : [0, 2, 13, 10, 12, 53]


Solution : [0, 2, 13, 10, 12, 53] has cost 31.


Before backtrack at level 17
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16]
 solution : [0, 2, 13, 10, 12, 53]

After backtrack at level 17
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 53]


Invert decision for 53 at level 16


New level: 17
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 2), (21, -1), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, 256), (28, 32), (29, 256), (30, 128), (31, 16), (32, 64), (33, 16), (34, 2), (35, 4), (36, -1), (37, -1), (38, 32), (39, 64), (40, 1), (41, -1), (42, 256), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, -1), (52, 4), (53, -1), (54, -1), (55, 16), (56, 16), (57, 32), (58, 64), (59, 4), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 17 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 27, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 27 with phase True at level 17

After decision at level 17
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 27]


New level: 18
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 27]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 27]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 2), (24, 16), (25, -1), (26, 64), (27, -1), (28, 32), (29, 256), (30, 128), (31, 32), (32, 32), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, 32), (39, 128), (40, 1), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 4), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 64), (59, 32), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 27]


Solution : [0, 2, 13, 10, 12, 27] has cost 31.


Before backtrack at level 18
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 27]

After backtrack at level 18
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 27]


Invert decision for 27 at level 17


New level: 18
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 2), (24, 16), (25, -1), (26, 64), (27, -1), (28, 32), (29, 256), (30, 128), (31, 32), (32, 32), (33, 32), (34, 32), (35, 32), (36, 32), (37, -1), (38, 32), (39, 128), (40, 1), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 4), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 64), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 18 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 42, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 42 with phase True at level 18

After decision at level 18
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 42]


New level: 19
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 42]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 40, 59, 35, 44, 52, 4, 6, 55, 43, 60, 30, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 42]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, 256), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 64), (24, 8), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 0), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 128), (37, -1), (38, 32), (39, 4), (40, 0), (41, -1), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 2), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 128), (61, 64)]

Covered at level 19 : {40, 30}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 42]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 42]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 64), (24, 8), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 0), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 128), (37, -1), (38, 32), (39, 4), (40, 0), (41, -1), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 2), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 64), (24, 8), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, -1), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 128), (37, -1), (38, 32), (39, 4), (40, -1), (41, -1), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 2), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 128), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 42]


Solution : [0, 2, 13, 10, 12, 42] has cost 31.


Before backtrack at level 19
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51]
 solution : [0, 2, 13, 10, 12, 42]

After backtrack at level 19
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]
 solution : [0, 2, 13, 10, 12, 42]


Invert decision for 42 at level 18


New level: 19
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]
 solution : [0, 2, 13, 10, 12]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 64), (24, 8), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, -1), (31, 8), (32, 2), (33, 8), (34, 32), (35, 16), (36, 128), (37, -1), (38, 32), (39, 4), (40, -1), (41, -1), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 2), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 16), (58, 128), (59, 16), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 19 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 60, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 60 with phase True at level 19

After decision at level 19
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]
 solution : [0, 2, 13, 10, 12, 60]


New level: 20
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]
 solution : [0, 2, 13, 10, 12, 60]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 45, 38, 16, 36, 54, 21, 51, 40, 30]
 solution : [0, 2, 13, 10, 12, 60]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, -1), (28, 32), (29, 256), (30, 64), (31, 16), (32, 64), (33, 16), (34, 32), (35, 4), (36, 8), (37, -1), (38, 4), (39, 128), (40, 1), (41, -1), (42, -1), (43, 32), (44, 32), (45, 0), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 0), (52, 64), (53, -1), (54, 2), (55, 8), (56, 8), (57, 32), (58, 4), (59, 4), (60, -1), (61, 4)]

Covered at level 20 : {51, 45}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30]
 solution : [0, 2, 13, 10, 12, 60]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30]
 solution : [0, 2, 13, 10, 12, 60]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, -1), (28, 32), (29, 256), (30, 64), (31, 16), (32, 64), (33, 16), (34, 32), (35, 4), (36, 8), (37, -1), (38, 4), (39, 128), (40, 1), (41, -1), (42, -1), (43, 32), (44, 32), (45, 0), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, 0), (52, 64), (53, -1), (54, 2), (55, 8), (56, 8), (57, 32), (58, 4), (59, 4), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, -1), (28, 32), (29, 256), (30, 64), (31, 16), (32, 64), (33, 16), (34, 32), (35, 4), (36, 8), (37, -1), (38, 4), (39, 128), (40, 1), (41, -1), (42, -1), (43, 32), (44, 32), (45, -1), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, -1), (52, 64), (53, -1), (54, 2), (55, 8), (56, 8), (57, 32), (58, 4), (59, 4), (60, -1), (61, 4)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30]
 solution : [0, 2, 13, 10, 12, 60]


Solution : [0, 2, 13, 10, 12, 60] has cost 31.


Before backtrack at level 20
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30]
 solution : [0, 2, 13, 10, 12, 60]

After backtrack at level 20
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 60]


Invert decision for 60 at level 19


New level: 20
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 4), (17, -1), (18, -1), (19, -1), (20, 2), (21, 2), (22, -1), (23, 64), (24, 2), (25, -1), (26, 64), (27, -1), (28, 32), (29, 256), (30, 64), (31, 16), (32, 64), (33, 16), (34, 32), (35, 4), (36, 8), (37, -1), (38, 4), (39, 128), (40, 1), (41, -1), (42, -1), (43, 32), (44, 32), (45, -1), (46, 32), (47, -1), (48, 32), (49, -1), (50, 64), (51, -1), (52, 64), (53, -1), (54, 2), (55, 8), (56, 8), (57, 32), (58, 4), (59, 4), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 20 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 29, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 128)]

Decide 29 with phase True at level 20

After decision at level 20
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 29]


New level: 21
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 29]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 29]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, -1), (43, 64), (44, 64), (45, 64), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 0), (52, 64), (53, -1), (54, 1), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 4)]

Covered at level 21 : {51}

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45]
 solution : [0, 2, 13, 10, 12, 29]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45]
 solution : [0, 2, 13, 10, 12, 29]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, -1), (43, 64), (44, 64), (45, 64), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 0), (52, 64), (53, -1), (54, 1), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, -1), (43, 64), (44, 64), (45, 4), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, -1), (52, 64), (53, -1), (54, 1), (55, 16), (56, 16), (57, 32), (58, 128), (59, 8), (60, -1), (61, 4)]

Covered at level 21 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45]
 solution : [0, 2, 13, 10, 12, 29]


Solution : [0, 2, 13, 10, 12, 29] has cost 31.


Before backtrack at level 21
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45]
 solution : [0, 2, 13, 10, 12, 29]

After backtrack at level 21
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 29]


Invert decision for 29 at level 20


New level: 21
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 4), (21, 1), (22, -1), (23, 64), (24, 4), (25, -1), (26, 32), (27, -1), (28, 16), (29, -1), (30, 32), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 2), (41, -1), (42, -1), (43, 64), (44, 64), (45, 4), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, -1), (52, 64), (53, -1), (54, 1), (55, 16), (56, 16), (57, 32), (58, 128), (59, 8), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, -1), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]


Solution : [0, 2, 13, 10, 12] has cost 21.


Decide in level 21 among pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 5, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, -1), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 128)]

Decide 5 with phase True at level 21

After decision at level 21
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 5]


New level: 22
 pending : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 5]


Before reduction : 
 pending  : [3, 50, 57, 23, 14, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 26, 59, 35, 44, 52, 4, 6, 55, 43, 28, 58, 61, 38, 16, 36, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 5]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 16), (21, 64), (22, -1), (23, 64), (24, 16), (25, -1), (26, 128), (27, -1), (28, 64), (29, -1), (30, 128), (31, 32), (32, 64), (33, 32), (34, 32), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, -1), (42, -1), (43, 64), (44, 64), (45, 128), (46, 64), (47, -1), (48, 64), (49, -1), (50, 64), (51, 8), (52, 64), (53, -1), (54, 128), (55, 32), (56, 32), (57, 32), (58, 128), (59, 32), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 1), (24, 0), (25, -1), (26, 2), (27, -1), (28, 2), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 1), (37, -1), (38, 32), (39, 0), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 0), (53, -1), (54, 0), (55, 0), (56, 0), (57, 0), (58, 4), (59, 0), (60, -1), (61, 0)]

Covered at level 22 : {3, 4, 6, 20, 21, 24, 30, 31, 32, 33, 34, 35, 39, 40, 43, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 61}

After reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36]
 solution : [0, 2, 13, 10, 12, 5]


Before reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36]
 solution : [0, 2, 13, 10, 12, 5]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 1), (24, 0), (25, -1), (26, 2), (27, -1), (28, 2), (29, -1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 1), (37, -1), (38, 32), (39, 0), (40, 0), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, 0), (47, -1), (48, 0), (49, -1), (50, 0), (51, 0), (52, 0), (53, -1), (54, 0), (55, 0), (56, 0), (57, 0), (58, 4), (59, 0), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, -1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1), (37, -1), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36]
 solution : [0, 2, 13, 10, 12, 5]


Solution : [0, 2, 13, 10, 12, 5] has cost 27.


Before backtrack at level 22
 pending : [23, 14, 26, 28, 58, 38, 16, 36]
 solution : [0, 2, 13, 10, 12, 5]

After backtrack at level 22
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 3, 50, 57, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 59, 35, 44, 52, 4, 6, 55, 43, 61, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12, 5]


Invert decision for 5 at level 21


New level: 22
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 3, 50, 57, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 59, 35, 44, 52, 4, 6, 55, 43, 61, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]


Before reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36, 3, 50, 57, 24, 20, 34, 33, 56, 39, 46, 31, 32, 48, 59, 35, 44, 52, 4, 6, 55, 43, 61, 54, 21, 40, 30, 45, 51]
 solution : [0, 2, 13, 10, 12]

Essensial at level 22 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, -1), (28, 2), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1), (37, -1), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 2), (22, -1), (23, 64), (24, 0), (25, -1), (26, 64), (27, -1), (28, 64), (29, -1), (30, 8), (31, 16), (32, 8), (33, 16), (34, 4), (35, 0), (36, 128), (37, -1), (38, 32), (39, 16), (40, 0), (41, -1), (42, -1), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 8), (51, 0), (52, 8), (53, -1), (54, 4), (55, 0), (56, 0), (57, 0), (58, 8), (59, 0), (60, -1), (61, 0)]

Covered at level 22 : {3, 35, 6, 40, 51, 20, 55, 24, 57, 56, 59, 61}

After reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45]
 solution : [0, 2, 13, 10, 12, 4]


Before reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45]
 solution : [0, 2, 13, 10, 12, 4]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 0), (21, 2), (22, -1), (23, 64), (24, 0), (25, -1), (26, 64), (27, -1), (28, 64), (29, -1), (30, 8), (31, 16), (32, 8), (33, 16), (34, 4), (35, 0), (36, 128), (37, -1), (38, 32), (39, 16), (40, 0), (41, -1), (42, -1), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 8), (51, 0), (52, 8), (53, -1), (54, 4), (55, 0), (56, 0), (57, 0), (58, 8), (59, 0), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, 64), (24, -1), (25, -1), (26, 64), (27, -1), (28, 64), (29, -1), (30, 8), (31, 16), (32, 8), (33, 16), (34, 4), (35, -1), (36, 128), (37, -1), (38, 32), (39, 16), (40, -1), (41, -1), (42, -1), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 8), (51, -1), (52, 8), (53, -1), (54, 4), (55, -1), (56, -1), (57, -1), (58, 8), (59, -1), (60, -1), (61, -1)]

Covered at level 22 : set()

After reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45]
 solution : [0, 2, 13, 10, 12, 4]


Solution : [0, 2, 13, 10, 12, 4] has cost 30.


Before backtrack at level 22
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45]
 solution : [0, 2, 13, 10, 12, 4]

After backtrack at level 22
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 21
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 21
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 20
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 20
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 19
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 19
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 18
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 18
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 17
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 17
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 16
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 16
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 15
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 15
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 14
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 14
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 13
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 13
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 12
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 12
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25]
 solution : [0, 2, 13, 10, 12]


Before backtrack at level 11
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25]
 solution : [0, 2, 13, 10, 12]

After backtrack at level 11
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10]


Before reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, 64), (24, -1), (25, -1), (26, 64), (27, -1), (28, 64), (29, -1), (30, 8), (31, 16), (32, 8), (33, 16), (34, 4), (35, -1), (36, 128), (37, -1), (38, 32), (39, 16), (40, -1), (41, -1), (42, -1), (43, 32), (44, 32), (45, 8), (46, 32), (47, -1), (48, 32), (49, -1), (50, 8), (51, -1), (52, 8), (53, -1), (54, 4), (55, -1), (56, -1), (57, -1), (58, 8), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10]


Solution : [0, 2, 13, 10] has cost 15.


Decide in level 11 among pending : [23, 14, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [23, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 14]


New level: 12
 pending : [23, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 32), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, 256), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 12 among pending : [23, 26, 28, 58, 38, 16, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, 256), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [23, 26, 28, 58, 38, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 14, 16]


New level: 13
 pending : [23, 26, 28, 58, 38, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 14, 16]


Before reduction : 
 pending  : [23, 26, 28, 58, 38, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 37, 11, 49]
 solution : [0, 2, 13, 10, 14, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, 256), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 16), (24, 16), (25, 32), (26, 16), (27, 16), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 64), (34, 32), (35, 256), (36, 128), (37, 0), (38, 0), (39, 128), (40, 4), (41, 4), (42, 256), (43, 64), (44, 32), (45, 4), (46, 64), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

Covered at level 13 : {11, 37, 38}

After reduction : 
 pending  : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49]
 solution : [0, 2, 13, 10, 14, 16]


Before reduction : 
 pending  : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49]
 solution : [0, 2, 13, 10, 14, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 16), (24, 16), (25, 32), (26, 16), (27, 16), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 64), (34, 32), (35, 256), (36, 128), (37, 0), (38, 0), (39, 128), (40, 4), (41, 4), (42, 256), (43, 64), (44, 32), (45, 4), (46, 64), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 16), (24, 16), (25, 32), (26, 16), (27, 16), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 64), (34, 32), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, 256), (43, 64), (44, 32), (45, 4), (46, 64), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49]
 solution : [0, 2, 13, 10, 14, 16]


Solution : [0, 2, 13, 10, 14, 16] has cost 27.


Before backtrack at level 13
 pending : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49]
 solution : [0, 2, 13, 10, 14, 16]

After backtrack at level 13
 pending : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 16), (24, 16), (25, 32), (26, 16), (27, 16), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 64), (34, 32), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, 256), (43, 64), (44, 32), (45, 4), (46, 64), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, 256), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 13 among pending : [23, 26, 28, 58, 36, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, 256), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 36 with phase True at level 13

After decision at level 13
 pending : [23, 26, 28, 58, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 36]


New level: 14
 pending : [23, 26, 28, 58, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 36]


Before reduction : 
 pending  : [23, 26, 28, 58, 50, 34, 33, 39, 46, 31, 32, 48, 44, 52, 43, 54, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 36]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, 256), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 8), (24, 16), (25, 64), (26, 32), (27, 64), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 0), (35, 256), (36, -1), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 256), (50, 32), (51, 4), (52, 2), (53, 2), (54, 0), (55, 16), (56, 64), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 14 : {34, 54}

After reduction : 
 pending  : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 36]


Before reduction : 
 pending  : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 36]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 8), (24, 16), (25, 64), (26, 32), (27, 64), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 0), (35, 256), (36, -1), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 256), (50, 32), (51, 4), (52, 2), (53, 2), (54, 0), (55, 16), (56, 64), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 128), (23, 8), (24, 16), (25, 64), (26, 32), (27, 64), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, -1), (35, 256), (36, -1), (37, 32), (38, 128), (39, 16), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 32), (46, 128), (47, 256), (48, 32), (49, 256), (50, 32), (51, 4), (52, 2), (53, 2), (54, -1), (55, 16), (56, 64), (57, 16), (58, 128), (59, 64), (60, 256), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 36]


Solution : [0, 2, 13, 10, 14, 36] has cost 31.


Before backtrack at level 14
 pending : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11]
 solution : [0, 2, 13, 10, 14, 36]

After backtrack at level 14
 pending : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]
 solution : [0, 2, 13, 10, 14, 36]


Invert decision for 36 at level 13


New level: 14
 pending : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]
 solution : [0, 2, 13, 10, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 128), (23, 8), (24, 16), (25, 64), (26, 32), (27, 64), (28, 128), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, -1), (35, 256), (36, -1), (37, 32), (38, 128), (39, 16), (40, 4), (41, 256), (42, 128), (43, 256), (44, 64), (45, 32), (46, 128), (47, 256), (48, 32), (49, 256), (50, 32), (51, 4), (52, 2), (53, 2), (54, -1), (55, 16), (56, 64), (57, 16), (58, 128), (59, 64), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 14 among pending : [23, 26, 28, 58, 50, 33, 39, 46, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 46 with phase True at level 14

After decision at level 14
 pending : [23, 26, 28, 58, 50, 33, 39, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]
 solution : [0, 2, 13, 10, 14, 46]


New level: 15
 pending : [23, 26, 28, 58, 50, 33, 39, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]
 solution : [0, 2, 13, 10, 14, 46]


Before reduction : 
 pending  : [23, 26, 28, 58, 50, 33, 39, 31, 32, 48, 44, 52, 43, 21, 30, 45, 4, 3, 57, 24, 20, 56, 59, 35, 6, 55, 61, 40, 51, 5, 29, 60, 42, 27, 53, 17, 47, 41, 25, 22, 49, 38, 37, 11, 34, 54]
 solution : [0, 2, 13, 10, 14, 46]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, 32), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 256), (26, 0), (27, 128), (28, 0), (29, 0), (30, 256), (31, 256), (32, 256), (33, 4), (34, 16), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, 1), (44, 0), (45, 0), (46, -1), (47, 0), (48, 0), (49, 256), (50, 32), (51, 0), (52, 4), (53, 128), (54, 0), (55, 0), (56, 0), (57, 16), (58, 128), (59, 16), (60, 64), (61, 0)]

Covered at level 15 : {44, 45, 47, 48, 29, 51, 54, 55, 56, 26, 28, 61}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34]
 solution : [0, 2, 13, 10, 14, 46]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34]
 solution : [0, 2, 13, 10, 14, 46]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, 32), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 256), (26, 0), (27, 128), (28, 0), (29, 0), (30, 256), (31, 256), (32, 256), (33, 4), (34, 16), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, 1), (44, 0), (45, 0), (46, -1), (47, 0), (48, 0), (49, 256), (50, 32), (51, 0), (52, 4), (53, 128), (54, 0), (55, 0), (56, 0), (57, 16), (58, 128), (59, 16), (60, 64), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, 32), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 256), (26, -1), (27, 128), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 4), (34, 16), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 256), (50, 32), (51, -1), (52, 4), (53, 128), (54, -1), (55, -1), (56, -1), (57, 16), (58, 128), (59, 16), (60, 64), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34]
 solution : [0, 2, 13, 10, 14, 46]


Solution : [0, 2, 13, 10, 14, 46] has cost 31.


Before backtrack at level 15
 pending : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34]
 solution : [0, 2, 13, 10, 14, 46]

After backtrack at level 15
 pending : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 46]


Invert decision for 46 at level 14


New level: 15
 pending : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, 32), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 256), (26, -1), (27, 128), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 4), (34, 16), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 256), (50, 32), (51, -1), (52, 4), (53, 128), (54, -1), (55, -1), (56, -1), (57, 16), (58, 128), (59, 16), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 15 among pending : [23, 58, 50, 33, 39, 31, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 31 with phase True at level 15

After decision at level 15
 pending : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 31]


New level: 16
 pending : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 31]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 31]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 16), (24, 64), (25, 256), (26, 16), (27, 128), (28, 64), (29, 128), (30, 64), (31, -1), (32, 128), (33, 8), (34, 16), (35, 256), (36, -1), (37, 16), (38, 128), (39, 128), (40, 4), (41, 256), (42, 256), (43, 32), (44, 16), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 32), (51, 16), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 31]


Solution : [0, 2, 13, 10, 14, 31] has cost 31.


Before backtrack at level 16
 pending : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 31]

After backtrack at level 16
 pending : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 31]


Invert decision for 31 at level 15


New level: 16
 pending : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 16), (24, 64), (25, 256), (26, 16), (27, 128), (28, 64), (29, 128), (30, 64), (31, -1), (32, 128), (33, 8), (34, 16), (35, 256), (36, -1), (37, 16), (38, 128), (39, 128), (40, 4), (41, 256), (42, 256), (43, 32), (44, 16), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 32), (51, 16), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 16 among pending : [23, 58, 50, 33, 39, 32, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 32 with phase True at level 16

After decision at level 16
 pending : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 32]


New level: 17
 pending : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 32]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 40, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 32]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 8), (31, -1), (32, -1), (33, 16), (34, 32), (35, 128), (36, -1), (37, 16), (38, 128), (39, 8), (40, 0), (41, 64), (42, 32), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 17 : {40}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 32]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 32]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 8), (31, -1), (32, -1), (33, 16), (34, 32), (35, 128), (36, -1), (37, 16), (38, 128), (39, 8), (40, 0), (41, 64), (42, 32), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 8), (31, -1), (32, -1), (33, 16), (34, 32), (35, 128), (36, -1), (37, 16), (38, 128), (39, 8), (40, -1), (41, 64), (42, 32), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 32]


Solution : [0, 2, 13, 10, 14, 32] has cost 31.


Before backtrack at level 17
 pending : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54]
 solution : [0, 2, 13, 10, 14, 32]

After backtrack at level 17
 pending : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 32]


Invert decision for 32 at level 16


New level: 17
 pending : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 8), (31, -1), (32, -1), (33, 16), (34, 32), (35, 128), (36, -1), (37, 16), (38, 128), (39, 8), (40, -1), (41, 64), (42, 32), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 17 among pending : [23, 58, 50, 33, 39, 52, 43, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 43 with phase True at level 17

After decision at level 17
 pending : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 43]


New level: 18
 pending : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 43]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 44, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 43]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 8), (27, 128), (28, 64), (29, 128), (30, 256), (31, -1), (32, -1), (33, 8), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, -1), (44, 0), (45, 128), (46, -1), (47, 256), (48, 16), (49, 256), (50, 64), (51, 32), (52, 16), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 18 : {44}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 43]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 43]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 8), (27, 128), (28, 64), (29, 128), (30, 256), (31, -1), (32, -1), (33, 8), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, -1), (44, 0), (45, 128), (46, -1), (47, 256), (48, 16), (49, 256), (50, 64), (51, 32), (52, 16), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 8), (27, 128), (28, 64), (29, 128), (30, 256), (31, -1), (32, -1), (33, 8), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, -1), (44, -1), (45, 128), (46, -1), (47, 256), (48, 16), (49, 256), (50, 64), (51, 32), (52, 16), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 43]


Solution : [0, 2, 13, 10, 14, 43] has cost 31.


Before backtrack at level 18
 pending : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40]
 solution : [0, 2, 13, 10, 14, 43]

After backtrack at level 18
 pending : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 43]


Invert decision for 43 at level 17


New level: 18
 pending : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 128), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 8), (27, 128), (28, 64), (29, 128), (30, 256), (31, -1), (32, -1), (33, 8), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 4), (40, 32), (41, 256), (42, 4), (43, -1), (44, -1), (45, 128), (46, -1), (47, 256), (48, 16), (49, 256), (50, 64), (51, 32), (52, 16), (53, 256), (54, 128), (55, 16), (56, 64), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 18 among pending : [23, 58, 50, 33, 39, 52, 21, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 21 with phase True at level 18

After decision at level 18
 pending : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 21]


New level: 19
 pending : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 21]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 51, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 21]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 16), (30, 256), (31, -1), (32, -1), (33, 64), (34, 8), (35, 64), (36, -1), (37, 16), (38, 128), (39, 128), (40, 16), (41, 256), (42, 256), (43, -1), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 64), (51, 0), (52, 32), (53, 256), (54, 1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 8)]

Covered at level 19 : {51}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 21]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 21]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 16), (30, 256), (31, -1), (32, -1), (33, 64), (34, 8), (35, 64), (36, -1), (37, 16), (38, 128), (39, 128), (40, 16), (41, 256), (42, 256), (43, -1), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 64), (51, 0), (52, 32), (53, 256), (54, 1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 16), (30, 256), (31, -1), (32, -1), (33, 64), (34, 8), (35, 64), (36, -1), (37, 16), (38, 128), (39, 128), (40, 16), (41, 256), (42, 256), (43, -1), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 64), (51, -1), (52, 32), (53, 256), (54, 1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 21]


Solution : [0, 2, 13, 10, 14, 21] has cost 31.


Before backtrack at level 19
 pending : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44]
 solution : [0, 2, 13, 10, 14, 21]

After backtrack at level 19
 pending : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]
 solution : [0, 2, 13, 10, 14, 21]


Invert decision for 21 at level 18


New level: 19
 pending : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]
 solution : [0, 2, 13, 10, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 64), (23, 32), (24, 32), (25, 256), (26, 32), (27, 128), (28, 128), (29, 16), (30, 256), (31, -1), (32, -1), (33, 64), (34, 8), (35, 64), (36, -1), (37, 16), (38, 128), (39, 128), (40, 16), (41, 256), (42, 256), (43, -1), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 64), (51, -1), (52, 32), (53, 256), (54, 1), (55, 16), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 19 among pending : [23, 58, 50, 33, 39, 52, 30, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 30 with phase True at level 19

After decision at level 19
 pending : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]
 solution : [0, 2, 13, 10, 14, 30]


New level: 20
 pending : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]
 solution : [0, 2, 13, 10, 14, 30]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 40, 44, 51]
 solution : [0, 2, 13, 10, 14, 30]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 32), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 16), (40, 0), (41, 64), (42, 16), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 20 : {40}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51]
 solution : [0, 2, 13, 10, 14, 30]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51]
 solution : [0, 2, 13, 10, 14, 30]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 32), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 16), (40, 0), (41, 64), (42, 16), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 32), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 16), (40, -1), (41, 64), (42, 16), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51]
 solution : [0, 2, 13, 10, 14, 30]


Solution : [0, 2, 13, 10, 14, 30] has cost 31.


Before backtrack at level 20
 pending : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51]
 solution : [0, 2, 13, 10, 14, 30]

After backtrack at level 20
 pending : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 30]


Invert decision for 30 at level 19


New level: 20
 pending : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 128), (23, 32), (24, 32), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 16), (40, -1), (41, 64), (42, 16), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 16), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14]


Solution : [0, 2, 13, 10, 14] has cost 21.


Decide in level 20 among pending : [23, 58, 50, 33, 39, 52, 4, 3, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 3 with phase True at level 20

After decision at level 20
 pending : [23, 58, 50, 33, 39, 52, 4, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 3]


New level: 21
 pending : [23, 58, 50, 33, 39, 52, 4, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 3]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 57, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 3]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 128), (23, 32), (24, 64), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 128), (34, 32), (35, 256), (36, -1), (37, 32), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 32), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 16), (24, 16), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 128), (34, 16), (35, 128), (36, -1), (37, 32), (38, 128), (39, 16), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 32), (51, 32), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, 0), (58, 8), (59, 32), (60, 256), (61, 64)]

Covered at level 21 : {57}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 3]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 3]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 16), (24, 16), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 128), (34, 16), (35, 128), (36, -1), (37, 32), (38, 128), (39, 16), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 32), (51, 32), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, 0), (58, 8), (59, 32), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 16), (24, 16), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 128), (34, 16), (35, 128), (36, -1), (37, 32), (38, 128), (39, 16), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 32), (51, 32), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 32), (60, 256), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 3]


Solution : [0, 2, 13, 10, 14, 3] has cost 30.


Before backtrack at level 21
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40]
 solution : [0, 2, 13, 10, 14, 3]

After backtrack at level 21
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57]
 solution : [0, 2, 13, 10, 14, 3]


Invert decision for 3 at level 20


New level: 21
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57]
 solution : [0, 2, 13, 10, 14]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 22, 49, 38, 37, 11, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57]
 solution : [0, 2, 13, 10, 14]

Essensial at level 21 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, 128), (23, 16), (24, 16), (25, 128), (26, 32), (27, 128), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 128), (34, 16), (35, 128), (36, -1), (37, 32), (38, 128), (39, 16), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 32), (51, 32), (52, 16), (53, 256), (54, 64), (55, 8), (56, 32), (57, -1), (58, 8), (59, 32), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, 16), (24, 16), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 16), (36, -1), (37, 0), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 21 : {11, 37}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57]
 solution : [0, 2, 13, 10, 14, 22]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57]
 solution : [0, 2, 13, 10, 14, 22]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, 16), (24, 16), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 16), (36, -1), (37, 0), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, 16), (24, 16), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 16), (36, -1), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57]
 solution : [0, 2, 13, 10, 14, 22]


Solution : [0, 2, 13, 10, 14, 22] has cost 31.


Before backtrack at level 21
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57]
 solution : [0, 2, 13, 10, 14, 22]

After backtrack at level 21
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 20
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 20
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 19
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 19
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 18
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 18
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 17
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 17
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 16
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 16
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 15
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 15
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 14
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 14
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31, 46]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 13
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31, 46]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 13
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31, 46, 36]
 solution : [0, 2, 13, 10, 14]


Before backtrack at level 12
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31, 46, 36]
 solution : [0, 2, 13, 10, 14]

After backtrack at level 12
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31, 46, 36, 16]
 solution : [0, 2, 13, 10, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31, 46, 36, 16]
 solution : [0, 2, 13, 10]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 24, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 40, 57, 22, 37, 11, 3, 30, 21, 43, 32, 31, 46, 36, 16]
 solution : [0, 2, 13, 10]

Essensial at level 12 : {3, 11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, -1), (22, -1), (23, 16), (24, 16), (25, 256), (26, 32), (27, 128), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, 16), (36, -1), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, -1), (44, 64), (45, 128), (46, -1), (47, 256), (48, 64), (49, 256), (50, 64), (51, 8), (52, 32), (53, 256), (54, 128), (55, 32), (56, 128), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 32), (24, 0), (25, 64), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 32), (35, 128), (36, 256), (37, 0), (38, 64), (39, 16), (40, 0), (41, 256), (42, 256), (43, 128), (44, 64), (45, 128), (46, 128), (47, 256), (48, 64), (49, 256), (50, 32), (51, 4), (52, 32), (53, 256), (54, 64), (55, 8), (56, 16), (57, 0), (58, 8), (59, 4), (60, 256), (61, 64)]

Covered at level 12 : {24, 57, 40, 37}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16]
 solution : [0, 2, 13, 10, 3, 11]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16]
 solution : [0, 2, 13, 10, 3, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 32), (24, 0), (25, 64), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 32), (35, 128), (36, 256), (37, 0), (38, 64), (39, 16), (40, 0), (41, 256), (42, 256), (43, 128), (44, 64), (45, 128), (46, 128), (47, 256), (48, 64), (49, 256), (50, 32), (51, 4), (52, 32), (53, 256), (54, 64), (55, 8), (56, 16), (57, 0), (58, 8), (59, 4), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 32), (24, -1), (25, 64), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 32), (35, 128), (36, 256), (37, -1), (38, 64), (39, 16), (40, -1), (41, 256), (42, 256), (43, 128), (44, 64), (45, 128), (46, 128), (47, 256), (48, 64), (49, 256), (50, 32), (51, 4), (52, 32), (53, 256), (54, 64), (55, 8), (56, 16), (57, -1), (58, 8), (59, 4), (60, 256), (61, 64)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16]
 solution : [0, 2, 13, 10, 3, 11]


Solution : [0, 2, 13, 10, 3, 11] has cost 30.


Before backtrack at level 12
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16]
 solution : [0, 2, 13, 10, 3, 11]

After backtrack at level 12
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37]
 solution : [0, 2, 13, 10]


Before backtrack at level 11
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37]
 solution : [0, 2, 13, 10]

After backtrack at level 11
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14]
 solution : [0, 2, 13, 10]


Before backtrack at level 10
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14]
 solution : [0, 2, 13, 10]

After backtrack at level 10
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12]
 solution : [0, 2, 13, 10]


Before backtrack at level 9
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12]
 solution : [0, 2, 13, 10]

After backtrack at level 9
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8]
 solution : [0, 2, 13, 10]


Before backtrack at level 8
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8]
 solution : [0, 2, 13, 10]

After backtrack at level 8
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9]
 solution : [0, 2, 13, 10]


Before backtrack at level 7
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9]
 solution : [0, 2, 13, 10]

After backtrack at level 7
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7]
 solution : [0, 2, 13, 10]


Before backtrack at level 6
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7]
 solution : [0, 2, 13, 10]

After backtrack at level 6
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13, 10]


Invert decision for 10 at level 5


New level: 6
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 256), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 32), (21, 256), (22, 32), (23, 32), (24, -1), (25, 64), (26, 128), (27, 256), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 32), (35, 128), (36, 256), (37, -1), (38, 64), (39, 16), (40, -1), (41, 256), (42, 256), (43, 128), (44, 64), (45, 128), (46, 128), (47, 256), (48, 64), (49, 256), (50, 32), (51, 4), (52, 32), (53, 256), (54, 64), (55, 8), (56, 16), (57, -1), (58, 8), (59, 4), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 6 among pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 6, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13, 6]


New level: 7
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 7 among pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 12, 8, 9, 7, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 12 with phase True at level 7

After decision at level 7
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 8, 9, 7, 15]
 solution : [0, 2, 13, 6, 12]


New level: 8
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 8, 9, 7, 15]
 solution : [0, 2, 13, 6, 12]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 22, 30, 21, 43, 32, 31, 46, 36, 16, 11, 3, 24, 40, 57, 37, 14, 8, 9, 7, 15]
 solution : [0, 2, 13, 6, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, 0), (9, 256), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, 64), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, 0), (23, 64), (24, 8), (25, 256), (26, 64), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, 0), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 64), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 8 : {8, 11, 37, 22}

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15]
 solution : [0, 2, 13, 6, 12]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15]
 solution : [0, 2, 13, 6, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, 0), (9, 256), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, 64), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, 0), (23, 64), (24, 8), (25, 256), (26, 64), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, 0), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 64), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, -1), (9, 256), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, 64), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 32), (24, 8), (25, 256), (26, 64), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, -1), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 64), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15]
 solution : [0, 2, 13, 6, 12]


Solution : [0, 2, 13, 6, 12] has cost 24.


Before backtrack at level 8
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15]
 solution : [0, 2, 13, 6, 12]

After backtrack at level 8
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 12]


Invert decision for 12 at level 7


New level: 8
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15, 22, 11, 37, 8]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15, 22, 11, 37, 8]
 solution : [0, 2, 13, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, -1), (9, 256), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, 64), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 32), (24, 8), (25, 256), (26, 64), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 32), (34, 16), (35, 16), (36, 128), (37, -1), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 64), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15, 22, 11, 37, 8]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 8 among pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 15, 22, 11, 37, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 15 with phase True at level 8

After decision at level 8
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 15]


New level: 9
 pending : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 15]


Before reduction : 
 pending  : [23, 58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 34, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 14, 9, 7, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, 4), (9, 16), (10, -1), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, 0), (24, 8), (25, 128), (26, 8), (27, 8), (28, 32), (29, 64), (30, 64), (31, 64), (32, 128), (33, 16), (34, 0), (35, 64), (36, 16), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 9 : {34, 14, 23}

After reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 15]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, 4), (9, 16), (10, -1), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, 0), (24, 8), (25, 128), (26, 8), (27, 8), (28, 32), (29, 64), (30, 64), (31, 64), (32, 128), (33, 16), (34, 0), (35, 64), (36, 16), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, 4), (9, 16), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, 128), (26, 8), (27, 8), (28, 32), (29, 64), (30, 64), (31, 64), (32, 128), (33, 16), (34, -1), (35, 64), (36, 16), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 15]


Solution : [0, 2, 13, 6, 15] has cost 24.


Before backtrack at level 9
 pending : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8]
 solution : [0, 2, 13, 6, 15]

After backtrack at level 9
 pending : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 15]


Invert decision for 15 at level 8


New level: 9
 pending : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, -1), (7, 64), (8, 4), (9, 16), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, 128), (26, 8), (27, 8), (28, 32), (29, 64), (30, 64), (31, 64), (32, 128), (33, 16), (34, -1), (35, 64), (36, 16), (37, 32), (38, 128), (39, 32), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 9 among pending : [58, 50, 33, 39, 52, 4, 20, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 20 with phase True at level 9

After decision at level 9
 pending : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 20]


New level: 10
 pending : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 20]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 24, 40, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 20]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 64), (23, 64), (24, 0), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 256), (32, 32), (33, 64), (34, 64), (35, 32), (36, 256), (37, 16), (38, 128), (39, 32), (40, 0), (41, 128), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 8), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 10 : {24, 40}

After reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 20]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 20]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 64), (23, 64), (24, 0), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 256), (32, 32), (33, 64), (34, 64), (35, 32), (36, 256), (37, 16), (38, 128), (39, 32), (40, 0), (41, 128), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 8), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 64), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 256), (32, 32), (33, 64), (34, 64), (35, 32), (36, 256), (37, 16), (38, 128), (39, 32), (40, -1), (41, 128), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 8), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 20]


Solution : [0, 2, 13, 6, 20] has cost 28.


Before backtrack at level 10
 pending : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14]
 solution : [0, 2, 13, 6, 20]

After backtrack at level 10
 pending : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 20]


Invert decision for 20 at level 9


New level: 10
 pending : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 64), (23, 64), (24, -1), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 256), (32, 32), (33, 64), (34, 64), (35, 32), (36, 256), (37, 16), (38, 128), (39, 32), (40, -1), (41, 128), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 8), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 10 among pending : [58, 50, 33, 39, 52, 4, 59, 35, 5, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [58, 50, 33, 39, 52, 4, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 5]


New level: 11
 pending : [58, 50, 33, 39, 52, 4, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 5]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 4, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 48, 45, 56, 55, 61, 29, 47, 54, 44, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 0), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, 0), (45, 32), (46, 64), (47, 64), (48, 0), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, 0), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 11 : {48, 4, 44, 55}

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 5]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 0), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, 0), (45, 32), (46, 64), (47, 64), (48, 0), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, 0), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 5]


Solution : [0, 2, 13, 6, 5] has cost 24.


Before backtrack at level 11
 pending : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40]
 solution : [0, 2, 13, 6, 5]

After backtrack at level 11
 pending : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, 64), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 11 among pending : [58, 50, 33, 39, 52, 59, 35, 60, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 60 with phase True at level 11

After decision at level 11
 pending : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 60]


New level: 12
 pending : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 60]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 45, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 60]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, 256), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 32), (36, 256), (37, 64), (38, 32), (39, 128), (40, 64), (41, 32), (42, 64), (43, 128), (44, 128), (45, 0), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 32), (60, -1), (61, 32)]

Covered at level 12 : {45}

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 60]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 60]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, 256), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 32), (36, 256), (37, 64), (38, 32), (39, 128), (40, 64), (41, 32), (42, 64), (43, 128), (44, 128), (45, 0), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 32), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, 256), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 32), (36, 256), (37, 64), (38, 32), (39, 128), (40, 64), (41, 32), (42, 64), (43, 128), (44, 128), (45, -1), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 32), (60, -1), (61, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 60]


Solution : [0, 2, 13, 6, 60] has cost 28.


Before backtrack at level 12
 pending : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44]
 solution : [0, 2, 13, 6, 60]

After backtrack at level 12
 pending : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 60]


Invert decision for 60 at level 11


New level: 12
 pending : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 256), (28, 256), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 32), (36, 256), (37, 64), (38, 32), (39, 128), (40, 64), (41, 32), (42, 64), (43, 128), (44, 128), (45, -1), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 128), (52, 128), (53, 64), (54, 32), (55, 32), (56, 64), (57, 64), (58, 16), (59, 32), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 12 among pending : [58, 50, 33, 39, 52, 59, 35, 42, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Decide 42 with phase True at level 12

After decision at level 12
 pending : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 42]


New level: 13
 pending : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 42]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 42]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 64), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 32), (41, 32), (42, -1), (43, 64), (44, 64), (45, 64), (46, 256), (47, 128), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, -1), (61, 64)]

Covered at level 13 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 42]


Solution : [0, 2, 13, 6, 42] has cost 28.


Before backtrack at level 13
 pending : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 42]

After backtrack at level 13
 pending : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 42]


Invert decision for 42 at level 12


New level: 13
 pending : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 128), (31, 256), (32, 128), (33, 64), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 32), (41, 32), (42, -1), (43, 64), (44, 64), (45, 64), (46, 256), (47, 128), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 64), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 13 among pending : [58, 50, 33, 39, 52, 59, 35, 27, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Decide 27 with phase True at level 13

After decision at level 13
 pending : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 27]


New level: 14
 pending : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 27]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 27]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 128), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 128), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 128), (60, -1), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 27]


Solution : [0, 2, 13, 6, 27] has cost 28.


Before backtrack at level 14
 pending : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 27]

After backtrack at level 14
 pending : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 27]


Invert decision for 27 at level 13


New level: 14
 pending : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 32), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 128), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 128), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 64), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 14 among pending : [58, 50, 33, 39, 52, 59, 35, 53, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Decide 53 with phase True at level 14

After decision at level 14
 pending : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 53]


New level: 15
 pending : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 53]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 53]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 64), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 32), (45, 32), (46, 256), (47, 128), (48, 32), (49, 128), (50, 128), (51, 128), (52, 16), (53, -1), (54, 4), (55, 16), (56, 128), (57, 64), (58, 64), (59, 64), (60, -1), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 53]


Solution : [0, 2, 13, 6, 53] has cost 28.


Before backtrack at level 15
 pending : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 53]

After backtrack at level 15
 pending : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 53]


Invert decision for 53 at level 14


New level: 15
 pending : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 32), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 64), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 32), (45, 32), (46, 256), (47, 128), (48, 32), (49, 128), (50, 128), (51, 128), (52, 16), (53, -1), (54, 4), (55, 16), (56, 128), (57, 64), (58, 64), (59, 64), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, -1), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Solution : [0, 2, 13, 6] has cost 18.


Decide in level 15 among pending : [58, 50, 33, 39, 52, 59, 35, 17, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, -1), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

Decide 17 with phase True at level 15

After decision at level 15
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 17]


New level: 16
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 17]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, -1), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 128), (26, 32), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 32), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 128), (40, 64), (41, 64), (42, -1), (43, 256), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 64), (50, 128), (51, 128), (52, 128), (53, -1), (54, 128), (55, 16), (56, 128), (57, 64), (58, 32), (59, 128), (60, -1), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 17]


Solution : [0, 2, 13, 6, 17] has cost 24.


Before backtrack at level 16
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 17]

After backtrack at level 16
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6, 17]


Invert decision for 17 at level 15


New level: 16
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 4, 48, 55, 44, 45]
 solution : [0, 2, 13, 6]

Essensial at level 16 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 128), (26, 32), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 32), (34, 128), (35, 128), (36, 128), (37, 64), (38, 64), (39, 128), (40, 64), (41, 64), (42, -1), (43, 256), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 64), (50, 128), (51, 128), (52, 128), (53, -1), (54, 128), (55, 16), (56, 128), (57, 64), (58, 32), (59, 128), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, -1), (43, 256), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, -1), (54, 32), (55, 0), (56, 32), (57, 32), (58, 32), (59, 64), (60, -1), (61, 16)]

Covered at level 16 : {55}

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45]
 solution : [0, 2, 13, 6, 4]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45]
 solution : [0, 2, 13, 6, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, -1), (43, 256), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, -1), (54, 32), (55, 0), (56, 32), (57, 32), (58, 32), (59, 64), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, -1), (43, 256), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, -1), (54, 32), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, -1), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45]
 solution : [0, 2, 13, 6, 4]


Solution : [0, 2, 13, 6, 4] has cost 27.


Before backtrack at level 16
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45]
 solution : [0, 2, 13, 6, 4]

After backtrack at level 16
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55]
 solution : [0, 2, 13, 6]


Before backtrack at level 15
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55]
 solution : [0, 2, 13, 6]

After backtrack at level 15
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17]
 solution : [0, 2, 13, 6]


Before backtrack at level 14
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17]
 solution : [0, 2, 13, 6]

After backtrack at level 14
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53]
 solution : [0, 2, 13, 6]


Before backtrack at level 13
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53]
 solution : [0, 2, 13, 6]

After backtrack at level 13
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27]
 solution : [0, 2, 13, 6]


Before backtrack at level 12
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27]
 solution : [0, 2, 13, 6]

After backtrack at level 12
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42]
 solution : [0, 2, 13, 6]


Before backtrack at level 11
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42]
 solution : [0, 2, 13, 6]

After backtrack at level 11
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60]
 solution : [0, 2, 13, 6]


Before backtrack at level 10
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60]
 solution : [0, 2, 13, 6]

After backtrack at level 10
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5]
 solution : [0, 2, 13, 6]


Before backtrack at level 9
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5]
 solution : [0, 2, 13, 6]

After backtrack at level 9
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20]
 solution : [0, 2, 13, 6]


Before backtrack at level 8
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20]
 solution : [0, 2, 13, 6]

After backtrack at level 8
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15]
 solution : [0, 2, 13, 6]


Before backtrack at level 7
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15]
 solution : [0, 2, 13, 6]

After backtrack at level 7
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 256), (8, 128), (9, 256), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 64), (27, -1), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 64), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, -1), (43, 256), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 128), (51, 128), (52, 128), (53, -1), (54, 32), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, -1), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 7 among pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 9, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13, 9]


New level: 8
 pending : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [58, 50, 33, 39, 52, 59, 35, 41, 25, 49, 38, 26, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 512), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, 0), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 8 : {26, 52}

After reduction : 
 pending  : [58, 50, 33, 39, 59, 35, 41, 25, 49, 38, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [58, 50, 33, 39, 59, 35, 41, 25, 49, 38, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, 0), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 59, 35, 41, 25, 49, 38, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 8 among pending : [58, 50, 33, 39, 59, 35, 41, 25, 49, 38, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 12 with phase True at level 8

After decision at level 8
 pending : [58, 50, 33, 39, 59, 35, 41, 25, 49, 38, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15]
 solution : [0, 2, 13, 9, 12]


New level: 9
 pending : [58, 50, 33, 39, 59, 35, 41, 25, 49, 38, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15]
 solution : [0, 2, 13, 9, 12]


Before reduction : 
 pending  : [58, 50, 33, 39, 59, 35, 41, 25, 49, 38, 28, 56, 61, 29, 47, 54, 51, 30, 21, 43, 32, 31, 46, 36, 16, 3, 57, 7, 22, 11, 37, 8, 23, 34, 14, 24, 40, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 20, 15]
 solution : [0, 2, 13, 9, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 128), (5, 256), (6, -1), (7, 4), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 32), (26, -1), (27, 4), (28, 0), (29, 0), (30, 2), (31, 2), (32, 2), (33, 2), (34, 0), (35, 0), (36, 2), (37, 0), (38, 32), (39, 64), (40, 0), (41, 256), (42, 128), (43, 16), (44, 64), (45, 32), (46, 16), (47, 64), (48, 64), (49, 256), (50, 2), (51, 0), (52, -1), (53, 64), (54, 4), (55, 32), (56, 8), (57, 1), (58, 128), (59, 0), (60, 256), (61, 64)]

Covered at level 9 : {34, 35, 37, 8, 40, 11, 14, 15, 51, 20, 21, 22, 23, 24, 59, 28, 29}

After reduction : 
 pending  : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5]
 solution : [0, 2, 13, 9, 12]


Before reduction : 
 pending  : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5]
 solution : [0, 2, 13, 9, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 128), (5, 256), (6, -1), (7, 4), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 32), (26, -1), (27, 4), (28, 0), (29, 0), (30, 2), (31, 2), (32, 2), (33, 2), (34, 0), (35, 0), (36, 2), (37, 0), (38, 32), (39, 64), (40, 0), (41, 256), (42, 128), (43, 16), (44, 64), (45, 32), (46, 16), (47, 64), (48, 64), (49, 256), (50, 2), (51, 0), (52, -1), (53, 64), (54, 4), (55, 32), (56, 8), (57, 1), (58, 128), (59, 0), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 128), (5, 256), (6, -1), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, 2), (32, 2), (33, 2), (34, -1), (35, -1), (36, 2), (37, -1), (38, 32), (39, 64), (40, -1), (41, 256), (42, 128), (43, 16), (44, 64), (45, 32), (46, 16), (47, 64), (48, 64), (49, 256), (50, 2), (51, -1), (52, -1), (53, 64), (54, 4), (55, 32), (56, 8), (57, 1), (58, 128), (59, -1), (60, 256), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5]
 solution : [0, 2, 13, 9, 12]


Solution : [0, 2, 13, 9, 12] has cost 25.


Before backtrack at level 9
 pending : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5]
 solution : [0, 2, 13, 9, 12]

After backtrack at level 9
 pending : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 12]


Invert decision for 12 at level 8


New level: 9
 pending : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, 128), (5, 256), (6, -1), (7, 4), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, -1), (27, 4), (28, -1), (29, -1), (30, 2), (31, 2), (32, 2), (33, 2), (34, -1), (35, -1), (36, 2), (37, -1), (38, 32), (39, 64), (40, -1), (41, 256), (42, 128), (43, 16), (44, 64), (45, 32), (46, 16), (47, 64), (48, 64), (49, 256), (50, 2), (51, -1), (52, -1), (53, 64), (54, 4), (55, 32), (56, 8), (57, 1), (58, 128), (59, -1), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 9 among pending : [58, 50, 33, 39, 41, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [58, 50, 33, 39, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 41]


New level: 10
 pending : [58, 50, 33, 39, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 41]


Before reduction : 
 pending  : [58, 50, 33, 39, 25, 49, 38, 56, 61, 47, 54, 30, 43, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 42, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 128), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, 256), (32, 32), (33, 4), (34, 64), (35, 64), (36, 256), (37, 64), (38, 64), (39, 0), (40, 8), (41, -1), (42, 0), (43, 0), (44, 4), (45, 64), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 1), (55, 32), (56, 64), (57, 32), (58, 64), (59, 16), (60, 128), (61, 64)]

Covered at level 10 : {42, 43, 39}

After reduction : 
 pending  : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 41]


Before reduction : 
 pending  : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 128), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, 256), (32, 32), (33, 4), (34, 64), (35, 64), (36, 256), (37, 64), (38, 64), (39, 0), (40, 8), (41, -1), (42, 0), (43, 0), (44, 4), (45, 64), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 1), (55, 32), (56, 64), (57, 32), (58, 64), (59, 16), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 128), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, 256), (32, 32), (33, 4), (34, 64), (35, 32), (36, 256), (37, 64), (38, 64), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, 4), (45, 64), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 1), (55, 32), (56, 64), (57, 32), (58, 64), (59, 16), (60, 128), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 41]


Solution : [0, 2, 13, 9, 41] has cost 29.


Before backtrack at level 10
 pending : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15]
 solution : [0, 2, 13, 9, 41]

After backtrack at level 10
 pending : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 128), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 128), (26, -1), (27, 32), (28, 64), (29, 64), (30, 32), (31, 256), (32, 32), (33, 4), (34, 64), (35, 32), (36, 256), (37, 64), (38, 64), (39, -1), (40, 8), (41, -1), (42, -1), (43, -1), (44, 4), (45, 64), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 1), (55, 32), (56, 64), (57, 32), (58, 64), (59, 16), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 10 among pending : [58, 50, 33, 25, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 25]


New level: 11
 pending : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 25]


Before reduction : 
 pending  : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 27, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, 0), (28, 32), (29, 16), (30, 32), (31, 256), (32, 256), (33, 16), (34, 64), (35, 64), (36, 8), (37, 64), (38, 64), (39, 16), (40, 8), (41, -1), (42, 32), (43, 8), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

Covered at level 11 : {27}

After reduction : 
 pending  : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 25]


Before reduction : 
 pending  : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, 0), (28, 32), (29, 16), (30, 32), (31, 256), (32, 256), (33, 16), (34, 64), (35, 64), (36, 8), (37, 64), (38, 64), (39, 16), (40, 8), (41, -1), (42, 32), (43, 8), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, -1), (28, 32), (29, 16), (30, 32), (31, 256), (32, 256), (33, 16), (34, 64), (35, 64), (36, 8), (37, 64), (38, 64), (39, 16), (40, 8), (41, -1), (42, 32), (43, 8), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 25]


Solution : [0, 2, 13, 9, 25] has cost 29.


Before backtrack at level 11
 pending : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42]
 solution : [0, 2, 13, 9, 25]

After backtrack at level 11
 pending : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]
 solution : [0, 2, 13, 9, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]
 solution : [0, 2, 13, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 64), (24, 32), (25, -1), (26, -1), (27, -1), (28, 32), (29, 16), (30, 32), (31, 256), (32, 256), (33, 16), (34, 64), (35, 64), (36, 8), (37, 64), (38, 64), (39, 16), (40, 8), (41, -1), (42, 32), (43, 8), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 11 among pending : [58, 50, 33, 49, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 49 with phase True at level 11

After decision at level 11
 pending : [58, 50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]
 solution : [0, 2, 13, 9, 49]


New level: 12
 pending : [58, 50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]
 solution : [0, 2, 13, 9, 49]


Before reduction : 
 pending  : [58, 50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 39, 43, 42, 27]
 solution : [0, 2, 13, 9, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, 256), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, 256), (32, 128), (33, 8), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 0), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 64), (46, 256), (47, 256), (48, 16), (49, -1), (50, 8), (51, 64), (52, -1), (53, 1), (54, 1), (55, 16), (56, 64), (57, 4), (58, 0), (59, 32), (60, 64), (61, 128)]

Covered at level 12 : {58, 39}

After reduction : 
 pending  : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27]
 solution : [0, 2, 13, 9, 49]


Before reduction : 
 pending  : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27]
 solution : [0, 2, 13, 9, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, 256), (32, 128), (33, 8), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 0), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 64), (46, 256), (47, 256), (48, 16), (49, -1), (50, 8), (51, 64), (52, -1), (53, 1), (54, 1), (55, 16), (56, 64), (57, 4), (58, 0), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, 256), (32, 128), (33, 8), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, -1), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 64), (46, 256), (47, 256), (48, 16), (49, -1), (50, 8), (51, 64), (52, -1), (53, 1), (54, 1), (55, 16), (56, 64), (57, 4), (58, -1), (59, 32), (60, 64), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27]
 solution : [0, 2, 13, 9, 49]


Solution : [0, 2, 13, 9, 49] has cost 29.


Before backtrack at level 12
 pending : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27]
 solution : [0, 2, 13, 9, 49]

After backtrack at level 12
 pending : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 49]


Invert decision for 49 at level 11


New level: 12
 pending : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 8), (28, 64), (29, 64), (30, 256), (31, 256), (32, 128), (33, 8), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, -1), (40, 64), (41, -1), (42, 8), (43, 8), (44, 1), (45, 64), (46, 256), (47, 256), (48, 16), (49, -1), (50, 8), (51, 64), (52, -1), (53, 1), (54, 1), (55, 16), (56, 64), (57, 4), (58, -1), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 12 among pending : [50, 33, 38, 56, 61, 47, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 47 with phase True at level 12

After decision at level 12
 pending : [50, 33, 38, 56, 61, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 47]


New level: 13
 pending : [50, 33, 38, 56, 61, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 47]


Before reduction : 
 pending  : [50, 33, 38, 56, 61, 54, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 45, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 47]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 256), (47, 256), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 64), (39, 32), (40, 64), (41, -1), (42, 32), (43, 16), (44, 64), (45, 0), (46, 16), (47, -1), (48, 32), (49, -1), (50, 64), (51, 16), (52, -1), (53, 32), (54, 0), (55, 8), (56, 8), (57, 32), (58, 128), (59, 8), (60, 64), (61, 0)]

Covered at level 13 : {45, 61, 54}

After reduction : 
 pending  : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 47]


Before reduction : 
 pending  : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 47]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 64), (39, 32), (40, 64), (41, -1), (42, 32), (43, 16), (44, 64), (45, 0), (46, 16), (47, -1), (48, 32), (49, -1), (50, 64), (51, 16), (52, -1), (53, 32), (54, 0), (55, 8), (56, 8), (57, 32), (58, 128), (59, 8), (60, 64), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 64), (39, 32), (40, 64), (41, -1), (42, 32), (43, 16), (44, 64), (45, -1), (46, 16), (47, -1), (48, 32), (49, -1), (50, 64), (51, 16), (52, -1), (53, 32), (54, -1), (55, 8), (56, 8), (57, 32), (58, 128), (59, 8), (60, 64), (61, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 47]


Solution : [0, 2, 13, 9, 47] has cost 29.


Before backtrack at level 13
 pending : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39]
 solution : [0, 2, 13, 9, 47]

After backtrack at level 13
 pending : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 47]


Invert decision for 47 at level 12


New level: 13
 pending : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 8), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 16), (36, 256), (37, 64), (38, 64), (39, 32), (40, 64), (41, -1), (42, 32), (43, 16), (44, 64), (45, -1), (46, 16), (47, -1), (48, 32), (49, -1), (50, 64), (51, 16), (52, -1), (53, 32), (54, -1), (55, 8), (56, 8), (57, 32), (58, 128), (59, 8), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 13 among pending : [50, 33, 38, 56, 30, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 30 with phase True at level 13

After decision at level 13
 pending : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 30]


New level: 14
 pending : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 30]


Before reduction : 
 pending  : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 40, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 30]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, 256), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 128), (23, 64), (24, 64), (25, -1), (26, -1), (27, 32), (28, 64), (29, 16), (30, -1), (31, 32), (32, 32), (33, 32), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 0), (41, -1), (42, 32), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 14 : {40}

After reduction : 
 pending  : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 30]


Before reduction : 
 pending  : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 30]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 128), (23, 64), (24, 64), (25, -1), (26, -1), (27, 32), (28, 64), (29, 16), (30, -1), (31, 32), (32, 32), (33, 32), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 0), (41, -1), (42, 32), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 128), (23, 64), (24, 64), (25, -1), (26, -1), (27, 32), (28, 64), (29, 16), (30, -1), (31, 32), (32, 32), (33, 32), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, -1), (41, -1), (42, 32), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 30]


Solution : [0, 2, 13, 9, 30] has cost 29.


Before backtrack at level 14
 pending : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 30]

After backtrack at level 14
 pending : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]
 solution : [0, 2, 13, 9, 30]


Invert decision for 30 at level 13


New level: 14
 pending : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]
 solution : [0, 2, 13, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 128), (23, 64), (24, 64), (25, -1), (26, -1), (27, 32), (28, 64), (29, 16), (30, -1), (31, 32), (32, 32), (33, 32), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, -1), (41, -1), (42, 32), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 14 among pending : [50, 33, 38, 56, 32, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 32 with phase True at level 14

After decision at level 14
 pending : [50, 33, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]
 solution : [0, 2, 13, 9, 32]


New level: 15
 pending : [50, 33, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]
 solution : [0, 2, 13, 9, 32]


Before reduction : 
 pending  : [50, 33, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 40]
 solution : [0, 2, 13, 9, 32]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, 256), (32, 256), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, -1), (26, -1), (27, 16), (28, 64), (29, 16), (30, -1), (31, 4), (32, -1), (33, 0), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 16), (40, 0), (41, -1), (42, 16), (43, 4), (44, 32), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 15 : {40, 33}

After reduction : 
 pending  : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 32]


Before reduction : 
 pending  : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 32]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, -1), (26, -1), (27, 16), (28, 64), (29, 16), (30, -1), (31, 4), (32, -1), (33, 0), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 16), (40, 0), (41, -1), (42, 16), (43, 4), (44, 32), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, -1), (26, -1), (27, 16), (28, 64), (29, 16), (30, -1), (31, 4), (32, -1), (33, -1), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 16), (40, -1), (41, -1), (42, 16), (43, 4), (44, 32), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 32]


Solution : [0, 2, 13, 9, 32] has cost 29.


Before backtrack at level 15
 pending : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45]
 solution : [0, 2, 13, 9, 32]

After backtrack at level 15
 pending : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 32]


Invert decision for 32 at level 14


New level: 15
 pending : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 32), (22, 64), (23, 64), (24, 64), (25, -1), (26, -1), (27, 16), (28, 64), (29, 16), (30, -1), (31, 4), (32, -1), (33, -1), (34, 64), (35, 32), (36, 128), (37, 32), (38, 128), (39, 16), (40, -1), (41, -1), (42, 16), (43, 4), (44, 32), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 16), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, 256), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 15 among pending : [50, 38, 56, 31, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, 256), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 31 with phase True at level 15

After decision at level 15
 pending : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 31]


New level: 16
 pending : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 31]


Before reduction : 
 pending  : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 31]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, 256), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, -1), (26, -1), (27, 32), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 64), (40, 0), (41, -1), (42, 128), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 32), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 16 : {40}

After reduction : 
 pending  : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33]
 solution : [0, 2, 13, 9, 31]


Before reduction : 
 pending  : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33]
 solution : [0, 2, 13, 9, 31]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, -1), (26, -1), (27, 32), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 64), (40, 0), (41, -1), (42, 128), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 32), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, -1), (26, -1), (27, 32), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 32), (40, -1), (41, -1), (42, 128), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 32), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33]
 solution : [0, 2, 13, 9, 31]


Solution : [0, 2, 13, 9, 31] has cost 29.


Before backtrack at level 16
 pending : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33]
 solution : [0, 2, 13, 9, 31]

After backtrack at level 16
 pending : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 31]


Invert decision for 31 at level 15


New level: 16
 pending : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, -1), (26, -1), (27, 32), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, 4), (34, 16), (35, 64), (36, 256), (37, 32), (38, 128), (39, 32), (40, -1), (41, -1), (42, 128), (43, 8), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 32), (51, 32), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 16 among pending : [50, 38, 56, 46, 36, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 36 with phase True at level 16

After decision at level 16
 pending : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 36]


New level: 17
 pending : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 36]


Before reduction : 
 pending  : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 36]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 128), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 32), (41, -1), (42, 128), (43, 32), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 32), (51, 32), (52, -1), (53, 16), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 36]


Solution : [0, 2, 13, 9, 36] has cost 29.


Before backtrack at level 17
 pending : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 36]

After backtrack at level 17
 pending : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 36]


Invert decision for 36 at level 16


New level: 17
 pending : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 128), (17, 256), (18, -1), (19, -1), (20, 256), (21, 32), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, 64), (36, -1), (37, 64), (38, 128), (39, 16), (40, 32), (41, -1), (42, 128), (43, 32), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 32), (51, 32), (52, -1), (53, 16), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 17 among pending : [50, 38, 56, 46, 16, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 16 with phase True at level 17

After decision at level 17
 pending : [50, 38, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 16]


New level: 18
 pending : [50, 38, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 16]


Before reduction : 
 pending  : [50, 38, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 43, 42, 27, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 128), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, 0), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, 0), (39, 4), (40, 64), (41, -1), (42, 4), (43, 0), (44, 16), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 16), (57, 32), (58, 32), (59, 8), (60, 8), (61, 128)]

Covered at level 18 : {27, 43, 38}

After reduction : 
 pending  : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 16]


Before reduction : 
 pending  : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 128), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, 0), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, 0), (39, 4), (40, 64), (41, -1), (42, 4), (43, 0), (44, 16), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 16), (57, 32), (58, 32), (59, 8), (60, 8), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 128), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, -1), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 4), (40, 64), (41, -1), (42, 4), (43, -1), (44, 16), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 16), (57, 32), (58, 32), (59, 8), (60, 8), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 16]


Solution : [0, 2, 13, 9, 16] has cost 25.


Before backtrack at level 18
 pending : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40]
 solution : [0, 2, 13, 9, 16]

After backtrack at level 18
 pending : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 16]


Invert decision for 16 at level 17


New level: 18
 pending : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]
 solution : [0, 2, 13, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 128), (18, -1), (19, -1), (20, 256), (21, 64), (22, 64), (23, 32), (24, 128), (25, -1), (26, -1), (27, -1), (28, 32), (29, 64), (30, -1), (31, -1), (32, -1), (33, 2), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 4), (40, 64), (41, -1), (42, 4), (43, -1), (44, 16), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 16), (52, -1), (53, 32), (54, 4), (55, 32), (56, 16), (57, 32), (58, 32), (59, 8), (60, 8), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 18 among pending : [50, 56, 46, 3, 57, 7, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 7 with phase True at level 18

After decision at level 18
 pending : [50, 56, 46, 3, 57, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 7]


New level: 19
 pending : [50, 56, 46, 3, 57, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 7]


Before reduction : 
 pending  : [50, 56, 46, 3, 57, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 8, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 33, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 7]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 64), (5, 128), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 32), (24, 64), (25, -1), (26, -1), (27, 64), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, 0), (34, 32), (35, 4), (36, -1), (37, 64), (38, 128), (39, 8), (40, 32), (41, -1), (42, 128), (43, 64), (44, 32), (45, 128), (46, 32), (47, -1), (48, 32), (49, -1), (50, 0), (51, 64), (52, -1), (53, 64), (54, 4), (55, 16), (56, 16), (57, 0), (58, 32), (59, 4), (60, 256), (61, 64)]

Covered at level 19 : {33, 3, 8, 50, 57}

After reduction : 
 pending  : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 7]


Before reduction : 
 pending  : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 7]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 64), (5, 128), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 32), (24, 64), (25, -1), (26, -1), (27, 64), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, 0), (34, 32), (35, 4), (36, -1), (37, 64), (38, 128), (39, 8), (40, 32), (41, -1), (42, 128), (43, 64), (44, 32), (45, 128), (46, 32), (47, -1), (48, 32), (49, -1), (50, 0), (51, 64), (52, -1), (53, 64), (54, 4), (55, 16), (56, 16), (57, 0), (58, 32), (59, 4), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 32), (24, 64), (25, -1), (26, -1), (27, 64), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 4), (36, -1), (37, 64), (38, 128), (39, 8), (40, 32), (41, -1), (42, 128), (43, 64), (44, 32), (45, 128), (46, 32), (47, -1), (48, 32), (49, -1), (50, -1), (51, 64), (52, -1), (53, 64), (54, 4), (55, 16), (56, 16), (57, -1), (58, 32), (59, 4), (60, 256), (61, 64)]

Covered at level 19 : set()

After reduction : 
 pending  : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 7]


Solution : [0, 2, 13, 9, 7] has cost 25.


Before backtrack at level 19
 pending : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27]
 solution : [0, 2, 13, 9, 7]

After backtrack at level 19
 pending : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 7]


Invert decision for 7 at level 18


New level: 19
 pending : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, 64), (16, -1), (17, 256), (18, -1), (19, -1), (20, 64), (21, 64), (22, 64), (23, 32), (24, 64), (25, -1), (26, -1), (27, 64), (28, 64), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1), (34, 32), (35, 4), (36, -1), (37, 64), (38, 128), (39, 8), (40, 32), (41, -1), (42, 128), (43, 64), (44, 32), (45, 128), (46, 32), (47, -1), (48, 32), (49, -1), (50, -1), (51, 64), (52, -1), (53, 64), (54, 4), (55, 16), (56, 16), (57, -1), (58, 32), (59, 4), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9]


Solution : [0, 2, 13, 9] has cost 19.


Decide in level 19 among pending : [56, 46, 48, 44, 4, 55, 17, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 17 with phase True at level 19

After decision at level 19
 pending : [56, 46, 48, 44, 4, 55, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 17]


New level: 20
 pending : [56, 46, 48, 44, 4, 55, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 17]


Before reduction : 
 pending  : [56, 46, 48, 44, 4, 55, 53, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 54, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 64), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, -1), (42, 128), (43, 64), (44, 64), (45, 128), (46, 128), (47, -1), (48, 64), (49, -1), (50, 64), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, 0), (45, 4), (46, 128), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, 0), (54, 0), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 20 : {44, 53, 54}

After reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 17]


Before reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, 0), (45, 4), (46, 128), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, 0), (54, 0), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, -1), (45, 4), (46, 128), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, -1), (54, -1), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 17]


Solution : [0, 2, 13, 9, 17] has cost 25.


Before backtrack at level 20
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33]
 solution : [0, 2, 13, 9, 17]

After backtrack at level 20
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54]
 solution : [0, 2, 13, 9, 17]


Invert decision for 17 at level 19


New level: 20
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54]
 solution : [0, 2, 13, 9]


Before reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 38, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54]
 solution : [0, 2, 13, 9]

Essensial at level 20 : {38}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 4), (34, 64), (35, 64), (36, -1), (37, 64), (38, 64), (39, 2), (40, 64), (41, -1), (42, 8), (43, 8), (44, -1), (45, 4), (46, 128), (47, -1), (48, 2), (49, -1), (50, 64), (51, 64), (52, -1), (53, -1), (54, -1), (55, 2), (56, 64), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 64), (40, 32), (41, -1), (42, 16), (43, 1), (44, 64), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 8), (60, 32), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54]
 solution : [0, 2, 13, 9, 38]


Before reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54]
 solution : [0, 2, 13, 9, 38]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 64), (40, 32), (41, -1), (42, 16), (43, 1), (44, 64), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 8), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 64), (40, 32), (41, -1), (42, 16), (43, 1), (44, 64), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 8), (60, 32), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54]
 solution : [0, 2, 13, 9, 38]


Solution : [0, 2, 13, 9, 38] has cost 29.


Before backtrack at level 20
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54]
 solution : [0, 2, 13, 9, 38]

After backtrack at level 20
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38]
 solution : [0, 2, 13, 9]


Before backtrack at level 19
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38]
 solution : [0, 2, 13, 9]

After backtrack at level 19
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17]
 solution : [0, 2, 13, 9]


Before backtrack at level 18
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17]
 solution : [0, 2, 13, 9]

After backtrack at level 18
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7]
 solution : [0, 2, 13, 9]


Before backtrack at level 17
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7]
 solution : [0, 2, 13, 9]

After backtrack at level 17
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16]
 solution : [0, 2, 13, 9]


Before backtrack at level 16
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16]
 solution : [0, 2, 13, 9]

After backtrack at level 16
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36]
 solution : [0, 2, 13, 9]


Before backtrack at level 15
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36]
 solution : [0, 2, 13, 9]

After backtrack at level 15
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31]
 solution : [0, 2, 13, 9]


Before backtrack at level 14
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31]
 solution : [0, 2, 13, 9]

After backtrack at level 14
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32]
 solution : [0, 2, 13, 9]


Before backtrack at level 13
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32]
 solution : [0, 2, 13, 9]

After backtrack at level 13
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30]
 solution : [0, 2, 13, 9]


Before backtrack at level 12
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30]
 solution : [0, 2, 13, 9]

After backtrack at level 12
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47]
 solution : [0, 2, 13, 9]


Before backtrack at level 11
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47]
 solution : [0, 2, 13, 9]

After backtrack at level 11
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49]
 solution : [0, 2, 13, 9]


Before backtrack at level 10
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49]
 solution : [0, 2, 13, 9]

After backtrack at level 10
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25]
 solution : [0, 2, 13, 9]


Before backtrack at level 9
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25]
 solution : [0, 2, 13, 9]

After backtrack at level 9
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41]
 solution : [0, 2, 13, 9]


Before backtrack at level 8
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41]
 solution : [0, 2, 13, 9]

After backtrack at level 8
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 64), (23, 64), (24, 128), (25, -1), (26, -1), (27, 32), (28, 64), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 64), (35, 16), (36, -1), (37, 32), (38, -1), (39, 64), (40, 32), (41, -1), (42, 16), (43, 1), (44, 64), (45, 4), (46, 32), (47, -1), (48, 64), (49, -1), (50, 32), (51, 64), (52, -1), (53, 64), (54, 4), (55, 32), (56, 64), (57, 32), (58, 128), (59, 8), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 8 among pending : [56, 46, 48, 4, 55, 60, 5, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [56, 46, 48, 4, 55, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5]


New level: 9
 pending : [56, 46, 48, 4, 55, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [56, 46, 48, 4, 55, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 44, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, 0), (45, 32), (46, 64), (47, 64), (48, 0), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, 0), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 9 : {48, 4, 44, 55}

After reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, 0), (45, 32), (46, 64), (47, 64), (48, 0), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, 0), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 9 among pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 15, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 15 with phase True at level 9

After decision at level 9
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5, 15]


New level: 10
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5, 15]


Before reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 23, 34, 14, 24, 20, 42, 58, 39, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 54, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 52, 26, 12]
 solution : [0, 2, 13, 5, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, 16), (9, -1), (10, -1), (11, 32), (12, 64), (13, -1), (14, 0), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, 0), (24, 8), (25, 256), (26, 0), (27, 2), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 2), (34, 0), (35, 64), (36, 16), (37, 32), (38, 128), (39, 0), (40, 4), (41, 256), (42, 1), (43, 1), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 2), (51, 32), (52, 0), (53, 1), (54, 0), (55, -1), (56, 4), (57, 1), (58, 32), (59, 16), (60, 128), (61, 4)]

Covered at level 10 : {34, 39, 14, 52, 54, 23, 26}

After reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12]
 solution : [0, 2, 13, 5, 15]


Before reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12]
 solution : [0, 2, 13, 5, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, 16), (9, -1), (10, -1), (11, 32), (12, 64), (13, -1), (14, 0), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, 0), (24, 8), (25, 256), (26, 0), (27, 2), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 2), (34, 0), (35, 64), (36, 16), (37, 32), (38, 128), (39, 0), (40, 4), (41, 256), (42, 1), (43, 1), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 2), (51, 32), (52, 0), (53, 1), (54, 0), (55, -1), (56, 4), (57, 1), (58, 32), (59, 16), (60, 128), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, 16), (9, -1), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, -1), (24, 8), (25, 256), (26, -1), (27, 2), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 2), (34, -1), (35, 32), (36, 16), (37, 32), (38, 128), (39, -1), (40, 4), (41, 256), (42, 1), (43, 1), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 2), (51, 8), (52, -1), (53, 1), (54, -1), (55, -1), (56, 4), (57, 1), (58, 32), (59, 16), (60, 128), (61, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12]
 solution : [0, 2, 13, 5, 15]


Solution : [0, 2, 13, 5, 15] has cost 25.


Before backtrack at level 10
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12]
 solution : [0, 2, 13, 5, 15]

After backtrack at level 10
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 15]


Invert decision for 15 at level 9


New level: 10
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, 16), (9, -1), (10, -1), (11, 32), (12, 64), (13, -1), (14, -1), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 16), (21, 8), (22, 64), (23, -1), (24, 8), (25, 256), (26, -1), (27, 2), (28, 2), (29, 2), (30, 128), (31, 64), (32, 32), (33, 2), (34, -1), (35, 32), (36, 16), (37, 32), (38, 128), (39, -1), (40, 4), (41, 256), (42, 1), (43, 1), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 2), (51, 8), (52, -1), (53, 1), (54, -1), (55, -1), (56, 4), (57, 1), (58, 32), (59, 16), (60, 128), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 10 : set()

After reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 10 among pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 8, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 8]


New level: 11
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 8]


Before reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 8), (43, 8), (44, -1), (45, 32), (46, 16), (47, 32), (48, -1), (49, 64), (50, 16), (51, 128), (52, 8), (53, 32), (54, 2), (55, -1), (56, 8), (57, 8), (58, 32), (59, 32), (60, 128), (61, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 8]


Solution : [0, 2, 13, 5, 8] has cost 24.


Before backtrack at level 11
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 8]

After backtrack at level 11
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 128), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 8), (43, 8), (44, -1), (45, 32), (46, 16), (47, 32), (48, -1), (49, 64), (50, 16), (51, 128), (52, 8), (53, 32), (54, 2), (55, -1), (56, 8), (57, 8), (58, 32), (59, 32), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 11 among pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 12, 23, 34, 14, 39, 54, 52, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 12]


New level: 12
 pending : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 12]


Before reduction : 
 pending  : [56, 46, 60, 59, 35, 28, 29, 51, 21, 22, 11, 37, 24, 20, 42, 58, 61, 45, 40, 43, 27, 50, 3, 57, 33, 53, 38, 17, 7, 16, 36, 31, 32, 30, 47, 49, 25, 41, 23, 34, 14, 39, 54, 52, 26]
 solution : [0, 2, 13, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 64), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 16), (26, 2), (27, 256), (28, 2), (29, 256), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 1), (37, 0), (38, 16), (39, 0), (40, 0), (41, 1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, 4), (50, 0), (51, 0), (52, 0), (53, 1), (54, 0), (55, -1), (56, 0), (57, 0), (58, 4), (59, 0), (60, 4), (61, 0)]

Covered at level 12 : {3, 7, 11, 20, 21, 22, 24, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 45, 46, 47, 50, 51, 52, 54, 56, 57, 59, 61}

After reduction : 
 pending  : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26]
 solution : [0, 2, 13, 5, 12]


Before reduction : 
 pending  : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26]
 solution : [0, 2, 13, 5, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 64), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 16), (26, 2), (27, 256), (28, 2), (29, 256), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 1), (37, 0), (38, 16), (39, 0), (40, 0), (41, 1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, 4), (50, 0), (51, 0), (52, 0), (53, 1), (54, 0), (55, -1), (56, 0), (57, 0), (58, 4), (59, 0), (60, 4), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 64), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, 16), (26, 2), (27, 256), (28, 2), (29, 256), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1), (37, -1), (38, 16), (39, -1), (40, -1), (41, 1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 4), (50, -1), (51, -1), (52, -1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, 4), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26]
 solution : [0, 2, 13, 5, 12]


Solution : [0, 2, 13, 5, 12] has cost 25.


Before backtrack at level 12
 pending : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26]
 solution : [0, 2, 13, 5, 12]

After backtrack at level 12
 pending : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]
 solution : [0, 2, 13, 5, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]
 solution : [0, 2, 13, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, 64), (17, 64), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, 16), (26, 2), (27, 256), (28, 2), (29, 256), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1), (37, -1), (38, 16), (39, -1), (40, -1), (41, 1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 4), (50, -1), (51, -1), (52, -1), (53, 1), (54, -1), (55, -1), (56, -1), (57, -1), (58, 4), (59, -1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 12 : set()

After reduction : 
 pending  : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 12 among pending : [60, 28, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 28 with phase True at level 12

After decision at level 12
 pending : [60, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]
 solution : [0, 2, 13, 5, 28]


New level: 13
 pending : [60, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]
 solution : [0, 2, 13, 5, 28]


Before reduction : 
 pending  : [60, 29, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 26, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 54, 52]
 solution : [0, 2, 13, 5, 28]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 256), (28, -1), (29, 0), (30, 256), (31, 128), (32, 256), (33, 8), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 2), (43, 2), (44, -1), (45, 2), (46, 8), (47, 4), (48, -1), (49, 64), (50, 64), (51, 8), (52, 4), (53, 8), (54, 0), (55, -1), (56, 4), (57, 32), (58, 32), (59, 64), (60, 128), (61, 2)]

Covered at level 13 : {26, 29, 54}

After reduction : 
 pending  : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52]
 solution : [0, 2, 13, 5, 28]


Before reduction : 
 pending  : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52]
 solution : [0, 2, 13, 5, 28]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 0), (27, 256), (28, -1), (29, 0), (30, 256), (31, 128), (32, 256), (33, 8), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 2), (43, 2), (44, -1), (45, 2), (46, 8), (47, 4), (48, -1), (49, 64), (50, 64), (51, 8), (52, 4), (53, 8), (54, 0), (55, -1), (56, 4), (57, 32), (58, 32), (59, 64), (60, 128), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 256), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 8), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 2), (43, 2), (44, -1), (45, 2), (46, 8), (47, 4), (48, -1), (49, 64), (50, 64), (51, 8), (52, 4), (53, 8), (54, -1), (55, -1), (56, 4), (57, 32), (58, 32), (59, 64), (60, 128), (61, 2)]

Covered at level 13 : set()

After reduction : 
 pending  : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52]
 solution : [0, 2, 13, 5, 28]


Solution : [0, 2, 13, 5, 28] has cost 29.


Before backtrack at level 13
 pending : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52]
 solution : [0, 2, 13, 5, 28]

After backtrack at level 13
 pending : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 28]


Invert decision for 28 at level 12


New level: 13
 pending : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, -1), (27, 256), (28, -1), (29, -1), (30, 256), (31, 128), (32, 256), (33, 8), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 2), (40, 64), (41, 256), (42, 2), (43, 2), (44, -1), (45, 2), (46, 8), (47, 4), (48, -1), (49, 64), (50, 64), (51, 8), (52, 4), (53, 8), (54, -1), (55, -1), (56, 4), (57, 32), (58, 32), (59, 64), (60, 128), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 13 among pending : [60, 58, 27, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 27 with phase True at level 13

After decision at level 13
 pending : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 27]


New level: 14
 pending : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 27]


Before reduction : 
 pending  : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 27]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, 256), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 32), (46, 64), (47, 64), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 16), (50, 64), (51, 128), (52, 32), (53, 1), (54, 8), (55, -1), (56, 32), (57, 32), (58, 4), (59, 64), (60, 128), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 27]


Solution : [0, 2, 13, 5, 27] has cost 29.


Before backtrack at level 14
 pending : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 27]

After backtrack at level 14
 pending : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 27]


Invert decision for 27 at level 13


New level: 14
 pending : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 128), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 128), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 16), (50, 64), (51, 128), (52, 32), (53, 1), (54, 8), (55, -1), (56, 32), (57, 32), (58, 4), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 14 : set()

After reduction : 
 pending  : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 14 among pending : [60, 58, 53, 38, 17, 16, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [60, 58, 53, 38, 17, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 16]


New level: 15
 pending : [60, 58, 53, 38, 17, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 16]


Before reduction : 
 pending  : [60, 58, 53, 38, 17, 36, 49, 25, 41, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 45, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, 256), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 128), (25, 2), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 128), (32, 256), (33, 4), (34, 128), (35, 64), (36, 4), (37, 32), (38, 0), (39, 4), (40, 32), (41, 0), (42, 8), (43, 16), (44, -1), (45, 0), (46, 16), (47, 8), (48, -1), (49, 0), (50, 16), (51, 64), (52, 16), (53, 0), (54, 4), (55, -1), (56, 8), (57, 8), (58, 0), (59, 32), (60, 0), (61, 4)]

Covered at level 15 : {38, 41, 45, 17, 49, 53, 58, 60}

After reduction : 
 pending  : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 16]


Before reduction : 
 pending  : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 128), (25, 2), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 128), (32, 256), (33, 4), (34, 128), (35, 64), (36, 4), (37, 32), (38, 0), (39, 4), (40, 32), (41, 0), (42, 8), (43, 16), (44, -1), (45, 0), (46, 16), (47, 8), (48, -1), (49, 0), (50, 16), (51, 64), (52, 16), (53, 0), (54, 4), (55, -1), (56, 8), (57, 8), (58, 0), (59, 32), (60, 0), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 128), (25, 2), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 128), (32, 256), (33, 4), (34, 128), (35, 64), (36, 4), (37, 32), (38, -1), (39, 4), (40, 32), (41, -1), (42, 8), (43, 16), (44, -1), (45, -1), (46, 16), (47, 8), (48, -1), (49, -1), (50, 16), (51, 64), (52, 16), (53, -1), (54, 4), (55, -1), (56, 8), (57, 8), (58, -1), (59, 32), (60, -1), (61, 4)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 16]


Solution : [0, 2, 13, 5, 16] has cost 25.


Before backtrack at level 15
 pending : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54]
 solution : [0, 2, 13, 5, 16]

After backtrack at level 15
 pending : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 128), (25, 2), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 128), (32, 256), (33, 4), (34, 128), (35, 64), (36, 4), (37, 32), (38, -1), (39, 4), (40, 32), (41, -1), (42, 8), (43, 16), (44, -1), (45, -1), (46, 16), (47, 8), (48, -1), (49, -1), (50, 16), (51, 64), (52, 16), (53, -1), (54, 4), (55, -1), (56, 8), (57, 8), (58, -1), (59, 32), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 15 : set()

After reduction : 
 pending  : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 15 among pending : [36, 25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 36 with phase True at level 15

After decision at level 15
 pending : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 36]


New level: 16
 pending : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 36]


Before reduction : 
 pending  : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 53, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 36]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 32), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 8), (34, 64), (35, 128), (36, -1), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 4), (46, 32), (47, 16), (48, -1), (49, 64), (50, 64), (51, 64), (52, 16), (53, 0), (54, 4), (55, -1), (56, 16), (57, 32), (58, 16), (59, 64), (60, 128), (61, 8)]

Covered at level 16 : {53}

After reduction : 
 pending  : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 36]


Before reduction : 
 pending  : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 36]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 32), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 8), (34, 64), (35, 128), (36, -1), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 4), (46, 32), (47, 16), (48, -1), (49, 64), (50, 64), (51, 64), (52, 16), (53, 0), (54, 4), (55, -1), (56, 16), (57, 32), (58, 16), (59, 64), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 32), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 8), (34, 64), (35, 128), (36, -1), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 4), (46, 32), (47, 16), (48, -1), (49, 64), (50, 64), (51, 64), (52, 16), (53, -1), (54, 4), (55, -1), (56, 16), (57, 32), (58, 16), (59, 64), (60, 128), (61, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 36]


Solution : [0, 2, 13, 5, 36] has cost 29.


Before backtrack at level 16
 pending : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45]
 solution : [0, 2, 13, 5, 36]

After backtrack at level 16
 pending : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 36]


Invert decision for 36 at level 15


New level: 16
 pending : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 32), (18, -1), (19, -1), (20, 256), (21, 128), (22, 128), (23, 128), (24, 128), (25, 64), (26, 4), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 8), (34, 64), (35, 128), (36, -1), (37, 64), (38, 128), (39, 4), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 4), (46, 32), (47, 16), (48, -1), (49, 64), (50, 64), (51, 64), (52, 16), (53, -1), (54, 4), (55, -1), (56, 16), (57, 32), (58, 16), (59, 64), (60, 128), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 16 among pending : [25, 23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 25 with phase True at level 16

After decision at level 16
 pending : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 25]


New level: 17
 pending : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 25]


Before reduction : 
 pending  : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 25]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 16), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, -1), (26, 4), (27, -1), (28, -1), (29, 128), (30, 128), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 1), (42, 8), (43, 16), (44, -1), (45, 0), (46, 16), (47, 8), (48, -1), (49, 16), (50, 64), (51, 32), (52, 16), (53, 0), (54, 4), (55, -1), (56, 16), (57, 32), (58, 4), (59, 64), (60, 16), (61, 4)]

Covered at level 17 : {53, 45}

After reduction : 
 pending  : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41]
 solution : [0, 2, 13, 5, 25]


Before reduction : 
 pending  : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41]
 solution : [0, 2, 13, 5, 25]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 16), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, -1), (26, 4), (27, -1), (28, -1), (29, 128), (30, 128), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 1), (42, 8), (43, 16), (44, -1), (45, 0), (46, 16), (47, 8), (48, -1), (49, 16), (50, 64), (51, 32), (52, 16), (53, 0), (54, 4), (55, -1), (56, 16), (57, 32), (58, 4), (59, 64), (60, 16), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 16), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, -1), (26, 4), (27, -1), (28, -1), (29, 128), (30, 128), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 1), (42, 8), (43, 16), (44, -1), (45, -1), (46, 16), (47, 8), (48, -1), (49, 16), (50, 64), (51, 32), (52, 16), (53, -1), (54, 4), (55, -1), (56, 16), (57, 32), (58, 4), (59, 64), (60, 16), (61, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41]
 solution : [0, 2, 13, 5, 25]


Solution : [0, 2, 13, 5, 25] has cost 29.


Before backtrack at level 17
 pending : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41]
 solution : [0, 2, 13, 5, 25]

After backtrack at level 17
 pending : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 25]


Invert decision for 25 at level 16


New level: 17
 pending : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 16), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 64), (25, -1), (26, 4), (27, -1), (28, -1), (29, 128), (30, 128), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 1), (42, 8), (43, 16), (44, -1), (45, -1), (46, 16), (47, 8), (48, -1), (49, 16), (50, 64), (51, 32), (52, 16), (53, -1), (54, 4), (55, -1), (56, 16), (57, 32), (58, 4), (59, 64), (60, 16), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, -1), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Covered at level 17 : set()

After reduction : 
 pending  : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5]


Solution : [0, 2, 13, 5] has cost 19.


Decide in level 17 among pending : [23, 14, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, -1), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

Decide 14 with phase True at level 17

After decision at level 17
 pending : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 14]


New level: 18
 pending : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 14]


Before reduction : 
 pending  : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 52, 29, 26, 54, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, -1), (26, 8), (27, -1), (28, -1), (29, 256), (30, 256), (31, 256), (32, 256), (33, 16), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 8), (40, 64), (41, 256), (42, 16), (43, 32), (44, -1), (45, 16), (46, 64), (47, 32), (48, -1), (49, 64), (50, 64), (51, 128), (52, 32), (53, 32), (54, 8), (55, -1), (56, 32), (57, 32), (58, 32), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 4), (24, 64), (25, -1), (26, 0), (27, -1), (28, -1), (29, 4), (30, 256), (31, 256), (32, 256), (33, 8), (34, 4), (35, 64), (36, -1), (37, 32), (38, 128), (39, 1), (40, 32), (41, 256), (42, 4), (43, 4), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 8), (51, 8), (52, 0), (53, 1), (54, 0), (55, -1), (56, 4), (57, 4), (58, 32), (59, 16), (60, 128), (61, 4)]

Covered at level 18 : {26, 52, 54}

After reduction : 
 pending  : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 29, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 14]


Before reduction : 
 pending  : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 29, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 4), (24, 64), (25, -1), (26, 0), (27, -1), (28, -1), (29, 4), (30, 256), (31, 256), (32, 256), (33, 8), (34, 4), (35, 64), (36, -1), (37, 32), (38, 128), (39, 1), (40, 32), (41, 256), (42, 4), (43, 4), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 8), (51, 8), (52, 0), (53, 1), (54, 0), (55, -1), (56, 4), (57, 4), (58, 32), (59, 16), (60, 128), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 4), (24, 64), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 256), (31, 256), (32, 256), (33, 8), (34, 4), (35, 64), (36, -1), (37, 32), (38, 128), (39, 1), (40, 32), (41, 256), (42, 4), (43, 4), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 8), (51, 8), (52, -1), (53, 1), (54, -1), (55, -1), (56, 4), (57, 4), (58, 32), (59, 16), (60, 128), (61, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 29, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 14]


Solution : [0, 2, 13, 5, 14] has cost 25.


Before backtrack at level 18
 pending : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 29, 60, 58, 38, 17, 49, 41, 45, 53]
 solution : [0, 2, 13, 5, 14]

After backtrack at level 18
 pending : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 29, 60, 58, 38, 17, 49, 41, 45, 53, 52, 26, 54]
 solution : [0, 2, 13, 5, 14]


Invert decision for 14 at level 17


New level: 18
 pending : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 29, 60, 58, 38, 17, 49, 41, 45, 53, 52, 26, 54]
 solution : [0, 2, 13, 5]


Before reduction : 
 pending  : [23, 56, 46, 59, 35, 51, 21, 22, 11, 37, 24, 20, 42, 61, 40, 43, 50, 3, 57, 33, 7, 31, 32, 30, 47, 34, 39, 29, 60, 58, 38, 17, 49, 41, 45, 53, 52, 26, 54]
 solution : [0, 2, 13, 5]

Essensial at level 18 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, 64), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 4), (24, 64), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, 256), (31, 256), (32, 256), (33, 8), (34, 4), (35, 64), (36, -1), (37, 32), (38, 128), (39, 1), (40, 32), (41, 256), (42, 4), (43, 4), (44, -1), (45, 8), (46, 8), (47, 8), (48, -1), (49, 64), (50, 8), (51, 8), (52, -1), (53, 1), (54, -1), (55, -1), (56, 4), (57, 4), (58, 32), (59, 16), (60, 128), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 4), (22, 64), (23, 8), (24, 4), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, 256), (31, 16), (32, 256), (33, 8), (34, 8), (35, 8), (36, -1), (37, 0), (38, 64), (39, 0), (40, 0), (41, 4), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, 8), (50, 0), (51, 0), (52, 0), (53, 2), (54, 0), (55, -1), (56, 0), (57, 0), (58, 8), (59, 0), (60, 8), (61, 0)]

Covered at level 18 : {37, 39, 40, 42, 43, 45, 46, 47, 50, 51, 52, 54, 56, 57, 59, 61}

After reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26]
 solution : [0, 2, 13, 5, 11]


Before reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26]
 solution : [0, 2, 13, 5, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 4), (22, 64), (23, 8), (24, 4), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, 256), (31, 16), (32, 256), (33, 8), (34, 8), (35, 8), (36, -1), (37, 0), (38, 64), (39, 0), (40, 0), (41, 4), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, -1), (49, 8), (50, 0), (51, 0), (52, 0), (53, 2), (54, 0), (55, -1), (56, 0), (57, 0), (58, 8), (59, 0), (60, 8), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 4), (22, 64), (23, 8), (24, 4), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, 256), (31, 16), (32, 256), (33, 8), (34, 8), (35, 8), (36, -1), (37, -1), (38, 64), (39, -1), (40, -1), (41, 4), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, -1), (51, -1), (52, -1), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, 8), (59, -1), (60, 8), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26]
 solution : [0, 2, 13, 5, 11]


Solution : [0, 2, 13, 5, 11] has cost 25.


Before backtrack at level 18
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26]
 solution : [0, 2, 13, 5, 11]

After backtrack at level 18
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54]
 solution : [0, 2, 13, 5]


Before backtrack at level 17
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54]
 solution : [0, 2, 13, 5]

After backtrack at level 17
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14]
 solution : [0, 2, 13, 5]


Before backtrack at level 16
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14]
 solution : [0, 2, 13, 5]

After backtrack at level 16
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25]
 solution : [0, 2, 13, 5]


Before backtrack at level 15
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25]
 solution : [0, 2, 13, 5]

After backtrack at level 15
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36]
 solution : [0, 2, 13, 5]


Before backtrack at level 14
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36]
 solution : [0, 2, 13, 5]

After backtrack at level 14
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16]
 solution : [0, 2, 13, 5]


Before backtrack at level 13
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16]
 solution : [0, 2, 13, 5]

After backtrack at level 13
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27]
 solution : [0, 2, 13, 5]


Before backtrack at level 12
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27]
 solution : [0, 2, 13, 5]

After backtrack at level 12
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28]
 solution : [0, 2, 13, 5]


Before backtrack at level 11
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28]
 solution : [0, 2, 13, 5]

After backtrack at level 11
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12]
 solution : [0, 2, 13, 5]


Before backtrack at level 10
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12]
 solution : [0, 2, 13, 5]

After backtrack at level 10
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8]
 solution : [0, 2, 13, 5]


Before backtrack at level 9
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8]
 solution : [0, 2, 13, 5]

After backtrack at level 9
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]
 solution : [0, 2, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, -1), (19, -1), (20, 256), (21, 4), (22, 64), (23, 8), (24, 4), (25, -1), (26, 4), (27, -1), (28, -1), (29, 4), (30, 256), (31, 16), (32, 256), (33, 8), (34, 8), (35, 8), (36, -1), (37, -1), (38, 64), (39, -1), (40, -1), (41, 4), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 8), (50, -1), (51, -1), (52, -1), (53, 2), (54, -1), (55, -1), (56, -1), (57, -1), (58, 8), (59, -1), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, 512), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 9 among pending : [23, 35, 21, 22, 24, 20, 3, 33, 7, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, 512), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7]


New level: 10
 pending : [23, 35, 21, 22, 24, 20, 3, 33, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7]


Before reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 3, 33, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 50, 57, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 8, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, 512), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, 0), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 0), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, 0), (58, 32), (59, 16), (60, 256), (61, 64)]

Covered at level 10 : {33, 3, 8, 50, 57}

After reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7]


Before reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, 0), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, 0), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, 0), (58, 32), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, -1), (58, 32), (59, 16), (60, 256), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7]


Solution : [0, 2, 13, 7] has cost 19.


Decide in level 10 among pending : [23, 35, 21, 22, 24, 20, 31, 32, 30, 34, 29, 60, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, -1), (58, 32), (59, 16), (60, 256), (61, 64)]

Decide 60 with phase True at level 10

After decision at level 10
 pending : [23, 35, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7, 60]


New level: 11
 pending : [23, 35, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7, 60]


Before reduction : 
 pending  : [23, 35, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 56, 46, 59, 51, 37, 42, 61, 40, 43, 47, 39, 45, 52, 54, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7, 60]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, -1), (58, 32), (59, 16), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 128), (15, 128), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 32), (22, 64), (23, 64), (24, 64), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 0), (36, 4), (37, 32), (38, 32), (39, 1), (40, 16), (41, 32), (42, 1), (43, 0), (44, 32), (45, 0), (46, 0), (47, 0), (48, 16), (49, 16), (50, -1), (51, 64), (52, 0), (53, 4), (54, 0), (55, 4), (56, 0), (57, -1), (58, 4), (59, 0), (60, -1), (61, 0)]

Covered at level 11 : {35, 43, 45, 46, 47, 52, 54, 56, 59, 61}

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7, 60]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7, 60]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 128), (15, 128), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 32), (22, 64), (23, 64), (24, 64), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 0), (36, 4), (37, 32), (38, 32), (39, 1), (40, 16), (41, 32), (42, 1), (43, 0), (44, 32), (45, 0), (46, 0), (47, 0), (48, 16), (49, 16), (50, -1), (51, 64), (52, 0), (53, 4), (54, 0), (55, 4), (56, 0), (57, -1), (58, 4), (59, 0), (60, -1), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 128), (15, 128), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 32), (23, 64), (24, 64), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, -1), (36, 4), (37, 32), (38, 32), (39, 1), (40, 16), (41, 32), (42, 1), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, 16), (49, 16), (50, -1), (51, 64), (52, -1), (53, 4), (54, -1), (55, 4), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7, 60]


Solution : [0, 2, 13, 7, 60] has cost 29.


Before backtrack at level 11
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15]
 solution : [0, 2, 13, 7, 60]

After backtrack at level 11
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 60]


Invert decision for 60 at level 10


New level: 11
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 128), (15, 128), (16, 64), (17, 256), (18, -1), (19, -1), (20, 64), (21, 16), (22, 32), (23, 64), (24, 64), (25, 32), (26, 64), (27, 256), (28, 256), (29, 32), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, -1), (36, 4), (37, 32), (38, 32), (39, 1), (40, 16), (41, 32), (42, 1), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, 16), (49, 16), (50, -1), (51, 64), (52, -1), (53, 4), (54, -1), (55, 4), (56, -1), (57, -1), (58, 4), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, -1), (58, 32), (59, 16), (60, -1), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7]


Solution : [0, 2, 13, 7] has cost 19.


Decide in level 11 among pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 17, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, -1), (58, 32), (59, 16), (60, -1), (61, 64)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 17]


New level: 12
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 17]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 58, 38, 49, 41, 53, 26, 11, 51, 37, 42, 40, 39, 14, 25, 36, 16, 27, 28, 12, 48, 4, 55, 44, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 64), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 16), (36, 64), (37, 64), (38, 128), (39, 16), (40, 32), (41, 256), (42, 256), (43, 256), (44, 64), (45, 128), (46, 64), (47, 128), (48, 64), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 64), (55, 32), (56, 32), (57, -1), (58, 32), (59, 16), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 64), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, 16), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, 0), (40, 32), (41, 16), (42, 2), (43, 2), (44, 0), (45, 4), (46, 4), (47, 4), (48, 0), (49, 0), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, 0), (56, 4), (57, -1), (58, 0), (59, 4), (60, -1), (61, 4)]

Covered at level 12 : {4, 39, 44, 48, 49, 55, 58}

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 17]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 64), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, 16), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, 0), (40, 32), (41, 16), (42, 2), (43, 2), (44, 0), (45, 4), (46, 4), (47, 4), (48, 0), (49, 0), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, 0), (56, 4), (57, -1), (58, 0), (59, 4), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 64), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, 16), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, -1), (40, 32), (41, 16), (42, 2), (43, 2), (44, -1), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, -1), (56, 4), (57, -1), (58, -1), (59, 4), (60, -1), (61, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 17]


Solution : [0, 2, 13, 7, 17] has cost 25.


Before backtrack at level 12
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54]
 solution : [0, 2, 13, 7, 17]

After backtrack at level 12
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 4, 55, 44]
 solution : [0, 2, 13, 7, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 4, 55, 44]
 solution : [0, 2, 13, 7]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 4, 55, 44]
 solution : [0, 2, 13, 7]

Essensial at level 12 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 64), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 32), (26, 4), (27, 16), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 4), (36, 16), (37, 64), (38, 32), (39, -1), (40, 32), (41, 16), (42, 2), (43, 2), (44, -1), (45, 4), (46, 4), (47, 4), (48, -1), (49, -1), (50, -1), (51, 128), (52, 2), (53, 2), (54, 2), (55, -1), (56, 4), (57, -1), (58, -1), (59, 4), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 256), (44, 32), (45, 64), (46, 64), (47, 64), (48, 32), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 16), (55, 0), (56, 8), (57, -1), (58, 8), (59, 8), (60, -1), (61, 8)]

Covered at level 12 : {55}

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44]
 solution : [0, 2, 13, 7, 4]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44]
 solution : [0, 2, 13, 7, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 256), (44, 32), (45, 64), (46, 64), (47, 64), (48, 32), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 16), (55, 0), (56, 8), (57, -1), (58, 8), (59, 8), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 256), (44, 32), (45, 64), (46, 64), (47, 64), (48, 32), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 16), (55, -1), (56, 8), (57, -1), (58, 8), (59, 8), (60, -1), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44]
 solution : [0, 2, 13, 7, 4]


Solution : [0, 2, 13, 7, 4] has cost 28.


Before backtrack at level 12
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44]
 solution : [0, 2, 13, 7, 4]

After backtrack at level 12
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55]
 solution : [0, 2, 13, 7]


Before backtrack at level 11
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55]
 solution : [0, 2, 13, 7]

After backtrack at level 11
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17]
 solution : [0, 2, 13, 7]


Before backtrack at level 10
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17]
 solution : [0, 2, 13, 7]

After backtrack at level 10
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 256), (13, -1), (14, 128), (15, 128), (16, 256), (17, -1), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 64), (24, 64), (25, 128), (26, 32), (27, 256), (28, 256), (29, 128), (30, 32), (31, 64), (32, 32), (33, -1), (34, 64), (35, 8), (36, 64), (37, 64), (38, 128), (39, 4), (40, 32), (41, 256), (42, 128), (43, 256), (44, 32), (45, 64), (46, 64), (47, 64), (48, 32), (49, 64), (50, -1), (51, 128), (52, 16), (53, 256), (54, 16), (55, -1), (56, 8), (57, -1), (58, 8), (59, 8), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 10 among pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 12, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13, 12]


New level: 11
 pending : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13, 12]


Before reduction : 
 pending  : [23, 21, 22, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 11, 51, 37, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, 512), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 0), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 64), (34, 32), (35, 64), (36, 128), (37, 0), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 64), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 11 : {11, 37, 22}

After reduction : 
 pending  : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13, 12]


Before reduction : 
 pending  : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, 0), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 64), (34, 32), (35, 64), (36, 128), (37, 0), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 64), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 64), (34, 32), (35, 64), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 64), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]
 solution : [0, 2, 13, 12]


Solution : [0, 2, 13, 12] has cost 19.


Decide in level 11 among pending : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 8, 60]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 64), (34, 32), (35, 64), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 64), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12, 8]


New level: 12
 pending : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12, 8]


Before reduction : 
 pending  : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 256), (16, 64), (17, 256), (18, -1), (19, -1), (20, 32), (21, 64), (22, -1), (23, 64), (24, 16), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 64), (34, 32), (35, 64), (36, 128), (37, -1), (38, 32), (39, 128), (40, 8), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 128), (55, 64), (56, 32), (57, 32), (58, 128), (59, 32), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, 64), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 32), (24, 8), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 64), (34, 16), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 64), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12, 8]


Solution : [0, 2, 13, 12, 8] has cost 24.


Before backtrack at level 12
 pending : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12, 8]

After backtrack at level 12
 pending : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12]


Before reduction : 
 pending  : [23, 21, 24, 20, 31, 32, 30, 34, 29, 38, 41, 53, 26, 51, 42, 40, 14, 25, 36, 16, 27, 28, 15, 35, 56, 46, 59, 61, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 4, 55, 17, 3, 33, 50, 57, 60]
 solution : [0, 2, 13, 12]

Essensial at level 12 : {4, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, 64), (16, 64), (17, 256), (18, -1), (19, -1), (20, 8), (21, 64), (22, -1), (23, 32), (24, 8), (25, 256), (26, 128), (27, 256), (28, 64), (29, 256), (30, 128), (31, 32), (32, 64), (33, 64), (34, 16), (35, 32), (36, 128), (37, -1), (38, 32), (39, 128), (40, 4), (41, 256), (42, 256), (43, 64), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 32), (51, 8), (52, 32), (53, 256), (54, 128), (55, 64), (56, 32), (57, 16), (58, 128), (59, 16), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 256), (26, 16), (27, 32), (28, 4), (29, 4), (30, 4), (31, 4), (32, 2), (33, 16), (34, 0), (35, 0), (36, 16), (37, -1), (38, 32), (39, 16), (40, 0), (41, 256), (42, 16), (43, 32), (44, 64), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 2), (51, 0), (52, 2), (53, 256), (54, 1), (55, 0), (56, 0), (57, 0), (58, 8), (59, 0), (60, 16), (61, 0)]

Covered at level 12 : {34, 35, 3, 40, 14, 51, 20, 21, 55, 23, 24, 57, 56, 59, 61}

After reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60]
 solution : [0, 2, 13, 12, 4, 15]


Before reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60]
 solution : [0, 2, 13, 12, 4, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 256), (26, 16), (27, 32), (28, 4), (29, 4), (30, 4), (31, 4), (32, 2), (33, 16), (34, 0), (35, 0), (36, 16), (37, -1), (38, 32), (39, 16), (40, 0), (41, 256), (42, 16), (43, 32), (44, 64), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 2), (51, 0), (52, 2), (53, 256), (54, 1), (55, 0), (56, 0), (57, 0), (58, 8), (59, 0), (60, 16), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 256), (26, 16), (27, 32), (28, 4), (29, 4), (30, 4), (31, 4), (32, 2), (33, 16), (34, -1), (35, -1), (36, 16), (37, -1), (38, 32), (39, 16), (40, -1), (41, 256), (42, 16), (43, 32), (44, 64), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 2), (51, -1), (52, 2), (53, 256), (54, 1), (55, -1), (56, -1), (57, -1), (58, 8), (59, -1), (60, 16), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60]
 solution : [0, 2, 13, 12, 4, 15]


Solution : [0, 2, 13, 12, 4, 15] has cost 34.


Before backtrack at level 12
 pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60]
 solution : [0, 2, 13, 12, 4, 15]

After backtrack at level 12
 pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 15, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57]
 solution : [0, 2, 13, 12]


Before backtrack at level 11
 pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 15, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57]
 solution : [0, 2, 13, 12]

After backtrack at level 11
 pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 15, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 15, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 15, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 256), (26, 16), (27, 32), (28, 4), (29, 4), (30, 4), (31, 4), (32, 2), (33, 16), (34, -1), (35, -1), (36, 16), (37, -1), (38, 32), (39, 16), (40, -1), (41, 256), (42, 16), (43, 32), (44, 64), (45, 8), (46, 32), (47, 16), (48, 64), (49, 256), (50, 2), (51, -1), (52, 2), (53, 256), (54, 1), (55, -1), (56, -1), (57, -1), (58, 8), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 15, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13]


Solution : [0, 2, 13] has cost 13.


Decide in level 11 among pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 15, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15]


New level: 12
 pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 23, 21, 24, 20, 34, 51, 40, 14, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 256), (15, 512), (16, 256), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 64), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, 0), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 0), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 12 : {34, 14, 23}

After reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 40, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 40, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, 0), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, 0), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 40, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 12 among pending : [31, 32, 30, 29, 38, 41, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 40, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 41 with phase True at level 12

After decision at level 12
 pending : [31, 32, 30, 29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 40, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15, 41]


New level: 13
 pending : [31, 32, 30, 29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 40, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15, 41]


Before reduction : 
 pending  : [31, 32, 30, 29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 40, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15, 41]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, 128), (26, 32), (27, 32), (28, 16), (29, 32), (30, 0), (31, 0), (32, 0), (33, 4), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 8), (40, 0), (41, -1), (42, 16), (43, 8), (44, 128), (45, 64), (46, 256), (47, 256), (48, 128), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 32), (60, 128), (61, 128)]

Covered at level 13 : {32, 40, 30, 31}

After reduction : 
 pending  : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15, 41]


Before reduction : 
 pending  : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15, 41]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, 128), (26, 32), (27, 32), (28, 16), (29, 32), (30, 0), (31, 0), (32, 0), (33, 4), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 8), (40, 0), (41, -1), (42, 16), (43, 8), (44, 128), (45, 64), (46, 256), (47, 256), (48, 128), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, 128), (26, 32), (27, 32), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 8), (40, -1), (41, -1), (42, 16), (43, 8), (44, 128), (45, 64), (46, 256), (47, 256), (48, 128), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 32), (60, 128), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15, 41]


Solution : [0, 2, 13, 15, 41] has cost 29.


Before backtrack at level 13
 pending : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8]
 solution : [0, 2, 13, 15, 41]

After backtrack at level 13
 pending : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 41]


Invert decision for 41 at level 12


New level: 13
 pending : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 8), (21, 32), (22, 32), (23, -1), (24, 4), (25, 128), (26, 32), (27, 32), (28, 16), (29, 32), (30, -1), (31, -1), (32, -1), (33, 4), (34, -1), (35, 64), (36, 64), (37, 16), (38, 64), (39, 8), (40, -1), (41, -1), (42, 16), (43, 8), (44, 128), (45, 64), (46, 256), (47, 256), (48, 128), (49, 256), (50, 8), (51, 16), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 13 among pending : [29, 38, 53, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 53 with phase True at level 13

After decision at level 13
 pending : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 53]


New level: 14
 pending : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 53]


Before reduction : 
 pending  : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 52, 54, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 53]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 16), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 8), (51, 8), (52, 0), (53, -1), (54, 0), (55, 32), (56, 128), (57, 4), (58, 64), (59, 16), (60, 64), (61, 128)]

Covered at level 14 : {52, 54}

After reduction : 
 pending  : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 53]


Before reduction : 
 pending  : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 53]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 16), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 8), (51, 8), (52, 0), (53, -1), (54, 0), (55, 32), (56, 128), (57, 4), (58, 64), (59, 16), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 16), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 8), (51, 8), (52, -1), (53, -1), (54, -1), (55, 32), (56, 128), (57, 4), (58, 64), (59, 16), (60, 64), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 53]


Solution : [0, 2, 13, 15, 53] has cost 29.


Before backtrack at level 14
 pending : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40]
 solution : [0, 2, 13, 15, 53]

After backtrack at level 14
 pending : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 53]


Invert decision for 53 at level 13


New level: 14
 pending : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 16), (22, 64), (23, -1), (24, 8), (25, 256), (26, 16), (27, 16), (28, 16), (29, 16), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 32), (36, 8), (37, 32), (38, 128), (39, 32), (40, 4), (41, -1), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 8), (51, 8), (52, -1), (53, -1), (54, -1), (55, 32), (56, 128), (57, 4), (58, 64), (59, 16), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 14 among pending : [29, 38, 26, 42, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 42 with phase True at level 14

After decision at level 14
 pending : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 42]


New level: 15
 pending : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 42]


Before reduction : 
 pending  : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 42]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 16), (29, 32), (30, 8), (31, 8), (32, 8), (33, 64), (34, -1), (35, 64), (36, 64), (37, 32), (38, 128), (39, 1), (40, 1), (41, -1), (42, -1), (43, 4), (44, 64), (45, 64), (46, 256), (47, 128), (48, 128), (49, 256), (50, 16), (51, 16), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 32), (60, 128), (61, 64)]

Covered at level 15 : set()

After reduction : 
 pending  : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 42]


Solution : [0, 2, 13, 15, 42] has cost 29.


Before backtrack at level 15
 pending : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 42]

After backtrack at level 15
 pending : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 42]


Invert decision for 42 at level 14


New level: 15
 pending : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 16), (29, 32), (30, 8), (31, 8), (32, 8), (33, 64), (34, -1), (35, 64), (36, 64), (37, 32), (38, 128), (39, 1), (40, 1), (41, -1), (42, -1), (43, 4), (44, 64), (45, 64), (46, 256), (47, 128), (48, 128), (49, 256), (50, 16), (51, 16), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 32), (60, 128), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 15 among pending : [29, 38, 26, 25, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 25 with phase True at level 15

After decision at level 15
 pending : [29, 38, 26, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 25]


New level: 16
 pending : [29, 38, 26, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 25]


Before reduction : 
 pending  : [29, 38, 26, 36, 16, 27, 28, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 24, 20, 51, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 31, 32, 30, 40, 52, 54]
 solution : [0, 2, 13, 15, 25]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, 256), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 8), (22, 32), (23, -1), (24, 0), (25, -1), (26, 8), (27, 8), (28, 0), (29, 0), (30, 0), (31, 0), (32, 8), (33, 16), (34, -1), (35, 64), (36, 16), (37, 4), (38, 64), (39, 64), (40, 0), (41, -1), (42, -1), (43, 256), (44, 128), (45, 32), (46, 256), (47, 64), (48, 128), (49, 256), (50, 8), (51, 0), (52, 2), (53, -1), (54, 128), (55, 64), (56, 64), (57, 8), (58, 128), (59, 4), (60, 128), (61, 128)]

Covered at level 16 : {40, 51, 20, 24, 28, 29, 30, 31}

After reduction : 
 pending  : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54]
 solution : [0, 2, 13, 15, 25]


Before reduction : 
 pending  : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54]
 solution : [0, 2, 13, 15, 25]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 0), (21, 8), (22, 32), (23, -1), (24, 0), (25, -1), (26, 8), (27, 8), (28, 0), (29, 0), (30, 0), (31, 0), (32, 8), (33, 16), (34, -1), (35, 64), (36, 16), (37, 4), (38, 64), (39, 64), (40, 0), (41, -1), (42, -1), (43, 256), (44, 128), (45, 32), (46, 256), (47, 64), (48, 128), (49, 256), (50, 8), (51, 0), (52, 2), (53, -1), (54, 128), (55, 64), (56, 64), (57, 8), (58, 128), (59, 4), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, -1), (24, -1), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 16), (34, -1), (35, 64), (36, 16), (37, 4), (38, 64), (39, 64), (40, -1), (41, -1), (42, -1), (43, 256), (44, 128), (45, 32), (46, 256), (47, 64), (48, 128), (49, 256), (50, 8), (51, -1), (52, 2), (53, -1), (54, 128), (55, 64), (56, 64), (57, 8), (58, 128), (59, 4), (60, 128), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54]
 solution : [0, 2, 13, 15, 25]


Solution : [0, 2, 13, 15, 25] has cost 29.


Before backtrack at level 16
 pending : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54]
 solution : [0, 2, 13, 15, 25]

After backtrack at level 16
 pending : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]
 solution : [0, 2, 13, 15, 25]


Invert decision for 25 at level 15


New level: 16
 pending : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]
 solution : [0, 2, 13, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 4), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, -1), (21, 8), (22, 32), (23, -1), (24, -1), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 8), (33, 16), (34, -1), (35, 64), (36, 16), (37, 4), (38, 64), (39, 64), (40, -1), (41, -1), (42, -1), (43, 256), (44, 128), (45, 32), (46, 256), (47, 64), (48, 128), (49, 256), (50, 8), (51, -1), (52, 2), (53, -1), (54, 128), (55, 64), (56, 64), (57, 8), (58, 128), (59, 4), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 16 among pending : [38, 26, 36, 16, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 16 with phase True at level 16

After decision at level 16
 pending : [38, 26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]
 solution : [0, 2, 13, 15, 16]


New level: 17
 pending : [38, 26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]
 solution : [0, 2, 13, 15, 16]


Before reduction : 
 pending  : [38, 26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 22, 11, 37, 8, 32, 52, 54, 29, 28, 24, 20, 51, 31, 30, 40]
 solution : [0, 2, 13, 15, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, 0), (21, 4), (22, 0), (23, -1), (24, 0), (25, -1), (26, 16), (27, 16), (28, 0), (29, 4), (30, 4), (31, 0), (32, 4), (33, 16), (34, -1), (35, 16), (36, 16), (37, 0), (38, 0), (39, 32), (40, 0), (41, -1), (42, -1), (43, 2), (44, 128), (45, 32), (46, 4), (47, 256), (48, 128), (49, 128), (50, 4), (51, 0), (52, 2), (53, -1), (54, 64), (55, 64), (56, 4), (57, 4), (58, 64), (59, 1), (60, 64), (61, 128)]

Covered at level 17 : {37, 38, 40, 11, 51, 20, 22, 24, 28, 31}

After reduction : 
 pending  : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30]
 solution : [0, 2, 13, 15, 16]


Before reduction : 
 pending  : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30]
 solution : [0, 2, 13, 15, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, 0), (21, 4), (22, 0), (23, -1), (24, 0), (25, -1), (26, 16), (27, 16), (28, 0), (29, 4), (30, 4), (31, 0), (32, 4), (33, 16), (34, -1), (35, 16), (36, 16), (37, 0), (38, 0), (39, 32), (40, 0), (41, -1), (42, -1), (43, 2), (44, 128), (45, 32), (46, 4), (47, 256), (48, 128), (49, 128), (50, 4), (51, 0), (52, 2), (53, -1), (54, 64), (55, 64), (56, 4), (57, 4), (58, 64), (59, 1), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16), (27, 16), (28, -1), (29, 4), (30, 4), (31, -1), (32, 4), (33, 16), (34, -1), (35, 16), (36, 16), (37, -1), (38, -1), (39, 32), (40, -1), (41, -1), (42, -1), (43, 2), (44, 128), (45, 32), (46, 4), (47, 256), (48, 128), (49, 128), (50, 4), (51, -1), (52, 2), (53, -1), (54, 64), (55, 64), (56, 4), (57, 4), (58, 64), (59, 1), (60, 64), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30]
 solution : [0, 2, 13, 15, 16]


Solution : [0, 2, 13, 15, 16] has cost 25.


Before backtrack at level 17
 pending : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30]
 solution : [0, 2, 13, 15, 16]

After backtrack at level 17
 pending : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]
 solution : [0, 2, 13, 15, 16]


Invert decision for 16 at level 16


New level: 17
 pending : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]
 solution : [0, 2, 13, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 128), (18, -1), (19, -1), (20, -1), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16), (27, 16), (28, -1), (29, 4), (30, 4), (31, -1), (32, 4), (33, 16), (34, -1), (35, 16), (36, 16), (37, -1), (38, -1), (39, 32), (40, -1), (41, -1), (42, -1), (43, 2), (44, 128), (45, 32), (46, 4), (47, 256), (48, 128), (49, 128), (50, 4), (51, -1), (52, 2), (53, -1), (54, 64), (55, 64), (56, 4), (57, 4), (58, 64), (59, 1), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 17 among pending : [26, 36, 27, 46, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 46 with phase True at level 17

After decision at level 17
 pending : [26, 36, 27, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]
 solution : [0, 2, 13, 15, 46]


New level: 18
 pending : [26, 36, 27, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]
 solution : [0, 2, 13, 15, 46]


Before reduction : 
 pending  : [26, 36, 27, 43, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 56, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 28, 24, 20, 51, 31, 40]
 solution : [0, 2, 13, 15, 46]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, 4), (22, 32), (23, -1), (24, 2), (25, -1), (26, 16), (27, 32), (28, 0), (29, 4), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 32), (37, 16), (38, 128), (39, 32), (40, 1), (41, -1), (42, -1), (43, 0), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 8), (51, 0), (52, 1), (53, -1), (54, 32), (55, 32), (56, 0), (57, 4), (58, 128), (59, 64), (60, 256), (61, 16)]

Covered at level 18 : {56, 51, 43, 28}

After reduction : 
 pending  : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40]
 solution : [0, 2, 13, 15, 46]


Before reduction : 
 pending  : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40]
 solution : [0, 2, 13, 15, 46]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, 4), (22, 32), (23, -1), (24, 2), (25, -1), (26, 16), (27, 32), (28, 0), (29, 4), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 32), (37, 16), (38, 128), (39, 32), (40, 1), (41, -1), (42, -1), (43, 0), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 8), (51, 0), (52, 1), (53, -1), (54, 32), (55, 32), (56, 0), (57, 4), (58, 128), (59, 64), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, 4), (22, 32), (23, -1), (24, 2), (25, -1), (26, 16), (27, 32), (28, -1), (29, 4), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 32), (37, 16), (38, 128), (39, 32), (40, 1), (41, -1), (42, -1), (43, -1), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 8), (51, -1), (52, 1), (53, -1), (54, 32), (55, 32), (56, -1), (57, 4), (58, 128), (59, 64), (60, 256), (61, 16)]

Covered at level 18 : set()

After reduction : 
 pending  : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40]
 solution : [0, 2, 13, 15, 46]


Solution : [0, 2, 13, 15, 46] has cost 29.


Before backtrack at level 18
 pending : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40]
 solution : [0, 2, 13, 15, 46]

After backtrack at level 18
 pending : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]
 solution : [0, 2, 13, 15, 46]


Invert decision for 46 at level 17


New level: 18
 pending : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]
 solution : [0, 2, 13, 15]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, 4), (22, 32), (23, -1), (24, 2), (25, -1), (26, 16), (27, 32), (28, -1), (29, 4), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 32), (37, 16), (38, 128), (39, 32), (40, 1), (41, -1), (42, -1), (43, -1), (44, 64), (45, 16), (46, -1), (47, 32), (48, 64), (49, 256), (50, 8), (51, -1), (52, 1), (53, -1), (54, 32), (55, 32), (56, -1), (57, 4), (58, 128), (59, 64), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 18 among pending : [26, 36, 27, 47, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 47 with phase True at level 18

After decision at level 18
 pending : [26, 36, 27, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]
 solution : [0, 2, 13, 15, 47]


New level: 19
 pending : [26, 36, 27, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]
 solution : [0, 2, 13, 15, 47]


Before reduction : 
 pending  : [26, 36, 27, 45, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 21, 35, 59, 61, 55, 3, 57, 8, 32, 52, 54, 29, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 28, 51]
 solution : [0, 2, 13, 15, 47]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, 256), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, 0), (22, 32), (23, -1), (24, 2), (25, -1), (26, 8), (27, 32), (28, 0), (29, 0), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 16), (36, 16), (37, 16), (38, 64), (39, 32), (40, 1), (41, -1), (42, -1), (43, 256), (44, 128), (45, 0), (46, -1), (47, -1), (48, 64), (49, 256), (50, 16), (51, 0), (52, 2), (53, -1), (54, 0), (55, 16), (56, 2), (57, 8), (58, 128), (59, 4), (60, 64), (61, 0)]

Covered at level 19 : {45, 61, 51, 21, 54, 28, 29}

After reduction : 
 pending  : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56]
 solution : [0, 2, 13, 15, 47]


Before reduction : 
 pending  : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56]
 solution : [0, 2, 13, 15, 47]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, 0), (22, 32), (23, -1), (24, 2), (25, -1), (26, 8), (27, 32), (28, 0), (29, 0), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 16), (36, 16), (37, 16), (38, 64), (39, 32), (40, 1), (41, -1), (42, -1), (43, 256), (44, 128), (45, 0), (46, -1), (47, -1), (48, 64), (49, 256), (50, 16), (51, 0), (52, 2), (53, -1), (54, 0), (55, 16), (56, 2), (57, 8), (58, 128), (59, 4), (60, 64), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 32), (23, -1), (24, 2), (25, -1), (26, 8), (27, 32), (28, -1), (29, -1), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 16), (36, 16), (37, 16), (38, 64), (39, 16), (40, 1), (41, -1), (42, -1), (43, 128), (44, 128), (45, -1), (46, -1), (47, -1), (48, 64), (49, 256), (50, 16), (51, -1), (52, 2), (53, -1), (54, -1), (55, 16), (56, 2), (57, 8), (58, 128), (59, 4), (60, 64), (61, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56]
 solution : [0, 2, 13, 15, 47]


Solution : [0, 2, 13, 15, 47] has cost 29.


Before backtrack at level 19
 pending : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56]
 solution : [0, 2, 13, 15, 47]

After backtrack at level 19
 pending : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 47]


Invert decision for 47 at level 18


New level: 19
 pending : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 16), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 4), (21, -1), (22, 32), (23, -1), (24, 2), (25, -1), (26, 8), (27, 32), (28, -1), (29, -1), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 16), (36, 16), (37, 16), (38, 64), (39, 16), (40, 1), (41, -1), (42, -1), (43, 128), (44, 128), (45, -1), (46, -1), (47, -1), (48, 64), (49, 256), (50, 16), (51, -1), (52, 2), (53, -1), (54, -1), (55, 16), (56, 2), (57, 8), (58, 128), (59, 4), (60, 64), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, -1), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 19 among pending : [26, 36, 27, 58, 49, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, -1), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 49 with phase True at level 19

After decision at level 19
 pending : [26, 36, 27, 58, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 49]


New level: 20
 pending : [26, 36, 27, 58, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 49]


Before reduction : 
 pending  : [26, 36, 27, 58, 39, 48, 44, 17, 33, 50, 60, 4, 35, 59, 55, 3, 57, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 49]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, -1), (48, 128), (49, 256), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 0), (28, 16), (29, 32), (30, 32), (31, 32), (32, 64), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, 0), (40, 4), (41, -1), (42, -1), (43, 128), (44, 4), (45, 64), (46, -1), (47, -1), (48, 32), (49, -1), (50, 0), (51, 16), (52, 1), (53, -1), (54, 128), (55, 32), (56, 128), (57, 0), (58, 0), (59, 16), (60, 64), (61, 128)]

Covered at level 20 : {39, 50, 57, 58, 27}

After reduction : 
 pending  : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 49]


Before reduction : 
 pending  : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 49]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, 0), (28, 16), (29, 32), (30, 32), (31, 32), (32, 64), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, 0), (40, 4), (41, -1), (42, -1), (43, 128), (44, 4), (45, 64), (46, -1), (47, -1), (48, 32), (49, -1), (50, 0), (51, 16), (52, 1), (53, -1), (54, 128), (55, 32), (56, 128), (57, 0), (58, 0), (59, 16), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, -1), (28, 16), (29, 32), (30, 32), (31, 32), (32, 16), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, -1), (42, -1), (43, 128), (44, 4), (45, 64), (46, -1), (47, -1), (48, 32), (49, -1), (50, -1), (51, 16), (52, 1), (53, -1), (54, 128), (55, 32), (56, 128), (57, -1), (58, -1), (59, 16), (60, 64), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 49]


Solution : [0, 2, 13, 15, 49] has cost 29.


Before backtrack at level 20
 pending : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51]
 solution : [0, 2, 13, 15, 49]

After backtrack at level 20
 pending : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]
 solution : [0, 2, 13, 15, 49]


Invert decision for 49 at level 19


New level: 20
 pending : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]
 solution : [0, 2, 13, 15]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 32), (22, 64), (23, -1), (24, 8), (25, -1), (26, 8), (27, -1), (28, 16), (29, 32), (30, 32), (31, 32), (32, 16), (33, 32), (34, -1), (35, 32), (36, 32), (37, 32), (38, 128), (39, -1), (40, 4), (41, -1), (42, -1), (43, 128), (44, 4), (45, 64), (46, -1), (47, -1), (48, 32), (49, -1), (50, -1), (51, 16), (52, 1), (53, -1), (54, 128), (55, 32), (56, 128), (57, -1), (58, -1), (59, 16), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, -1), (48, 128), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]
 solution : [0, 2, 13, 15]


Solution : [0, 2, 13, 15] has cost 19.


Decide in level 20 among pending : [26, 36, 48, 44, 17, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, -1), (48, 128), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 17 with phase True at level 20

After decision at level 20
 pending : [26, 36, 48, 44, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]
 solution : [0, 2, 13, 15, 17]


New level: 21
 pending : [26, 36, 48, 44, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]
 solution : [0, 2, 13, 15, 17]


Before reduction : 
 pending  : [26, 36, 48, 44, 33, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 54, 29, 28, 51, 27, 58, 39, 50, 57]
 solution : [0, 2, 13, 15, 17]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 16), (21, 64), (22, 64), (23, -1), (24, 8), (25, -1), (26, 32), (27, 32), (28, 32), (29, 64), (30, 128), (31, 64), (32, 128), (33, 64), (34, -1), (35, 128), (36, 64), (37, 32), (38, 128), (39, 64), (40, 4), (41, -1), (42, -1), (43, 256), (44, 128), (45, 128), (46, -1), (47, -1), (48, 128), (49, -1), (50, 16), (51, 32), (52, 8), (53, -1), (54, 128), (55, 64), (56, 128), (57, 8), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, 0), (27, 0), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, 0), (34, -1), (35, 128), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, -1), (42, -1), (43, 64), (44, 4), (45, 4), (46, -1), (47, -1), (48, 8), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, 0), (55, 8), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

Covered at level 21 : {33, 36, 39, 54, 26, 27}

After reduction : 
 pending  : [48, 44, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 29, 28, 51, 58, 50, 57]
 solution : [0, 2, 13, 15, 17]


Before reduction : 
 pending  : [48, 44, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 29, 28, 51, 58, 50, 57]
 solution : [0, 2, 13, 15, 17]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, 0), (27, 0), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, 0), (34, -1), (35, 128), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, -1), (42, -1), (43, 64), (44, 4), (45, 4), (46, -1), (47, -1), (48, 8), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, 0), (55, 8), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 128), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, -1), (42, -1), (43, 64), (44, 4), (45, 4), (46, -1), (47, -1), (48, 8), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, -1), (55, 8), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

Covered at level 21 : set()

After reduction : 
 pending  : [48, 44, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 29, 28, 51, 58, 50, 57]
 solution : [0, 2, 13, 15, 17]


Solution : [0, 2, 13, 15, 17] has cost 25.


Before backtrack at level 21
 pending : [48, 44, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 29, 28, 51, 58, 50, 57]
 solution : [0, 2, 13, 15, 17]

After backtrack at level 21
 pending : [48, 44, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 29, 28, 51, 58, 50, 57, 26, 36, 33, 54, 27, 39]
 solution : [0, 2, 13, 15, 17]


Invert decision for 17 at level 20


New level: 21
 pending : [48, 44, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 29, 28, 51, 58, 50, 57, 26, 36, 33, 54, 27, 39]
 solution : [0, 2, 13, 15]


Before reduction : 
 pending  : [48, 44, 60, 4, 35, 59, 55, 3, 8, 32, 52, 30, 38, 22, 11, 37, 24, 20, 31, 40, 43, 56, 45, 21, 61, 29, 28, 51, 58, 50, 57, 26, 36, 33, 54, 27, 39]
 solution : [0, 2, 13, 15]

Essensial at level 21 : {4, 38}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, -1), (26, -1), (27, -1), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 128), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, -1), (42, -1), (43, 64), (44, 4), (45, 4), (46, -1), (47, -1), (48, 8), (49, -1), (50, 8), (51, 2), (52, 2), (53, -1), (54, -1), (55, 8), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 16), (27, 32), (28, 2), (29, 2), (30, 2), (31, 2), (32, 1), (33, 16), (34, -1), (35, 0), (36, 16), (37, 0), (38, -1), (39, 32), (40, 0), (41, -1), (42, -1), (43, 256), (44, 64), (45, 2), (46, -1), (47, -1), (48, 64), (49, -1), (50, 2), (51, 0), (52, 2), (53, -1), (54, 1), (55, 0), (56, 0), (57, 0), (58, 2), (59, 0), (60, 4), (61, 0)]

Covered at level 21 : {3, 35, 37, 8, 40, 11, 51, 20, 21, 22, 55, 24, 57, 56, 59, 61}

After reduction : 
 pending  : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39]
 solution : [0, 2, 13, 15, 4, 38]


Before reduction : 
 pending  : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39]
 solution : [0, 2, 13, 15, 4, 38]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 16), (27, 32), (28, 2), (29, 2), (30, 2), (31, 2), (32, 1), (33, 16), (34, -1), (35, 0), (36, 16), (37, 0), (38, -1), (39, 32), (40, 0), (41, -1), (42, -1), (43, 256), (44, 64), (45, 2), (46, -1), (47, -1), (48, 64), (49, -1), (50, 2), (51, 0), (52, 2), (53, -1), (54, 1), (55, 0), (56, 0), (57, 0), (58, 2), (59, 0), (60, 4), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16), (27, 32), (28, 2), (29, 2), (30, 2), (31, 2), (32, 1), (33, 16), (34, -1), (35, -1), (36, 16), (37, -1), (38, -1), (39, 32), (40, -1), (41, -1), (42, -1), (43, 256), (44, 64), (45, 2), (46, -1), (47, -1), (48, 64), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 1), (55, -1), (56, -1), (57, -1), (58, 2), (59, -1), (60, 4), (61, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39]
 solution : [0, 2, 13, 15, 4, 38]


Solution : [0, 2, 13, 15, 4, 38] has cost 38.


Before backtrack at level 21
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39]
 solution : [0, 2, 13, 15, 4, 38]

After backtrack at level 21
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57]
 solution : [0, 2, 13, 15]


Before backtrack at level 20
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57]
 solution : [0, 2, 13, 15]

After backtrack at level 20
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17]
 solution : [0, 2, 13, 15]


Before backtrack at level 19
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17]
 solution : [0, 2, 13, 15]

After backtrack at level 19
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49]
 solution : [0, 2, 13, 15]


Before backtrack at level 18
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49]
 solution : [0, 2, 13, 15]

After backtrack at level 18
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47]
 solution : [0, 2, 13, 15]


Before backtrack at level 17
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47]
 solution : [0, 2, 13, 15]

After backtrack at level 17
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46]
 solution : [0, 2, 13, 15]


Before backtrack at level 16
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46]
 solution : [0, 2, 13, 15]

After backtrack at level 16
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16]
 solution : [0, 2, 13, 15]


Before backtrack at level 15
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16]
 solution : [0, 2, 13, 15]

After backtrack at level 15
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25]
 solution : [0, 2, 13, 15]


Before backtrack at level 14
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25]
 solution : [0, 2, 13, 15]

After backtrack at level 14
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42]
 solution : [0, 2, 13, 15]


Before backtrack at level 13
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42]
 solution : [0, 2, 13, 15]

After backtrack at level 13
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53]
 solution : [0, 2, 13, 15]


Before backtrack at level 12
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53]
 solution : [0, 2, 13, 15]

After backtrack at level 12
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13]


Before reduction : 
 pending  : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 8, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13]

Essensial at level 12 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16), (27, 32), (28, 2), (29, 2), (30, 2), (31, 2), (32, 1), (33, 16), (34, -1), (35, -1), (36, 16), (37, -1), (38, -1), (39, 32), (40, -1), (41, -1), (42, -1), (43, 256), (44, 64), (45, 2), (46, -1), (47, -1), (48, 64), (49, -1), (50, 2), (51, -1), (52, 2), (53, -1), (54, 1), (55, -1), (56, -1), (57, -1), (58, 2), (59, -1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 12 among pending : [48, 44, 60, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 60 with phase True at level 12

After decision at level 12
 pending : [48, 44, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8, 60]


New level: 13
 pending : [48, 44, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8, 60]


Before reduction : 
 pending  : [48, 44, 32, 52, 30, 31, 43, 45, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 35, 59, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8, 60]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 0), (36, 256), (37, 64), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 32), (44, 128), (45, 0), (46, 32), (47, 32), (48, 128), (49, 64), (50, 16), (51, 32), (52, 16), (53, 64), (54, 8), (55, 32), (56, 8), (57, 4), (58, 16), (59, 0), (60, -1), (61, 4)]

Covered at level 13 : {59, 35, 45}

After reduction : 
 pending  : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8, 60]


Before reduction : 
 pending  : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8, 60]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 0), (36, 256), (37, 64), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 32), (44, 128), (45, 0), (46, 32), (47, 32), (48, 128), (49, 64), (50, 16), (51, 32), (52, 16), (53, 64), (54, 8), (55, 32), (56, 8), (57, 4), (58, 16), (59, 0), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, -1), (36, 256), (37, 64), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 32), (44, 128), (45, -1), (46, 32), (47, 32), (48, 128), (49, 64), (50, 16), (51, 32), (52, 16), (53, 64), (54, 8), (55, 32), (56, 8), (57, 4), (58, 16), (59, -1), (60, -1), (61, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8, 60]


Solution : [0, 2, 13, 8, 60] has cost 28.


Before backtrack at level 13
 pending : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41]
 solution : [0, 2, 13, 8, 60]

After backtrack at level 13
 pending : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 60]


Invert decision for 60 at level 12


New level: 13
 pending : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 64), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 128), (27, 256), (28, 256), (29, 64), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, -1), (36, 256), (37, 64), (38, 32), (39, 32), (40, 32), (41, 32), (42, 32), (43, 32), (44, 128), (45, -1), (46, 32), (47, 32), (48, 128), (49, 64), (50, 16), (51, 32), (52, 16), (53, 64), (54, 8), (55, 32), (56, 8), (57, 4), (58, 16), (59, -1), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 13 among pending : [48, 44, 32, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 32 with phase True at level 13

After decision at level 13
 pending : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 32]


New level: 14
 pending : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 32]


Before reduction : 
 pending  : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 40, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 32]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 32), (31, 128), (32, -1), (33, 64), (34, 128), (35, 64), (36, 256), (37, 32), (38, 128), (39, 32), (40, 0), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 64), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 32), (60, -1), (61, 128)]

Covered at level 14 : {40}

After reduction : 
 pending  : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 32]


Before reduction : 
 pending  : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 32]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 32), (31, 128), (32, -1), (33, 64), (34, 128), (35, 64), (36, 256), (37, 32), (38, 128), (39, 32), (40, 0), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 64), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 32), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 32), (31, 128), (32, -1), (33, 64), (34, 128), (35, 64), (36, 256), (37, 32), (38, 128), (39, 32), (40, -1), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 64), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 32), (60, -1), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 32]


Solution : [0, 2, 13, 8, 32] has cost 28.


Before backtrack at level 14
 pending : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 32]

After backtrack at level 14
 pending : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 32]


Invert decision for 32 at level 13


New level: 14
 pending : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 64), (23, 128), (24, 64), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 32), (31, 128), (32, -1), (33, 64), (34, 128), (35, 64), (36, 256), (37, 32), (38, 128), (39, 32), (40, -1), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 64), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 32), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 14 among pending : [48, 44, 52, 30, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 30 with phase True at level 14

After decision at level 14
 pending : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 30]


New level: 15
 pending : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 30]


Before reduction : 
 pending  : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 30]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 256), (29, 128), (30, -1), (31, 64), (32, -1), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 32), (40, 0), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 15 : {40}

After reduction : 
 pending  : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 30]


Before reduction : 
 pending  : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 30]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 256), (29, 128), (30, -1), (31, 64), (32, -1), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 32), (40, 0), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 256), (29, 128), (30, -1), (31, 64), (32, -1), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 32), (40, -1), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 30]


Solution : [0, 2, 13, 8, 30] has cost 28.


Before backtrack at level 15
 pending : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59]
 solution : [0, 2, 13, 8, 30]

After backtrack at level 15
 pending : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 30]


Invert decision for 30 at level 14


New level: 15
 pending : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 128), (26, 128), (27, 256), (28, 256), (29, 128), (30, -1), (31, 64), (32, -1), (33, 64), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 32), (40, -1), (41, 64), (42, 64), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 16), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, 256), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 15 among pending : [48, 44, 52, 31, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, 256), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 31 with phase True at level 15

After decision at level 15
 pending : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 31]


New level: 16
 pending : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 31]


Before reduction : 
 pending  : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 31]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, 256), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 256), (28, 128), (29, 256), (30, -1), (31, -1), (32, -1), (33, 32), (34, 64), (35, 128), (36, 256), (37, 32), (38, 128), (39, 128), (40, 4), (41, 256), (42, 256), (43, 32), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 31]


Solution : [0, 2, 13, 8, 31] has cost 28.


Before backtrack at level 16
 pending : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 31]

After backtrack at level 16
 pending : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 31]


Invert decision for 31 at level 15


New level: 16
 pending : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 256), (28, 128), (29, 256), (30, -1), (31, -1), (32, -1), (33, 32), (34, 64), (35, 128), (36, 256), (37, 32), (38, 128), (39, 128), (40, 4), (41, 256), (42, 256), (43, 32), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 16 among pending : [48, 44, 52, 43, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 43 with phase True at level 16

After decision at level 16
 pending : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 43]


New level: 17
 pending : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 43]


Before reduction : 
 pending  : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 43]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, 256), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 64), (43, -1), (44, 64), (45, 128), (46, 128), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 32), (53, 256), (54, 128), (55, 64), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 43]


Solution : [0, 2, 13, 8, 43] has cost 28.


Before backtrack at level 17
 pending : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 43]

After backtrack at level 17
 pending : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 43]


Invert decision for 43 at level 16


New level: 17
 pending : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 64), (43, -1), (44, 64), (45, 128), (46, 128), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 32), (53, 256), (54, 128), (55, 64), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 17 among pending : [48, 44, 52, 29, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 29 with phase True at level 17

After decision at level 17
 pending : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 29]


New level: 18
 pending : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 29]


Before reduction : 
 pending  : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 29]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, 256), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 128), (45, 64), (46, 256), (47, 128), (48, 128), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 32), (55, 64), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 29]


Solution : [0, 2, 13, 8, 29] has cost 28.


Before backtrack at level 18
 pending : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 29]

After backtrack at level 18
 pending : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 29]


Invert decision for 29 at level 17


New level: 18
 pending : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 64), (21, 128), (22, 128), (23, 128), (24, 64), (25, 128), (26, 64), (27, 256), (28, 64), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 128), (45, 64), (46, 256), (47, 128), (48, 128), (49, 256), (50, 64), (51, 8), (52, 64), (53, 256), (54, 32), (55, 64), (56, 64), (57, 32), (58, 128), (59, 64), (60, -1), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 18 among pending : [48, 44, 52, 28, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 28 with phase True at level 18

After decision at level 18
 pending : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 28]


New level: 19
 pending : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 28]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 28]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, 256), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 16), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 64), (51, 8), (52, 16), (53, 256), (54, 128), (55, 64), (56, 32), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 28]


Solution : [0, 2, 13, 8, 28] has cost 28.


Before backtrack at level 19
 pending : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 28]

After backtrack at level 19
 pending : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 28]


Invert decision for 28 at level 18


New level: 19
 pending : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 64), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 16), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 64), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 32), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 64), (47, 256), (48, 128), (49, 256), (50, 64), (51, 8), (52, 16), (53, 256), (54, 128), (55, 64), (56, 32), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 19 among pending : [48, 44, 52, 58, 50, 26, 36, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 36 with phase True at level 19

After decision at level 19
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 36]


New level: 20
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 36]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 36]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 128), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 16), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 2), (53, 64), (54, 4), (55, 64), (56, 128), (57, 16), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 36]


Solution : [0, 2, 13, 8, 36] has cost 28.


Before backtrack at level 20
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 36]

After backtrack at level 20
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 36]


Invert decision for 36 at level 19


New level: 20
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, 256), (18, -1), (19, -1), (20, 128), (21, 64), (22, 128), (23, 128), (24, 128), (25, 64), (26, 64), (27, 128), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 16), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 32), (51, 64), (52, 2), (53, 64), (54, 4), (55, 64), (56, 128), (57, 16), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 20 among pending : [48, 44, 52, 58, 50, 26, 33, 54, 27, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 27 with phase True at level 20

After decision at level 20
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 27]


New level: 21
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 27]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 27]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, 256), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 16), (24, 128), (25, 128), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 64), (40, 32), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 128), (50, 16), (51, 128), (52, 32), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 64), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 27]


Solution : [0, 2, 13, 8, 27] has cost 28.


Before backtrack at level 21
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 27]

After backtrack at level 21
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 27]


Invert decision for 27 at level 20


New level: 21
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 16), (24, 128), (25, 128), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 64), (40, 32), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 128), (50, 16), (51, 128), (52, 32), (53, 256), (54, 128), (55, 64), (56, 128), (57, 8), (58, 64), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8]


Solution : [0, 2, 13, 8] has cost 18.


Decide in level 21 among pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 4, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

Decide 4 with phase True at level 21

After decision at level 21
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 4]


New level: 22
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 4]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 55, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 4]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 128), (36, -1), (37, 64), (38, 128), (39, 128), (40, 64), (41, 256), (42, 256), (43, -1), (44, 128), (45, 128), (46, 256), (47, 256), (48, 128), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 128), (55, 64), (56, 128), (57, 32), (58, 128), (59, 64), (60, -1), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, -1), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 16), (55, 0), (56, 8), (57, 8), (58, 32), (59, 32), (60, -1), (61, 8)]

Covered at level 22 : {55}

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 4]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 4]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, -1), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 16), (55, 0), (56, 8), (57, 8), (58, 32), (59, 32), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, -1), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 16), (55, -1), (56, 8), (57, 8), (58, 32), (59, 32), (60, -1), (61, 8)]

Covered at level 22 : set()

After reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 4]


Solution : [0, 2, 13, 8, 4] has cost 27.


Before backtrack at level 22
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 4]

After backtrack at level 22
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 55]
 solution : [0, 2, 13, 8, 4]


Invert decision for 4 at level 21


New level: 22
 pending : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 55]
 solution : [0, 2, 13, 8]


Before reduction : 
 pending  : [48, 44, 52, 58, 50, 26, 33, 54, 39, 38, 3, 22, 11, 37, 24, 20, 56, 21, 61, 51, 57, 17, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 55]
 solution : [0, 2, 13, 8]

Essensial at level 22 : {17, 3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 256), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 128), (23, 128), (24, 128), (25, 256), (26, 128), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 128), (34, 128), (35, 64), (36, -1), (37, 64), (38, 128), (39, 64), (40, 64), (41, 256), (42, 128), (43, -1), (44, 64), (45, 64), (46, 256), (47, 128), (48, 64), (49, 256), (50, 64), (51, 128), (52, 64), (53, 256), (54, 16), (55, -1), (56, 8), (57, 8), (58, 32), (59, 32), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 32), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 128), (35, 8), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 16), (42, 256), (43, -1), (44, 8), (45, 8), (46, 256), (47, 256), (48, 8), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 8), (55, 0), (56, 4), (57, 0), (58, 0), (59, 8), (60, -1), (61, 4)]

Covered at level 22 : {57, 58, 55}

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 17, 3]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 17, 3]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 32), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 128), (35, 8), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 16), (42, 256), (43, -1), (44, 8), (45, 8), (46, 256), (47, 256), (48, 8), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 8), (55, 0), (56, 4), (57, 0), (58, 0), (59, 8), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 32), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 128), (35, 8), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 16), (42, 256), (43, -1), (44, 8), (45, 8), (46, 256), (47, 256), (48, 8), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 8), (55, -1), (56, 4), (57, -1), (58, -1), (59, 8), (60, -1), (61, 4)]

Covered at level 22 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 17, 3]


Solution : [0, 2, 13, 8, 17, 3] has cost 33.


Before backtrack at level 22
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40]
 solution : [0, 2, 13, 8, 17, 3]

After backtrack at level 22
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55]
 solution : [0, 2, 13, 8]


Before backtrack at level 21
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55]
 solution : [0, 2, 13, 8]

After backtrack at level 21
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4]
 solution : [0, 2, 13, 8]


Before backtrack at level 20
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4]
 solution : [0, 2, 13, 8]

After backtrack at level 20
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27]
 solution : [0, 2, 13, 8]


Before backtrack at level 19
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27]
 solution : [0, 2, 13, 8]

After backtrack at level 19
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36]
 solution : [0, 2, 13, 8]


Before backtrack at level 18
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36]
 solution : [0, 2, 13, 8]

After backtrack at level 18
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28]
 solution : [0, 2, 13, 8]


Before backtrack at level 17
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28]
 solution : [0, 2, 13, 8]

After backtrack at level 17
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29]
 solution : [0, 2, 13, 8]


Before backtrack at level 16
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29]
 solution : [0, 2, 13, 8]

After backtrack at level 16
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43]
 solution : [0, 2, 13, 8]


Before backtrack at level 15
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43]
 solution : [0, 2, 13, 8]

After backtrack at level 15
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31]
 solution : [0, 2, 13, 8]


Before backtrack at level 14
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31]
 solution : [0, 2, 13, 8]

After backtrack at level 14
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30]
 solution : [0, 2, 13, 8]


Before backtrack at level 13
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30]
 solution : [0, 2, 13, 8]

After backtrack at level 13
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32]
 solution : [0, 2, 13, 8]


Before backtrack at level 12
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32]
 solution : [0, 2, 13, 8]

After backtrack at level 12
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60]
 solution : [0, 2, 13]


Before backtrack at level 11
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60]
 solution : [0, 2, 13]

After backtrack at level 11
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15]
 solution : [0, 2, 13]


Before backtrack at level 10
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15]
 solution : [0, 2, 13]

After backtrack at level 10
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12]
 solution : [0, 2, 13]


Before backtrack at level 9
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12]
 solution : [0, 2, 13]

After backtrack at level 9
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7]
 solution : [0, 2, 13]


Before backtrack at level 8
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7]
 solution : [0, 2, 13]

After backtrack at level 8
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5]
 solution : [0, 2, 13]


Before backtrack at level 7
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5]
 solution : [0, 2, 13]

After backtrack at level 7
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9]
 solution : [0, 2, 13]


Before backtrack at level 6
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9]
 solution : [0, 2, 13]

After backtrack at level 6
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6]
 solution : [0, 2, 13]


Before backtrack at level 5
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6]
 solution : [0, 2, 13]

After backtrack at level 5
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10]
 solution : [0, 2, 13]


Before backtrack at level 4
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10]
 solution : [0, 2, 13]

After backtrack at level 4
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19]
 solution : [0, 2, 13]


Before backtrack at level 3
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19]
 solution : [0, 2, 13]

After backtrack at level 3
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 13]


Invert decision for 13 at level 2


New level: 3
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, -1), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 128), (24, 64), (25, 32), (26, 32), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 32), (34, 128), (35, 8), (36, -1), (37, 64), (38, 64), (39, 4), (40, 32), (41, 16), (42, 256), (43, -1), (44, 8), (45, 8), (46, 256), (47, 256), (48, 8), (49, 16), (50, 16), (51, 128), (52, 16), (53, 16), (54, 8), (55, -1), (56, 4), (57, -1), (58, -1), (59, 8), (60, -1), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 3 among pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 11, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 11 with phase True at level 3

After decision at level 3
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11]


New level: 4
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 37, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, 512), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 0), (38, 64), (39, 128), (40, 32), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 32), (52, 128), (53, 256), (54, 128), (55, 128), (56, 64), (57, 64), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 4 : {37}

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 0), (38, 64), (39, 128), (40, 32), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 32), (52, 128), (53, 256), (54, 128), (55, 128), (56, 64), (57, 64), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 32), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 32), (52, 128), (53, 256), (54, 128), (55, 128), (56, 64), (57, 64), (58, 128), (59, 64), (60, 256), (61, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11]


Solution : [0, 2, 11] has cost 13.


Decide in level 4 among pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 17, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 32), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 32), (52, 128), (53, 256), (54, 128), (55, 128), (56, 64), (57, 64), (58, 128), (59, 64), (60, 256), (61, 128)]

Decide 17 with phase True at level 4

After decision at level 4
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17]


New level: 5
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 256), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 32), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 128), (51, 32), (52, 128), (53, 256), (54, 128), (55, 128), (56, 64), (57, 64), (58, 128), (59, 64), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 5 among pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 8, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 8 with phase True at level 5

After decision at level 5
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 8]


New level: 6
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 8]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 8), (7, 256), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, 128), (15, 128), (16, 16), (17, -1), (18, 512), (19, 512), (20, 16), (21, 256), (22, 32), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, 256), (31, 32), (32, 256), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, 4), (39, 128), (40, 4), (41, 4), (42, 256), (43, 128), (44, 128), (45, 4), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 4), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 8]


Solution : [0, 2, 11, 17, 8] has cost 24.


Before backtrack at level 6
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 8]

After backtrack at level 6
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 8]


Invert decision for 8 at level 5


New level: 6
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 8), (7, 256), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, 128), (15, 128), (16, 16), (17, -1), (18, 512), (19, 512), (20, 16), (21, 256), (22, 32), (23, 32), (24, 16), (25, 16), (26, 32), (27, 32), (28, 32), (29, 256), (30, 256), (31, 32), (32, 256), (33, 32), (34, 32), (35, 128), (36, 32), (37, -1), (38, 4), (39, 128), (40, 4), (41, 4), (42, 256), (43, 128), (44, 128), (45, 4), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 4), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 6 among pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 15, 12, 7, 5, 9, 6, 10, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 15]


New level: 7
 pending : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 15]


Before reduction : 
 pending  : [48, 44, 52, 50, 26, 33, 54, 39, 38, 22, 24, 20, 56, 21, 61, 51, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 40, 3, 58, 57, 55, 4, 27, 36, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 19, 18]
 solution : [0, 2, 11, 17, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, 512), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, 0), (19, 0), (20, 8), (21, 4), (22, 32), (23, 8), (24, 4), (25, 8), (26, 0), (27, 0), (28, 8), (29, 4), (30, 4), (31, 8), (32, 4), (33, 0), (34, 8), (35, 128), (36, 0), (37, -1), (38, 32), (39, 0), (40, 0), (41, 4), (42, 64), (43, 32), (44, 8), (45, 4), (46, 32), (47, 16), (48, 16), (49, 16), (50, 128), (51, 0), (52, 32), (53, 8), (54, 0), (55, 16), (56, 32), (57, 64), (58, 16), (59, 8), (60, 128), (61, 16)]

Covered at level 7 : {33, 36, 39, 40, 18, 51, 19, 54, 26, 27}

After reduction : 
 pending  : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10]
 solution : [0, 2, 11, 17, 15]


Before reduction : 
 pending  : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10]
 solution : [0, 2, 11, 17, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, 0), (19, 0), (20, 8), (21, 4), (22, 32), (23, 8), (24, 4), (25, 8), (26, 0), (27, 0), (28, 8), (29, 4), (30, 4), (31, 8), (32, 4), (33, 0), (34, 8), (35, 128), (36, 0), (37, -1), (38, 32), (39, 0), (40, 0), (41, 4), (42, 64), (43, 32), (44, 8), (45, 4), (46, 32), (47, 16), (48, 16), (49, 16), (50, 128), (51, 0), (52, 32), (53, 8), (54, 0), (55, 16), (56, 32), (57, 64), (58, 16), (59, 8), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 4), (22, 32), (23, 8), (24, 4), (25, 8), (26, -1), (27, -1), (28, 8), (29, 4), (30, 4), (31, 8), (32, 4), (33, -1), (34, 8), (35, 128), (36, -1), (37, -1), (38, 32), (39, -1), (40, -1), (41, 4), (42, 64), (43, 32), (44, 8), (45, 4), (46, 32), (47, 16), (48, 16), (49, 16), (50, 128), (51, -1), (52, 32), (53, 8), (54, -1), (55, 16), (56, 32), (57, 64), (58, 16), (59, 8), (60, 128), (61, 16)]

Covered at level 7 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10]
 solution : [0, 2, 11, 17, 15]


Solution : [0, 2, 11, 17, 15] has cost 25.


Before backtrack at level 7
 pending : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10]
 solution : [0, 2, 11, 17, 15]

After backtrack at level 7
 pending : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]
 solution : [0, 2, 11, 17, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]
 solution : [0, 2, 11, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 8), (21, 4), (22, 32), (23, 8), (24, 4), (25, 8), (26, -1), (27, -1), (28, 8), (29, 4), (30, 4), (31, 8), (32, 4), (33, -1), (34, 8), (35, 128), (36, -1), (37, -1), (38, 32), (39, -1), (40, -1), (41, 4), (42, 64), (43, 32), (44, 8), (45, 4), (46, 32), (47, 16), (48, 16), (49, 16), (50, 128), (51, -1), (52, 32), (53, 8), (54, -1), (55, 16), (56, 32), (57, 64), (58, 16), (59, 8), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 7 among pending : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 7, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]
 solution : [0, 2, 11, 17, 7]


New level: 8
 pending : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]
 solution : [0, 2, 11, 17, 7]


Before reduction : 
 pending  : [48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 23, 34, 14, 41, 45, 35, 59, 3, 58, 57, 55, 4, 28, 29, 43, 31, 30, 32, 60, 12, 5, 9, 6, 10, 26, 33, 54, 39, 51, 40, 27, 36, 19, 18]
 solution : [0, 2, 11, 17, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 2), (10, 0), (11, -1), (12, 0), (13, -1), (14, 2), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 2), (29, 1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 8 : {3, 4, 5, 6, 10, 12, 16, 18, 19, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [23, 14, 28, 29, 9, 26, 27]
 solution : [0, 2, 11, 17, 7]


Before reduction : 
 pending  : [23, 14, 28, 29, 9, 26, 27]
 solution : [0, 2, 11, 17, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 0), (6, 0), (7, -1), (8, -1), (9, 2), (10, 0), (11, -1), (12, 0), (13, -1), (14, 2), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 2), (29, 1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, 1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 14, 28, 29, 9, 26, 27]
 solution : [0, 2, 11, 17, 7]


Solution : [0, 2, 11, 17, 7] has cost 25.


Before backtrack at level 8
 pending : [23, 14, 28, 29, 9, 26, 27]
 solution : [0, 2, 11, 17, 7]

After backtrack at level 8
 pending : [23, 14, 28, 29, 9, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]
 solution : [0, 2, 11, 17, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [23, 14, 28, 29, 9, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [23, 14, 28, 29, 9, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]
 solution : [0, 2, 11, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 2), (29, 1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, -1), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 14, 28, 29, 9, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 8 among pending : [23, 14, 28, 29, 9, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, -1), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [23, 14, 28, 29, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]
 solution : [0, 2, 11, 17, 9]


New level: 9
 pending : [23, 14, 28, 29, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]
 solution : [0, 2, 11, 17, 9]


Before reduction : 
 pending  : [23, 14, 28, 29, 26, 27, 48, 44, 52, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 53, 34, 41, 45, 35, 59, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 10, 33, 54, 39, 51, 40, 36, 19, 18]
 solution : [0, 2, 11, 17, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, -1), (8, -1), (9, 512), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 128), (13, -1), (14, 0), (15, -1), (16, 64), (17, -1), (18, 256), (19, 0), (20, 256), (21, 256), (22, 64), (23, 0), (24, 1), (25, 128), (26, 0), (27, 2), (28, 0), (29, 0), (30, 256), (31, 64), (32, 256), (33, 2), (34, 2), (35, 32), (36, 16), (37, -1), (38, 16), (39, 1), (40, 0), (41, 64), (42, 1), (43, 1), (44, 0), (45, 0), (46, 8), (47, 4), (48, 2), (49, 64), (50, 1), (51, 0), (52, 0), (53, 0), (54, 0), (55, 2), (56, 8), (57, 1), (58, 32), (59, 0), (60, 4), (61, 128)]

Covered at level 9 : {40, 10, 44, 45, 14, 51, 52, 53, 54, 23, 19, 26, 59, 28, 29}

After reduction : 
 pending  : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18]
 solution : [0, 2, 11, 17, 9]


Before reduction : 
 pending  : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18]
 solution : [0, 2, 11, 17, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 128), (13, -1), (14, 0), (15, -1), (16, 64), (17, -1), (18, 256), (19, 0), (20, 256), (21, 256), (22, 64), (23, 0), (24, 1), (25, 128), (26, 0), (27, 2), (28, 0), (29, 0), (30, 256), (31, 64), (32, 256), (33, 2), (34, 2), (35, 32), (36, 16), (37, -1), (38, 16), (39, 1), (40, 0), (41, 64), (42, 1), (43, 1), (44, 0), (45, 0), (46, 8), (47, 4), (48, 2), (49, 64), (50, 1), (51, 0), (52, 0), (53, 0), (54, 0), (55, 2), (56, 8), (57, 1), (58, 32), (59, 0), (60, 4), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, 1), (19, -1), (20, 256), (21, 8), (22, 64), (23, -1), (24, 1), (25, 128), (26, -1), (27, 2), (28, -1), (29, -1), (30, 256), (31, 64), (32, 256), (33, 2), (34, 2), (35, 32), (36, 16), (37, -1), (38, 16), (39, 1), (40, -1), (41, 16), (42, 1), (43, 1), (44, -1), (45, -1), (46, 8), (47, 4), (48, 2), (49, 64), (50, 1), (51, -1), (52, -1), (53, -1), (54, -1), (55, 2), (56, 4), (57, 1), (58, 32), (59, -1), (60, 4), (61, 2)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18]
 solution : [0, 2, 11, 17, 9]


Solution : [0, 2, 11, 17, 9] has cost 25.


Before backtrack at level 9
 pending : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18]
 solution : [0, 2, 11, 17, 9]

After backtrack at level 9
 pending : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, 8), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, 1), (19, -1), (20, 256), (21, 8), (22, 64), (23, -1), (24, 1), (25, 128), (26, -1), (27, 2), (28, -1), (29, -1), (30, 256), (31, 64), (32, 256), (33, 2), (34, 2), (35, 32), (36, 16), (37, -1), (38, 16), (39, 1), (40, -1), (41, 16), (42, 1), (43, 1), (44, -1), (45, -1), (46, 8), (47, 4), (48, 2), (49, 64), (50, 1), (51, -1), (52, -1), (53, -1), (54, -1), (55, 2), (56, 4), (57, 1), (58, 32), (59, -1), (60, 4), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 9 among pending : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 5, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 5]


New level: 10
 pending : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 5]


Before reduction : 
 pending  : [27, 48, 50, 38, 22, 24, 20, 56, 21, 61, 49, 47, 46, 16, 25, 42, 34, 41, 35, 3, 58, 57, 55, 4, 43, 31, 30, 32, 60, 12, 6, 33, 39, 36, 18, 23, 14, 28, 29, 26, 44, 52, 53, 45, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 0), (19, 0), (20, 256), (21, 8), (22, 64), (23, 16), (24, 8), (25, 128), (26, 128), (27, 64), (28, 16), (29, 8), (30, 256), (31, 16), (32, 256), (33, 128), (34, 16), (35, 8), (36, 128), (37, -1), (38, 32), (39, 0), (40, 0), (41, 2), (42, 0), (43, 0), (44, 2), (45, 2), (46, 0), (47, 0), (48, 4), (49, 8), (50, 0), (51, 0), (52, 0), (53, 4), (54, 0), (55, 4), (56, 0), (57, 0), (58, 8), (59, 0), (60, 4), (61, 0)]

Covered at level 10 : {4, 39, 40, 42, 43, 10, 46, 47, 50, 18, 52, 51, 54, 19, 56, 57, 59, 61}

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45]
 solution : [0, 2, 11, 17, 5]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45]
 solution : [0, 2, 11, 17, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 0), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 0), (19, 0), (20, 256), (21, 8), (22, 64), (23, 16), (24, 8), (25, 128), (26, 128), (27, 64), (28, 16), (29, 8), (30, 256), (31, 16), (32, 256), (33, 128), (34, 16), (35, 8), (36, 128), (37, -1), (38, 32), (39, 0), (40, 0), (41, 2), (42, 0), (43, 0), (44, 2), (45, 2), (46, 0), (47, 0), (48, 4), (49, 8), (50, 0), (51, 0), (52, 0), (53, 4), (54, 0), (55, 4), (56, 0), (57, 0), (58, 8), (59, 0), (60, 4), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 64), (23, 16), (24, 8), (25, 128), (26, 128), (27, 64), (28, 16), (29, 8), (30, 256), (31, 16), (32, 256), (33, 128), (34, 16), (35, 8), (36, 128), (37, -1), (38, 32), (39, -1), (40, -1), (41, 2), (42, -1), (43, -1), (44, 2), (45, 2), (46, -1), (47, -1), (48, 4), (49, 8), (50, -1), (51, -1), (52, -1), (53, 4), (54, -1), (55, 4), (56, -1), (57, -1), (58, 8), (59, -1), (60, 4), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45]
 solution : [0, 2, 11, 17, 5]


Solution : [0, 2, 11, 17, 5] has cost 25.


Before backtrack at level 10
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45]
 solution : [0, 2, 11, 17, 5]

After backtrack at level 10
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 8), (22, 64), (23, 16), (24, 8), (25, 128), (26, 128), (27, 64), (28, 16), (29, 8), (30, 256), (31, 16), (32, 256), (33, 128), (34, 16), (35, 8), (36, 128), (37, -1), (38, 32), (39, -1), (40, -1), (41, 2), (42, -1), (43, -1), (44, 2), (45, 2), (46, -1), (47, -1), (48, 4), (49, 8), (50, -1), (51, -1), (52, -1), (53, 4), (54, -1), (55, 4), (56, -1), (57, -1), (58, 8), (59, -1), (60, 4), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 10 among pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 6, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 6]


New level: 11
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 6]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 10, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, 512), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 128), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 32), (37, -1), (38, 8), (39, 128), (40, 4), (41, 64), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

Covered at level 11 : {10}

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 6]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 128), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 32), (37, -1), (38, 8), (39, 128), (40, 4), (41, 64), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 128), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 32), (37, -1), (38, 8), (39, 128), (40, 4), (41, 64), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 6]


Solution : [0, 2, 11, 17, 6] has cost 24.


Before backtrack at level 11
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19]
 solution : [0, 2, 11, 17, 6]

After backtrack at level 11
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19, 10]
 solution : [0, 2, 11, 17, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19, 10]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19, 10]
 solution : [0, 2, 11, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, 32), (15, -1), (16, 16), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 16), (23, 128), (24, 64), (25, 128), (26, 128), (27, 32), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 32), (34, 128), (35, 16), (36, 32), (37, -1), (38, 8), (39, 128), (40, 4), (41, 64), (42, 256), (43, 32), (44, 32), (45, 64), (46, 32), (47, 256), (48, 32), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 16), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19, 10]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 11 among pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 18, 52, 59, 54, 51, 40, 19, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 52, 59, 54, 51, 40, 19, 10]
 solution : [0, 2, 11, 17, 18]


New level: 12
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 52, 59, 54, 51, 40, 19, 10]
 solution : [0, 2, 11, 17, 18]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 39, 52, 59, 54, 51, 40, 19, 10]
 solution : [0, 2, 11, 17, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 16), (31, 32), (32, 16), (33, 32), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, 0), (40, 0), (41, 4), (42, 8), (43, 16), (44, 16), (45, 32), (46, 64), (47, 128), (48, 64), (49, 32), (50, 32), (51, 8), (52, 64), (53, 64), (54, 32), (55, 64), (56, 64), (57, 32), (58, 32), (59, 32), (60, 128), (61, 128)]

Covered at level 12 : {40, 39}

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10]
 solution : [0, 2, 11, 17, 18]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10]
 solution : [0, 2, 11, 17, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 16), (31, 32), (32, 16), (33, 32), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, 0), (40, 0), (41, 4), (42, 8), (43, 16), (44, 16), (45, 32), (46, 64), (47, 128), (48, 64), (49, 32), (50, 32), (51, 8), (52, 64), (53, 64), (54, 32), (55, 64), (56, 64), (57, 32), (58, 32), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 16), (31, 32), (32, 16), (33, 32), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 4), (42, 8), (43, 16), (44, 16), (45, 32), (46, 64), (47, 128), (48, 64), (49, 32), (50, 32), (51, 8), (52, 64), (53, 64), (54, 32), (55, 64), (56, 64), (57, 32), (58, 32), (59, 32), (60, 128), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10]
 solution : [0, 2, 11, 17, 18]


Solution : [0, 2, 11, 17, 18] has cost 28.


Before backtrack at level 12
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10]
 solution : [0, 2, 11, 17, 18]

After backtrack at level 12
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10, 39, 40]
 solution : [0, 2, 11, 17, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10, 39, 40]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10, 39, 40]
 solution : [0, 2, 11, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 64), (23, 32), (24, 32), (25, 128), (26, 64), (27, 32), (28, 64), (29, 128), (30, 16), (31, 32), (32, 16), (33, 32), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, -1), (40, -1), (41, 4), (42, 8), (43, 16), (44, 16), (45, 32), (46, 64), (47, 128), (48, 64), (49, 32), (50, 32), (51, 8), (52, 64), (53, 64), (54, 32), (55, 64), (56, 64), (57, 32), (58, 32), (59, 32), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10, 39, 40]
 solution : [0, 2, 11, 17]


Solution : [0, 2, 11, 17] has cost 19.


Decide in level 12 among pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 19, 10, 39, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 10, 39, 40]
 solution : [0, 2, 11, 17, 19]


New level: 13
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 10, 39, 40]
 solution : [0, 2, 11, 17, 19]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 54, 51, 10, 39, 40]
 solution : [0, 2, 11, 17, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 32), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, 64), (40, 8), (41, 64), (42, 256), (43, 128), (44, 128), (45, 8), (46, 64), (47, 32), (48, 64), (49, 128), (50, 128), (51, 0), (52, 32), (53, 32), (54, 0), (55, 32), (56, 32), (57, 64), (58, 64), (59, 16), (60, 128), (61, 16)]

Covered at level 13 : {51, 54}

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 10, 39, 40]
 solution : [0, 2, 11, 17, 19]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 10, 39, 40]
 solution : [0, 2, 11, 17, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 32), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, 64), (40, 8), (41, 64), (42, 256), (43, 128), (44, 128), (45, 8), (46, 64), (47, 32), (48, 64), (49, 128), (50, 128), (51, 0), (52, 32), (53, 32), (54, 0), (55, 32), (56, 32), (57, 64), (58, 64), (59, 16), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 32), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, 64), (40, 8), (41, 64), (42, 256), (43, 128), (44, 128), (45, 8), (46, 64), (47, 32), (48, 64), (49, 128), (50, 128), (51, -1), (52, 32), (53, 32), (54, -1), (55, 32), (56, 32), (57, 64), (58, 64), (59, 16), (60, 128), (61, 16)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 10, 39, 40]
 solution : [0, 2, 11, 17, 19]


Solution : [0, 2, 11, 17, 19] has cost 28.


Before backtrack at level 13
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 10, 39, 40]
 solution : [0, 2, 11, 17, 19]

After backtrack at level 13
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 10, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 10, 39, 40, 54, 51]
 solution : [0, 2, 11, 17]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 10, 39, 40, 54, 51]
 solution : [0, 2, 11, 17]

Essensial at level 13 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 512), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 32), (22, 64), (23, 128), (24, 32), (25, 128), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 128), (32, 256), (33, 128), (34, 64), (35, 256), (36, 64), (37, -1), (38, 32), (39, 64), (40, 8), (41, 64), (42, 256), (43, 128), (44, 128), (45, 8), (46, 64), (47, 32), (48, 64), (49, 128), (50, 128), (51, -1), (52, 32), (53, 32), (54, -1), (55, 32), (56, 32), (57, 64), (58, 64), (59, 16), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10]


Solution : [0, 2, 11, 17, 10] has cost 21.


Decide in level 13 among pending : [27, 48, 38, 22, 24, 20, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [27, 48, 38, 22, 24, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10, 20]


New level: 14
 pending : [27, 48, 38, 22, 24, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10, 20]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 21, 49, 16, 25, 34, 41, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 45, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32), (22, 32), (23, 128), (24, 8), (25, 0), (26, 128), (27, 64), (28, 128), (29, 64), (30, 64), (31, 128), (32, 64), (33, 128), (34, 128), (35, 128), (36, 64), (37, -1), (38, 4), (39, 128), (40, 32), (41, 0), (42, 256), (43, 128), (44, 128), (45, 0), (46, 128), (47, 128), (48, 128), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 8), (61, 128)]

Covered at level 14 : {25, 45, 41}

After reduction : 
 pending  : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10, 20]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32), (22, 32), (23, 128), (24, 8), (25, 0), (26, 128), (27, 64), (28, 128), (29, 64), (30, 64), (31, 128), (32, 64), (33, 128), (34, 128), (35, 128), (36, 64), (37, -1), (38, 4), (39, 128), (40, 32), (41, 0), (42, 256), (43, 128), (44, 128), (45, 0), (46, 128), (47, 128), (48, 128), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 8), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32), (22, 32), (23, 128), (24, 8), (25, -1), (26, 128), (27, 64), (28, 128), (29, 64), (30, 64), (31, 128), (32, 64), (33, 128), (34, 128), (35, 128), (36, 64), (37, -1), (38, 4), (39, 128), (40, 32), (41, -1), (42, 256), (43, 128), (44, 128), (45, -1), (46, 128), (47, 128), (48, 128), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 8), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10, 20]


Solution : [0, 2, 11, 17, 10, 20] has cost 31.


Before backtrack at level 14
 pending : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51]
 solution : [0, 2, 11, 17, 10, 20]

After backtrack at level 14
 pending : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32), (22, 32), (23, 128), (24, 8), (25, -1), (26, 128), (27, 64), (28, 128), (29, 64), (30, 64), (31, 128), (32, 64), (33, 128), (34, 128), (35, 128), (36, 64), (37, -1), (38, 4), (39, 128), (40, 32), (41, -1), (42, 256), (43, 128), (44, 128), (45, -1), (46, 128), (47, 128), (48, 128), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 32), (56, 64), (57, 64), (58, 64), (59, 64), (60, 8), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10]


Solution : [0, 2, 11, 17, 10] has cost 21.


Decide in level 14 among pending : [27, 48, 38, 22, 24, 21, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 21]


New level: 15
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 21]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 128), (24, 32), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 256), (31, 128), (32, 128), (33, 128), (34, 64), (35, 64), (36, 64), (37, -1), (38, 16), (39, 128), (40, 32), (41, 32), (42, 256), (43, 128), (44, 128), (45, 0), (46, 128), (47, 64), (48, 128), (49, 128), (50, 128), (51, 1), (52, 128), (53, 128), (54, 4), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

Covered at level 15 : {45}

After reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41]
 solution : [0, 2, 11, 17, 10, 21]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41]
 solution : [0, 2, 11, 17, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 128), (24, 32), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 256), (31, 128), (32, 128), (33, 128), (34, 64), (35, 64), (36, 64), (37, -1), (38, 16), (39, 128), (40, 32), (41, 32), (42, 256), (43, 128), (44, 128), (45, 0), (46, 128), (47, 64), (48, 128), (49, 128), (50, 128), (51, 1), (52, 128), (53, 128), (54, 4), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 128), (24, 32), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 256), (31, 128), (32, 128), (33, 128), (34, 64), (35, 64), (36, 64), (37, -1), (38, 16), (39, 128), (40, 32), (41, 32), (42, 256), (43, 128), (44, 128), (45, -1), (46, 128), (47, 64), (48, 128), (49, 128), (50, 128), (51, 1), (52, 128), (53, 128), (54, 4), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41]
 solution : [0, 2, 11, 17, 10, 21]


Solution : [0, 2, 11, 17, 10, 21] has cost 31.


Before backtrack at level 15
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41]
 solution : [0, 2, 11, 17, 10, 21]

After backtrack at level 15
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 128), (24, 32), (25, 64), (26, 128), (27, 128), (28, 128), (29, 64), (30, 256), (31, 128), (32, 128), (33, 128), (34, 64), (35, 64), (36, 64), (37, -1), (38, 16), (39, 128), (40, 32), (41, 32), (42, 256), (43, 128), (44, 128), (45, -1), (46, 128), (47, 64), (48, 128), (49, 128), (50, 128), (51, 1), (52, 128), (53, 128), (54, 4), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 32), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10]


Solution : [0, 2, 11, 17, 10] has cost 21.


Decide in level 15 among pending : [27, 48, 38, 22, 24, 49, 16, 34, 35, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 35 with phase True at level 15

After decision at level 15
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 35]


New level: 16
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 35]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 60, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 35]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 64), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 8), (39, 128), (40, 2), (41, 16), (42, 64), (43, 128), (44, 128), (45, 16), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 2), (52, 128), (53, 64), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 8), (60, 0), (61, 32)]

Covered at level 16 : {60}

After reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 35]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 35]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 64), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 8), (39, 128), (40, 2), (41, 16), (42, 64), (43, 128), (44, 128), (45, 16), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 2), (52, 128), (53, 64), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 8), (60, 0), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 64), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 8), (39, 128), (40, 2), (41, 16), (42, 64), (43, 128), (44, 128), (45, 16), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 2), (52, 128), (53, 64), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 8), (60, -1), (61, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 35]


Solution : [0, 2, 11, 17, 10, 35] has cost 31.


Before backtrack at level 16
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45]
 solution : [0, 2, 11, 17, 10, 35]

After backtrack at level 16
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 35]


Invert decision for 35 at level 15


New level: 16
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 128), (24, 64), (25, 64), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 64), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 8), (39, 128), (40, 2), (41, 16), (42, 64), (43, 128), (44, 128), (45, 16), (46, 128), (47, 64), (48, 128), (49, 64), (50, 128), (51, 2), (52, 128), (53, 64), (54, 128), (55, 64), (56, 64), (57, 64), (58, 32), (59, 8), (60, -1), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10]


Solution : [0, 2, 11, 17, 10] has cost 21.


Decide in level 16 among pending : [27, 48, 38, 22, 24, 49, 16, 34, 3, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 3]


New level: 17
 pending : [27, 48, 38, 22, 24, 49, 16, 34, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 3]


Before reduction : 
 pending  : [27, 48, 38, 22, 24, 49, 16, 34, 58, 55, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 64), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 32), (39, 128), (40, 32), (41, 64), (42, 256), (43, 128), (44, 128), (45, 64), (46, 128), (47, 256), (48, 128), (49, 128), (50, 128), (51, 32), (52, 128), (53, 128), (54, 128), (55, 64), (56, 64), (57, 64), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 0), (25, 16), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 64), (35, -1), (36, 128), (37, -1), (38, 8), (39, 16), (40, 1), (41, 16), (42, 256), (43, 128), (44, 32), (45, 8), (46, 128), (47, 256), (48, 32), (49, 32), (50, 128), (51, 2), (52, 128), (53, 32), (54, 16), (55, 0), (56, 4), (57, 2), (58, 0), (59, 2), (60, 4), (61, 2)]

Covered at level 17 : {24, 58, 55}

After reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 3]


Before reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, 0), (25, 16), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 64), (35, -1), (36, 128), (37, -1), (38, 8), (39, 16), (40, 1), (41, 16), (42, 256), (43, 128), (44, 32), (45, 8), (46, 128), (47, 256), (48, 32), (49, 32), (50, 128), (51, 2), (52, 128), (53, 32), (54, 16), (55, 0), (56, 4), (57, 2), (58, 0), (59, 2), (60, 4), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, -1), (25, 16), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 64), (35, -1), (36, 128), (37, -1), (38, 8), (39, 16), (40, 1), (41, 16), (42, 256), (43, 128), (44, 32), (45, 8), (46, 128), (47, 256), (48, 32), (49, 32), (50, 128), (51, 2), (52, 128), (53, 32), (54, 16), (55, -1), (56, 4), (57, 2), (58, -1), (59, 2), (60, 4), (61, 2)]

Covered at level 17 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 3]


Solution : [0, 2, 11, 17, 10, 3] has cost 30.


Before backtrack at level 17
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60]
 solution : [0, 2, 11, 17, 10, 3]

After backtrack at level 17
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60, 24, 58, 55]
 solution : [0, 2, 11, 17, 10, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60, 24, 58, 55]
 solution : [0, 2, 11, 17, 10]


Before reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 56, 61, 47, 46, 42, 57, 4, 43, 52, 59, 39, 40, 54, 51, 25, 41, 45, 60, 24, 58, 55]
 solution : [0, 2, 11, 17, 10]

Essensial at level 17 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 128), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 64), (24, -1), (25, 16), (26, 128), (27, 128), (28, 128), (29, 64), (30, 64), (31, 128), (32, 256), (33, 128), (34, 64), (35, -1), (36, 128), (37, -1), (38, 8), (39, 16), (40, 1), (41, 16), (42, 256), (43, 128), (44, 32), (45, 8), (46, 128), (47, 256), (48, 32), (49, 32), (50, 128), (51, 2), (52, 128), (53, 32), (54, 16), (55, -1), (56, 4), (57, 2), (58, -1), (59, 2), (60, 4), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 8), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 32), (39, 32), (40, 0), (41, 64), (42, 32), (43, 64), (44, 128), (45, 64), (46, 64), (47, 32), (48, 128), (49, 128), (50, 32), (51, 0), (52, 32), (53, 128), (54, 16), (55, 8), (56, 0), (57, 0), (58, 16), (59, 0), (60, 16), (61, 0)]

Covered at level 17 : {40, 51, 56, 57, 59, 61}

After reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55]
 solution : [0, 2, 11, 17, 10, 4]


Before reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55]
 solution : [0, 2, 11, 17, 10, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 8), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 32), (39, 32), (40, 0), (41, 64), (42, 32), (43, 64), (44, 128), (45, 64), (46, 64), (47, 32), (48, 128), (49, 128), (50, 32), (51, 0), (52, 32), (53, 128), (54, 16), (55, 8), (56, 0), (57, 0), (58, 16), (59, 0), (60, 16), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 8), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 32), (43, 64), (44, 128), (45, 64), (46, 64), (47, 32), (48, 128), (49, 128), (50, 32), (51, -1), (52, 32), (53, 128), (54, 16), (55, 8), (56, -1), (57, -1), (58, 16), (59, -1), (60, 16), (61, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55]
 solution : [0, 2, 11, 17, 10, 4]


Solution : [0, 2, 11, 17, 10, 4] has cost 30.


Before backtrack at level 17
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55]
 solution : [0, 2, 11, 17, 10, 4]

After backtrack at level 17
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51]
 solution : [0, 2, 11, 17, 10]


Before backtrack at level 16
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51]
 solution : [0, 2, 11, 17, 10]

After backtrack at level 16
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3]
 solution : [0, 2, 11, 17, 10]


Before backtrack at level 15
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3]
 solution : [0, 2, 11, 17, 10]

After backtrack at level 15
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35]
 solution : [0, 2, 11, 17, 10]


Before backtrack at level 14
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35]
 solution : [0, 2, 11, 17, 10]

After backtrack at level 14
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21]
 solution : [0, 2, 11, 17, 10]


Before backtrack at level 13
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21]
 solution : [0, 2, 11, 17, 10]

After backtrack at level 13
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20]
 solution : [0, 2, 11, 17]


Before backtrack at level 12
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20]
 solution : [0, 2, 11, 17]

After backtrack at level 12
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19]
 solution : [0, 2, 11, 17]


Before backtrack at level 11
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19]
 solution : [0, 2, 11, 17]

After backtrack at level 11
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18]
 solution : [0, 2, 11, 17]


Before backtrack at level 10
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18]
 solution : [0, 2, 11, 17]

After backtrack at level 10
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6]
 solution : [0, 2, 11, 17]


Before backtrack at level 9
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6]
 solution : [0, 2, 11, 17]

After backtrack at level 9
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5]
 solution : [0, 2, 11, 17]


Before backtrack at level 8
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5]
 solution : [0, 2, 11, 17]

After backtrack at level 8
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9]
 solution : [0, 2, 11, 17]


Before backtrack at level 7
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9]
 solution : [0, 2, 11, 17]

After backtrack at level 7
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7]
 solution : [0, 2, 11, 17]


Before backtrack at level 6
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7]
 solution : [0, 2, 11, 17]

After backtrack at level 6
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15]
 solution : [0, 2, 11, 17]


Before backtrack at level 5
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15]
 solution : [0, 2, 11, 17]

After backtrack at level 5
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 17]


Invert decision for 17 at level 4


New level: 5
 pending : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11]


Before reduction : 
 pending  : [27, 48, 38, 22, 49, 16, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11]

Essensial at level 5 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 256), (13, -1), (14, 256), (15, -1), (16, 128), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 128), (24, 8), (25, 128), (26, 128), (27, 128), (28, 128), (29, 256), (30, 256), (31, 128), (32, 256), (33, 128), (34, 128), (35, -1), (36, 128), (37, -1), (38, 32), (39, 32), (40, -1), (41, 64), (42, 32), (43, 64), (44, 128), (45, 64), (46, 64), (47, 32), (48, 128), (49, 128), (50, 32), (51, -1), (52, 32), (53, 128), (54, 16), (55, 8), (56, -1), (57, -1), (58, 16), (59, -1), (60, 16), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, 0), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

Covered at level 5 : {38}

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, 0), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16]


Solution : [0, 2, 11, 16] has cost 19.


Decide in level 5 among pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 10, 20, 19, 18, 6, 5, 9, 7, 15, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

Decide 10 with phase True at level 5

After decision at level 5
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10]


New level: 6
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 19, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 6 among pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 19, 18, 6, 5, 9, 7, 15, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10, 19]


New level: 7
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10, 19]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 54, 25, 41, 45, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 51, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 32), (23, 128), (24, 32), (25, 32), (26, 128), (27, 128), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 256), (43, 64), (44, 256), (45, 0), (46, 32), (47, 16), (48, 128), (49, 64), (50, 128), (51, 0), (52, 32), (53, 16), (54, 0), (55, 8), (56, 16), (57, 64), (58, 32), (59, 16), (60, 8), (61, 8)]

Covered at level 7 : {51, 45, 54}

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10, 19]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 32), (23, 128), (24, 32), (25, 32), (26, 128), (27, 128), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 256), (43, 64), (44, 256), (45, 0), (46, 32), (47, 16), (48, 128), (49, 64), (50, 128), (51, 0), (52, 32), (53, 16), (54, 0), (55, 8), (56, 16), (57, 64), (58, 32), (59, 16), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 32), (23, 128), (24, 32), (25, 32), (26, 128), (27, 128), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 256), (43, 64), (44, 256), (45, -1), (46, 32), (47, 16), (48, 128), (49, 64), (50, 128), (51, -1), (52, 32), (53, 16), (54, -1), (55, 8), (56, 16), (57, 64), (58, 32), (59, 16), (60, 8), (61, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10, 19]


Solution : [0, 2, 11, 16, 10, 19] has cost 30.


Before backtrack at level 7
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8]
 solution : [0, 2, 11, 16, 10, 19]

After backtrack at level 7
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 256), (19, -1), (20, 256), (21, 16), (22, 32), (23, 128), (24, 32), (25, 32), (26, 128), (27, 128), (28, 32), (29, 16), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 256), (43, 64), (44, 256), (45, -1), (46, 32), (47, 16), (48, 128), (49, 64), (50, 128), (51, -1), (52, 32), (53, 16), (54, -1), (55, 8), (56, 16), (57, 64), (58, 32), (59, 16), (60, 8), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 7 among pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 18, 6, 5, 9, 7, 15, 8, 54, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 18]


New level: 8
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 18]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 39, 25, 41, 60, 24, 58, 55, 4, 56, 61, 57, 59, 40, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 32), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 64), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 4), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 128), (49, 16), (50, 32), (51, 4), (52, 64), (53, 32), (54, 32), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

Covered at level 8 : {40, 41, 39}

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 18]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 32), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 64), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 4), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 128), (49, 16), (50, 32), (51, 4), (52, 64), (53, 32), (54, 32), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 32), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 64), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 128), (49, 16), (50, 32), (51, 4), (52, 64), (53, 32), (54, 32), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 18]


Solution : [0, 2, 11, 16, 10, 18] has cost 30.


Before backtrack at level 8
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51]
 solution : [0, 2, 11, 16, 10, 18]

After backtrack at level 8
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 128), (22, 32), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 32), (29, 128), (30, 8), (31, 16), (32, 8), (33, 64), (34, 64), (35, 256), (36, 64), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, 4), (43, 8), (44, 32), (45, 16), (46, 32), (47, 128), (48, 128), (49, 16), (50, 32), (51, 4), (52, 64), (53, 32), (54, 32), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 8 among pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 9, 7, 15, 8, 54, 45, 51, 39, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 9]


New level: 9
 pending : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 9]


Before reduction : 
 pending  : [27, 48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 23, 14, 28, 29, 26, 44, 53, 50, 47, 46, 42, 43, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 64), (6, 64), (7, 256), (8, 128), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 0), (24, 16), (25, 32), (26, 2), (27, 0), (28, 0), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 8), (40, 8), (41, 8), (42, 8), (43, 0), (44, 8), (45, 64), (46, 8), (47, 256), (48, 256), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 64), (55, 128), (56, 8), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

Covered at level 9 : {43, 14, 23, 27, 28}

After reduction : 
 pending  : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 9]


Before reduction : 
 pending  : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 64), (6, 64), (7, 256), (8, 128), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, 0), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 0), (24, 16), (25, 32), (26, 2), (27, 0), (28, 0), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 8), (40, 8), (41, 8), (42, 8), (43, 0), (44, 8), (45, 64), (46, 8), (47, 256), (48, 256), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 64), (55, 128), (56, 8), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 64), (6, 64), (7, 256), (8, 128), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, -1), (24, 16), (25, 32), (26, 2), (27, -1), (28, -1), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 8), (40, 8), (41, 8), (42, 8), (43, -1), (44, 8), (45, 64), (46, 8), (47, 256), (48, 256), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 64), (55, 128), (56, 8), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 9]


Solution : [0, 2, 11, 16, 10, 9] has cost 27.


Before backtrack at level 9
 pending : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 11, 16, 10, 9]

After backtrack at level 9
 pending : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]
 solution : [0, 2, 11, 16, 10, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]
 solution : [0, 2, 11, 16, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 64), (6, 64), (7, 256), (8, 128), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, -1), (24, 16), (25, 32), (26, 2), (27, -1), (28, -1), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 8), (40, 8), (41, 8), (42, 8), (43, -1), (44, 8), (45, 64), (46, 8), (47, 256), (48, 256), (49, 16), (50, 16), (51, 2), (52, 16), (53, 16), (54, 64), (55, 128), (56, 8), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 9 among pending : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 7, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]
 solution : [0, 2, 11, 16, 10, 7]


New level: 10
 pending : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]
 solution : [0, 2, 11, 16, 10, 7]


Before reduction : 
 pending  : [48, 22, 49, 34, 31, 30, 32, 12, 33, 36, 29, 26, 44, 53, 50, 47, 46, 42, 52, 25, 60, 24, 58, 55, 4, 56, 61, 57, 59, 3, 35, 21, 20, 6, 5, 15, 8, 54, 45, 51, 39, 41, 40, 27, 23, 14, 28, 43]
 solution : [0, 2, 11, 16, 10, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, 512), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 8), (5, 8), (6, 4), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 16), (15, 2), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 256), (27, 32), (28, 2), (29, 1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2), (40, 2), (41, 1), (42, 128), (43, 0), (44, 2), (45, 0), (46, 0), (47, 0), (48, 0), (49, 2), (50, 4), (51, 0), (52, 4), (53, 2), (54, 0), (55, 0), (56, 0), (57, 4), (58, 2), (59, 4), (60, 2), (61, 0)]

Covered at level 10 : {3, 8, 12, 20, 21, 22, 24, 25, 30, 31, 32, 33, 34, 35, 36, 43, 45, 46, 47, 48, 51, 54, 55, 56, 61}

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28]
 solution : [0, 2, 11, 16, 10, 7]


Before reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28]
 solution : [0, 2, 11, 16, 10, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 8), (5, 8), (6, 4), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 16), (15, 2), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1), (24, 0), (25, 0), (26, 256), (27, 32), (28, 2), (29, 1), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2), (40, 2), (41, 1), (42, 128), (43, 0), (44, 2), (45, 0), (46, 0), (47, 0), (48, 0), (49, 2), (50, 4), (51, 0), (52, 4), (53, 2), (54, 0), (55, 0), (56, 0), (57, 4), (58, 2), (59, 4), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 8), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 2), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 2), (29, 1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2), (40, 2), (41, 1), (42, 2), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, 4), (51, -1), (52, 4), (53, 2), (54, -1), (55, -1), (56, -1), (57, 4), (58, 2), (59, 4), (60, 2), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28]
 solution : [0, 2, 11, 16, 10, 7]


Solution : [0, 2, 11, 16, 10, 7] has cost 27.


Before backtrack at level 10
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28]
 solution : [0, 2, 11, 16, 10, 7]

After backtrack at level 10
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 8), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 2), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1), (24, -1), (25, -1), (26, 128), (27, 32), (28, 2), (29, 1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2), (40, 2), (41, 1), (42, 2), (43, -1), (44, 2), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, 4), (51, -1), (52, 4), (53, 2), (54, -1), (55, -1), (56, -1), (57, 4), (58, 2), (59, 4), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 10 among pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 15, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 15]


New level: 11
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 15]


Before reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 28, 48, 22, 34, 31, 30, 32, 12, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 20, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 64), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 2), (22, 0), (23, 8), (24, 16), (25, 8), (26, 64), (27, 64), (28, 0), (29, 4), (30, 4), (31, 0), (32, 1), (33, 4), (34, 16), (35, 2), (36, 8), (37, -1), (38, -1), (39, 32), (40, 32), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 8), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

Covered at level 11 : {12, 20, 22, 28, 31}

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 15]


Before reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 64), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 2), (22, 0), (23, 8), (24, 16), (25, 8), (26, 64), (27, 64), (28, 0), (29, 4), (30, 4), (31, 0), (32, 1), (33, 4), (34, 16), (35, 2), (36, 8), (37, -1), (38, -1), (39, 32), (40, 32), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 8), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 64), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, 8), (24, 16), (25, 8), (26, 64), (27, 64), (28, -1), (29, 4), (30, 4), (31, -1), (32, 1), (33, 4), (34, 16), (35, 2), (36, 8), (37, -1), (38, -1), (39, 32), (40, 32), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 8), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 15]


Solution : [0, 2, 11, 16, 10, 15] has cost 27.


Before backtrack at level 11
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43]
 solution : [0, 2, 11, 16, 10, 15]

After backtrack at level 11
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 128), (5, 256), (6, 64), (7, -1), (8, 64), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, 8), (24, 16), (25, 8), (26, 64), (27, 64), (28, -1), (29, 4), (30, 4), (31, -1), (32, 1), (33, 4), (34, 16), (35, 2), (36, 8), (37, -1), (38, -1), (39, 32), (40, 32), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 8), (57, 64), (58, 32), (59, 64), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 11 among pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 8, 54, 45, 51, 43, 28, 22, 31, 12, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 8]


New level: 12
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 8]


Before reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, 512), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 4), (23, 64), (24, 32), (25, 64), (26, 256), (27, 128), (28, 32), (29, 256), (30, 256), (31, 32), (32, 256), (33, 256), (34, 64), (35, 16), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 32), (44, 256), (45, 64), (46, 32), (47, 256), (48, 256), (49, 64), (50, 128), (51, 8), (52, 128), (53, 64), (54, 128), (55, 128), (56, 16), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 8]


Solution : [0, 2, 11, 16, 10, 8] has cost 26.


Before backtrack at level 12
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 8]

After backtrack at level 12
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 128), (5, 256), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 256), (22, 4), (23, 64), (24, 32), (25, 64), (26, 256), (27, 128), (28, 32), (29, 256), (30, 256), (31, 32), (32, 256), (33, 256), (34, 64), (35, 16), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 32), (44, 256), (45, 64), (46, 32), (47, 256), (48, 256), (49, 64), (50, 128), (51, 8), (52, 128), (53, 64), (54, 128), (55, 128), (56, 16), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 12 among pending : [49, 29, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 29 with phase True at level 12

After decision at level 12
 pending : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 29]


New level: 13
 pending : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 29]


Before reduction : 
 pending  : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 45, 51, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 32), (23, 128), (24, 32), (25, 32), (26, 64), (27, 128), (28, 32), (29, -1), (30, 128), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 0), (46, 64), (47, 4), (48, 256), (49, 64), (50, 128), (51, 0), (52, 128), (53, 64), (54, 1), (55, 128), (56, 16), (57, 64), (58, 32), (59, 64), (60, 32), (61, 4)]

Covered at level 13 : {51, 45}

After reduction : 
 pending  : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 29]


Before reduction : 
 pending  : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 32), (23, 128), (24, 32), (25, 32), (26, 64), (27, 128), (28, 32), (29, -1), (30, 128), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 0), (46, 64), (47, 4), (48, 256), (49, 64), (50, 128), (51, 0), (52, 128), (53, 64), (54, 1), (55, 128), (56, 16), (57, 64), (58, 32), (59, 64), (60, 32), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 32), (23, 128), (24, 32), (25, 32), (26, 64), (27, 128), (28, 32), (29, -1), (30, 128), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, -1), (46, 64), (47, 4), (48, 256), (49, 64), (50, 128), (51, -1), (52, 128), (53, 64), (54, 1), (55, 8), (56, 16), (57, 64), (58, 32), (59, 64), (60, 32), (61, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 29]


Solution : [0, 2, 11, 16, 10, 29] has cost 31.


Before backtrack at level 13
 pending : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 29]

After backtrack at level 13
 pending : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]
 solution : [0, 2, 11, 16, 10, 29]


Invert decision for 29 at level 12


New level: 13
 pending : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]
 solution : [0, 2, 11, 16, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 128), (21, 64), (22, 32), (23, 128), (24, 32), (25, 32), (26, 64), (27, 128), (28, 32), (29, -1), (30, 128), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, -1), (46, 64), (47, 4), (48, 256), (49, 64), (50, 128), (51, -1), (52, 128), (53, 64), (54, 1), (55, 8), (56, 16), (57, 64), (58, 32), (59, 64), (60, 32), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 13 among pending : [49, 26, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 26 with phase True at level 13

After decision at level 13
 pending : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]
 solution : [0, 2, 11, 16, 10, 26]


New level: 14
 pending : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]
 solution : [0, 2, 11, 16, 10, 26]


Before reduction : 
 pending  : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 45, 51]
 solution : [0, 2, 11, 16, 10, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 32), (28, 32), (29, -1), (30, 256), (31, 64), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 0), (46, 64), (47, 256), (48, 4), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 4), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 14 : {45}

After reduction : 
 pending  : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51]
 solution : [0, 2, 11, 16, 10, 26]


Before reduction : 
 pending  : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51]
 solution : [0, 2, 11, 16, 10, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 32), (28, 32), (29, -1), (30, 256), (31, 64), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 0), (46, 64), (47, 256), (48, 4), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 4), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 32), (28, 32), (29, -1), (30, 256), (31, 64), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, -1), (46, 64), (47, 256), (48, 4), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 16), (55, 4), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51]
 solution : [0, 2, 11, 16, 10, 26]


Solution : [0, 2, 11, 16, 10, 26] has cost 31.


Before backtrack at level 14
 pending : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51]
 solution : [0, 2, 11, 16, 10, 26]

After backtrack at level 14
 pending : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 26]


Invert decision for 26 at level 13


New level: 14
 pending : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 32), (28, 32), (29, -1), (30, 256), (31, 64), (32, 256), (33, 128), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, -1), (46, 64), (47, 256), (48, 4), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 16), (55, 4), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 14 among pending : [49, 44, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 44 with phase True at level 14

After decision at level 14
 pending : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 44]


New level: 15
 pending : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 44]


Before reduction : 
 pending  : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 44]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 64), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 16), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, -1), (45, 32), (46, 64), (47, 256), (48, 128), (49, 32), (50, 128), (51, 16), (52, 128), (53, 32), (54, 128), (55, 64), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 44]


Solution : [0, 2, 11, 16, 10, 44] has cost 31.


Before backtrack at level 15
 pending : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 44]

After backtrack at level 15
 pending : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 44]


Invert decision for 44 at level 14


New level: 15
 pending : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 64), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 16), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 64), (40, 8), (41, 4), (42, 128), (43, 32), (44, -1), (45, 32), (46, 64), (47, 256), (48, 128), (49, 32), (50, 128), (51, 16), (52, 128), (53, 32), (54, 128), (55, 64), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 15 among pending : [49, 53, 50, 42, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 42 with phase True at level 15

After decision at level 15
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 42]


New level: 16
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 42]


Before reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 41, 40, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 42]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, 256), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 32), (31, 64), (32, 32), (33, 256), (34, 128), (35, 128), (36, 128), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, -1), (43, 32), (44, -1), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 64)]

Covered at level 16 : {40, 41}

After reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 42]


Before reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 42]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 32), (31, 64), (32, 32), (33, 256), (34, 128), (35, 128), (36, 128), (37, -1), (38, -1), (39, 4), (40, 0), (41, 0), (42, -1), (43, 32), (44, -1), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 32), (31, 64), (32, 32), (33, 256), (34, 128), (35, 128), (36, 128), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, -1), (43, 32), (44, -1), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 42]


Solution : [0, 2, 11, 16, 10, 42] has cost 31.


Before backtrack at level 16
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45]
 solution : [0, 2, 11, 16, 10, 42]

After backtrack at level 16
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 42]


Invert decision for 42 at level 15


New level: 16
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 32), (31, 64), (32, 32), (33, 256), (34, 128), (35, 128), (36, 128), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, -1), (43, 32), (44, -1), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 128), (51, 4), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 16), (59, 32), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 16 among pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 6, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 6 with phase True at level 16

After decision at level 16
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 6]


New level: 17
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 6]


Before reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, 256), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 8), (23, 128), (24, 64), (25, 32), (26, -1), (27, 64), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 16), (36, 64), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 32), (44, -1), (45, 64), (46, 32), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 16), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 6]


Solution : [0, 2, 11, 16, 10, 6] has cost 26.


Before backtrack at level 17
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 6]

After backtrack at level 17
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 6]


Invert decision for 6 at level 16


New level: 17
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16), (13, -1), (14, 16), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 8), (23, 128), (24, 64), (25, 32), (26, -1), (27, 64), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 16), (36, 64), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 32), (44, -1), (45, 64), (46, 32), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 16), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]


Solution : [0, 2, 11, 16, 10] has cost 21.


Decide in level 17 among pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 5, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 5]


New level: 18
 pending : [49, 53, 50, 52, 60, 58, 4, 57, 59, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 5]


Before reduction : 
 pending  : [49, 53, 50, 52, 60, 58, 4, 57, 59, 39, 27, 23, 14, 48, 34, 30, 32, 33, 36, 47, 46, 25, 24, 55, 56, 61, 3, 35, 21, 54, 43, 28, 22, 31, 12, 20, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 128), (51, 16), (52, 128), (53, 64), (54, 128), (55, 128), (56, 32), (57, 64), (58, 32), (59, 64), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, -1), (27, 4), (28, 8), (29, -1), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, -1), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 18 : {4, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 5]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, -1), (27, 4), (28, 8), (29, -1), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, -1), (43, 0), (44, -1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, -1), (27, 4), (28, 8), (29, -1), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 5]


Solution : [0, 2, 11, 16, 10, 5] has cost 27.


Before backtrack at level 18
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20]
 solution : [0, 2, 11, 16, 10, 5]

After backtrack at level 18
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 60, 58, 4, 57, 59, 39, 48, 47, 46, 55, 56, 61, 54, 43, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 60, 58, 4, 57, 59, 39, 48, 47, 46, 55, 56, 61, 54, 43, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 60, 58, 4, 57, 59, 39, 48, 47, 46, 55, 56, 61, 54, 43, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]

Essensial at level 18 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, -1), (27, 4), (28, 8), (29, -1), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, -1), (43, 16), (44, -1), (45, 0), (46, 16), (47, 8), (48, 256), (49, 4), (50, 8), (51, 0), (52, 8), (53, 4), (54, 4), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 18 : {40, 41, 45, 51, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43]
 solution : [0, 2, 11, 16, 10, 4]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43]
 solution : [0, 2, 11, 16, 10, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, -1), (27, 128), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, -1), (43, 16), (44, -1), (45, 0), (46, 16), (47, 8), (48, 256), (49, 4), (50, 8), (51, 0), (52, 8), (53, 4), (54, 4), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, -1), (27, 64), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, -1), (43, 16), (44, -1), (45, -1), (46, 16), (47, 8), (48, 256), (49, 4), (50, 8), (51, -1), (52, 8), (53, 4), (54, 4), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43]
 solution : [0, 2, 11, 16, 10, 4]


Solution : [0, 2, 11, 16, 10, 4] has cost 30.


Before backtrack at level 18
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43]
 solution : [0, 2, 11, 16, 10, 4]

After backtrack at level 18
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 17
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 17
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 16
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 16
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 15
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 15
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 14
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 14
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 13
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 13
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 12
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 12
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 11
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 11
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 10
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 10
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 9
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 9
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 8
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 8
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18]
 solution : [0, 2, 11, 16, 10]


Before backtrack at level 6
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18]
 solution : [0, 2, 11, 16, 10]

After backtrack at level 6
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]
 solution : [0, 2, 11, 16, 10]


Invert decision for 10 at level 5


New level: 6
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]
 solution : [0, 2, 11, 16]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]
 solution : [0, 2, 11, 16]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, -1), (27, 64), (28, 64), (29, -1), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, -1), (43, 16), (44, -1), (45, -1), (46, 16), (47, 8), (48, 256), (49, 4), (50, 8), (51, -1), (52, 8), (53, 4), (54, 4), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]
 solution : [0, 2, 11, 16]


Solution : [0, 2, 11, 16] has cost 19.


Decide in level 6 among pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]
 solution : [0, 2, 11, 16, 5]


New level: 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]
 solution : [0, 2, 11, 16, 5]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 6, 42, 44, 26, 29, 8, 15, 7, 9, 18, 19]
 solution : [0, 2, 11, 16, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 64), (25, 64), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 32), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 128), (51, 16), (52, 128), (53, 128), (54, 128), (55, 128), (56, 32), (57, 64), (58, 64), (59, 64), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 0), (5, -1), (6, 4), (7, 128), (8, 512), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 0), (19, 0), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, 4), (27, 4), (28, 8), (29, 4), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 7 : {4, 18, 19, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9]
 solution : [0, 2, 11, 16, 5]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9]
 solution : [0, 2, 11, 16, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 0), (5, -1), (6, 4), (7, 128), (8, 512), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 0), (19, 0), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, 4), (27, 4), (28, 8), (29, 4), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, 4), (7, 128), (8, 512), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, 4), (27, 4), (28, 8), (29, 4), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9]
 solution : [0, 2, 11, 16, 5]


Solution : [0, 2, 11, 16, 5] has cost 25.


Before backtrack at level 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9]
 solution : [0, 2, 11, 16, 5]

After backtrack at level 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 42, 44, 18, 19]
 solution : [0, 2, 11, 16, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 42, 44, 18, 19]
 solution : [0, 2, 11, 16]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 42, 44, 18, 19]
 solution : [0, 2, 11, 16]

Essensial at level 7 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, 4), (7, 128), (8, 512), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 32), (23, 8), (24, 4), (25, 2), (26, 4), (27, 4), (28, 8), (29, 4), (30, 256), (31, 8), (32, 4), (33, 256), (34, 8), (35, 2), (36, 4), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, 128), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, 8), (43, 16), (44, 256), (45, 0), (46, 16), (47, 8), (48, 256), (49, 32), (50, 8), (51, 0), (52, 8), (53, 32), (54, 4), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 7 : {40, 41, 45, 51, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19]
 solution : [0, 2, 11, 16, 4]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19]
 solution : [0, 2, 11, 16, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, 128), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, 8), (43, 16), (44, 256), (45, 0), (46, 16), (47, 8), (48, 256), (49, 32), (50, 8), (51, 0), (52, 8), (53, 32), (54, 4), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, 128), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, 8), (43, 16), (44, 256), (45, -1), (46, 16), (47, 8), (48, 256), (49, 32), (50, 8), (51, -1), (52, 8), (53, 32), (54, 4), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19]
 solution : [0, 2, 11, 16, 4]


Solution : [0, 2, 11, 16, 4] has cost 28.


Before backtrack at level 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19]
 solution : [0, 2, 11, 16, 4]

After backtrack at level 7
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40]
 solution : [0, 2, 11, 16]


Before backtrack at level 6
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40]
 solution : [0, 2, 11, 16]

After backtrack at level 6
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5]
 solution : [0, 2, 11, 16]


Before backtrack at level 5
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5]
 solution : [0, 2, 11, 16]

After backtrack at level 5
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10]
 solution : [0, 2, 11]


Before backtrack at level 4
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10]
 solution : [0, 2, 11]

After backtrack at level 4
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 11]


Invert decision for 11 at level 3


New level: 4
 pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2]


Before reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, -1), (5, -1), (6, 128), (7, 512), (8, 512), (9, 512), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, 512), (16, -1), (17, -1), (18, 512), (19, 512), (20, 256), (21, 256), (22, 32), (23, 128), (24, 4), (25, 2), (26, 256), (27, 128), (28, 64), (29, 256), (30, 256), (31, 64), (32, 256), (33, 256), (34, 128), (35, 8), (36, 128), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, 8), (43, 16), (44, 256), (45, -1), (46, 16), (47, 8), (48, 256), (49, 32), (50, 8), (51, -1), (52, 8), (53, 32), (54, 4), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 4 among pending : [27, 23, 14, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

Decide 14 with phase True at level 4

After decision at level 4
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14]


New level: 5
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, 512), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 256), (24, 256), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, 128), (38, 128), (39, 128), (40, 256), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 256), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 256), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14]


Solution : [0, 2, 14] has cost 13.


Decide in level 5 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 6, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 6 with phase True at level 5

After decision at level 5
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6]


New level: 6
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6]


Solution : [0, 2, 14, 6] has cost 18.


Decide in level 6 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 18, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6, 18]


New level: 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6, 18]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 39, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, 0), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : {39}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6, 18]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, 0), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6, 18]


Solution : [0, 2, 14, 6, 18] has cost 27.


Before backtrack at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17]
 solution : [0, 2, 14, 6, 18]

After backtrack at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6]


Solution : [0, 2, 14, 6] has cost 18.


Decide in level 7 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 19, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 19 with phase True at level 7

After decision at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 19]


New level: 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 19]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 54, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 256), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 128), (47, 64), (48, 128), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, 0), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 8 : {54}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 19]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 256), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 128), (47, 64), (48, 128), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, 0), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 256), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 128), (47, 64), (48, 128), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 19]


Solution : [0, 2, 14, 6, 19] has cost 27.


Before backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39]
 solution : [0, 2, 14, 6, 19]

After backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39, 54]
 solution : [0, 2, 14, 6, 19]


Invert decision for 19 at level 7


New level: 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39, 54]
 solution : [0, 2, 14, 6]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39, 54]
 solution : [0, 2, 14, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 64), (24, 128), (25, 256), (26, 64), (27, 128), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 256), (34, 64), (35, 64), (36, 128), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 128), (47, 64), (48, 128), (49, 256), (50, 128), (51, 32), (52, 32), (53, 64), (54, -1), (55, 64), (56, 64), (57, 64), (58, 128), (59, 128), (60, 256), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39, 54]
 solution : [0, 2, 14, 6]


Solution : [0, 2, 14, 6] has cost 18.


Decide in level 8 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 16, 38, 10, 37, 17, 39, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 16 with phase True at level 8

After decision at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 38, 10, 37, 17, 39, 54]
 solution : [0, 2, 14, 6, 16]


New level: 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 38, 10, 37, 17, 39, 54]
 solution : [0, 2, 14, 6, 16]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 38, 10, 37, 17, 39, 54]
 solution : [0, 2, 14, 6, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, 512), (17, 512), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 16), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 16), (36, 64), (37, 0), (38, 0), (39, 128), (40, 16), (41, 32), (42, 256), (43, 32), (44, 256), (45, 64), (46, 32), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 16), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 9 : {37, 38}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 10, 17, 39, 54]
 solution : [0, 2, 14, 6, 16]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 10, 17, 39, 54]
 solution : [0, 2, 14, 6, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 16), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 16), (36, 64), (37, 0), (38, 0), (39, 128), (40, 16), (41, 32), (42, 256), (43, 32), (44, 256), (45, 64), (46, 32), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 16), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 16), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 16), (36, 64), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 32), (44, 256), (45, 64), (46, 32), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 16), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 10, 17, 39, 54]
 solution : [0, 2, 14, 6, 16]


Solution : [0, 2, 14, 6, 16] has cost 24.


Before backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 10, 17, 39, 54]
 solution : [0, 2, 14, 6, 16]

After backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 10, 17, 39, 54, 38, 37]
 solution : [0, 2, 14, 6, 16]


Invert decision for 16 at level 8


New level: 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 10, 17, 39, 54, 38, 37]
 solution : [0, 2, 14, 6]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 10, 17, 39, 54, 38, 37]
 solution : [0, 2, 14, 6]

Essensial at level 9 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, -1), (7, 256), (8, 8), (9, 64), (10, 64), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 16), (23, 32), (24, 32), (25, 32), (26, 128), (27, 32), (28, 16), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 16), (36, 64), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 32), (44, 256), (45, 64), (46, 32), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 16), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, -1), (7, 256), (8, 8), (9, 64), (10, 0), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 32), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 32), (34, 32), (35, 64), (36, 32), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 64), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 32), (59, 64), (60, 64), (61, 128)]

Covered at level 9 : {10}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37]
 solution : [0, 2, 14, 6, 17]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37]
 solution : [0, 2, 14, 6, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, -1), (7, 256), (8, 8), (9, 64), (10, 0), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 32), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 32), (34, 32), (35, 64), (36, 32), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 64), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 32), (59, 64), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, -1), (7, 256), (8, 8), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 32), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 32), (34, 32), (35, 64), (36, 32), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 64), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 32), (59, 64), (60, 64), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37]
 solution : [0, 2, 14, 6, 17]


Solution : [0, 2, 14, 6, 17] has cost 24.


Before backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37]
 solution : [0, 2, 14, 6, 17]

After backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10]
 solution : [0, 2, 14, 6]


Before backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10]
 solution : [0, 2, 14, 6]

After backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16]
 solution : [0, 2, 14, 6]


Before backtrack at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16]
 solution : [0, 2, 14, 6]

After backtrack at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19]
 solution : [0, 2, 14, 6]


Before backtrack at level 6
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19]
 solution : [0, 2, 14, 6]

After backtrack at level 6
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 6]


Invert decision for 6 at level 5


New level: 6
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 64), (5, 128), (6, -1), (7, 256), (8, 8), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 128), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 32), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 32), (34, 32), (35, 64), (36, 32), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 16), (46, 256), (47, 256), (48, 32), (49, 64), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 32), (59, 64), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14]


Solution : [0, 2, 14] has cost 13.


Decide in level 6 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 8, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 8 with phase True at level 6

After decision at level 6
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 8]


New level: 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 8]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, 512), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 8]


Solution : [0, 2, 14, 8] has cost 18.


Decide in level 7 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 5, 39, 54, 38, 37, 17, 10, 16, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 8, 5]


New level: 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 8, 5]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 9, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 4, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 10, 16, 19, 18]
 solution : [0, 2, 14, 8, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 0), (11, -1), (12, 128), (13, -1), (14, -1), (15, 8), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 32), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

Covered at level 8 : {9, 10, 4}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18]
 solution : [0, 2, 14, 8, 5]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18]
 solution : [0, 2, 14, 8, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, 0), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 0), (11, -1), (12, 128), (13, -1), (14, -1), (15, 8), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 32), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 8), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 32), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18]
 solution : [0, 2, 14, 8, 5]


Solution : [0, 2, 14, 8, 5] has cost 24.


Before backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18]
 solution : [0, 2, 14, 8, 5]

After backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 8), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 32), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8]


Solution : [0, 2, 14, 8] has cost 18.


Decide in level 8 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 17, 16, 19, 18, 9, 4, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 17 with phase True at level 8

After decision at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8, 17]


New level: 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8, 17]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 512), (17, 512), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 128), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 64), (17, -1), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 32), (24, 64), (25, 64), (26, 16), (27, 32), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 32), (34, 32), (35, 128), (36, 32), (37, 32), (38, 64), (39, 128), (40, 32), (41, 32), (42, 256), (43, 256), (44, 64), (45, 16), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8, 17]


Solution : [0, 2, 14, 8, 17] has cost 24.


Before backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8, 17]

After backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8, 17]


Invert decision for 17 at level 8


New level: 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 35, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 39, 54, 38, 37, 16, 19, 18, 9, 4, 10]
 solution : [0, 2, 14, 8]

Essensial at level 9 : {16, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, -1), (6, -1), (7, 256), (8, -1), (9, 128), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 64), (16, 64), (17, -1), (18, 512), (19, 512), (20, 64), (21, 256), (22, 128), (23, 32), (24, 64), (25, 64), (26, 16), (27, 32), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 32), (34, 32), (35, 128), (36, 32), (37, 32), (38, 64), (39, 128), (40, 32), (41, 32), (42, 256), (43, 256), (44, 64), (45, 16), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, 32), (10, 8), (11, -1), (12, 4), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 1), (21, 256), (22, 4), (23, 4), (24, 1), (25, 1), (26, 128), (27, 16), (28, 8), (29, 4), (30, 256), (31, 32), (32, 256), (33, 256), (34, 64), (35, 0), (36, 128), (37, 0), (38, 0), (39, 4), (40, 0), (41, 0), (42, 4), (43, 8), (44, 256), (45, 0), (46, 8), (47, 4), (48, 256), (49, 32), (50, 4), (51, 0), (52, 4), (53, 32), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 9 : {35, 37, 38, 40, 41, 45, 51, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10]
 solution : [0, 2, 14, 8, 16, 4]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10]
 solution : [0, 2, 14, 8, 16, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, 32), (10, 8), (11, -1), (12, 4), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 1), (21, 256), (22, 4), (23, 4), (24, 1), (25, 1), (26, 128), (27, 16), (28, 8), (29, 4), (30, 256), (31, 32), (32, 256), (33, 256), (34, 64), (35, 0), (36, 128), (37, 0), (38, 0), (39, 4), (40, 0), (41, 0), (42, 4), (43, 8), (44, 256), (45, 0), (46, 8), (47, 4), (48, 256), (49, 32), (50, 4), (51, 0), (52, 4), (53, 32), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, 32), (10, 8), (11, -1), (12, 4), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 1), (21, 32), (22, 4), (23, 4), (24, 1), (25, 1), (26, 128), (27, 16), (28, 8), (29, 4), (30, 256), (31, 32), (32, 256), (33, 256), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 4), (43, 8), (44, 256), (45, -1), (46, 8), (47, 4), (48, 256), (49, 32), (50, 4), (51, -1), (52, 4), (53, 32), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10]
 solution : [0, 2, 14, 8, 16, 4]


Solution : [0, 2, 14, 8, 16, 4] has cost 33.


Before backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10]
 solution : [0, 2, 14, 8, 16, 4]

After backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37]
 solution : [0, 2, 14, 8]


Before backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37]
 solution : [0, 2, 14, 8]

After backtrack at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17]
 solution : [0, 2, 14, 8]


Before backtrack at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17]
 solution : [0, 2, 14, 8]

After backtrack at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 8]


Invert decision for 8 at level 6


New level: 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, -1), (7, 256), (8, -1), (9, 32), (10, 8), (11, -1), (12, 4), (13, -1), (14, -1), (15, 64), (16, -1), (17, -1), (18, 512), (19, 512), (20, 1), (21, 32), (22, 4), (23, 4), (24, 1), (25, 1), (26, 128), (27, 16), (28, 8), (29, 4), (30, 256), (31, 32), (32, 256), (33, 256), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 4), (40, -1), (41, -1), (42, 4), (43, 8), (44, 256), (45, -1), (46, 8), (47, 4), (48, 256), (49, 32), (50, 4), (51, -1), (52, 4), (53, 32), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14]


Solution : [0, 2, 14] has cost 13.


Decide in level 7 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 7, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7]


New level: 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 3, 21, 28, 22, 31, 12, 20, 26, 29, 15, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, 512), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 0), (16, 512), (17, 512), (18, 512), (19, 512), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 8 : {3, 15}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 0), (16, 512), (17, 512), (18, 512), (19, 512), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, 512), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7]


Solution : [0, 2, 14, 7] has cost 19.


Decide in level 8 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 19, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, 512), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7, 19]


New level: 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7, 19]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 54, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, 512), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 16), (21, 16), (22, 32), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 64), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 32), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 32), (52, 16), (53, 32), (54, 0), (55, 32), (56, 32), (57, 32), (58, 64), (59, 128), (60, 256), (61, 16)]

Covered at level 9 : {54}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7, 19]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 16), (21, 16), (22, 32), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 64), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 32), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 32), (52, 16), (53, 32), (54, 0), (55, 32), (56, 32), (57, 32), (58, 64), (59, 128), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 16), (21, 16), (22, 32), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 64), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 32), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 32), (52, 16), (53, 32), (54, -1), (55, 32), (56, 32), (57, 32), (58, 64), (59, 128), (60, 256), (61, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7, 19]


Solution : [0, 2, 14, 7, 19] has cost 28.


Before backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5]
 solution : [0, 2, 14, 7, 19]

After backtrack at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 256), (19, -1), (20, 16), (21, 16), (22, 32), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 32), (29, 16), (30, 32), (31, 64), (32, 64), (33, 64), (34, 16), (35, 4), (36, 32), (37, 64), (38, 128), (39, 32), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 64), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 32), (52, 16), (53, 32), (54, -1), (55, 32), (56, 32), (57, 32), (58, 64), (59, 128), (60, 256), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7]


Solution : [0, 2, 14, 7] has cost 19.


Decide in level 9 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 18, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 18]


New level: 10
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 18]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 39, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, 512), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 32), (22, 32), (23, 8), (24, 64), (25, 128), (26, 32), (27, 16), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 16), (34, 16), (35, 16), (36, 32), (37, 64), (38, 128), (39, 0), (40, 16), (41, 32), (42, 8), (43, 16), (44, 16), (45, 128), (46, 64), (47, 64), (48, 64), (49, 32), (50, 16), (51, 64), (52, 64), (53, 128), (54, 16), (55, 64), (56, 64), (57, 16), (58, 32), (59, 128), (60, 256), (61, 64)]

Covered at level 10 : {39}

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 18]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 32), (22, 32), (23, 8), (24, 64), (25, 128), (26, 32), (27, 16), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 16), (34, 16), (35, 16), (36, 32), (37, 64), (38, 128), (39, 0), (40, 16), (41, 32), (42, 8), (43, 16), (44, 16), (45, 128), (46, 64), (47, 64), (48, 64), (49, 32), (50, 16), (51, 64), (52, 64), (53, 128), (54, 16), (55, 64), (56, 64), (57, 16), (58, 32), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 32), (22, 32), (23, 8), (24, 64), (25, 128), (26, 32), (27, 16), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 16), (34, 16), (35, 16), (36, 32), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, 8), (43, 16), (44, 16), (45, 128), (46, 64), (47, 64), (48, 64), (49, 32), (50, 16), (51, 64), (52, 64), (53, 128), (54, 16), (55, 64), (56, 64), (57, 16), (58, 32), (59, 128), (60, 256), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 18]


Solution : [0, 2, 14, 7, 18] has cost 28.


Before backtrack at level 10
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54]
 solution : [0, 2, 14, 7, 18]

After backtrack at level 10
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 8), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 32), (22, 32), (23, 8), (24, 64), (25, 128), (26, 32), (27, 16), (28, 32), (29, 16), (30, 8), (31, 16), (32, 8), (33, 16), (34, 16), (35, 16), (36, 32), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, 8), (43, 16), (44, 16), (45, 128), (46, 64), (47, 64), (48, 64), (49, 32), (50, 16), (51, 64), (52, 64), (53, 128), (54, 16), (55, 64), (56, 64), (57, 16), (58, 32), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7]


Solution : [0, 2, 14, 7] has cost 19.


Decide in level 10 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 10, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 10]


New level: 11
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 10]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 10]


Solution : [0, 2, 14, 7, 10] has cost 21.


Decide in level 11 among pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 16, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 10, 16]


New level: 12
 pending : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 10, 16]


Before reduction : 
 pending  : [27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 49, 53, 50, 52, 48, 47, 46, 43, 42, 44, 9, 4, 35, 60, 58, 57, 59, 55, 56, 61, 51, 45, 41, 40, 38, 37, 17, 5, 54, 39]
 solution : [0, 2, 14, 7, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 128), (6, -1), (7, -1), (8, -1), (9, 8), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 8), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 1), (40, 1), (41, 1), (42, 1), (43, 0), (44, 1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 2), (50, 2), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 2), (58, 2), (59, 2), (60, 2), (61, 0)]

Covered at level 12 : {9, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 45, 46, 47, 48, 51, 54, 55, 56, 61}

After reduction : 
 pending  : [49, 53, 50, 52, 42, 44, 4, 60, 58, 57, 59, 41, 40, 17, 5, 39]
 solution : [0, 2, 14, 7, 10, 16]


Before reduction : 
 pending  : [49, 53, 50, 52, 42, 44, 4, 60, 58, 57, 59, 41, 40, 17, 5, 39]
 solution : [0, 2, 14, 7, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 8), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 1), (40, 1), (41, 1), (42, 1), (43, 0), (44, 1), (45, 0), (46, 0), (47, 0), (48, 0), (49, 2), (50, 2), (51, 0), (52, 2), (53, 2), (54, 0), (55, 0), (56, 0), (57, 2), (58, 2), (59, 2), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 8), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 1), (40, 1), (41, 1), (42, 1), (43, -1), (44, 1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, 2), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [49, 53, 50, 52, 42, 44, 4, 60, 58, 57, 59, 41, 40, 17, 5, 39]
 solution : [0, 2, 14, 7, 10, 16]


Solution : [0, 2, 14, 7, 10, 16] has cost 27.


Before backtrack at level 12
 pending : [49, 53, 50, 52, 42, 44, 4, 60, 58, 57, 59, 41, 40, 17, 5, 39]
 solution : [0, 2, 14, 7, 10, 16]

After backtrack at level 12
 pending : [49, 53, 50, 52, 42, 44, 4, 60, 58, 57, 59, 41, 40, 17, 5, 39, 27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 48, 47, 46, 43, 9, 35, 55, 56, 61, 51, 45, 38, 37, 54]
 solution : [0, 2, 14, 7, 10, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [49, 53, 50, 52, 42, 44, 4, 60, 58, 57, 59, 41, 40, 17, 5, 39, 27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 48, 47, 46, 43, 9, 35, 55, 56, 61, 51, 45, 38, 37, 54]
 solution : [0, 2, 14, 7, 10]


Before reduction : 
 pending  : [49, 53, 50, 52, 42, 44, 4, 60, 58, 57, 59, 41, 40, 17, 5, 39, 27, 23, 34, 30, 32, 33, 36, 25, 24, 21, 28, 22, 31, 12, 20, 26, 29, 48, 47, 46, 43, 9, 35, 55, 56, 61, 51, 45, 38, 37, 54]
 solution : [0, 2, 14, 7, 10]

Essensial at level 12 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, 8), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 1), (40, 1), (41, 1), (42, 1), (43, -1), (44, 1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2), (50, 2), (51, -1), (52, 2), (53, 2), (54, -1), (55, -1), (56, -1), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, 8), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

Covered at level 12 : {4, 5, 9, 23, 26, 27, 33, 34, 36, 39, 44, 48, 49, 50, 52, 53, 54, 55, 57, 58}

After reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37]
 solution : [0, 2, 14, 7, 10, 17]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37]
 solution : [0, 2, 14, 7, 10, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, 8), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, 8), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 12 : set()

After reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37]
 solution : [0, 2, 14, 7, 10, 17]


Solution : [0, 2, 14, 7, 10, 17] has cost 27.


Before backtrack at level 12
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37]
 solution : [0, 2, 14, 7, 10, 17]

After backtrack at level 12
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 17, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7, 10]


Before backtrack at level 11
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 17, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7, 10]

After backtrack at level 11
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 17, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]
 solution : [0, 2, 14, 7, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 17, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]
 solution : [0, 2, 14, 7]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 17, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]
 solution : [0, 2, 14, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, 8), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Covered at level 11 : set()

After reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 17, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]
 solution : [0, 2, 14, 7]


Solution : [0, 2, 14, 7] has cost 19.


Decide in level 11 among pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 17, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]
 solution : [0, 2, 14, 7, 17]


New level: 12
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]
 solution : [0, 2, 14, 7, 17]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54, 16]
 solution : [0, 2, 14, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 512), (17, 512), (18, -1), (19, -1), (20, 16), (21, 64), (22, 32), (23, 32), (24, 64), (25, 128), (26, 64), (27, 64), (28, 64), (29, 32), (30, 32), (31, 64), (32, 64), (33, 64), (34, 32), (35, 16), (36, 64), (37, 64), (38, 128), (39, 64), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 128), (47, 128), (48, 128), (49, 128), (50, 64), (51, 128), (52, 128), (53, 256), (54, 64), (55, 64), (56, 64), (57, 32), (58, 64), (59, 128), (60, 256), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, 8), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

Covered at level 12 : {4, 5, 9, 23, 26, 27, 33, 34, 36, 39, 44, 48, 49, 50, 52, 53, 54, 55, 57, 58}

After reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 16]
 solution : [0, 2, 14, 7, 17]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 16]
 solution : [0, 2, 14, 7, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, 0), (24, 16), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 2), (36, 0), (37, 32), (38, 32), (39, 0), (40, 8), (41, 8), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 0), (50, 0), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 0), (58, 0), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, 8), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

Covered at level 12 : set()

After reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 16]
 solution : [0, 2, 14, 7, 17]


Solution : [0, 2, 14, 7, 17] has cost 25.


Before backtrack at level 12
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 16]
 solution : [0, 2, 14, 7, 17]

After backtrack at level 12
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 16, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 16, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 47, 46, 43, 35, 56, 61, 51, 45, 38, 37, 16, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 23, 34, 33, 36, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7]

Essensial at level 12 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 32), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 32), (23, -1), (24, 16), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 2), (36, -1), (37, 32), (38, 32), (39, -1), (40, 8), (41, 8), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, -1), (50, -1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, -1), (58, -1), (59, 2), (60, 2), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 2), (27, 2), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 32), (40, 1), (41, 16), (42, 256), (43, 0), (44, 128), (45, 4), (46, 0), (47, 4), (48, 64), (49, 64), (50, 2), (51, 0), (52, 2), (53, 64), (54, 4), (55, 32), (56, 0), (57, 2), (58, 32), (59, 2), (60, 32), (61, 2)]

Covered at level 12 : {12, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 51, 56}

After reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7, 16]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 2), (27, 2), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (38, 0), (39, 32), (40, 1), (41, 16), (42, 256), (43, 0), (44, 128), (45, 4), (46, 0), (47, 4), (48, 64), (49, 64), (50, 2), (51, 0), (52, 2), (53, 64), (54, 4), (55, 32), (56, 0), (57, 2), (58, 32), (59, 2), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 2), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 32), (40, 1), (41, 16), (42, 32), (43, -1), (44, 128), (45, 4), (46, -1), (47, 4), (48, 64), (49, 64), (50, 2), (51, -1), (52, 2), (53, 64), (54, 4), (55, 32), (56, -1), (57, 2), (58, 32), (59, 2), (60, 32), (61, 2)]

Covered at level 12 : set()

After reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7, 16]


Solution : [0, 2, 14, 7, 16] has cost 25.


Before backtrack at level 12
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54]
 solution : [0, 2, 14, 7, 16]

After backtrack at level 12
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36]
 solution : [0, 2, 14, 7]


Before backtrack at level 11
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36]
 solution : [0, 2, 14, 7]

After backtrack at level 11
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17]
 solution : [0, 2, 14, 7]


Before backtrack at level 10
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17]
 solution : [0, 2, 14, 7]

After backtrack at level 10
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10]
 solution : [0, 2, 14, 7]


Before backtrack at level 9
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10]
 solution : [0, 2, 14, 7]

After backtrack at level 9
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18]
 solution : [0, 2, 14, 7]


Before backtrack at level 8
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18]
 solution : [0, 2, 14, 7]

After backtrack at level 8
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]
 solution : [0, 2, 14, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]
 solution : [0, 2, 14]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]
 solution : [0, 2, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 256), (6, -1), (7, -1), (8, -1), (9, 2), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 2), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 32), (40, 1), (41, 16), (42, 32), (43, -1), (44, 128), (45, 4), (46, -1), (47, 4), (48, 64), (49, 64), (50, 2), (51, -1), (52, 2), (53, 64), (54, 4), (55, 32), (56, -1), (57, 2), (58, 32), (59, 2), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]
 solution : [0, 2, 14]


Solution : [0, 2, 14] has cost 13.


Decide in level 8 among pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 5, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]
 solution : [0, 2, 14, 5]


New level: 9
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]
 solution : [0, 2, 14, 5]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 4, 58, 57, 39, 27, 26, 48, 9, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 10, 18, 3, 15, 19]
 solution : [0, 2, 14, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

Covered at level 9 : {9, 10, 4}

After reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 18, 3, 15, 19]
 solution : [0, 2, 14, 5]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 18, 3, 15, 19]
 solution : [0, 2, 14, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 18, 3, 15, 19]
 solution : [0, 2, 14, 5]


Solution : [0, 2, 14, 5] has cost 19.


Decide in level 9 among pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 16, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 18, 3, 15, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

Decide 16 with phase True at level 9

After decision at level 9
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 18, 3, 15, 19]
 solution : [0, 2, 14, 5, 16]


New level: 10
 pending : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 18, 3, 15, 19]
 solution : [0, 2, 14, 5, 16]


Before reduction : 
 pending  : [42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 30, 32, 25, 24, 21, 28, 22, 31, 12, 20, 29, 46, 43, 35, 56, 51, 38, 37, 23, 34, 33, 36, 17, 18, 3, 15, 19]
 solution : [0, 2, 14, 5, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 128), (25, 256), (26, 32), (27, 64), (28, 32), (29, 16), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 64), (36, 256), (37, 64), (38, 128), (39, 16), (40, 128), (41, 256), (42, 32), (43, 64), (44, 64), (45, 256), (46, 64), (47, 32), (48, 64), (49, 128), (50, 64), (51, 128), (52, 32), (53, 64), (54, 8), (55, 32), (56, 32), (57, 32), (58, 64), (59, 64), (60, 128), (61, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, 0), (18, 0), (19, 0), (20, 256), (21, 2), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 256), (31, 4), (32, 256), (33, 256), (34, 2), (35, 1), (36, 2), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 10 : {17, 18, 19, 23, 26, 27, 28, 29, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 5, 16]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 5, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, 0), (18, 0), (19, 0), (20, 256), (21, 2), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 256), (31, 4), (32, 256), (33, 256), (34, 2), (35, 1), (36, 2), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 256), (31, 4), (32, 256), (33, 256), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 5, 16]


Solution : [0, 2, 14, 5, 16] has cost 25.


Before backtrack at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 5, 16]

After backtrack at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 18, 19]
 solution : [0, 2, 14, 5, 16]


Invert decision for 16 at level 9


New level: 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 18, 19]
 solution : [0, 2, 14, 5]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 53, 50, 52, 44, 58, 57, 39, 27, 26, 48, 55, 54, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 18, 19]
 solution : [0, 2, 14, 5]

Essensial at level 10 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 256), (31, 4), (32, 256), (33, 256), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, 512), (19, 0), (20, 256), (21, 64), (22, 128), (23, 4), (24, 64), (25, 128), (26, 0), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 4), (37, 32), (38, 64), (39, 1), (40, 32), (41, 64), (42, 4), (43, 4), (44, 0), (45, 4), (46, 4), (47, 4), (48, 0), (49, 16), (50, 8), (51, 4), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

Covered at level 10 : {44, 48, 19, 52, 53, 54, 55, 26}

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18]
 solution : [0, 2, 14, 5, 17]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18]
 solution : [0, 2, 14, 5, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, 512), (19, 0), (20, 256), (21, 64), (22, 128), (23, 4), (24, 64), (25, 128), (26, 0), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 4), (37, 32), (38, 64), (39, 1), (40, 32), (41, 64), (42, 4), (43, 4), (44, 0), (45, 4), (46, 4), (47, 4), (48, 0), (49, 16), (50, 8), (51, 4), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, 256), (19, -1), (20, 256), (21, 64), (22, 128), (23, 4), (24, 64), (25, 128), (26, -1), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 4), (37, 32), (38, 64), (39, 1), (40, 32), (41, 64), (42, 4), (43, 4), (44, -1), (45, 4), (46, 4), (47, 4), (48, -1), (49, 16), (50, 8), (51, 4), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18]
 solution : [0, 2, 14, 5, 17]


Solution : [0, 2, 14, 5, 17] has cost 25.


Before backtrack at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18]
 solution : [0, 2, 14, 5, 17]

After backtrack at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18, 17, 53, 52, 44, 26, 48, 55, 54, 19]
 solution : [0, 2, 14, 5]


Before backtrack at level 9
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18, 17, 53, 52, 44, 26, 48, 55, 54, 19]
 solution : [0, 2, 14, 5]

After backtrack at level 9
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, 256), (19, -1), (20, 256), (21, 64), (22, 128), (23, 4), (24, 64), (25, 128), (26, -1), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 4), (37, 32), (38, 64), (39, 1), (40, 32), (41, 64), (42, 4), (43, 4), (44, -1), (45, 4), (46, 4), (47, 4), (48, -1), (49, 16), (50, 8), (51, 4), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14]


Solution : [0, 2, 14] has cost 13.


Decide in level 9 among pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 18, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]


New level: 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 39, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 0), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : {39}

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, 0), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]


Solution : [0, 2, 14, 18] has cost 22.


Decide in level 10 among pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 17, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18, 17]


New level: 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18, 17]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 16), (24, 128), (25, 256), (26, 64), (27, 32), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 64), (34, 64), (35, 256), (36, 128), (37, 64), (38, 128), (39, -1), (40, 16), (41, 32), (42, 16), (43, 32), (44, 32), (45, 128), (46, 128), (47, 128), (48, 128), (49, 64), (50, 32), (51, 64), (52, 64), (53, 128), (54, 32), (55, 128), (56, 128), (57, 32), (58, 64), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 64), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 8), (24, 64), (25, 128), (26, 16), (27, 16), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 16), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, -1), (40, 4), (41, 8), (42, 16), (43, 32), (44, 8), (45, 16), (46, 128), (47, 128), (48, 32), (49, 32), (50, 16), (51, 8), (52, 16), (53, 32), (54, 32), (55, 32), (56, 128), (57, 16), (58, 32), (59, 64), (60, 128), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18, 17]


Solution : [0, 2, 14, 18, 17] has cost 28.


Before backtrack at level 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18, 17]

After backtrack at level 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 4, 9, 10, 16]
 solution : [0, 2, 14, 18]

Essensial at level 11 : {16, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 64), (17, -1), (18, -1), (19, 64), (20, 256), (21, 128), (22, 128), (23, 8), (24, 64), (25, 128), (26, 16), (27, 16), (28, 64), (29, 64), (30, 32), (31, 64), (32, 32), (33, 16), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, -1), (40, 4), (41, 8), (42, 16), (43, 32), (44, 8), (45, 16), (46, 128), (47, 128), (48, 32), (49, 32), (50, 16), (51, 8), (52, 16), (53, 32), (54, 32), (55, 32), (56, 128), (57, 16), (58, 32), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 0), (20, 256), (21, 2), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 64), (34, 32), (35, 1), (36, 32), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 11 : {9, 10, 19, 23, 26, 27, 28, 29, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 18, 16, 4]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 18, 16, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 0), (20, 256), (21, 2), (22, 32), (23, 0), (24, 1), (25, 1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 2), (31, 4), (32, 4), (33, 64), (34, 32), (35, 1), (36, 32), (37, 0), (38, 0), (39, -1), (40, 0), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, 0), (50, 0), (51, 0), (52, 0), (53, 0), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 18, 16, 4]


Solution : [0, 2, 14, 18, 16, 4] has cost 37.


Before backtrack at level 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15]
 solution : [0, 2, 14, 18, 16, 4]

After backtrack at level 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 16, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10]
 solution : [0, 2, 14, 18]


Before backtrack at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 16, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10]
 solution : [0, 2, 14, 18]

After backtrack at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 16, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 16, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 16, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 2), (22, 32), (23, -1), (24, 1), (25, 1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 2), (31, 4), (32, 4), (33, 64), (34, 2), (35, 1), (36, 2), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 16, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14]


Solution : [0, 2, 14] has cost 13.


Decide in level 10 among pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 16, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14, 16]


New level: 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14, 16]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 38, 37, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, 512), (17, 512), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 64), (24, 128), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 256), (34, 128), (35, 256), (36, 256), (37, 64), (38, 128), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 128), (51, 128), (52, 128), (53, 256), (54, 128), (55, 128), (56, 128), (57, 64), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, 0), (38, 0), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 11 : {37, 38}

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14, 16]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, 0), (38, 0), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]
 solution : [0, 2, 14, 16]


Solution : [0, 2, 14, 16] has cost 19.


Decide in level 11 among pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 23, 53, 52, 44, 26, 48, 55, 54, 19, 9, 10, 39, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 23, 53, 52, 44, 26, 48, 55, 54, 9, 10, 39, 17]
 solution : [0, 2, 14, 16, 19]


New level: 12
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 23, 53, 52, 44, 26, 48, 55, 54, 9, 10, 39, 17]
 solution : [0, 2, 14, 16, 19]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 45, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 51, 23, 53, 52, 44, 26, 48, 55, 54, 9, 10, 39, 17]
 solution : [0, 2, 14, 16, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, 512), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 8), (30, 256), (31, 64), (32, 256), (33, 256), (34, 32), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 4), (41, 8), (42, 256), (43, 64), (44, 256), (45, 0), (46, 32), (47, 16), (48, 128), (49, 128), (50, 64), (51, 0), (52, 16), (53, 32), (54, 0), (55, 64), (56, 16), (57, 32), (58, 64), (59, 8), (60, 16), (61, 8)]

Covered at level 12 : {51, 45, 54}

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17]
 solution : [0, 2, 14, 16, 19]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17]
 solution : [0, 2, 14, 16, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 8), (30, 256), (31, 64), (32, 256), (33, 256), (34, 32), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 4), (41, 8), (42, 256), (43, 64), (44, 256), (45, 0), (46, 32), (47, 16), (48, 128), (49, 128), (50, 64), (51, 0), (52, 16), (53, 32), (54, 0), (55, 64), (56, 16), (57, 32), (58, 64), (59, 8), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 8), (30, 256), (31, 64), (32, 256), (33, 256), (34, 32), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 4), (41, 8), (42, 256), (43, 64), (44, 256), (45, -1), (46, 32), (47, 16), (48, 128), (49, 128), (50, 64), (51, -1), (52, 16), (53, 32), (54, -1), (55, 64), (56, 16), (57, 32), (58, 64), (59, 8), (60, 16), (61, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17]
 solution : [0, 2, 14, 16, 19]


Solution : [0, 2, 14, 16, 19] has cost 28.


Before backtrack at level 12
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17]
 solution : [0, 2, 14, 16, 19]

After backtrack at level 12
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 16), (22, 32), (23, 32), (24, 16), (25, 32), (26, 64), (27, 64), (28, 16), (29, 8), (30, 256), (31, 64), (32, 256), (33, 256), (34, 32), (35, 256), (36, 64), (37, -1), (38, -1), (39, 64), (40, 4), (41, 8), (42, 256), (43, 64), (44, 256), (45, -1), (46, 32), (47, 16), (48, 128), (49, 128), (50, 64), (51, -1), (52, 16), (53, 32), (54, -1), (55, 64), (56, 16), (57, 32), (58, 64), (59, 8), (60, 16), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16]


Solution : [0, 2, 14, 16] has cost 19.


Decide in level 12 among pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 10, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


New level: 13
 pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 13 among pending : [30, 32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 30 with phase True at level 13

After decision at level 13
 pending : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 30]


New level: 14
 pending : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 30]


Before reduction : 
 pending  : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 30]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 32), (23, 32), (24, 16), (25, 32), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 16), (32, 16), (33, 32), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 128), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 30]


Solution : [0, 2, 14, 16, 10, 30] has cost 31.


Before backtrack at level 14
 pending : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 30]

After backtrack at level 14
 pending : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 30]


Invert decision for 30 at level 13


New level: 14
 pending : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 256), (22, 32), (23, 32), (24, 16), (25, 32), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 16), (32, 16), (33, 32), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 128), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 14 among pending : [32, 25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 32 with phase True at level 14

After decision at level 14
 pending : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 32]


New level: 15
 pending : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 32]


Before reduction : 
 pending  : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 32]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 16), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 16), (32, -1), (33, 64), (34, 64), (35, 128), (36, 128), (37, -1), (38, -1), (39, 8), (40, 8), (41, 8), (42, 128), (43, 32), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 32]


Solution : [0, 2, 14, 16, 10, 32] has cost 31.


Before backtrack at level 15
 pending : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 32]

After backtrack at level 15
 pending : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 32]


Invert decision for 32 at level 14


New level: 15
 pending : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, 128), (22, 16), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 16), (32, -1), (33, 64), (34, 64), (35, 128), (36, 128), (37, -1), (38, -1), (39, 8), (40, 8), (41, 8), (42, 128), (43, 32), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 15 among pending : [25, 24, 21, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 21]


New level: 16
 pending : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 21]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 16), (23, 32), (24, 8), (25, 8), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, 256), (34, 16), (35, 64), (36, 16), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 32), (44, 256), (45, 2), (46, 32), (47, 128), (48, 256), (49, 64), (50, 64), (51, 2), (52, 64), (53, 64), (54, 2), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 64)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 21]


Solution : [0, 2, 14, 16, 10, 21] has cost 31.


Before backtrack at level 16
 pending : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 21]

After backtrack at level 16
 pending : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 128), (21, -1), (22, 16), (23, 32), (24, 8), (25, 8), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, 256), (34, 16), (35, 64), (36, 16), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 32), (44, 256), (45, 2), (46, 32), (47, 128), (48, 256), (49, 64), (50, 64), (51, 2), (52, 64), (53, 64), (54, 2), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 16 among pending : [25, 24, 22, 31, 12, 20, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 20 with phase True at level 16

After decision at level 16
 pending : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 20]


New level: 17
 pending : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 20]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 20]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 32), (24, 8), (25, 8), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 128), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 20]


Solution : [0, 2, 14, 16, 10, 20] has cost 31.


Before backtrack at level 17
 pending : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 20]

After backtrack at level 17
 pending : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 20]


Invert decision for 20 at level 16


New level: 17
 pending : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 32), (24, 8), (25, 8), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 128), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 17 among pending : [25, 24, 22, 31, 12, 35, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 35 with phase True at level 17

After decision at level 17
 pending : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 35]


New level: 18
 pending : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 35]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 35]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 16), (29, 64), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 8), (41, 8), (42, 128), (43, 32), (44, 256), (45, 64), (46, 32), (47, 128), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 16), (60, 16), (61, 64)]

Covered at level 18 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 35]


Solution : [0, 2, 14, 16, 10, 35] has cost 31.


Before backtrack at level 18
 pending : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 35]

After backtrack at level 18
 pending : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 35]


Invert decision for 35 at level 17


New level: 18
 pending : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 8), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 8), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 16), (29, 64), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 8), (41, 8), (42, 128), (43, 32), (44, 256), (45, 64), (46, 32), (47, 128), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 16), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 18 among pending : [25, 24, 22, 31, 12, 34, 33, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 33 with phase True at level 18

After decision at level 18
 pending : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 33]


New level: 19
 pending : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 33]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 33]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, 256), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 64), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 128), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 33]


Solution : [0, 2, 14, 16, 10, 33] has cost 31.


Before backtrack at level 19
 pending : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 33]

After backtrack at level 19
 pending : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 33]


Invert decision for 33 at level 18


New level: 19
 pending : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 64), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 128), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 19 among pending : [25, 24, 22, 31, 12, 34, 36, 3, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 3 with phase True at level 19

After decision at level 19
 pending : [25, 24, 22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 3]


New level: 20
 pending : [25, 24, 22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 3]


Before reduction : 
 pending  : [25, 24, 22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 61, 49, 50, 58, 57, 27, 28, 29, 46, 43, 56, 23, 53, 52, 44, 26, 48, 55, 9, 39, 17, 45, 51, 54]
 solution : [0, 2, 14, 16, 10, 3]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, 0), (25, 0), (26, 128), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 16), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 256), (43, 16), (44, 256), (45, 0), (46, 16), (47, 256), (48, 256), (49, 64), (50, 64), (51, 0), (52, 64), (53, 64), (54, 2), (55, 0), (56, 0), (57, 2), (58, 2), (59, 2), (60, 2), (61, 0)]

Covered at level 20 : {45, 51, 55, 24, 25, 56, 61}

After reduction : 
 pending  : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54]
 solution : [0, 2, 14, 16, 10, 3]


Before reduction : 
 pending  : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54]
 solution : [0, 2, 14, 16, 10, 3]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, 0), (25, 0), (26, 128), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 16), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 256), (43, 16), (44, 256), (45, 0), (46, 16), (47, 256), (48, 256), (49, 64), (50, 64), (51, 0), (52, 64), (53, 64), (54, 2), (55, 0), (56, 0), (57, 2), (58, 2), (59, 2), (60, 2), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, 128), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 16), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 256), (43, 16), (44, 256), (45, -1), (46, 16), (47, 256), (48, 256), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 2), (55, -1), (56, -1), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54]
 solution : [0, 2, 14, 16, 10, 3]


Solution : [0, 2, 14, 16, 10, 3] has cost 30.


Before backtrack at level 20
 pending : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54]
 solution : [0, 2, 14, 16, 10, 3]

After backtrack at level 20
 pending : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 3]


Invert decision for 3 at level 19


New level: 20
 pending : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 8), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 16), (13, -1), (14, -1), (15, 128), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 16), (23, 4), (24, -1), (25, -1), (26, 128), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 16), (35, -1), (36, 32), (37, -1), (38, -1), (39, 64), (40, 1), (41, 1), (42, 256), (43, 16), (44, 256), (45, -1), (46, 16), (47, 256), (48, 256), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 2), (55, -1), (56, -1), (57, 2), (58, 2), (59, 2), (60, 2), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 20 among pending : [22, 31, 12, 34, 36, 15, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 15 with phase True at level 20

After decision at level 20
 pending : [22, 31, 12, 34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 15]


New level: 21
 pending : [22, 31, 12, 34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 15]


Before reduction : 
 pending  : [22, 31, 12, 34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 28, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 15]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 4), (24, 8), (25, 8), (26, 4), (27, 4), (28, 0), (29, 4), (30, -1), (31, 0), (32, -1), (33, -1), (34, 8), (35, -1), (36, 8), (37, -1), (38, -1), (39, 16), (40, 16), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 8), (57, 32), (58, 32), (59, 32), (60, 32), (61, 64)]

Covered at level 21 : {12, 28, 22, 31}

After reduction : 
 pending  : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 15]


Before reduction : 
 pending  : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 15]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 4), (24, 8), (25, 8), (26, 4), (27, 4), (28, 0), (29, 4), (30, -1), (31, 0), (32, -1), (33, -1), (34, 8), (35, -1), (36, 8), (37, -1), (38, -1), (39, 16), (40, 16), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 8), (57, 32), (58, 32), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 8), (25, 8), (26, 4), (27, 4), (28, -1), (29, 4), (30, -1), (31, -1), (32, -1), (33, -1), (34, 8), (35, -1), (36, 8), (37, -1), (38, -1), (39, 16), (40, 16), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 8), (57, 32), (58, 32), (59, 32), (60, 32), (61, 64)]

Covered at level 21 : set()

After reduction : 
 pending  : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 15]


Solution : [0, 2, 14, 16, 10, 15] has cost 27.


Before backtrack at level 21
 pending : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 15]

After backtrack at level 21
 pending : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 15]


Invert decision for 15 at level 20


New level: 21
 pending : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 8), (25, 8), (26, 4), (27, 4), (28, -1), (29, 4), (30, -1), (31, -1), (32, -1), (33, -1), (34, 8), (35, -1), (36, 8), (37, -1), (38, -1), (39, 16), (40, 16), (41, 16), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 64), (51, 4), (52, 64), (53, 64), (54, 128), (55, 128), (56, 8), (57, 32), (58, 32), (59, 32), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 21 among pending : [34, 36, 4, 42, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 42 with phase True at level 21

After decision at level 21
 pending : [34, 36, 4, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 42]


New level: 22
 pending : [34, 36, 4, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 42]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 41, 40, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 42]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 64), (51, 2), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

Covered at level 22 : {40, 41}

After reduction : 
 pending  : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 42]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 42]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 2), (40, 0), (41, 0), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 64), (51, 2), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 64), (51, 2), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

Covered at level 22 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 42]


Solution : [0, 2, 14, 16, 10, 42] has cost 31.


Before backtrack at level 22
 pending : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28]
 solution : [0, 2, 14, 16, 10, 42]

After backtrack at level 22
 pending : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 42]


Invert decision for 42 at level 21


New level: 22
 pending : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 64), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 2), (40, -1), (41, -1), (42, -1), (43, 16), (44, 16), (45, 64), (46, 64), (47, 128), (48, 256), (49, 64), (50, 64), (51, 2), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 22 among pending : [34, 36, 4, 60, 59, 47, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 47 with phase True at level 22

After decision at level 22
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 47]


New level: 23
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 47]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 29, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 61, 56, 55, 45, 51, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 47]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 8), (27, 32), (28, 8), (29, 0), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 32), (44, 256), (45, 0), (46, 16), (47, -1), (48, 16), (49, 64), (50, 64), (51, 0), (52, 64), (53, 64), (54, 1), (55, 4), (56, 4), (57, 32), (58, 32), (59, 8), (60, 8), (61, 0)]

Covered at level 23 : {45, 51, 61, 29}

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 47]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 47]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 8), (27, 32), (28, 8), (29, 0), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 32), (44, 256), (45, 0), (46, 16), (47, -1), (48, 16), (49, 64), (50, 64), (51, 0), (52, 64), (53, 64), (54, 1), (55, 4), (56, 4), (57, 32), (58, 32), (59, 8), (60, 8), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 8), (27, 32), (28, 8), (29, -1), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 32), (44, 256), (45, -1), (46, 16), (47, -1), (48, 16), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 1), (55, 4), (56, 4), (57, 32), (58, 32), (59, 8), (60, 8), (61, -1)]

Covered at level 23 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 47]


Solution : [0, 2, 14, 16, 10, 47] has cost 31.


Before backtrack at level 23
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40]
 solution : [0, 2, 14, 16, 10, 47]

After backtrack at level 23
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 47]


Invert decision for 47 at level 22


New level: 23
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 8), (27, 32), (28, 8), (29, -1), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 32), (44, 256), (45, -1), (46, 16), (47, -1), (48, 16), (49, 64), (50, 64), (51, -1), (52, 64), (53, 64), (54, 1), (55, 4), (56, 4), (57, 32), (58, 32), (59, 8), (60, 8), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, 256), (45, 64), (46, 64), (47, -1), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 23 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 23 among pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 44, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, 256), (45, 64), (46, 64), (47, -1), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 44 with phase True at level 23

After decision at level 23
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 44]


New level: 24
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 44]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 44]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, 256), (45, 64), (46, 64), (47, -1), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 32), (25, 64), (26, 64), (27, 16), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 8), (44, -1), (45, 32), (46, 64), (47, -1), (48, 128), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 64), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 24 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 44]


Solution : [0, 2, 14, 16, 10, 44] has cost 31.


Before backtrack at level 24
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 44]

After backtrack at level 24
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 44]


Invert decision for 44 at level 23


New level: 24
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 32), (25, 64), (26, 64), (27, 16), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 8), (44, -1), (45, 32), (46, 64), (47, -1), (48, 128), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 64), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, -1), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 24 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 24 among pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 48, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, -1), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 48 with phase True at level 24

After decision at level 24
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 48]


New level: 25
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 48]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 26, 9, 39, 17, 54, 25, 24, 56, 55, 22, 31, 12, 28, 41, 40, 29, 61, 45, 51]
 solution : [0, 2, 14, 16, 10, 48]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, -1), (48, 256), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 16), (25, 32), (26, 0), (27, 4), (28, 4), (29, 4), (30, -1), (31, 64), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 64), (44, -1), (45, 0), (46, 8), (47, -1), (48, -1), (49, 8), (50, 8), (51, 0), (52, 8), (53, 8), (54, 0), (55, 0), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 25 : {45, 51, 54, 55, 26}

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61]
 solution : [0, 2, 14, 16, 10, 48]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61]
 solution : [0, 2, 14, 16, 10, 48]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 16), (25, 32), (26, 0), (27, 4), (28, 4), (29, 4), (30, -1), (31, 64), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 64), (44, -1), (45, 0), (46, 8), (47, -1), (48, -1), (49, 8), (50, 8), (51, 0), (52, 8), (53, 8), (54, 0), (55, 0), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 16), (25, 32), (26, -1), (27, 4), (28, 4), (29, 4), (30, -1), (31, 64), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 64), (44, -1), (45, -1), (46, 8), (47, -1), (48, -1), (49, 8), (50, 8), (51, -1), (52, 8), (53, 8), (54, -1), (55, -1), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

Covered at level 25 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61]
 solution : [0, 2, 14, 16, 10, 48]


Solution : [0, 2, 14, 16, 10, 48] has cost 31.


Before backtrack at level 25
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61]
 solution : [0, 2, 14, 16, 10, 48]

After backtrack at level 25
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 48]


Invert decision for 48 at level 24


New level: 25
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 16), (25, 32), (26, -1), (27, 4), (28, 4), (29, 4), (30, -1), (31, 64), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 64), (40, 4), (41, 4), (42, -1), (43, 64), (44, -1), (45, -1), (46, 8), (47, -1), (48, -1), (49, 8), (50, 8), (51, -1), (52, 8), (53, 8), (54, -1), (55, -1), (56, 4), (57, 8), (58, 8), (59, 8), (60, 8), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, -1), (48, -1), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Covered at level 25 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]


Solution : [0, 2, 14, 16, 10] has cost 21.


Decide in level 25 among pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 17, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, -1), (48, -1), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

Decide 17 with phase True at level 25

After decision at level 25
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 17]


New level: 26
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 17]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 17]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 32), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 16), (42, -1), (43, 64), (44, -1), (45, 64), (46, 64), (47, -1), (48, -1), (49, 64), (50, 64), (51, 8), (52, 64), (53, 64), (54, 128), (55, 128), (56, 32), (57, 32), (58, 32), (59, 32), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 32), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 64), (44, -1), (45, 4), (46, 64), (47, -1), (48, -1), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

Covered at level 26 : set()

After reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 17]


Solution : [0, 2, 14, 16, 10, 17] has cost 27.


Before backtrack at level 26
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 17]

After backtrack at level 26
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10, 17]


Invert decision for 17 at level 25


New level: 26
 pending : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]


Before reduction : 
 pending  : [34, 36, 4, 60, 59, 49, 50, 58, 57, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 56, 22, 31, 12, 28, 41, 40, 29, 61, 26, 54, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]

Essensial at level 26 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 16), (24, 16), (25, 32), (26, 16), (27, 16), (28, 32), (29, 128), (30, -1), (31, 64), (32, -1), (33, -1), (34, 32), (35, -1), (36, 64), (37, -1), (38, -1), (39, 128), (40, 4), (41, 4), (42, -1), (43, 64), (44, -1), (45, 4), (46, 64), (47, -1), (48, -1), (49, 32), (50, 32), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 32), (57, 16), (58, 16), (59, 16), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, -1), (43, 16), (44, -1), (45, 0), (46, 16), (47, -1), (48, -1), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 26 : {40, 41, 45, 51, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54]
 solution : [0, 2, 14, 16, 10, 4]


Before reduction : 
 pending  : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54]
 solution : [0, 2, 14, 16, 10, 4]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 8), (40, 0), (41, 0), (42, -1), (43, 16), (44, -1), (45, 0), (46, 16), (47, -1), (48, -1), (49, 4), (50, 4), (51, 0), (52, 4), (53, 4), (54, 2), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, -1), (43, 16), (44, -1), (45, -1), (46, 16), (47, -1), (48, -1), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 26 : set()

After reduction : 
 pending  : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54]
 solution : [0, 2, 14, 16, 10, 4]


Solution : [0, 2, 14, 16, 10, 4] has cost 30.


Before backtrack at level 26
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54]
 solution : [0, 2, 14, 16, 10, 4]

After backtrack at level 26
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 25
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 25
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 24
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 24
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 23
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 23
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 22
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 22
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 21
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 21
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 20
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 20
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 19
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 19
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 18
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 18
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 17
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 17
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 16
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 16
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 15
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 15
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 14
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 14
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32]
 solution : [0, 2, 14, 16, 10]


Before backtrack at level 13
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32]
 solution : [0, 2, 14, 16, 10]

After backtrack at level 13
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16]


Before reduction : 
 pending  : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 32), (23, 4), (24, 1), (25, 1), (26, 8), (27, 4), (28, 16), (29, 8), (30, -1), (31, 64), (32, -1), (33, -1), (34, 64), (35, -1), (36, 128), (37, -1), (38, -1), (39, 8), (40, -1), (41, -1), (42, -1), (43, 16), (44, -1), (45, -1), (46, 16), (47, -1), (48, -1), (49, 4), (50, 4), (51, -1), (52, 4), (53, 4), (54, 2), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16]


Solution : [0, 2, 14, 16] has cost 19.


Decide in level 13 among pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 9, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 9]


New level: 14
 pending : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 9]


Before reduction : 
 pending  : [34, 36, 49, 50, 27, 46, 43, 23, 53, 52, 39, 25, 24, 22, 31, 12, 28, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 256), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 32), (24, 32), (25, 64), (26, 128), (27, 64), (28, 32), (29, 128), (30, 256), (31, 64), (32, 256), (33, 256), (34, 64), (35, 256), (36, 128), (37, -1), (38, -1), (39, 128), (40, 16), (41, 32), (42, 256), (43, 64), (44, 256), (45, 64), (46, 64), (47, 256), (48, 256), (49, 128), (50, 64), (51, 8), (52, 64), (53, 128), (54, 128), (55, 128), (56, 32), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 0), (24, 16), (25, 32), (26, 2), (27, 0), (28, 0), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 16), (40, 8), (41, 16), (42, 16), (43, 0), (44, 64), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 16), (51, 2), (52, 16), (53, 64), (54, 64), (55, 128), (56, 8), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

Covered at level 14 : {43, 27, 28, 23}

After reduction : 
 pending  : [34, 36, 49, 50, 46, 53, 52, 39, 25, 24, 22, 31, 12, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 9]


Before reduction : 
 pending  : [34, 36, 49, 50, 46, 53, 52, 39, 25, 24, 22, 31, 12, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, 0), (24, 16), (25, 32), (26, 2), (27, 0), (28, 0), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 16), (40, 8), (41, 16), (42, 16), (43, 0), (44, 64), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 16), (51, 2), (52, 16), (53, 64), (54, 64), (55, 128), (56, 8), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, -1), (24, 16), (25, 32), (26, 2), (27, -1), (28, -1), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 16), (40, 8), (41, 16), (42, 16), (43, -1), (44, 64), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 16), (51, 2), (52, 16), (53, 64), (54, 64), (55, 128), (56, 8), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [34, 36, 49, 50, 46, 53, 52, 39, 25, 24, 22, 31, 12, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 9]


Solution : [0, 2, 14, 16, 9] has cost 25.


Before backtrack at level 14
 pending : [34, 36, 49, 50, 46, 53, 52, 39, 25, 24, 22, 31, 12, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30]
 solution : [0, 2, 14, 16, 9]

After backtrack at level 14
 pending : [34, 36, 49, 50, 46, 53, 52, 39, 25, 24, 22, 31, 12, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30, 27, 43, 23, 28]
 solution : [0, 2, 14, 16, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [34, 36, 49, 50, 46, 53, 52, 39, 25, 24, 22, 31, 12, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30, 27, 43, 23, 28]
 solution : [0, 2, 14, 16]


Before reduction : 
 pending  : [34, 36, 49, 50, 46, 53, 52, 39, 25, 24, 22, 31, 12, 29, 26, 54, 4, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 17, 48, 44, 47, 42, 15, 3, 33, 35, 20, 21, 32, 30, 27, 43, 23, 28]
 solution : [0, 2, 14, 16]

Essensial at level 14 : {4, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32), (13, -1), (14, -1), (15, 32), (16, -1), (17, 256), (18, -1), (19, -1), (20, 256), (21, 256), (22, 32), (23, -1), (24, 16), (25, 32), (26, 2), (27, -1), (28, -1), (29, 2), (30, 256), (31, 4), (32, 4), (33, 256), (34, 32), (35, 8), (36, 64), (37, -1), (38, -1), (39, 16), (40, 8), (41, 16), (42, 16), (43, -1), (44, 64), (45, 64), (46, 8), (47, 256), (48, 256), (49, 64), (50, 16), (51, 2), (52, 16), (53, 64), (54, 64), (55, 128), (56, 8), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 1), (27, 1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 1), (34, 0), (35, 0), (36, 1), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 4), (45, 0), (46, 0), (47, 0), (48, 256), (49, 4), (50, 0), (51, 0), (52, 0), (53, 4), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

Covered at level 14 : {3, 12, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61}

After reduction : 
 pending  : [36, 49, 53, 26, 17, 48, 44, 33, 27]
 solution : [0, 2, 14, 16, 4, 15]


Before reduction : 
 pending  : [36, 49, 53, 26, 17, 48, 44, 33, 27]
 solution : [0, 2, 14, 16, 4, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 1), (27, 1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 1), (34, 0), (35, 0), (36, 1), (37, -1), (38, -1), (39, 0), (40, 0), (41, 0), (42, 0), (43, 0), (44, 4), (45, 0), (46, 0), (47, 0), (48, 256), (49, 4), (50, 0), (51, 0), (52, 0), (53, 4), (54, 0), (55, 0), (56, 0), (57, 0), (58, 0), (59, 0), (60, 0), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 1), (27, 1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1), (34, -1), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 4), (45, -1), (46, -1), (47, -1), (48, 256), (49, 4), (50, -1), (51, -1), (52, -1), (53, 4), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 49, 53, 26, 17, 48, 44, 33, 27]
 solution : [0, 2, 14, 16, 4, 15]


Solution : [0, 2, 14, 16, 4, 15] has cost 34.


Before backtrack at level 14
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27]
 solution : [0, 2, 14, 16, 4, 15]

After backtrack at level 14
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28]
 solution : [0, 2, 14, 16]


Before backtrack at level 13
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28]
 solution : [0, 2, 14, 16]

After backtrack at level 13
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9]
 solution : [0, 2, 14, 16]


Before backtrack at level 12
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9]
 solution : [0, 2, 14, 16]

After backtrack at level 12
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10]
 solution : [0, 2, 14, 16]


Before backtrack at level 11
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10]
 solution : [0, 2, 14, 16]

After backtrack at level 11
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10, 38, 37, 19]
 solution : [0, 2, 14, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10, 38, 37, 19]
 solution : [0, 2, 14]


Before reduction : 
 pending  : [36, 49, 53, 26, 17, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10, 38, 37, 19]
 solution : [0, 2, 14]

Essensial at level 11 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 1), (27, 1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1), (34, -1), (35, -1), (36, 1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, 4), (45, -1), (46, -1), (47, -1), (48, 256), (49, 4), (50, -1), (51, -1), (52, -1), (53, 4), (54, -1), (55, -1), (56, -1), (57, -1), (58, -1), (59, -1), (60, -1), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10, 38, 37, 19]
 solution : [0, 2, 14, 17]


Before reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10, 38, 37, 19]
 solution : [0, 2, 14, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10, 38, 37, 19]
 solution : [0, 2, 14, 17]


Solution : [0, 2, 14, 17] has cost 19.


Decide in level 11 among pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 10, 38, 37, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 19]
 solution : [0, 2, 14, 17, 10]


New level: 12
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 19]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 19]
 solution : [0, 2, 14, 17, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, 512), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 19]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 12 among pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 19]


New level: 13
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 19]


Before reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 54, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 8), (46, 128), (47, 64), (48, 16), (49, 128), (50, 64), (51, 4), (52, 8), (53, 8), (54, 0), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

Covered at level 13 : {54}

After reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 19]


Before reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 8), (46, 128), (47, 64), (48, 16), (49, 128), (50, 64), (51, 4), (52, 8), (53, 8), (54, 0), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 8), (46, 128), (47, 64), (48, 16), (49, 128), (50, 64), (51, 4), (52, 8), (53, 8), (54, -1), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 19]


Solution : [0, 2, 14, 17, 10, 19] has cost 30.


Before backtrack at level 13
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 19]

After backtrack at level 13
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]
 solution : [0, 2, 14, 17, 10, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]
 solution : [0, 2, 14, 17, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 8), (46, 128), (47, 64), (48, 16), (49, 128), (50, 64), (51, 4), (52, 8), (53, 8), (54, -1), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 13 among pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 15, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]
 solution : [0, 2, 14, 17, 10, 15]


New level: 14
 pending : [36, 49, 53, 26, 48, 44, 33, 27, 4, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]
 solution : [0, 2, 14, 17, 10, 15]


Before reduction : 
 pending  : [36, 49, 53, 26, 48, 44, 33, 27, 4, 34, 50, 46, 52, 39, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 23, 28, 9, 38, 37, 54]
 solution : [0, 2, 14, 17, 10, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, 0), (24, 8), (25, 16), (26, 0), (27, 0), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 128), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, 8), (42, 64), (43, 64), (44, 2), (45, 4), (46, 64), (47, 32), (48, 4), (49, 16), (50, 8), (51, 2), (52, 2), (53, 2), (54, 0), (55, 4), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

Covered at level 14 : {33, 34, 36, 39, 54, 23, 26, 27}

After reduction : 
 pending  : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 15]


Before reduction : 
 pending  : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, 0), (24, 8), (25, 16), (26, 0), (27, 0), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 128), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, 8), (42, 64), (43, 64), (44, 2), (45, 4), (46, 64), (47, 32), (48, 4), (49, 16), (50, 8), (51, 2), (52, 2), (53, 2), (54, 0), (55, 4), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, 16), (26, -1), (27, -1), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 128), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, 8), (42, 64), (43, 64), (44, 2), (45, 4), (46, 64), (47, 32), (48, 4), (49, 16), (50, 8), (51, 2), (52, 2), (53, 2), (54, -1), (55, 4), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 15]


Solution : [0, 2, 14, 17, 10, 15] has cost 27.


Before backtrack at level 14
 pending : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37]
 solution : [0, 2, 14, 17, 10, 15]

After backtrack at level 14
 pending : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]
 solution : [0, 2, 14, 17, 10, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]
 solution : [0, 2, 14, 17, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 4), (22, 64), (23, -1), (24, 8), (25, 16), (26, -1), (27, -1), (28, 4), (29, 4), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 128), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, 8), (42, 64), (43, 64), (44, 2), (45, 4), (46, 64), (47, 32), (48, 4), (49, 16), (50, 8), (51, 2), (52, 2), (53, 2), (54, -1), (55, 4), (56, 64), (57, 8), (58, 16), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 14 : set()

After reduction : 
 pending  : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 14 among pending : [49, 53, 48, 44, 4, 50, 46, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 46 with phase True at level 14

After decision at level 14
 pending : [49, 53, 48, 44, 4, 50, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]
 solution : [0, 2, 14, 17, 10, 46]


New level: 15
 pending : [49, 53, 48, 44, 4, 50, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]
 solution : [0, 2, 14, 17, 10, 46]


Before reduction : 
 pending  : [49, 53, 48, 44, 4, 50, 52, 25, 24, 22, 31, 12, 29, 60, 59, 58, 57, 56, 41, 40, 61, 55, 45, 51, 47, 42, 3, 35, 20, 21, 32, 30, 43, 28, 9, 38, 37, 36, 26, 33, 27, 34, 39, 23, 54]
 solution : [0, 2, 14, 17, 10, 46]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, 256), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 128), (26, 0), (27, 64), (28, 0), (29, 0), (30, 256), (31, 256), (32, 256), (33, 2), (34, 16), (35, 256), (36, 64), (37, 16), (38, 32), (39, 4), (40, 32), (41, 64), (42, 4), (43, 1), (44, 0), (45, 0), (46, -1), (47, 0), (48, 0), (49, 128), (50, 32), (51, 0), (52, 4), (53, 4), (54, 0), (55, 0), (56, 0), (57, 16), (58, 64), (59, 16), (60, 32), (61, 0)]

Covered at level 15 : {44, 45, 47, 48, 29, 51, 54, 55, 56, 26, 28, 61}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23]
 solution : [0, 2, 14, 17, 10, 46]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23]
 solution : [0, 2, 14, 17, 10, 46]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 128), (26, 0), (27, 64), (28, 0), (29, 0), (30, 256), (31, 256), (32, 256), (33, 2), (34, 16), (35, 256), (36, 64), (37, 16), (38, 32), (39, 4), (40, 32), (41, 64), (42, 4), (43, 1), (44, 0), (45, 0), (46, -1), (47, 0), (48, 0), (49, 128), (50, 32), (51, 0), (52, 4), (53, 4), (54, 0), (55, 0), (56, 0), (57, 16), (58, 64), (59, 16), (60, 32), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 128), (26, -1), (27, 64), (28, -1), (29, -1), (30, 256), (31, 256), (32, 256), (33, 2), (34, 16), (35, 256), (36, 64), (37, 16), (38, 32), (39, 4), (40, 32), (41, 64), (42, 4), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 128), (50, 32), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, -1), (57, 16), (58, 64), (59, 16), (60, 32), (61, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23]
 solution : [0, 2, 14, 17, 10, 46]


Solution : [0, 2, 14, 17, 10, 46] has cost 31.


Before backtrack at level 15
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23]
 solution : [0, 2, 14, 17, 10, 46]

After backtrack at level 15
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 46]


Invert decision for 46 at level 14


New level: 15
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 32), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 4), (22, 128), (23, 16), (24, 64), (25, 128), (26, -1), (27, 64), (28, -1), (29, -1), (30, 256), (31, 256), (32, 256), (33, 2), (34, 16), (35, 256), (36, 64), (37, 16), (38, 32), (39, 4), (40, 32), (41, 64), (42, 4), (43, 1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 128), (50, 32), (51, -1), (52, 4), (53, 4), (54, -1), (55, -1), (56, -1), (57, 16), (58, 64), (59, 16), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 15 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 15 among pending : [49, 53, 4, 50, 52, 25, 24, 22, 31, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 31 with phase True at level 15

After decision at level 15
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 31]


New level: 16
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 31]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 31]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 16), (24, 64), (25, 128), (26, 4), (27, 64), (28, 64), (29, 128), (30, 64), (31, -1), (32, 128), (33, 4), (34, 16), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 4), (41, 4), (42, 256), (43, 32), (44, 2), (45, 32), (46, -1), (47, 256), (48, 16), (49, 128), (50, 32), (51, 8), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 31]


Solution : [0, 2, 14, 17, 10, 31] has cost 31.


Before backtrack at level 16
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 31]

After backtrack at level 16
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 31]


Invert decision for 31 at level 15


New level: 16
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 16), (24, 64), (25, 128), (26, 4), (27, 64), (28, 64), (29, 128), (30, 64), (31, -1), (32, 128), (33, 4), (34, 16), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 4), (41, 4), (42, 256), (43, 32), (44, 2), (45, 32), (46, -1), (47, 256), (48, 16), (49, 128), (50, 32), (51, 8), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 16 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 16 among pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 42, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 42 with phase True at level 16

After decision at level 16
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 42]


New level: 17
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 42]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 42]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 64), (30, 16), (31, -1), (32, 128), (33, 64), (34, 32), (35, 128), (36, 64), (37, 32), (38, 64), (39, 2), (40, 1), (41, 2), (42, -1), (43, 16), (44, 16), (45, 16), (46, -1), (47, 128), (48, 32), (49, 128), (50, 64), (51, 8), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 32), (60, 64), (61, 64)]

Covered at level 17 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 42]


Solution : [0, 2, 14, 17, 10, 42] has cost 31.


Before backtrack at level 17
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 42]

After backtrack at level 17
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 42]


Invert decision for 42 at level 16


New level: 17
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 64), (30, 16), (31, -1), (32, 128), (33, 64), (34, 32), (35, 128), (36, 64), (37, 32), (38, 64), (39, 2), (40, 1), (41, 2), (42, -1), (43, 16), (44, 16), (45, 16), (46, -1), (47, 128), (48, 32), (49, 128), (50, 64), (51, 8), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 32), (60, 64), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 17 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 17 among pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 3, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 3 with phase True at level 17

After decision at level 17
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 3]


New level: 18
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 3]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 58, 57, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 55, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 16), (24, 16), (25, 32), (26, 8), (27, 32), (28, 128), (29, 64), (30, 128), (31, -1), (32, 256), (33, 64), (34, 16), (35, 128), (36, 32), (37, 32), (38, 64), (39, 4), (40, 8), (41, 16), (42, -1), (43, 256), (44, 8), (45, 8), (46, -1), (47, 256), (48, 8), (49, 32), (50, 16), (51, 4), (52, 4), (53, 4), (54, 2), (55, 0), (56, 4), (57, 0), (58, 0), (59, 4), (60, 8), (61, 4)]

Covered at level 18 : {57, 58, 55}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 3]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 16), (24, 16), (25, 32), (26, 8), (27, 32), (28, 128), (29, 64), (30, 128), (31, -1), (32, 256), (33, 64), (34, 16), (35, 128), (36, 32), (37, 32), (38, 64), (39, 4), (40, 8), (41, 16), (42, -1), (43, 256), (44, 8), (45, 8), (46, -1), (47, 256), (48, 8), (49, 32), (50, 16), (51, 4), (52, 4), (53, 4), (54, 2), (55, 0), (56, 4), (57, 0), (58, 0), (59, 4), (60, 8), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 16), (24, 16), (25, 32), (26, 8), (27, 32), (28, 128), (29, 64), (30, 128), (31, -1), (32, 256), (33, 64), (34, 16), (35, 128), (36, 32), (37, 32), (38, 64), (39, 4), (40, 8), (41, 16), (42, -1), (43, 256), (44, 8), (45, 8), (46, -1), (47, 256), (48, 8), (49, 32), (50, 16), (51, 4), (52, 4), (53, 4), (54, 2), (55, -1), (56, 4), (57, -1), (58, -1), (59, 4), (60, 8), (61, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 3]


Solution : [0, 2, 14, 17, 10, 3] has cost 30.


Before backtrack at level 18
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54]
 solution : [0, 2, 14, 17, 10, 3]

After backtrack at level 18
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 3]


Invert decision for 3 at level 17


New level: 18
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 64), (21, 256), (22, 128), (23, 16), (24, 16), (25, 32), (26, 8), (27, 32), (28, 128), (29, 64), (30, 128), (31, -1), (32, 256), (33, 64), (34, 16), (35, 128), (36, 32), (37, 32), (38, 64), (39, 4), (40, 8), (41, 16), (42, -1), (43, 256), (44, 8), (45, 8), (46, -1), (47, 256), (48, 8), (49, 32), (50, 16), (51, 4), (52, 4), (53, 4), (54, 2), (55, -1), (56, 4), (57, -1), (58, -1), (59, 4), (60, 8), (61, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 18 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 18 among pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 35, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 35 with phase True at level 18

After decision at level 18
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 35]


New level: 19
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 35]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 60, 59, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 45, 51, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 35]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 16), (22, 64), (23, 8), (24, 8), (25, 16), (26, 16), (27, 8), (28, 16), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 32), (35, -1), (36, 64), (37, 8), (38, 16), (39, 4), (40, 1), (41, 2), (42, -1), (43, 32), (44, 32), (45, 0), (46, -1), (47, 16), (48, 32), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 128), (55, 16), (56, 128), (57, 8), (58, 8), (59, 0), (60, 0), (61, 8)]

Covered at level 19 : {51, 59, 60, 45}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 35]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 35]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 16), (22, 64), (23, 8), (24, 8), (25, 16), (26, 16), (27, 8), (28, 16), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 32), (35, -1), (36, 64), (37, 8), (38, 16), (39, 4), (40, 1), (41, 2), (42, -1), (43, 32), (44, 32), (45, 0), (46, -1), (47, 16), (48, 32), (49, 16), (50, 16), (51, 0), (52, 16), (53, 16), (54, 128), (55, 16), (56, 128), (57, 8), (58, 8), (59, 0), (60, 0), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 16), (22, 64), (23, 8), (24, 8), (25, 16), (26, 16), (27, 8), (28, 16), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 32), (35, -1), (36, 64), (37, 8), (38, 16), (39, 4), (40, 1), (41, 2), (42, -1), (43, 32), (44, 32), (45, -1), (46, -1), (47, 16), (48, 32), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 128), (55, 16), (56, 128), (57, 8), (58, 8), (59, -1), (60, -1), (61, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 35]


Solution : [0, 2, 14, 17, 10, 35] has cost 31.


Before backtrack at level 19
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 35]

After backtrack at level 19
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]
 solution : [0, 2, 14, 17, 10, 35]


Invert decision for 35 at level 18


New level: 19
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]
 solution : [0, 2, 14, 17, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32), (21, 16), (22, 64), (23, 8), (24, 8), (25, 16), (26, 16), (27, 8), (28, 16), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 32), (35, -1), (36, 64), (37, 8), (38, 16), (39, 4), (40, 1), (41, 2), (42, -1), (43, 32), (44, 32), (45, -1), (46, -1), (47, 16), (48, 32), (49, 16), (50, 16), (51, -1), (52, 16), (53, 16), (54, 128), (55, 16), (56, 128), (57, 8), (58, 8), (59, -1), (60, -1), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 19 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 19 among pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 20, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 20 with phase True at level 19

After decision at level 19
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]
 solution : [0, 2, 14, 17, 10, 20]


New level: 20
 pending : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]
 solution : [0, 2, 14, 17, 10, 20]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 25, 24, 22, 12, 41, 40, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 45, 51]
 solution : [0, 2, 14, 17, 10, 20]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, 0), (25, 0), (26, 16), (27, 8), (28, 128), (29, 8), (30, 32), (31, -1), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 4), (38, 8), (39, 4), (40, 0), (41, 0), (42, -1), (43, 128), (44, 32), (45, 0), (46, -1), (47, 32), (48, 32), (49, 128), (50, 64), (51, 0), (52, 32), (53, 32), (54, 128), (55, 8), (56, 128), (57, 32), (58, 64), (59, 4), (60, 8), (61, 128)]

Covered at level 20 : {40, 41, 45, 51, 24, 25}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59]
 solution : [0, 2, 14, 17, 10, 20]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59]
 solution : [0, 2, 14, 17, 10, 20]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, 0), (25, 0), (26, 16), (27, 8), (28, 128), (29, 8), (30, 32), (31, -1), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 4), (38, 8), (39, 4), (40, 0), (41, 0), (42, -1), (43, 128), (44, 32), (45, 0), (46, -1), (47, 32), (48, 32), (49, 128), (50, 64), (51, 0), (52, 32), (53, 32), (54, 128), (55, 8), (56, 128), (57, 32), (58, 64), (59, 4), (60, 8), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, -1), (25, -1), (26, 16), (27, 8), (28, 128), (29, 8), (30, 32), (31, -1), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 4), (38, 8), (39, 4), (40, -1), (41, -1), (42, -1), (43, 128), (44, 32), (45, -1), (46, -1), (47, 32), (48, 32), (49, 128), (50, 64), (51, -1), (52, 32), (53, 32), (54, 128), (55, 8), (56, 128), (57, 32), (58, 64), (59, 4), (60, 8), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59]
 solution : [0, 2, 14, 17, 10, 20]


Solution : [0, 2, 14, 17, 10, 20] has cost 31.


Before backtrack at level 20
 pending : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59]
 solution : [0, 2, 14, 17, 10, 20]

After backtrack at level 20
 pending : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]
 solution : [0, 2, 14, 17, 10, 20]


Invert decision for 20 at level 19


New level: 20
 pending : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]
 solution : [0, 2, 14, 17, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16), (22, 64), (23, 8), (24, -1), (25, -1), (26, 16), (27, 8), (28, 128), (29, 8), (30, 32), (31, -1), (32, 32), (33, 64), (34, 16), (35, -1), (36, 32), (37, 4), (38, 8), (39, 4), (40, -1), (41, -1), (42, -1), (43, 128), (44, 32), (45, -1), (46, -1), (47, 32), (48, 32), (49, 128), (50, 64), (51, -1), (52, 32), (53, 32), (54, 128), (55, 8), (56, 128), (57, 32), (58, 64), (59, 4), (60, 8), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 20 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 20 among pending : [49, 53, 4, 50, 52, 22, 12, 21, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 21 with phase True at level 20

After decision at level 20
 pending : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]
 solution : [0, 2, 14, 17, 10, 21]


New level: 21
 pending : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]
 solution : [0, 2, 14, 17, 10, 21]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 54, 58, 57, 55, 60, 59, 25, 24, 41, 40, 45, 51]
 solution : [0, 2, 14, 17, 10, 21]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 8), (35, -1), (36, 8), (37, 16), (38, 32), (39, 128), (40, 16), (41, 32), (42, -1), (43, 32), (44, 32), (45, 0), (46, -1), (47, 16), (48, 32), (49, 128), (50, 64), (51, 0), (52, 16), (53, 16), (54, 0), (55, 16), (56, 128), (57, 32), (58, 64), (59, 16), (60, 32), (61, 8)]

Covered at level 21 : {51, 45, 54}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40]
 solution : [0, 2, 14, 17, 10, 21]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40]
 solution : [0, 2, 14, 17, 10, 21]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 8), (35, -1), (36, 8), (37, 16), (38, 32), (39, 128), (40, 16), (41, 32), (42, -1), (43, 32), (44, 32), (45, 0), (46, -1), (47, 16), (48, 32), (49, 128), (50, 64), (51, 0), (52, 16), (53, 16), (54, 0), (55, 16), (56, 128), (57, 32), (58, 64), (59, 16), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 8), (35, -1), (36, 8), (37, 16), (38, 32), (39, 64), (40, 16), (41, 32), (42, -1), (43, 32), (44, 32), (45, -1), (46, -1), (47, 16), (48, 32), (49, 128), (50, 64), (51, -1), (52, 16), (53, 16), (54, -1), (55, 16), (56, 128), (57, 32), (58, 64), (59, 16), (60, 32), (61, 8)]

Covered at level 21 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40]
 solution : [0, 2, 14, 17, 10, 21]


Solution : [0, 2, 14, 17, 10, 21] has cost 31.


Before backtrack at level 21
 pending : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40]
 solution : [0, 2, 14, 17, 10, 21]

After backtrack at level 21
 pending : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 21]


Invert decision for 21 at level 20


New level: 21
 pending : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]
 solution : [0, 2, 14, 17, 10]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 8), (30, 256), (31, -1), (32, 128), (33, 64), (34, 8), (35, -1), (36, 8), (37, 16), (38, 32), (39, 64), (40, 16), (41, 32), (42, -1), (43, 32), (44, 32), (45, -1), (46, -1), (47, 16), (48, 32), (49, 128), (50, 64), (51, -1), (52, 16), (53, 16), (54, -1), (55, 16), (56, 128), (57, 32), (58, 64), (59, 16), (60, 32), (61, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 21 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 21 among pending : [49, 53, 4, 50, 52, 22, 12, 32, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 32 with phase True at level 21

After decision at level 21
 pending : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 32]


New level: 22
 pending : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 32]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 39, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 41, 40, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 32]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, 256), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 128), (30, 4), (31, -1), (32, -1), (33, 8), (34, 32), (35, -1), (36, 64), (37, 16), (38, 32), (39, 0), (40, 0), (41, 0), (42, -1), (43, 16), (44, 16), (45, 16), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 8), (52, 32), (53, 32), (54, 64), (55, 16), (56, 128), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 22 : {40, 41, 39}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 32]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 32]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 128), (30, 4), (31, -1), (32, -1), (33, 8), (34, 32), (35, -1), (36, 64), (37, 16), (38, 32), (39, 0), (40, 0), (41, 0), (42, -1), (43, 16), (44, 16), (45, 16), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 8), (52, 32), (53, 32), (54, 64), (55, 16), (56, 128), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 128), (30, 4), (31, -1), (32, -1), (33, 8), (34, 32), (35, -1), (36, 64), (37, 16), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, 16), (44, 16), (45, 16), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 8), (52, 32), (53, 32), (54, 64), (55, 16), (56, 128), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 32]


Solution : [0, 2, 14, 17, 10, 32] has cost 31.


Before backtrack at level 22
 pending : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51]
 solution : [0, 2, 14, 17, 10, 32]

After backtrack at level 22
 pending : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 32]


Invert decision for 32 at level 21


New level: 22
 pending : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10]

Essensial at level 22 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 64), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 128), (30, 4), (31, -1), (32, -1), (33, 8), (34, 32), (35, -1), (36, 64), (37, 16), (38, 32), (39, -1), (40, -1), (41, -1), (42, -1), (43, 16), (44, 16), (45, 16), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 8), (52, 32), (53, 32), (54, 64), (55, 16), (56, 128), (57, 32), (58, 64), (59, 32), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 22 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 22 among pending : [49, 53, 4, 50, 52, 22, 12, 30, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 30 with phase True at level 22

After decision at level 22
 pending : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 30]


New level: 23
 pending : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 30]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 30]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, 256), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 2), (40, 0), (41, 0), (42, -1), (43, 256), (44, 32), (45, 8), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 16), (58, 32), (59, 64), (60, 128), (61, 128)]

Covered at level 23 : {40, 41}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39]
 solution : [0, 2, 14, 17, 10, 30]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39]
 solution : [0, 2, 14, 17, 10, 30]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 2), (40, 0), (41, 0), (42, -1), (43, 256), (44, 32), (45, 8), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 16), (58, 32), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 2), (40, -1), (41, -1), (42, -1), (43, 256), (44, 32), (45, 8), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 16), (58, 32), (59, 64), (60, 128), (61, 128)]

Covered at level 23 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39]
 solution : [0, 2, 14, 17, 10, 30]


Solution : [0, 2, 14, 17, 10, 30] has cost 31.


Before backtrack at level 23
 pending : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39]
 solution : [0, 2, 14, 17, 10, 30]

After backtrack at level 23
 pending : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 30]


Invert decision for 30 at level 22


New level: 23
 pending : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10]

Essensial at level 23 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 32), (25, 64), (26, 16), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 32), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 2), (40, -1), (41, -1), (42, -1), (43, 256), (44, 32), (45, 8), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 4), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 16), (58, 32), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 23 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 23 among pending : [49, 53, 4, 50, 52, 22, 12, 43, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 43 with phase True at level 23

After decision at level 23
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 43]


New level: 24
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 43]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 44, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 43]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, 256), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 4), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 4), (40, 32), (41, 64), (42, -1), (43, -1), (44, 0), (45, 32), (46, -1), (47, 256), (48, 8), (49, 128), (50, 64), (51, 16), (52, 16), (53, 16), (54, 128), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 24 : {44}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 43]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 43]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 4), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 4), (40, 32), (41, 64), (42, -1), (43, -1), (44, 0), (45, 32), (46, -1), (47, 256), (48, 8), (49, 128), (50, 64), (51, 16), (52, 16), (53, 16), (54, 128), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 4), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 4), (40, 32), (41, 64), (42, -1), (43, -1), (44, -1), (45, 32), (46, -1), (47, 256), (48, 8), (49, 128), (50, 64), (51, 16), (52, 16), (53, 16), (54, 128), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 24 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 43]


Solution : [0, 2, 14, 17, 10, 43] has cost 31.


Before backtrack at level 24
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40]
 solution : [0, 2, 14, 17, 10, 43]

After backtrack at level 24
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 43]


Invert decision for 43 at level 23


New level: 24
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10]

Essensial at level 24 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 4), (27, 64), (28, 64), (29, 128), (30, -1), (31, -1), (32, -1), (33, 4), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 4), (40, 32), (41, 64), (42, -1), (43, -1), (44, -1), (45, 32), (46, -1), (47, 256), (48, 8), (49, 128), (50, 64), (51, 16), (52, 16), (53, 16), (54, 128), (55, 8), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 24 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 24 among pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 47, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 47 with phase True at level 24

After decision at level 24
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 47]


New level: 25
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 47]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 29, 56, 61, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 45, 51, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 47]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, 256), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 8), (29, 0), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 0), (46, -1), (47, -1), (48, 16), (49, 128), (50, 64), (51, 0), (52, 32), (53, 32), (54, 1), (55, 4), (56, 4), (57, 32), (58, 64), (59, 16), (60, 32), (61, 0)]

Covered at level 25 : {45, 51, 61, 29}

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 47]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 47]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 8), (29, 0), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 0), (46, -1), (47, -1), (48, 16), (49, 128), (50, 64), (51, 0), (52, 32), (53, 32), (54, 1), (55, 4), (56, 4), (57, 32), (58, 64), (59, 16), (60, 32), (61, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, 16), (49, 128), (50, 64), (51, -1), (52, 32), (53, 32), (54, 1), (55, 4), (56, 4), (57, 32), (58, 64), (59, 16), (60, 32), (61, -1)]

Covered at level 25 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 47]


Solution : [0, 2, 14, 17, 10, 47] has cost 31.


Before backtrack at level 25
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44]
 solution : [0, 2, 14, 17, 10, 47]

After backtrack at level 25
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 47]


Invert decision for 47 at level 24


New level: 25
 pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10]

Essensial at level 25 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, -1), (46, -1), (47, -1), (48, 16), (49, 128), (50, 64), (51, -1), (52, 32), (53, 32), (54, 1), (55, 4), (56, 4), (57, 32), (58, 64), (59, 16), (60, 32), (61, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, -1), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 25 : set()

After reduction : 
 pending  : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 25 among pending : [49, 53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, -1), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 49 with phase True at level 25

After decision at level 25
 pending : [53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 49]


New level: 26
 pending : [53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 49]


Before reduction : 
 pending  : [53, 4, 50, 52, 22, 12, 9, 38, 37, 36, 33, 27, 34, 23, 48, 56, 28, 26, 58, 57, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 49]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, -1), (48, 32), (49, 128), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 0), (24, 64), (25, 128), (26, 8), (27, 0), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 32), (37, 32), (38, 64), (39, 8), (40, 8), (41, 16), (42, -1), (43, -1), (44, 16), (45, 16), (46, -1), (47, -1), (48, 16), (49, -1), (50, 0), (51, 8), (52, 2), (53, 2), (54, 128), (55, 8), (56, 128), (57, 0), (58, 0), (59, 8), (60, 16), (61, 128)]

Covered at level 26 : {50, 23, 57, 58, 27}

After reduction : 
 pending  : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 49]


Before reduction : 
 pending  : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 49]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 0), (24, 64), (25, 128), (26, 8), (27, 0), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 32), (37, 32), (38, 64), (39, 8), (40, 8), (41, 16), (42, -1), (43, -1), (44, 16), (45, 16), (46, -1), (47, -1), (48, 16), (49, -1), (50, 0), (51, 8), (52, 2), (53, 2), (54, 128), (55, 8), (56, 128), (57, 0), (58, 0), (59, 8), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, -1), (24, 64), (25, 128), (26, 8), (27, -1), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 32), (37, 32), (38, 64), (39, 8), (40, 8), (41, 16), (42, -1), (43, -1), (44, 16), (45, 16), (46, -1), (47, -1), (48, 16), (49, -1), (50, -1), (51, 8), (52, 2), (53, 2), (54, 128), (55, 8), (56, 128), (57, -1), (58, -1), (59, 8), (60, 16), (61, 128)]

Covered at level 26 : set()

After reduction : 
 pending  : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 49]


Solution : [0, 2, 14, 17, 10, 49] has cost 31.


Before backtrack at level 26
 pending : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51]
 solution : [0, 2, 14, 17, 10, 49]

After backtrack at level 26
 pending : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 49]


Invert decision for 49 at level 25


New level: 26
 pending : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10]

Essensial at level 26 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, -1), (24, 64), (25, 128), (26, 8), (27, -1), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 32), (34, 16), (35, -1), (36, 32), (37, 32), (38, 64), (39, 8), (40, 8), (41, 16), (42, -1), (43, -1), (44, 16), (45, 16), (46, -1), (47, -1), (48, 16), (49, -1), (50, -1), (51, 8), (52, 2), (53, 2), (54, 128), (55, 8), (56, 128), (57, -1), (58, -1), (59, 8), (60, 16), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, -1), (48, 32), (49, -1), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 26 : set()

After reduction : 
 pending  : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10]


Solution : [0, 2, 14, 17, 10] has cost 21.


Decide in level 26 among pending : [53, 4, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, -1), (48, 32), (49, -1), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 4 with phase True at level 26

After decision at level 26
 pending : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 4]


New level: 27
 pending : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 4]


Before reduction : 
 pending  : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 55, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 4]

Essensial at level 27 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 128), (29, 128), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, -1), (43, -1), (44, 32), (45, 32), (46, -1), (47, -1), (48, 32), (49, -1), (50, 64), (51, 16), (52, 32), (53, 32), (54, 128), (55, 16), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, -1), (43, -1), (44, 8), (45, 8), (46, -1), (47, -1), (48, 8), (49, -1), (50, 64), (51, 4), (52, 4), (53, 4), (54, 2), (55, 0), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

Covered at level 27 : {55}

After reduction : 
 pending  : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 4]


Before reduction : 
 pending  : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 4]

Essensial at level 27 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, -1), (43, -1), (44, 8), (45, 8), (46, -1), (47, -1), (48, 8), (49, -1), (50, 64), (51, 4), (52, 4), (53, 4), (54, 2), (55, 0), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, -1), (43, -1), (44, 8), (45, 8), (46, -1), (47, -1), (48, 8), (49, -1), (50, 64), (51, 4), (52, 4), (53, 4), (54, 2), (55, -1), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

Covered at level 27 : set()

After reduction : 
 pending  : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 4]


Solution : [0, 2, 14, 17, 10, 4] has cost 30.


Before backtrack at level 27
 pending : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57]
 solution : [0, 2, 14, 17, 10, 4]

After backtrack at level 27
 pending : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 4]


Invert decision for 4 at level 26


New level: 27
 pending : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55]
 solution : [0, 2, 14, 17, 10]


Before reduction : 
 pending  : [53, 52, 22, 12, 9, 38, 37, 36, 33, 34, 48, 56, 28, 26, 60, 59, 25, 24, 54, 39, 41, 40, 44, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55]
 solution : [0, 2, 14, 17, 10]

Essensial at level 27 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 32), (24, 64), (25, 128), (26, 8), (27, 64), (28, 128), (29, 64), (30, -1), (31, -1), (32, -1), (33, 64), (34, 32), (35, -1), (36, 64), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, -1), (43, -1), (44, 8), (45, 8), (46, -1), (47, -1), (48, 8), (49, -1), (50, 64), (51, 4), (52, 4), (53, 4), (54, 2), (55, -1), (56, 2), (57, 4), (58, 8), (59, 16), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 4), (24, 64), (25, 128), (26, 0), (27, 8), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 4), (35, -1), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, -1), (43, -1), (44, 0), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 32), (51, 4), (52, 0), (53, 0), (54, 0), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

Covered at level 27 : {44, 52, 53, 54, 26}

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 9]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 9]

Essensial at level 27 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 4), (24, 64), (25, 128), (26, 0), (27, 8), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 4), (35, -1), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, -1), (43, -1), (44, 0), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 32), (51, 4), (52, 0), (53, 0), (54, 0), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 4), (24, 64), (25, 128), (26, -1), (27, 8), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 4), (35, -1), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, -1), (43, -1), (44, -1), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 32), (51, 4), (52, -1), (53, -1), (54, -1), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

Covered at level 27 : set()

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 9]


Solution : [0, 2, 14, 17, 10, 9] has cost 27.


Before backtrack at level 27
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55]
 solution : [0, 2, 14, 17, 10, 9]

After backtrack at level 27
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 26
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 26
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 25
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 25
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 24
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 24
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 23
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 23
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 22
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 22
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 21
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 21
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 20
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 20
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 19
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 19
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 18
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 18
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 17
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 17
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 16
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 16
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 15
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 15
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 14
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 14
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 13
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 13
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 10]


Before backtrack at level 12
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 10]

After backtrack at level 12
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 19]
 solution : [0, 2, 14, 17, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 19]
 solution : [0, 2, 14, 17]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 19]
 solution : [0, 2, 14, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 128), (23, 4), (24, 64), (25, 128), (26, -1), (27, 8), (28, 4), (29, 4), (30, -1), (31, -1), (32, -1), (33, 4), (34, 4), (35, -1), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, -1), (43, -1), (44, -1), (45, 4), (46, -1), (47, -1), (48, 2), (49, -1), (50, 32), (51, 4), (52, -1), (53, -1), (54, -1), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 12 : set()

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 19]
 solution : [0, 2, 14, 17]


Solution : [0, 2, 14, 17] has cost 19.


Decide in level 12 among pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 19]


New level: 13
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 19]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 54, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, 512), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 8), (46, 128), (47, 64), (48, 32), (49, 128), (50, 64), (51, 4), (52, 8), (53, 16), (54, 0), (55, 16), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

Covered at level 13 : {54}

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 19]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 8), (46, 128), (47, 64), (48, 32), (49, 128), (50, 64), (51, 4), (52, 8), (53, 16), (54, 0), (55, 16), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 8), (46, 128), (47, 64), (48, 32), (49, 128), (50, 64), (51, 4), (52, 8), (53, 16), (54, -1), (55, 16), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 19]


Solution : [0, 2, 14, 17, 19] has cost 28.


Before backtrack at level 13
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 19]

After backtrack at level 13
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]
 solution : [0, 2, 14, 17, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]
 solution : [0, 2, 14, 17]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]
 solution : [0, 2, 14, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 32), (24, 64), (25, 128), (26, 16), (27, 64), (28, 64), (29, 32), (30, 256), (31, 256), (32, 256), (33, 64), (34, 16), (35, 256), (36, 32), (37, 32), (38, 64), (39, 64), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 8), (46, 128), (47, 64), (48, 32), (49, 128), (50, 64), (51, 4), (52, 8), (53, 16), (54, -1), (55, 16), (56, 64), (57, 32), (58, 64), (59, 64), (60, 128), (61, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Covered at level 13 : set()

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]
 solution : [0, 2, 14, 17]


Solution : [0, 2, 14, 17] has cost 19.


Decide in level 13 among pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 9, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]
 solution : [0, 2, 14, 17, 9]


New level: 14
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]
 solution : [0, 2, 14, 17, 9]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 53, 52, 26, 44, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 54]
 solution : [0, 2, 14, 17, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, -1), (6, -1), (7, -1), (8, -1), (9, 256), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 256), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 32), (24, 64), (25, 128), (26, 32), (27, 64), (28, 128), (29, 128), (30, 256), (31, 256), (32, 256), (33, 64), (34, 32), (35, 256), (36, 64), (37, 32), (38, 64), (39, 128), (40, 32), (41, 64), (42, 256), (43, 256), (44, 64), (45, 32), (46, 256), (47, 256), (48, 64), (49, 128), (50, 64), (51, 16), (52, 32), (53, 64), (54, 128), (55, 32), (56, 128), (57, 32), (58, 64), (59, 64), (60, 128), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 4), (24, 64), (25, 128), (26, 0), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, 8), (43, 8), (44, 0), (45, 4), (46, 128), (47, 64), (48, 2), (49, 64), (50, 32), (51, 4), (52, 0), (53, 0), (54, 0), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

Covered at level 14 : {44, 52, 53, 54, 26}

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 9]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 256), (22, 128), (23, 4), (24, 64), (25, 128), (26, 0), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, 8), (43, 8), (44, 0), (45, 4), (46, 128), (47, 64), (48, 2), (49, 64), (50, 32), (51, 4), (52, 0), (53, 0), (54, 0), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 4), (24, 64), (25, 128), (26, -1), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, 8), (43, 8), (44, -1), (45, 4), (46, 128), (47, 64), (48, 2), (49, 64), (50, 32), (51, 4), (52, -1), (53, -1), (54, -1), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 64)]

Covered at level 14 : set()

After reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 9]


Solution : [0, 2, 14, 17, 9] has cost 25.


Before backtrack at level 14
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15]
 solution : [0, 2, 14, 17, 9]

After backtrack at level 14
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 53, 52, 26, 44, 54]
 solution : [0, 2, 14, 17, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 53, 52, 26, 44, 54]
 solution : [0, 2, 14, 17]


Before reduction : 
 pending  : [22, 12, 38, 37, 36, 33, 34, 48, 56, 28, 60, 59, 25, 24, 39, 41, 40, 29, 61, 45, 51, 50, 27, 23, 58, 57, 55, 4, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 15, 53, 52, 26, 44, 54]
 solution : [0, 2, 14, 17]

Essensial at level 14 : {4, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, 32), (16, -1), (17, -1), (18, -1), (19, -1), (20, 256), (21, 64), (22, 128), (23, 4), (24, 64), (25, 128), (26, -1), (27, 8), (28, 4), (29, 4), (30, 256), (31, 256), (32, 256), (33, 4), (34, 4), (35, 64), (36, 8), (37, 32), (38, 64), (39, 2), (40, 32), (41, 64), (42, 8), (43, 8), (44, -1), (45, 4), (46, 128), (47, 64), (48, 2), (49, 64), (50, 32), (51, 4), (52, -1), (53, -1), (54, -1), (55, 2), (56, 128), (57, 16), (58, 32), (59, 16), (60, 32), (61, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 64), (23, 0), (24, 8), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 32), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, 8), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 2), (50, 1), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 1), (58, 2), (59, 16), (60, 32), (61, 2)]

Covered at level 14 : {33, 34, 36, 39, 44, 48, 52, 55, 53, 23, 54, 26, 27}

After reduction : 
 pending  : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46]
 solution : [0, 2, 14, 17, 4, 15]


Before reduction : 
 pending  : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46]
 solution : [0, 2, 14, 17, 4, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 64), (23, 0), (24, 8), (25, 16), (26, 0), (27, 0), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, 0), (34, 0), (35, 32), (36, 0), (37, 32), (38, 64), (39, 0), (40, 4), (41, 8), (42, 1), (43, 1), (44, 0), (45, 2), (46, 2), (47, 2), (48, 0), (49, 2), (50, 1), (51, 2), (52, 0), (53, 0), (54, 0), (55, 0), (56, 2), (57, 1), (58, 2), (59, 16), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 64), (23, -1), (24, 8), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 32), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, 8), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, 2), (50, 1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 1), (58, 2), (59, 16), (60, 32), (61, 2)]

Covered at level 14 : set()

After reduction : 
 pending  : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46]
 solution : [0, 2, 14, 17, 4, 15]


Solution : [0, 2, 14, 17, 4, 15] has cost 34.


Before backtrack at level 14
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46]
 solution : [0, 2, 14, 17, 4, 15]

After backtrack at level 14
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54]
 solution : [0, 2, 14, 17]


Before backtrack at level 13
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54]
 solution : [0, 2, 14, 17]

After backtrack at level 13
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9]
 solution : [0, 2, 14, 17]


Before backtrack at level 12
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9]
 solution : [0, 2, 14, 17]

After backtrack at level 12
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19]
 solution : [0, 2, 14, 17]


Before backtrack at level 11
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19]
 solution : [0, 2, 14, 17]

After backtrack at level 11
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10]
 solution : [0, 2, 14]


Before backtrack at level 10
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10]
 solution : [0, 2, 14]

After backtrack at level 10
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16]
 solution : [0, 2, 14]


Before backtrack at level 9
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16]
 solution : [0, 2, 14]

After backtrack at level 9
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18]
 solution : [0, 2, 14]


Before backtrack at level 8
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18]
 solution : [0, 2, 14]

After backtrack at level 8
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5]
 solution : [0, 2, 14]


Before backtrack at level 7
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5]
 solution : [0, 2, 14]

After backtrack at level 7
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7]
 solution : [0, 2, 14]


Before backtrack at level 6
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7]
 solution : [0, 2, 14]

After backtrack at level 6
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8]
 solution : [0, 2, 14]


Before backtrack at level 5
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8]
 solution : [0, 2, 14]

After backtrack at level 5
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 14]


Invert decision for 14 at level 4


New level: 5
 pending : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2]


Before reduction : 
 pending  : [22, 12, 38, 37, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2]

Essensial at level 5 : {37}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 64), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16), (21, 2), (22, 64), (23, -1), (24, 8), (25, 16), (26, -1), (27, -1), (28, 2), (29, 2), (30, 8), (31, 8), (32, 8), (33, -1), (34, -1), (35, 32), (36, -1), (37, 32), (38, 64), (39, -1), (40, 4), (41, 8), (42, 1), (43, 1), (44, -1), (45, 2), (46, 2), (47, 2), (48, -1), (49, 2), (50, 1), (51, 2), (52, -1), (53, -1), (54, -1), (55, -1), (56, 2), (57, 1), (58, 2), (59, 16), (60, 32), (61, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, 128), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 128), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 12, 38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37]


Before reduction : 
 pending  : [22, 12, 38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, 128), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 128), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, 128), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 128), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [22, 12, 38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37]


Solution : [0, 2, 37] has cost 17.


Decide in level 5 among pending : [22, 12, 38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, 128), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 128), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

Decide 12 with phase True at level 5

After decision at level 5
 pending : [22, 38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 12]


New level: 6
 pending : [22, 38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 12]


Before reduction : 
 pending  : [22, 38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 256), (4, 256), (5, 512), (6, 512), (7, 512), (8, 512), (9, 512), (10, 512), (11, -1), (12, 512), (13, -1), (14, -1), (15, 512), (16, 512), (17, 512), (18, 512), (19, 512), (20, 256), (21, 256), (22, 64), (23, 256), (24, 128), (25, 256), (26, 256), (27, 256), (28, 256), (29, 256), (30, 256), (31, 256), (32, 256), (33, 256), (34, 256), (35, 256), (36, 256), (37, -1), (38, 64), (39, 128), (40, 128), (41, 256), (42, 256), (43, 256), (44, 256), (45, 256), (46, 256), (47, 256), (48, 256), (49, 256), (50, 256), (51, 128), (52, 256), (53, 256), (54, 128), (55, 128), (56, 128), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 512), (9, 512), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 32), (21, 64), (22, 0), (23, 256), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 128), (37, -1), (38, 32), (39, 128), (40, 128), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 256), (51, 64), (52, 256), (53, 256), (54, 128), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : {22}

After reduction : 
 pending  : [38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 12]


Before reduction : 
 pending  : [38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 512), (9, 512), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 32), (21, 64), (22, 0), (23, 256), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 128), (37, -1), (38, 32), (39, 128), (40, 128), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 256), (51, 64), (52, 256), (53, 256), (54, 128), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 512), (9, 512), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 128), (37, -1), (38, 32), (39, 128), (40, 128), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 256), (51, 64), (52, 256), (53, 256), (54, 128), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 12]


Solution : [0, 2, 37, 12] has cost 23.


Before backtrack at level 6
 pending : [38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 12]

After backtrack at level 6
 pending : [38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6, 22]
 solution : [0, 2, 37, 12]


Invert decision for 12 at level 5


New level: 6
 pending : [38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6, 22]
 solution : [0, 2, 37]


Before reduction : 
 pending  : [38, 56, 28, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 20, 35, 3, 42, 31, 46, 4, 15, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 16, 18, 5, 7, 8, 6, 22]
 solution : [0, 2, 37]

Essensial at level 6 : {16, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 256), (5, 512), (6, 512), (7, 256), (8, 512), (9, 512), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, 256), (16, 256), (17, 512), (18, 512), (19, 512), (20, 32), (21, 64), (22, -1), (23, 256), (24, 64), (25, 256), (26, 256), (27, 256), (28, 128), (29, 256), (30, 128), (31, 64), (32, 64), (33, 128), (34, 128), (35, 64), (36, 128), (37, -1), (38, 32), (39, 128), (40, 128), (41, 256), (42, 256), (43, 128), (44, 256), (45, 256), (46, 128), (47, 256), (48, 256), (49, 256), (50, 256), (51, 64), (52, 256), (53, 256), (54, 128), (55, 128), (56, 64), (57, 128), (58, 128), (59, 128), (60, 256), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, 512), (6, 512), (7, 128), (8, 64), (9, 256), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, 512), (20, 0), (21, 8), (22, 0), (23, 16), (24, 32), (25, 16), (26, 64), (27, 64), (28, 0), (29, 8), (30, 8), (31, 0), (32, 8), (33, 32), (34, 32), (35, 16), (36, 32), (37, -1), (38, 0), (39, 64), (40, 64), (41, 32), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 128), (50, 256), (51, 4), (52, 256), (53, 128), (54, 128), (55, 128), (56, 8), (57, 128), (58, 64), (59, 128), (60, 64), (61, 128)]

Covered at level 6 : {38, 20, 22, 28, 31}

After reduction : 
 pending  : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 16, 15]


Before reduction : 
 pending  : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 16, 15]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, 512), (6, 512), (7, 128), (8, 64), (9, 256), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, 512), (20, 0), (21, 8), (22, 0), (23, 16), (24, 32), (25, 16), (26, 64), (27, 64), (28, 0), (29, 8), (30, 8), (31, 0), (32, 8), (33, 32), (34, 32), (35, 16), (36, 32), (37, -1), (38, 0), (39, 64), (40, 64), (41, 32), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 128), (50, 256), (51, 4), (52, 256), (53, 128), (54, 128), (55, 128), (56, 8), (57, 128), (58, 64), (59, 128), (60, 64), (61, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 256), (5, 512), (6, 512), (7, 128), (8, 64), (9, 256), (10, 512), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 256), (18, 512), (19, 512), (20, -1), (21, 8), (22, -1), (23, 16), (24, 32), (25, 16), (26, 64), (27, 64), (28, -1), (29, 8), (30, 8), (31, -1), (32, 8), (33, 32), (34, 32), (35, 16), (36, 32), (37, -1), (38, -1), (39, 64), (40, 64), (41, 32), (42, 256), (43, 4), (44, 256), (45, 64), (46, 8), (47, 256), (48, 256), (49, 128), (50, 256), (51, 4), (52, 256), (53, 128), (54, 128), (55, 128), (56, 8), (57, 128), (58, 64), (59, 128), (60, 64), (61, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 16, 15]


Solution : [0, 2, 37, 16, 15] has cost 29.


Before backtrack at level 6
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6]
 solution : [0, 2, 37, 16, 15]

After backtrack at level 6
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22]
 solution : [0, 2, 37]


Before backtrack at level 5
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22]
 solution : [0, 2, 37]

After backtrack at level 5
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12]
 solution : [0, 2]


Before backtrack at level 4
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12]
 solution : [0, 2]

After backtrack at level 4
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12, 14]
 solution : [0, 2]


Before backtrack at level 3
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12, 14]
 solution : [0, 2]

After backtrack at level 3
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12, 14, 11]
 solution : [0, 2]


Before backtrack at level 2
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12, 14, 11]
 solution : [0, 2]

After backtrack at level 2
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12, 14, 11, 13]
 solution : [0, 2]


Before backtrack at level 1
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12, 14, 11, 13]
 solution : [0, 2]

After backtrack at level 1
 pending : [56, 60, 59, 25, 24, 41, 40, 29, 61, 45, 51, 50, 58, 57, 49, 47, 43, 30, 32, 21, 35, 3, 42, 46, 4, 36, 33, 34, 48, 39, 27, 23, 55, 53, 52, 26, 44, 54, 9, 19, 17, 10, 18, 5, 7, 8, 6, 15, 16, 38, 28, 20, 31, 22, 37, 12, 14, 11, 13, 1]
 solution : [0, 2]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=3]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 22

[MIN NOTE]: maximum branch and bound depth: 27

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 2, 1, 11, 15]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_2] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

invariant [invar_11] forall NODE0,NODE1. ~sent(NODE0,NODE1) | allowed_in(NODE0) | allowed_in(NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_15] forall NODE0,NODE1. internal(NODE0) | internal(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 22




[QRM NOTE]: Time elapsed since start: 14.411 seconds

[QRM NOTE]: Time elapsed since last: 6.815 seconds

[QRM NOTE]: Peak memory: 2330839 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


=================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.ivy]

=================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_15

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_15 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_15 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_11 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_15 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 16.345 seconds

[QRM NOTE]: Time elapsed since last: 1.934 seconds

[QRM NOTE]: Peak memory: 1332027 bytes


********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************

[QRM RESULT]: PASS

