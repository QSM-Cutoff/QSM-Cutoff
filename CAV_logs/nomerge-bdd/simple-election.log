
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


***********************************************************************************************************

	[Synthesize Rmin]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

***********************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=2,proposer=1 -f 1 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

=================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 7

[FW NOTE]: number of interpreted atoms (e.g. member,le): 2

[FW NOTE]: symmetric group order: 2

[QRM NOTE]: Time elapsed since start: 0.029 seconds

[QRM NOTE]: Time elapsed since last: 0.029 seconds

[QRM NOTE]: Peak memory: 29090 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 4


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=1]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1']
sort: proposer=['proposer0']
sort: quorum=['quorum__acceptor0_acceptor1']
predicate: didNotPromise('acceptor',)
predicate: start('proposer',)
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
predicate: chosenAt('quorum', 'proposer')
predicate: member('acceptor', 'quorum')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', 'start(proposer0)']

0010101
0100011
011000-
100-111

[QRM NOTE]: Time elapsed since start: 0.126 seconds

[QRM NOTE]: Time elapsed since last: 0.097 seconds

[QRM NOTE]: Peak memory: 1110918 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.129 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 60849 bytes


========================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

========================================================================================================================


===================================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

===================================================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : 1-1----
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
1     : 11-----
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : --1--1-
2     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
3     : -1--1--
3     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : 1---0--
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
5     : 1----0-
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : -0--0--
6     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
7     : --0--0-
7     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
8 (*) : -0----0
8     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
9     : --0---0
9     : ['~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
10 (*) : ----1-0
10     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
11     : -----10
11     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
12 (*) : 1-----0
12     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 1
num_suborbits: 1
13 (*) : ---1--0
13     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
14 (*) : 0--1---
14     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
15 (*) : -1-1---
15     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
16     : --11---
16     : ['didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
17 (*) : ---10--
17     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
18     : ---1-0-
18     : ['leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
19 (*) : 0-0-1--
19     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)']
20     : 00---1-
20     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 1
num_suborbits: 1
21 (*) : 000----
21     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 1
num_suborbits: 1
22 (*) : 0---11-
22     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 14

[PRIME NOTE]: number of orbits before merging: 14

[PRIME NOTE]: number of primes: 23

[QRM NOTE]: Time elapsed since start: 0.144 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 1153630 bytes


=============================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

=============================================================================================================

definition primes: {0, 1, 2, 3, 11, 12, 13}


New level: 0
 pending : [4, 5, 6, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10]
 solution : []

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, 128), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10]
 solution : []

[QRM NOTE]: Time elapsed since start: 0.152 seconds

[QRM NOTE]: Time elapsed since last: 0.008 seconds

[QRM NOTE]: Peak memory: 106978 bytes


=================================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

=================================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
8 (*) : -0----0
8     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
9     : --0---0
9     : ['~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')),), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0)


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
10 (*) : ----1-0
10     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
11     : -----10
11     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',))), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
12 (*) : 1-----0
12     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',))), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 7 =====================
size : 1
num_suborbits: 1
13 (*) : ---1--0
13     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0',)),), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
14 (*) : 0--1---
14     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))): [quorum$1$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)), EnumeratedSort('proposer', ('proposer0',))), 'leader': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): [quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)): quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$1$chosenAt$0': quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
15 (*) : -1-1---
15     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
16     : --11---
16     : ['didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')),), 'leader': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$0$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$0$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
17 (*) : ---10--
17     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
18     : ---1-0-
18     : ['leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor0,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))): [acceptor$1$promise$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$promise$0$0}

part_sig: ('acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor0,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0',)),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')), EnumeratedSort('proposer', ('proposer0',)))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): [acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1')): acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0)


===========================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

===========================================================================================================================


=== Prime Orbit 4 =====================
size : 2
num_suborbits: 1
8 (*) : -0----0
8     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
9     : --0---0
9     : ['~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
10 (*) : ----1-0
10     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
11     : -----10
11     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
12 (*) : 1-----0
12     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 7 =====================
size : 1
num_suborbits: 1
13 (*) : ---1--0
13     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
14 (*) : 0--1---
14     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
15 (*) : -1-1---
15     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
16     : --11---
16     : ['didNotPromise(acceptor1)', 'leader(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0)
qcost : 4




=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
17 (*) : ---10--
17     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
18     : ---1-0-
18     : ['leader(proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0)
qcost : 4



[QRM NOTE]: Time elapsed since start: 0.251 seconds

[QRM NOTE]: Time elapsed since last: 0.099 seconds

[QRM NOTE]: Peak memory: 1852368 bytes


==========================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

==========================================================================================================


New level: 1
 pending : [4, 5, 6, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10]
 solution : []

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, 128), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, 128), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10]
 solution : []


Solution : [] has cost 0.


Decide in level 1 among pending : [4, 5, 6, 7, 8, 9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, 128), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Decide 7 with phase True at level 1

After decision at level 1
 pending : [4, 5, 6, 8, 9, 10]
 solution : [7]


New level: 2
 pending : [4, 5, 6, 8, 9, 10]
 solution : [7]


Before reduction : 
 pending  : [4, 5, 6, 8, 9, 10]
 solution : [7]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, 128), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, 64), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [4, 5, 6, 8, 9, 10]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 2 among pending : [4, 5, 6, 8, 9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, 64), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Decide 8 with phase True at level 2

After decision at level 2
 pending : [4, 5, 6, 9, 10]
 solution : [7, 8]


New level: 3
 pending : [4, 5, 6, 9, 10]
 solution : [7, 8]


Before reduction : 
 pending  : [4, 5, 6, 9, 10]
 solution : [7, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, 64), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : {9, 10}

After reduction : 
 pending  : [4, 5, 6]
 solution : [7, 8]


Before reduction : 
 pending  : [4, 5, 6]
 solution : [7, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 5, 6]
 solution : [7, 8]


Solution : [7, 8] has cost 7.


Decide in level 3 among pending : [4, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 4 with phase True at level 3

After decision at level 3
 pending : [5, 6]
 solution : [7, 8, 4]


New level: 4
 pending : [5, 6]
 solution : [7, 8, 4]


Before reduction : 
 pending  : [5, 6]
 solution : [7, 8, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {5, 6}

After reduction : 
 pending  : []
 solution : [7, 8, 4]


Before reduction : 
 pending  : []
 solution : [7, 8, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 4]


Solution : [7, 8, 4] has cost 11.


Before backtrack at level 4
 pending : []
 solution : [7, 8, 4]

After backtrack at level 4
 pending : [5, 6]
 solution : [7, 8, 4]


Invert decision for 4 at level 3


New level: 4
 pending : [5, 6]
 solution : [7, 8]


Before reduction : 
 pending  : [5, 6]
 solution : [7, 8]

Essensial at level 4 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {6}

After reduction : 
 pending  : []
 solution : [7, 8, 5]


Before reduction : 
 pending  : []
 solution : [7, 8, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [7, 8, 5]


Solution : [7, 8, 5] has cost 11.


Before backtrack at level 4
 pending : []
 solution : [7, 8, 5]

After backtrack at level 4
 pending : [5, 6]
 solution : [7, 8]


Before backtrack at level 3
 pending : [5, 6]
 solution : [7, 8]

After backtrack at level 3
 pending : [5, 6, 9, 10, 4]
 solution : [7, 8]


Invert decision for 8 at level 2


New level: 3
 pending : [5, 6, 9, 10, 4]
 solution : [7]


Before reduction : 
 pending  : [5, 6, 9, 10, 4]
 solution : [7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [5, 6, 9, 10, 4]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 3 among pending : [5, 6, 9, 10, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Decide 5 with phase True at level 3

After decision at level 3
 pending : [6, 9, 10, 4]
 solution : [7, 5]


New level: 4
 pending : [6, 9, 10, 4]
 solution : [7, 5]


Before reduction : 
 pending  : [6, 9, 10, 4]
 solution : [7, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, 32), (6, 4), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {4, 6}

After reduction : 
 pending  : [9, 10]
 solution : [7, 5]


Before reduction : 
 pending  : [9, 10]
 solution : [7, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 10]
 solution : [7, 5]


Solution : [7, 5] has cost 7.


Decide in level 4 among pending : [9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [10]
 solution : [7, 5, 9]


New level: 5
 pending : [10]
 solution : [7, 5, 9]


Before reduction : 
 pending  : [10]
 solution : [7, 5, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {10}

After reduction : 
 pending  : []
 solution : [7, 5, 9]


Before reduction : 
 pending  : []
 solution : [7, 5, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 5, 9]


Solution : [7, 5, 9] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 5, 9]

After backtrack at level 5
 pending : [10]
 solution : [7, 5, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [10]
 solution : [7, 5]


Before reduction : 
 pending  : [10]
 solution : [7, 5]

Essensial at level 5 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 5, 10]


Before reduction : 
 pending  : []
 solution : [7, 5, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 5, 10]


Solution : [7, 5, 10] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 5, 10]

After backtrack at level 5
 pending : [10]
 solution : [7, 5]


Before backtrack at level 4
 pending : [10]
 solution : [7, 5]

After backtrack at level 4
 pending : [10, 6, 4, 9]
 solution : [7, 5]


Invert decision for 5 at level 3


New level: 4
 pending : [10, 6, 4, 9]
 solution : [7]


Before reduction : 
 pending  : [10, 6, 4, 9]
 solution : [7]

Essensial at level 4 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {6}

After reduction : 
 pending  : [10, 9]
 solution : [7, 4]


Before reduction : 
 pending  : [10, 9]
 solution : [7, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 9]
 solution : [7, 4]


Solution : [7, 4] has cost 7.


Decide in level 4 among pending : [10, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

Decide 10 with phase True at level 4

After decision at level 4
 pending : [9]
 solution : [7, 4, 10]


New level: 5
 pending : [9]
 solution : [7, 4, 10]


Before reduction : 
 pending  : [9]
 solution : [7, 4, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16), (10, 16), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {9}

After reduction : 
 pending  : []
 solution : [7, 4, 10]


Before reduction : 
 pending  : []
 solution : [7, 4, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 4, 10]


Solution : [7, 4, 10] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 4, 10]

After backtrack at level 5
 pending : [9]
 solution : [7, 4, 10]


Invert decision for 10 at level 4


New level: 5
 pending : [9]
 solution : [7, 4]


Before reduction : 
 pending  : [9]
 solution : [7, 4]

Essensial at level 5 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 4, 9]


Before reduction : 
 pending  : []
 solution : [7, 4, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 4, 9]


Solution : [7, 4, 9] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 4, 9]

After backtrack at level 5
 pending : [9]
 solution : [7, 4]


Before backtrack at level 4
 pending : [9]
 solution : [7, 4]

After backtrack at level 4
 pending : [9, 4, 6, 10]
 solution : [7]


Before backtrack at level 3
 pending : [9, 4, 6, 10]
 solution : [7]

After backtrack at level 3
 pending : [9, 4, 6, 10, 5]
 solution : [7]


Before backtrack at level 2
 pending : [9, 4, 6, 10, 5]
 solution : [7]

After backtrack at level 2
 pending : [9, 4, 6, 10, 5, 8]
 solution : [7]


Invert decision for 7 at level 1


New level: 2
 pending : [9, 4, 6, 10, 5, 8]
 solution : []


Before reduction : 
 pending  : [9, 4, 6, 10, 5, 8]
 solution : []

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [9, 4, 6, 10, 5, 8]
 solution : []


Solution : [] has cost 0.


Decide in level 2 among pending : [9, 4, 6, 10, 5, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Decide 8 with phase True at level 2

After decision at level 2
 pending : [9, 4, 6, 10, 5]
 solution : [8]


New level: 3
 pending : [9, 4, 6, 10, 5]
 solution : [8]


Before reduction : 
 pending  : [9, 4, 6, 10, 5]
 solution : [8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, 128), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : {9, 10}

After reduction : 
 pending  : [4, 6, 5]
 solution : [8]


Before reduction : 
 pending  : [4, 6, 5]
 solution : [8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 6, 5]
 solution : [8]


Solution : [8] has cost 4.


Decide in level 3 among pending : [4, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Decide 4 with phase True at level 3

After decision at level 3
 pending : [6, 5]
 solution : [8, 4]


New level: 4
 pending : [6, 5]
 solution : [8, 4]


Before reduction : 
 pending  : [6, 5]
 solution : [8, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {5, 6}

After reduction : 
 pending  : []
 solution : [8, 4]


Before reduction : 
 pending  : []
 solution : [8, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [8, 4]


Solution : [8, 4] has cost 8.


Before backtrack at level 4
 pending : []
 solution : [8, 4]

After backtrack at level 4
 pending : [6, 5]
 solution : [8, 4]


Invert decision for 4 at level 3


New level: 4
 pending : [6, 5]
 solution : [8]


Before reduction : 
 pending  : [6, 5]
 solution : [8]

Essensial at level 4 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {6}

After reduction : 
 pending  : []
 solution : [8, 5]


Before reduction : 
 pending  : []
 solution : [8, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [8, 5]


Solution : [8, 5] has cost 8.


Before backtrack at level 4
 pending : []
 solution : [8, 5]

After backtrack at level 4
 pending : [5, 6]
 solution : [8]


Before backtrack at level 3
 pending : [5, 6]
 solution : [8]

After backtrack at level 3
 pending : [5, 6, 9, 10, 4]
 solution : [8]


Invert decision for 8 at level 2


New level: 3
 pending : [5, 6, 9, 10, 4]
 solution : []


Before reduction : 
 pending  : [5, 6, 9, 10, 4]
 solution : []

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [5, 6, 9, 10, 4]
 solution : []


Solution : [] has cost 0.


Decide in level 3 among pending : [5, 6, 9, 10, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Decide 5 with phase True at level 3

After decision at level 3
 pending : [6, 9, 10, 4]
 solution : [5]


New level: 4
 pending : [6, 9, 10, 4]
 solution : [5]


Before reduction : 
 pending  : [6, 9, 10, 4]
 solution : [5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, 64), (6, 8), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {4, 6}

After reduction : 
 pending  : [9, 10]
 solution : [5]


Before reduction : 
 pending  : [9, 10]
 solution : [5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 10]
 solution : [5]


Solution : [5] has cost 4.


Decide in level 4 among pending : [9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [10]
 solution : [5, 9]


New level: 5
 pending : [10]
 solution : [5, 9]


Before reduction : 
 pending  : [10]
 solution : [5, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {10}

After reduction : 
 pending  : []
 solution : [5, 9]


Before reduction : 
 pending  : []
 solution : [5, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [5, 9]


Solution : [5, 9] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [5, 9]

After backtrack at level 5
 pending : [10]
 solution : [5, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [10]
 solution : [5]


Before reduction : 
 pending  : [10]
 solution : [5]

Essensial at level 5 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [5, 10]


Before reduction : 
 pending  : []
 solution : [5, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [5, 10]


Solution : [5, 10] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [5, 10]

After backtrack at level 5
 pending : [10]
 solution : [5]


Before backtrack at level 4
 pending : [10]
 solution : [5]

After backtrack at level 4
 pending : [10, 6, 4, 9]
 solution : [5]


Invert decision for 5 at level 3


New level: 4
 pending : [10, 6, 4, 9]
 solution : []


Before reduction : 
 pending  : [10, 6, 4, 9]
 solution : []

Essensial at level 4 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : {6}

After reduction : 
 pending  : [10, 9]
 solution : [4]


Before reduction : 
 pending  : [10, 9]
 solution : [4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 9]
 solution : [4]


Solution : [4] has cost 4.


Decide in level 4 among pending : [10, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

Decide 10 with phase True at level 4

After decision at level 4
 pending : [9]
 solution : [4, 10]


New level: 5
 pending : [9]
 solution : [4, 10]


Before reduction : 
 pending  : [9]
 solution : [4, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 32), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : {9}

After reduction : 
 pending  : []
 solution : [4, 10]


Before reduction : 
 pending  : []
 solution : [4, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [4, 10]


Solution : [4, 10] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [4, 10]

After backtrack at level 5
 pending : [9]
 solution : [4, 10]


Invert decision for 10 at level 4


New level: 5
 pending : [9]
 solution : [4]


Before reduction : 
 pending  : [9]
 solution : [4]

Essensial at level 5 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [4, 9]


Before reduction : 
 pending  : []
 solution : [4, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [4, 9]


Solution : [4, 9] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [4, 9]

After backtrack at level 5
 pending : [9]
 solution : [4]


Before backtrack at level 4
 pending : [9]
 solution : [4]

After backtrack at level 4
 pending : [9, 4, 6, 10]
 solution : []


Before backtrack at level 3
 pending : [9, 4, 6, 10]
 solution : []

After backtrack at level 3
 pending : [9, 4, 6, 10, 5]
 solution : []


Before backtrack at level 2
 pending : [9, 4, 6, 10, 5]
 solution : []

After backtrack at level 2
 pending : [9, 4, 6, 10, 5, 8]
 solution : []


Before backtrack at level 1
 pending : [9, 4, 6, 10, 5, 8]
 solution : []

After backtrack at level 1
 pending : [9, 4, 6, 10, 5, 8, 7]
 solution : []


=========================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

=========================================================================================================================

[MIN NOTE]: number of minimal solution found: 6

[MIN NOTE]: upper bound: 8

[MIN NOTE]: maximum branch and bound depth: 5

[MIN NOTE]: number of definitions: 2

invariant [def_didNotPromise] forall A. didNotPromise(A) = (forall P. ~promise(A,P)) # definition, qcost: 4

invariant [def_chosenAt] forall P,Q. chosenAt(Q,P) = (forall A. member(A,Q) -> promise(A,P)) # definition, qcost: 6

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [8, 4]

[MIN NOTE]: solution length: 2

invariant [invar_8] forall PROPOSER0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) # qcost: 4

invariant [invar_4] forall ACCEPTOR0,PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 18




[MIN NOTE]: Solution 1 : [8, 5]

[MIN NOTE]: solution length: 2

invariant [invar_8] forall PROPOSER0,QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) # qcost: 4

invariant [invar_5] forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 18




[MIN NOTE]: Solution 2 : [5, 9]

[MIN NOTE]: solution length: 2

invariant [invar_5] forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4

invariant [invar_9] forall ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 18




[MIN NOTE]: Solution 3 : [5, 10]

[MIN NOTE]: solution length: 2

invariant [invar_5] forall ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4

invariant [invar_10] forall ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 18




[MIN NOTE]: Solution 4 : [4, 10]

[MIN NOTE]: solution length: 2

invariant [invar_4] forall ACCEPTOR0,PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0) # qcost: 4

invariant [invar_10] forall ACCEPTOR0,PROPOSER0. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 18




[MIN NOTE]: Solution 5 : [4, 9]

[MIN NOTE]: solution length: 2

invariant [invar_4] forall ACCEPTOR0,PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0) # qcost: 4

invariant [invar_9] forall ACCEPTOR0,PROPOSER0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 4

[MIN NOTE]: total qCost: 18




[QRM NOTE]: Time elapsed since start: 0.474 seconds

[QRM NOTE]: Time elapsed since last: 0.223 seconds

[QRM NOTE]: Peak memory: 1850162 bytes


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=========================================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: acceptor=3,proposer=1]

=========================================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 11

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 6

[QRM NOTE]: Time elapsed since start: 0.037 seconds

[QRM NOTE]: Time elapsed since last: 0.037 seconds

[QRM NOTE]: Peak memory: 47034 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 8


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: leader('proposer',)
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', 'start(proposer0)']

00001101001
00010100101
00011000011
0001110000-
001100-0111
010010-1011
100001-1101
111000-1111

[QRM NOTE]: Time elapsed since start: 0.387 seconds

[QRM NOTE]: Time elapsed since last: 0.350 seconds

[QRM NOTE]: Peak memory: 1190509 bytes


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: acceptor=3,proposer=1]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.498 seconds

[QRM NOTE]: Time elapsed since last: 0.110 seconds

[QRM NOTE]: Peak memory: 213718 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=========================================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: acceptor=2,proposer=2]

=========================================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 12

[FW NOTE]: number of interpreted atoms (e.g. member,le): 2

[FW NOTE]: symmetric group order: 4

[QRM NOTE]: Time elapsed since start: 0.043 seconds

[QRM NOTE]: Time elapsed since last: 0.043 seconds

[QRM NOTE]: Peak memory: 57764 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 9


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=2,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1']
predicate: promise('acceptor', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: leader('proposer',)
predicate: start('proposer',)
predicate: chosenAt('quorum', 'proposer')
predicate: member('acceptor', 'quorum')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'start(proposer0)', 'start(proposer1)']

000000011011
000000100111
0001000100-1
00010010001-
0010000001-1
00100000101-
0011000000--
01000-0101-1
1000-010101-

[QRM NOTE]: Time elapsed since start: 0.287 seconds

[QRM NOTE]: Time elapsed since last: 0.244 seconds

[QRM NOTE]: Peak memory: 1167876 bytes


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.0.ivy: acceptor=2,proposer=2]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.376 seconds

[QRM NOTE]: Time elapsed since last: 0.089 seconds

[QRM NOTE]: Peak memory: 157978 bytes

next size: acceptor=3,proposer=2


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: acceptor=3,proposer=1]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.135 seconds

[QRM NOTE]: Time elapsed since last: 0.135 seconds

[QRM NOTE]: Peak memory: 72376 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.1.ivy: acceptor=2,proposer=2]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.102 seconds

[QRM NOTE]: Time elapsed since last: 0.102 seconds

[QRM NOTE]: Peak memory: 58932 bytes

next size: acceptor=3,proposer=2


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: acceptor=3,proposer=1]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.132 seconds

[QRM NOTE]: Time elapsed since last: 0.132 seconds

[QRM NOTE]: Peak memory: 72384 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.2.ivy: acceptor=2,proposer=2]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.105 seconds

[QRM NOTE]: Time elapsed since last: 0.105 seconds

[QRM NOTE]: Peak memory: 60884 bytes

next size: acceptor=3,proposer=2


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: acceptor=3,proposer=1]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.130 seconds

[QRM NOTE]: Time elapsed since last: 0.130 seconds

[QRM NOTE]: Peak memory: 72472 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.3.ivy: acceptor=2,proposer=2]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.135 seconds

[QRM NOTE]: Time elapsed since last: 0.135 seconds

[QRM NOTE]: Peak memory: 60372 bytes

next size: acceptor=3,proposer=2


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: acceptor=3,proposer=1]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.121 seconds

[QRM NOTE]: Time elapsed since last: 0.121 seconds

[QRM NOTE]: Peak memory: 72384 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.4.ivy: acceptor=2,proposer=2]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.099 seconds

[QRM NOTE]: Time elapsed since last: 0.099 seconds

[QRM NOTE]: Peak memory: 60884 bytes

next size: acceptor=3,proposer=2


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=2,proposer=1]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: acceptor=3,proposer=1]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.132 seconds

[QRM NOTE]: Time elapsed since last: 0.132 seconds

[QRM NOTE]: Peak memory: 72296 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy -s acceptor=2,proposer=2 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_2_proposer_1.5.ivy: acceptor=2,proposer=2]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.114 seconds

[QRM NOTE]: Time elapsed since last: 0.114 seconds

[QRM NOTE]: Peak memory: 61396 bytes

next size: acceptor=3,proposer=2


***********************************************************************************************************

	[Synthesize Rmin]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

***********************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=3,proposer=2 -f 1 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

=================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 19

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 12

[QRM NOTE]: Time elapsed since start: 0.083 seconds

[QRM NOTE]: Time elapsed since last: 0.083 seconds

[QRM NOTE]: Peak memory: 91709 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 27


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
predicate: didNotPromise('acceptor',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'start(proposer0)', 'start(proposer1)']

0000000010001100011
0000000010010010011
0000000100001001011
0000000100010000111
00000001100010000-1
000000011001000001-
0000001000000011011
0000001000000100111
00000010100000100-1
000000101000010001-
00000011000000001-1
000000110000000101-
00000011100000000--
0000010000-10010111
0000011000-000101-1
000010000-001101011
000010100-00010101-
0001000000-01100111
0001000100-010001-1
001000000-010011011
001000010-01000101-
0100000000-01011011
0100000010-010100-1
0101010000-010101-1
100000000-010100111
100000001-01010001-
101010000-01010101-

[QRM NOTE]: Time elapsed since start: 0.747 seconds

[QRM NOTE]: Time elapsed since last: 0.665 seconds

[QRM NOTE]: Peak memory: 1306513 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.749 seconds

[QRM NOTE]: Time elapsed since last: 0.002 seconds

[QRM NOTE]: Peak memory: 260041 bytes


========================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

========================================================================================================================


===================================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

===================================================================================================================


=== Prime Orbit 0 =====================
size : 6
num_suborbits: 1
0 (*) : -----------1-----0-
0     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
1     : ------------1-----0
1     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
2     : -------------1---0-
2     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
3     : --------------1---0
3     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
4     : ---------------1-0-
4     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
5     : ----------------1-0
5     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
6 (*) : ---------1-------0-
6     : ['leader(proposer0)', '~start(proposer0)']
7     : ----------1-------0
7     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 1
num_suborbits: 1
8 (*) : ---------11--------
8     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
9 (*) : -------1-----1-----
9     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
10     : -------1------1----
10     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
11     : --------1------1---
11     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
12     : --------1-------1--
12     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
13     : ------1----1-------
13     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
14     : ------1-----1------
14     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
15 (*) : -----------11------
15     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
16     : -------------11----
16     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
17     : ---------------11--
17     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
18 (*) : ----1------------0-
18     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
19     : -----1------------0
19     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
20     : --1--------------0-
20     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
21     : ---1--------------0
21     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
22     : 1----------------0-
22     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
23     : -1----------------0
23     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 12
num_suborbits: 1
24 (*) : ----1---------1----
24     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
25     : -----1-------1-----
25     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
26     : ----1-----------1--
26     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
27     : -----1---------1---
27     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
28     : --1---------1------
28     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
29     : ---1-------1-------
29     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
30     : --1-------------1--
30     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
31     : ---1-----------1---
31     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
32     : 1-----------1------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
33     : -1---------1-------
33     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
34     : 1-------------1----
34     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
35     : -1-----------1-----
35     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 12
num_suborbits: 1
36 (*) : -1------------0----
36     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
37     : 1------------0-----
37     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
38     : ---1------------0--
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
39     : --1------------0---
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
40     : -1----------0------
40     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
41     : 1----------0-------
41     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
42     : -----1----------0--
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
43     : ----1----------0---
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
44     : ---1--------0------
44     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
45     : --1--------0-------
45     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
46     : -----1--------0----
46     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
47     : ----1--------0-----
47     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
48 (*) : -1--1--------------
48     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
49     : 1----1-------------
49     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
50     : ---11--------------
50     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
51     : --1--1-------------
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
52     : -11----------------
52     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
53     : 1--1---------------
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : -1-------1---------
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
55     : 1---------1--------
55     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
56     : ---1-----1---------
56     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
57     : --1-------1--------
57     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
58     : -----1---1---------
58     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
59     : ----1-----1--------
59     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
60 (*) : ----11-------------
60     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
61     : --11---------------
61     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
62     : 11-----------------
62     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 12
num_suborbits: 1
63 (*) : -----1-1-----------
63     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
64     : ----1--1-----------
64     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
65     : -----1--1----------
65     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
66     : ----1---1----------
66     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
67     : ---1--1------------
67     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
68     : --1---1------------
68     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
69     : ---1----1----------
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
70     : --1-----1----------
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
71     : -1----1------------
71     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
72     : 1-----1------------
72     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
73     : -1-----1-----------
73     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
74     : 1------1-----------
74     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
75 (*) : 1-0-1--------------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
76     : -1-0-1-------------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
77     : 0-1-1--------------
77     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
78     : -0-1-1-------------
78     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
79     : 1-1-0--------------
79     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
80     : -1-1-0-------------
80     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 12
num_suborbits: 1
81 (*) : --0-1------1-------
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
82     : ---0-1------1------
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
83     : 0---1------1-------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
84     : -0---1------1------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
85     : --1-0--------1-----
85     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
86     : ---1-0--------1----
86     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
87     : 0-1----------1-----
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
88     : -0-1----------1----
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
89     : 1---0----------1---
89     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
90     : -1---0----------1--
90     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
91     : 1-0------------1---
91     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
92     : -1-0------------1--
92     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 12
num_suborbits: 1
93 (*) : ------1--1---0-----
93     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
94     : ------1---1---0----
94     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
95     : ------1--1-----0---
95     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
96     : ------1---1-----0--
96     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
97     : -------1-1-0-------
97     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
98     : -------1--1-0------
98     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
99     : -------1-1-----0---
99     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
100     : -------1--1-----0--
100     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
101     : --------11-0-------
101     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
102     : --------1-1-0------
102     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
103     : --------11---0-----
103     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
104     : --------1-1---0----
104     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
105 (*) : ----0-1--1---------
105     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
106     : -----01---1--------
106     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
107     : --0----1-1---------
107     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
108     : ---0---1--1--------
108     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
109     : 0-------11---------
109     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
110     : -0------1-1--------
110     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
111 (*) : ------11-1---------
111     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
112     : ------11--1--------
112     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
113     : ------1-11---------
113     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
114     : ------1-1-1--------
114     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
115     : -------111---------
115     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
116     : -------11-1--------
116     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 12
num_suborbits: 1
117 (*) : ------1--1----1----
117     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
118     : ------1---1--1-----
118     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
119     : ------1--1------1--
119     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
120     : ------1---1----1---
120     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
121     : -------1-1--1------
121     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
122     : -------1--11-------
122     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
123     : -------1-1------1--
123     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
124     : -------1--1----1---
124     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
125     : --------11--1------
125     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
126     : --------1-11-------
126     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
127     : --------11----1----
127     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
128     : --------1-1--1-----
128     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
129 (*) : -0----------1-1----
129     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
130     : 0----------1-1-----
130     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
131     : ---0--------1---1--
131     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
132     : --0--------1---1---
132     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
133     : -----0--------1-1--
133     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
134     : ----0--------1-1---
134     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 3
num_suborbits: 1
135 (*) : ------0----00------
135     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
136     : -------0-----00----
136     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
137     : --------0------00--
137     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
138 (*) : -----0----1-0------
138     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
139     : ----0----1-0-------
139     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
140     : ---0------1---0----
140     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
141     : --0------1---0-----
141     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
142     : -0--------1-----0--
142     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
143     : 0--------1-----0---
143     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 12
num_suborbits: 1
144 (*) : ----------1-0--1---
144     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
145     : ---------1-0----1--
145     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
146     : ----------1-01-----
146     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
147     : ---------1-0--1----
147     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
148     : ----------1---01---
148     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
149     : ---------1---0--1--
149     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
150     : ----------11--0----
150     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
151     : ---------1--10-----
151     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
152     : ----------1--1--0--
152     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
153     : ---------1----10---
153     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
154     : ----------11----0--
154     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
155     : ---------1--1--0---
155     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
156 (*) : ----------1-0-0----
156     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
157     : ---------1-0-0-----
157     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
158     : ----------1-0---0--
158     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
159     : ---------1-0---0---
159     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
160     : ----------1---0-0--
160     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
161     : ---------1---0-0---
161     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
162 (*) : ------0-----0----0-
162     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
163     : ------0----0------0
163     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
164     : -------0------0--0-
164     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
165     : -------0-----0----0
165     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
166     : --------0-------00-
166     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
167     : --------0------0--0
167     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
168 (*) : ----------11-1-----
168     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
169     : ---------1--1-1----
169     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
170     : ----------11---1---
170     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
171     : ---------1--1---1--
171     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
172     : ----------1--1-1---
172     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
173     : ---------1----1-1--
173     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
174 (*) : ---0------1--1-----
174     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
175     : --0------1----1----
175     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
176     : -0--------1----1---
176     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
177     : 0--------1------1--
177     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
178     : -----0----11-------
178     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
179     : ----0----1--1------
179     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
180 (*) : -------0---------00
180     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
181     : --------0--------00
181     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
183 (*) : -0----00---------0-
183     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
184     : 0-----00----------0
184     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
185     : ---0--0-0--------0-
185     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
186     : --0---0-0---------0
186     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
187     : -----0-00--------0-
187     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
188     : ----0--00---------0
188     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
189 (*) : -0----0-------1--0-
189     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
190     : 0-----0------1----0
190     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
191     : ---0--0---------10-
191     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
192     : --0---0--------1--0
192     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
193     : -0-----0----1----0-
193     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
194     : 0------0---1------0
194     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
195     : -----0-0--------10-
195     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
196     : ----0--0-------1--0
196     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
197     : ---0----0---1----0-
197     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
198     : --0-----0--1------0
198     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
199     : -----0--0-----1--0-
199     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
200     : ----0---0----1----0
200     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 12
num_suborbits: 1
201 (*) : -1-0----0--------0-
201     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
202     : 1-0-----0---------0
202     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
203     : -0-1---0---------0-
203     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
204     : 0-1----0----------0
204     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
205     : -1---0--0--------0-
205     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
206     : 1---0---0---------0
206     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
207     : -0---10----------0-
207     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
208     : 0---1-0-----------0
208     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
209     : ---1-0-0---------0-
209     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
210     : --1-0--0----------0
210     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
211     : ---0-10----------0-
211     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
212     : --0-1-0-----------0
212     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 12
num_suborbits: 1
213 (*) : 0-----0-----01-----
213     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
214     : -0----0----0--1----
214     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
215     : --0---0-----0--1---
215     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
216     : ---0--0----0----1--
216     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
217     : 0------0---1--0----
217     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
218     : -0-----0----10-----
218     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
219     : ----0--0------01---
219     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
220     : -----0-0-----0--1--
220     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
221     : --0-----0--1----0--
221     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
222     : ---0----0---1--0---
222     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
223     : ----0---0----1--0--
223     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
224     : -----0--0-----10---
224     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
225 (*) : -0-0------1-1------
225     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
226     : 0-0------1-1-------
226     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
227     : -0---0----1---1----
227     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
228     : 0---0----1---1-----
228     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
229     : ---0-0----1-----1--
229     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
230     : --0-0----1-----1---
230     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 2
num_suborbits: 1
231 (*) : -0-0-0----1--------
231     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
232     : 0-0-0----1---------
232     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 12
num_suborbits: 1
233 (*) : ---0-10----0-------
233     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
234     : --0-1-0-----0------
234     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
235     : -0---10----0-------
235     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
236     : 0---1-0-----0------
236     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
237     : ---1-0-0-----0-----
237     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
238     : --1-0--0------0----
238     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
239     : -0-1---0-----0-----
239     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
240     : 0-1----0------0----
240     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
241     : -1---0--0------0---
241     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
242     : 1---0---0-------0--
242     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
243     : -1-0----0------0---
243     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
244     : 1-0-----0-------0--
244     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
245 (*) : ---0-0--0-1------0-
245     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
246     : --0-0---01--------0
246     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
247     : -0---0-0--1------0-
247     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
248     : 0---0--0-1--------0
248     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
249     : -0-0--0---1------0-
249     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
250     : 0-0---0--1--------0
250     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
251 (*) : --0--0--0--1--1----
251     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)']
252     : ---00---0---11-----
252     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)']
253     : 0----0-0---1----1--
253     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)']
254     : -0--0--0----1--1---
254     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)']
255     : 0--0--0------1--1--
255     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)']
256     : -00---0-------11---
256     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
257 (*) : -0-0--0---10-------
257     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
258     : 0-0---0--1--0------
258     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
259     : -0---0-0--1--0-----
259     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
260     : 0---0--0-1----0----
260     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
261     : ---0-0--0-1----0---
261     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
262     : --0-0---01------0--
262     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 6
num_suborbits: 1
263 (*) : -0----00---0-0-----
263     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
264     : 0-----00----0-0----
264     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
265     : ---0--0-0--0---0---
265     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
266     : --0---0-0---0---0--
266     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
267     : -----0-00----0-0---
267     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
268     : ----0--00-----0-0--
268     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
269 (*) : -00-0-00-------1---
269     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
270     : 0--0-000--------1--
270     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
271     : 0--00-0-0----1-----
271     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)']
272     : -00--00-0-----1----
272     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)']
273     : 0-0--0-00--1-------
273     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
274     : -0-00--00---1------
274     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 12
num_suborbits: 1
275 (*) : -0--0-00---0---1---
275     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)']
276     : 0----000----0---1--
276     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)']
277     : ---00-0-0--0-1-----
277     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)']
278     : --0--00-0---0-1----
278     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)']
279     : -00---00-----0-1---
279     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
280     : 0--0--00------0-1--
280     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
281     : --0--0-00--1-0-----
281     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)']
282     : ---00--00---1-0----
282     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)']
283     : 0--0--0-0----1-0---
283     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
284     : -00---0-0-----1-0--
284     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
285     : 0----0-00--1---0---
285     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
286     : -0--0--00---1---0--
286     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
287 (*) : -0-00-000--0-------
287     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)']
288     : 0-0--0000---0------
288     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)']
289     : -00--0000----0-----
289     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)']
290     : 0--00-000-----0----
290     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)']
291     : 0--0-0000------0---
291     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
292     : -00-0-000-------0--
292     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 6
num_suborbits: 1
293 (*) : ---00-000--0--0----
293     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
294     : --0--0000---00-----
294     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
295     : -0--0-000--0----0--
295     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
296     : 0----0000---0--0---
296     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
297     : -00---000----0--0--
297     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
298     : 0--0--000-----00---
298     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 1
num_suborbits: 1
299 (*) : 000000000----------
299     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 43

[PRIME NOTE]: number of orbits before merging: 43

[PRIME NOTE]: number of primes: 300

[QRM NOTE]: Time elapsed since start: 0.853 seconds

[QRM NOTE]: Time elapsed since last: 0.104 seconds

[QRM NOTE]: Peak memory: 1703934 bytes


=============================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

=============================================================================================================

definition primes: {33, 3, 35, 37, 38, 7, 39, 40, 41, 11, 12, 13, 42, 18, 19, 30}


New level: 0
 pending : [0, 1, 2, 4, 5, 6, 8, 9, 10, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 4, 5, 6, 8, 9, 10, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : []

Essensial at level 0 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, 67108864), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, 0), (9, 131072), (10, 0), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 0 : {8, 10, 6}

After reduction : 
 pending  : [0, 1, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4]


Before reduction : 
 pending  : [0, 1, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4]

Essensial at level 0 : set()

Before removed
 coverage : [(0, 4194304), (1, 67108864), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, 0), (7, -1), (8, 0), (9, 131072), (10, 0), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, 67108864), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [0, 1, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4]

[QRM NOTE]: Time elapsed since start: 0.930 seconds

[QRM NOTE]: Time elapsed since last: 0.076 seconds

[QRM NOTE]: Peak memory: 637259 bytes


=================================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

=================================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
15 (*) : -----------11------
15     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
16     : -------------11----
16     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
17     : ---------------11--
17     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0))


=== Prime Orbit 0 =====================
size : 6
num_suborbits: 1
0 (*) : -----------1-----0-
0     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
1     : ------------1-----0
1     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
2     : -------------1---0-
2     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
3     : --------------1---0
3     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
4     : ---------------1-0-
4     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
5     : ----------------1-0
5     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
6 (*) : ---------1-------0-
6     : ['leader(proposer0)', '~start(proposer0)']
7     : ----------1-------0
7     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 2 =====================
size : 1
num_suborbits: 1
8 (*) : ---------11--------
8     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: exists PROPOSER0. ~leader(PROPOSER0)


=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
18 (*) : ----1------------0-
18     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
19     : -----1------------0
19     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
20     : --1--------------0-
20     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
21     : ---1--------------0
21     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
22     : 1----------------0-
22     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
23     : -1----------------0
23     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : -1-------1---------
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
55     : 1---------1--------
55     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
56     : ---1-----1---------
56     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
57     : --1-------1--------
57     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
58     : -----1---1---------
58     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
59     : ----1-----1--------
59     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 14 =====================
size : 12
num_suborbits: 1
93 (*) : ------1--1---0-----
93     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
94     : ------1---1---0----
94     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
95     : ------1--1-----0---
95     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
96     : ------1---1-----0--
96     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
97     : -------1-1-0-------
97     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
98     : -------1--1-0------
98     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
99     : -------1-1-----0---
99     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
100     : -------1--1-----0--
100     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
101     : --------11-0-------
101     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
102     : --------1-1-0------
102     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
103     : --------11---0-----
103     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
104     : --------1-1---0----
104     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
105 (*) : ----0-1--1---------
105     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
106     : -----01---1--------
106     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
107     : --0----1-1---------
107     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
108     : ---0---1--1--------
108     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
109     : 0-------11---------
109     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
110     : -0------1-1--------
110     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0)


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
111 (*) : ------11-1---------
111     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
112     : ------11--1--------
112     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
113     : ------1-11---------
113     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
114     : ------1-1-1--------
114     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
115     : -------111---------
115     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
116     : -------11-1--------
116     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 17 =====================
size : 12
num_suborbits: 1
117 (*) : ------1--1----1----
117     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
118     : ------1---1--1-----
118     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
119     : ------1--1------1--
119     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
120     : ------1---1----1---
120     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
121     : -------1-1--1------
121     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
122     : -------1--11-------
122     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
123     : -------1-1------1--
123     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
124     : -------1--1----1---
124     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
125     : --------11--1------
125     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
126     : --------1-11-------
126     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
127     : --------11----1----
127     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
128     : --------1-1--1-----
128     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
138 (*) : -----0----1-0------
138     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
139     : ----0----1-0-------
139     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
140     : ---0------1---0----
140     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
141     : --0------1---0-----
141     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
142     : -0--------1-----0--
142     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
143     : 0--------1-----0---
143     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)


=== Prime Orbit 21 =====================
size : 12
num_suborbits: 1
144 (*) : ----------1-0--1---
144     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
145     : ---------1-0----1--
145     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
146     : ----------1-01-----
146     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
147     : ---------1-0--1----
147     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
148     : ----------1---01---
148     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
149     : ---------1---0--1--
149     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
150     : ----------11--0----
150     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
151     : ---------1--10-----
151     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
152     : ----------1--1--0--
152     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
153     : ---------1----10---
153     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
154     : ----------11----0--
154     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
155     : ---------1--1--0---
155     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
156 (*) : ----------1-0-0----
156     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
157     : ---------1-0-0-----
157     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
158     : ----------1-0---0--
158     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
159     : ---------1-0---0---
159     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
160     : ----------1---0-0--
160     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
161     : ---------1---0-0---
161     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
162 (*) : ------0-----0----0-
162     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
163     : ------0----0------0
163     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
164     : -------0------0--0-
164     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
165     : -------0-----0----0
165     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
166     : --------0-------00-
166     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
167     : --------0------0--0
167     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$promise$1$0, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$promise$1$0 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$promise$1$0, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$promise$1$0 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
168 (*) : ----------11-1-----
168     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
169     : ---------1--1-1----
169     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
170     : ----------11---1---
170     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
171     : ---------1--1---1--
171     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
172     : ----------1--1-1---
172     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
173     : ---------1----1-1--
173     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1; proposer$0$promise$1': [proposer$0$promise$1$0; proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1; proposer$0$promise$1': proposer$0$promise$1$0; proposer$0$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
174 (*) : ---0------1--1-----
174     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
175     : --0------1----1----
175     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
176     : -0--------1----1---
176     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
177     : 0--------1------1--
177     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
178     : -----0----11-------
178     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
179     : ----0----1--1------
179     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
180 (*) : -------0---------00
180     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
181     : --------0--------00
181     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
183 (*) : -0----00---------0-
183     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
184     : 0-----00----------0
184     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
185     : ---0--0-0--------0-
185     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
186     : --0---0-0---------0
186     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
187     : -----0-00--------0-
187     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
188     : ----0--00---------0
188     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
189 (*) : -0----0-------1--0-
189     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
190     : 0-----0------1----0
190     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
191     : ---0--0---------10-
191     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
192     : --0---0--------1--0
192     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
193     : -0-----0----1----0-
193     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
194     : 0------0---1------0
194     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
195     : -----0-0--------10-
195     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
196     : ----0--0-------1--0
196     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
197     : ---0----0---1----0-
197     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
198     : --0-----0--1------0
198     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
199     : -----0--0-----1--0-
199     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
200     : ----0---0----1----0
200     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 29 =====================
size : 12
num_suborbits: 1
201 (*) : -1-0----0--------0-
201     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
202     : 1-0-----0---------0
202     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
203     : -0-1---0---------0-
203     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
204     : 0-1----0----------0
204     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
205     : -1---0--0--------0-
205     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
206     : 1---0---0---------0
206     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
207     : -0---10----------0-
207     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
208     : 0---1-0-----------0
208     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
209     : ---1-0-0---------0-
209     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
210     : --1-0--0----------0
210     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
211     : ---0-10----------0-
211     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
212     : --0-1-0-----------0
212     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
225 (*) : -0-0------1-1------
225     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
226     : 0-0------1-1-------
226     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
227     : -0---0----1---1----
227     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
228     : 0---0----1---1-----
228     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
229     : ---0-0----1-----1--
229     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
230     : --0-0----1-----1---
230     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1. ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 32 =====================
size : 2
num_suborbits: 1
231 (*) : -0-0-0----1--------
231     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
232     : 0-0-0----1---------
232     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
245 (*) : ---0-0--0-1------0-
245     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
246     : --0-0---01--------0
246     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
247     : -0---0-0--1------0-
247     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
248     : 0---0--0-1--------0
248     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
249     : -0-0--0---1------0-
249     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
250     : 0-0---0--1--------0
250     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'leader(proposer1)', '~start(proposer0)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'leader(proposer1)', '~start(proposer0)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
257 (*) : -0-0--0---10-------
257     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
258     : 0-0---0--1--0------
258     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
259     : -0---0-0--1--0-----
259     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
260     : 0---0--0-1----0----
260     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
261     : ---0-0--0-1----0---
261     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
262     : --0-0---01------0--
262     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor0,proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor0,proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


===========================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

===========================================================================================================================


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
15 (*) : -----------11------
15     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
16     : -------------11----
16     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
17     : ---------------11--
17     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   1
num_exists :   1
num_literals : 1
quantified form : forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0))
qcost : 3




=== Prime Orbit 0 =====================
size : 6
num_suborbits: 1
0 (*) : -----------1-----0-
0     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
1     : ------------1-----0
1     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
2     : -------------1---0-
2     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
3     : --------------1---0
3     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
4     : ---------------1-0-
4     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
5     : ----------------1-0
5     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
6 (*) : ---------1-------0-
6     : ['leader(proposer0)', '~start(proposer0)']
7     : ----------1-------0
7     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 2 =====================
size : 1
num_suborbits: 1
8 (*) : ---------11--------
8     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists PROPOSER0. ~leader(PROPOSER0)
qcost : 2




=== Prime Orbit 5 =====================
size : 6
num_suborbits: 1
18 (*) : ----1------------0-
18     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
19     : -----1------------0
19     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
20     : --1--------------0-
20     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
21     : ---1--------------0
21     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
22     : 1----------------0-
22     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
23     : -1----------------0
23     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : -1-------1---------
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
55     : 1---------1--------
55     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
56     : ---1-----1---------
56     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
57     : --1-------1--------
57     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
58     : -----1---1---------
58     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
59     : ----1-----1--------
59     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,QUORUM0,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 14 =====================
size : 12
num_suborbits: 1
93 (*) : ------1--1---0-----
93     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
94     : ------1---1---0----
94     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
95     : ------1--1-----0---
95     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
96     : ------1---1-----0--
96     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
97     : -------1-1-0-------
97     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
98     : -------1--1-0------
98     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
99     : -------1-1-----0---
99     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
100     : -------1--1-----0--
100     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
101     : --------11-0-------
101     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
102     : --------1-1-0------
102     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
103     : --------11---0-----
103     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
104     : --------1-1---0----
104     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 15 =====================
size : 6
num_suborbits: 1
105 (*) : ----0-1--1---------
105     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
106     : -----01---1--------
106     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
107     : --0----1-1---------
107     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
108     : ---0---1--1--------
108     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
109     : 0-------11---------
109     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
110     : -0------1-1--------
110     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
111 (*) : ------11-1---------
111     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
112     : ------11--1--------
112     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
113     : ------1-11---------
113     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
114     : ------1-1-1--------
114     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
115     : -------111---------
115     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
116     : -------11-1--------
116     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 17 =====================
size : 12
num_suborbits: 1
117 (*) : ------1--1----1----
117     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
118     : ------1---1--1-----
118     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
119     : ------1--1------1--
119     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
120     : ------1---1----1---
120     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
121     : -------1-1--1------
121     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
122     : -------1--11-------
122     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
123     : -------1-1------1--
123     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
124     : -------1--1----1---
124     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
125     : --------11--1------
125     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
126     : --------1-11-------
126     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
127     : --------11----1----
127     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
128     : --------1-1--1-----
128     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
138 (*) : -----0----1-0------
138     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
139     : ----0----1-0-------
139     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
140     : ---0------1---0----
140     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
141     : --0------1---0-----
141     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
142     : -0--------1-----0--
142     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
143     : 0--------1-----0---
143     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 21 =====================
size : 12
num_suborbits: 1
144 (*) : ----------1-0--1---
144     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
145     : ---------1-0----1--
145     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
146     : ----------1-01-----
146     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
147     : ---------1-0--1----
147     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
148     : ----------1---01---
148     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
149     : ---------1---0--1--
149     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
150     : ----------11--0----
150     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
151     : ---------1--10-----
151     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
152     : ----------1--1--0--
152     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
153     : ---------1----10---
153     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
154     : ----------11----0--
154     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
155     : ---------1--1--0---
155     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
156 (*) : ----------1-0-0----
156     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
157     : ---------1-0-0-----
157     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
158     : ----------1-0---0--
158     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
159     : ---------1-0---0---
159     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
160     : ----------1---0-0--
160     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
161     : ---------1---0-0---
161     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 6
num_suborbits: 1
162 (*) : ------0-----0----0-
162     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
163     : ------0----0------0
163     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
164     : -------0------0--0-
164     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
165     : -------0-----0----0
165     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
166     : --------0-------00-
166     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
167     : --------0------0--0
167     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 7




=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
168 (*) : ----------11-1-----
168     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
169     : ---------1--1-1----
169     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
170     : ----------11---1---
170     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
171     : ---------1--1---1--
171     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
172     : ----------1--1-1---
172     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
173     : ---------1----1-1--
173     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
174 (*) : ---0------1--1-----
174     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
175     : --0------1----1----
175     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
176     : -0--------1----1---
176     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
177     : 0--------1------1--
177     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
178     : -----0----11-------
178     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
179     : ----0----1--1------
179     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0,PROPOSER1. chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
180 (*) : -------0---------00
180     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
181     : --------0--------00
181     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
183 (*) : -0----00---------0-
183     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
184     : 0-----00----------0
184     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
185     : ---0--0-0--------0-
185     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
186     : --0---0-0---------0
186     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
187     : -----0-00--------0-
187     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
188     : ----0--00---------0
188     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 13




=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
189 (*) : -0----0-------1--0-
189     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
190     : 0-----0------1----0
190     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
191     : ---0--0---------10-
191     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
192     : --0---0--------1--0
192     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
193     : -0-----0----1----0-
193     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
194     : 0------0---1------0
194     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
195     : -----0-0--------10-
195     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
196     : ----0--0-------1--0
196     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
197     : ---0----0---1----0-
197     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
198     : --0-----0--1------0
198     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
199     : -----0--0-----1--0-
199     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
200     : ----0---0----1----0
200     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 13




=== Prime Orbit 29 =====================
size : 12
num_suborbits: 1
201 (*) : -1-0----0--------0-
201     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
202     : 1-0-----0---------0
202     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
203     : -0-1---0---------0-
203     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
204     : 0-1----0----------0
204     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
205     : -1---0--0--------0-
205     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
206     : 1---0---0---------0
206     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
207     : -0---10----------0-
207     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
208     : 0---1-0-----------0
208     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
209     : ---1-0-0---------0-
209     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
210     : --1-0--0----------0
210     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
211     : ---0-10----------0-
211     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
212     : --0-1-0-----------0
212     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 13




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
225 (*) : -0-0------1-1------
225     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
226     : 0-0------1-1-------
226     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
227     : -0---0----1---1----
227     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
228     : 0---0----1---1-----
228     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
229     : ---0-0----1-----1--
229     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
230     : --0-0----1-----1---
230     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1. ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 32 =====================
size : 2
num_suborbits: 1
231 (*) : -0-0-0----1--------
231     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
232     : 0-0-0----1---------
232     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))
qcost : 4




=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
245 (*) : ---0-0--0-1------0-
245     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
246     : --0-0---01--------0
246     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
247     : -0---0-0--1------0-
247     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
248     : 0---0--0-1--------0
248     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
249     : -0-0--0---1------0-
249     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
250     : 0-0---0--1--------0
250     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   5
num_exists :   0
num_literals : 9
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | chosenAt(QUORUM1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 14




=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
257 (*) : -0-0--0---10-------
257     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
258     : 0-0---0--1--0------
258     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
259     : -0---0-0--1--0-----
259     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
260     : 0---0--0-1----0----
260     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
261     : ---0-0--0-1----0---
261     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
262     : --0-0---01------0--
262     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
num_forall :   5
num_exists :   0
num_literals : 9
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0,QUORUM1,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 14



[QRM NOTE]: Time elapsed since start: 1.127 seconds

[QRM NOTE]: Time elapsed since last: 0.198 seconds

[QRM NOTE]: Peak memory: 2432901 bytes


==========================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

==========================================================================================================


New level: 1
 pending : [0, 1, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4]


Before reduction : 
 pending  : [0, 1, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4]

Essensial at level 1 : set()

Before removed
 coverage : [(0, 4194304), (1, 67108864), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, 67108864), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [0, 1, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 1 among pending : [0, 1, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]

Coverage : [(0, 4194304), (1, 67108864), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [0, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1]


New level: 2
 pending : [0, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1]


Before reduction : 
 pending  : [0, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, 4194304), (1, 67108864), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [0, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1]


Solution : [4, 1] has cost 6.


Decide in level 2 among pending : [0, 2, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]

Coverage : [(0, 2097152), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2]


New level: 3
 pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2]


Before reduction : 
 pending  : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 16777216), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2]


Solution : [4, 1, 2] has cost 8.


Decide in level 3 among pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2, 26]


New level: 4
 pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2, 26]


Before reduction : 
 pending  : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2, 26]


Solution : [4, 1, 2, 26] has cost 12.


Decide in level 4 among pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 36]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2, 26, 27]


New level: 5
 pending : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [0, 5, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 34, 36]
 solution : [4, 1, 2, 26, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : {29, 28, 5}

After reduction : 
 pending  : [0, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 31, 32, 34, 36]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [0, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 31, 32, 34, 36]
 solution : [4, 1, 2, 26, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 31, 32, 34, 36]
 solution : [4, 1, 2, 26, 27]


Solution : [4, 1, 2, 26, 27] has cost 25.


Decide in level 5 among pending : [0, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 31, 32, 34, 36]

Coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [0, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 31, 34, 36]
 solution : [4, 1, 2, 26, 27, 32]


New level: 6
 pending : [0, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 31, 34, 36]
 solution : [4, 1, 2, 26, 27, 32]


Before reduction : 
 pending  : [0, 9, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 31, 34, 36]
 solution : [4, 1, 2, 26, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 512), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {34, 36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [0, 23]
 solution : [4, 1, 2, 26, 27, 32]


Before reduction : 
 pending  : [0, 23]
 solution : [4, 1, 2, 26, 27, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 512), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 23]
 solution : [4, 1, 2, 26, 27, 32]


Solution : [4, 1, 2, 26, 27, 32] has cost 29.


Decide in level 6 among pending : [0, 23]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [23]
 solution : [4, 1, 2, 26, 27, 32, 0]


New level: 7
 pending : [23]
 solution : [4, 1, 2, 26, 27, 32, 0]


Before reduction : 
 pending  : [23]
 solution : [4, 1, 2, 26, 27, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {23}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 32, 0]


Solution : [4, 1, 2, 26, 27, 32, 0] has cost 33.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 2, 26, 27, 32, 0]

After backtrack at level 7
 pending : [23]
 solution : [4, 1, 2, 26, 27, 32, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [23]
 solution : [4, 1, 2, 26, 27, 32]


Before reduction : 
 pending  : [23]
 solution : [4, 1, 2, 26, 27, 32]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 32, 23]


Solution : [4, 1, 2, 26, 27, 32, 23] has cost 36.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 2, 26, 27, 32, 23]

After backtrack at level 7
 pending : [23]
 solution : [4, 1, 2, 26, 27, 32]


Before backtrack at level 6
 pending : [23]
 solution : [4, 1, 2, 26, 27, 32]

After backtrack at level 6
 pending : [23, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [23, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27]


Solution : [4, 1, 2, 26, 27] has cost 25.


Decide in level 6 among pending : [23, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31, 34, 36, 0]

Coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 6

After decision at level 6
 pending : [23, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 20]


New level: 7
 pending : [23, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 20]


Before reduction : 
 pending  : [23, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 512), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 20]


Before reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 512), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 20]


Solution : [4, 1, 2, 26, 27, 20] has cost 32.


Decide in level 7 among pending : [23, 0]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [0]
 solution : [4, 1, 2, 26, 27, 20, 23]


New level: 8
 pending : [0]
 solution : [4, 1, 2, 26, 27, 20, 23]


Before reduction : 
 pending  : [0]
 solution : [4, 1, 2, 26, 27, 20, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {0}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 20, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 20, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 20, 23]


Solution : [4, 1, 2, 26, 27, 20, 23] has cost 39.


Before backtrack at level 8
 pending : []
 solution : [4, 1, 2, 26, 27, 20, 23]

After backtrack at level 8
 pending : [0]
 solution : [4, 1, 2, 26, 27, 20, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [0]
 solution : [4, 1, 2, 26, 27, 20]


Before reduction : 
 pending  : [0]
 solution : [4, 1, 2, 26, 27, 20]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 20, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 20, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 20, 0]


Solution : [4, 1, 2, 26, 27, 20, 0] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [4, 1, 2, 26, 27, 20, 0]

After backtrack at level 8
 pending : [0]
 solution : [4, 1, 2, 26, 27, 20]


Before backtrack at level 7
 pending : [0]
 solution : [4, 1, 2, 26, 27, 20]

After backtrack at level 7
 pending : [0, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 23]
 solution : [4, 1, 2, 26, 27, 20]


Invert decision for 20 at level 6


New level: 7
 pending : [0, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 23]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [0, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 23]
 solution : [4, 1, 2, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 23]
 solution : [4, 1, 2, 26, 27]


Solution : [4, 1, 2, 26, 27] has cost 25.


Decide in level 7 among pending : [0, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31, 34, 36, 23]

Coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [0, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 23]
 solution : [4, 1, 2, 26, 27, 22]


New level: 8
 pending : [0, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 23]
 solution : [4, 1, 2, 26, 27, 22]


Before reduction : 
 pending  : [0, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 23]
 solution : [4, 1, 2, 26, 27, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 1048576), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 512), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : [0, 23]
 solution : [4, 1, 2, 26, 27, 22]


Before reduction : 
 pending  : [0, 23]
 solution : [4, 1, 2, 26, 27, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 512), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 23]
 solution : [4, 1, 2, 26, 27, 22]


Solution : [4, 1, 2, 26, 27, 22] has cost 32.


Decide in level 8 among pending : [0, 23]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 8

After decision at level 8
 pending : [23]
 solution : [4, 1, 2, 26, 27, 22, 0]


New level: 9
 pending : [23]
 solution : [4, 1, 2, 26, 27, 22, 0]


Before reduction : 
 pending  : [23]
 solution : [4, 1, 2, 26, 27, 22, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {23}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 22, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 22, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 22, 0]


Solution : [4, 1, 2, 26, 27, 22, 0] has cost 36.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 2, 26, 27, 22, 0]

After backtrack at level 9
 pending : [23]
 solution : [4, 1, 2, 26, 27, 22, 0]


Invert decision for 0 at level 8


New level: 9
 pending : [23]
 solution : [4, 1, 2, 26, 27, 22]


Before reduction : 
 pending  : [23]
 solution : [4, 1, 2, 26, 27, 22]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 22, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 22, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 27, 22, 23]


Solution : [4, 1, 2, 26, 27, 22, 23] has cost 39.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 2, 26, 27, 22, 23]

After backtrack at level 9
 pending : [23]
 solution : [4, 1, 2, 26, 27, 22]


Before backtrack at level 8
 pending : [23]
 solution : [4, 1, 2, 26, 27, 22]

After backtrack at level 8
 pending : [23, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [23, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [23, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27]


Solution : [4, 1, 2, 26, 27] has cost 25.


Decide in level 8 among pending : [23, 9, 14, 15, 16, 17, 21, 24, 25, 31, 34, 36, 0]

Coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 8

After decision at level 8
 pending : [23, 9, 14, 15, 16, 17, 21, 24, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 25]


New level: 9
 pending : [23, 9, 14, 15, 16, 17, 21, 24, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 25]


Before reduction : 
 pending  : [23, 9, 14, 15, 16, 17, 21, 24, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 1024), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 512), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {24, 9, 21, 17}

After reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 25]


Before reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 512), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 25]


Solution : [4, 1, 2, 26, 27, 25] has cost 34.


Before backtrack at level 9
 pending : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 25]

After backtrack at level 9
 pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 21, 24]
 solution : [4, 1, 2, 26, 27, 25]


Invert decision for 25 at level 8


New level: 9
 pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 21, 24]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 21, 24]
 solution : [4, 1, 2, 26, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 21, 24]
 solution : [4, 1, 2, 26, 27]


Solution : [4, 1, 2, 26, 27] has cost 25.


Decide in level 9 among pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 21, 24]

Coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 9

After decision at level 9
 pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 21]


New level: 10
 pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 21]


Before reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 17}

After reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 21]


Before reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 21]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 21]


Solution : [4, 1, 2, 26, 27, 21] has cost 34.


Before backtrack at level 10
 pending : [23, 14, 15, 16, 31, 34, 36, 0]
 solution : [4, 1, 2, 26, 27, 21]

After backtrack at level 10
 pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 21]


Invert decision for 21 at level 9


New level: 10
 pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27]


Solution : [4, 1, 2, 26, 27] has cost 25.


Decide in level 10 among pending : [23, 14, 15, 16, 31, 34, 36, 0, 9, 17, 24]

Coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [23, 14, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 15]


New level: 11
 pending : [23, 14, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 15]


Before reduction : 
 pending  : [23, 14, 16, 31, 34, 36, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [23, 31, 36, 0, 9, 24]
 solution : [4, 1, 2, 26, 27, 15]


Before reduction : 
 pending  : [23, 31, 36, 0, 9, 24]
 solution : [4, 1, 2, 26, 27, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 31, 36, 0, 9, 24]
 solution : [4, 1, 2, 26, 27, 15]


Solution : [4, 1, 2, 26, 27, 15] has cost 32.


Decide in level 11 among pending : [23, 31, 36, 0, 9, 24]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [23, 31, 36, 0, 24]
 solution : [4, 1, 2, 26, 27, 15, 9]


New level: 12
 pending : [23, 31, 36, 0, 24]
 solution : [4, 1, 2, 26, 27, 15, 9]


Before reduction : 
 pending  : [23, 31, 36, 0, 24]
 solution : [4, 1, 2, 26, 27, 15, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 36, 31}

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 9]


Before reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 9]


Solution : [4, 1, 2, 26, 27, 15, 9] has cost 38.


Before backtrack at level 12
 pending : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 9]

After backtrack at level 12
 pending : [23, 0, 31, 36, 24]
 solution : [4, 1, 2, 26, 27, 15, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [23, 0, 31, 36, 24]
 solution : [4, 1, 2, 26, 27, 15]


Before reduction : 
 pending  : [23, 0, 31, 36, 24]
 solution : [4, 1, 2, 26, 27, 15]

Essensial at level 12 : {24}

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {36, 31}

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 24]


Before reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 24]


Solution : [4, 1, 2, 26, 27, 15, 24] has cost 41.


Before backtrack at level 12
 pending : [23, 0]
 solution : [4, 1, 2, 26, 27, 15, 24]

After backtrack at level 12
 pending : [23, 0, 24, 31, 36]
 solution : [4, 1, 2, 26, 27, 15]


Before backtrack at level 11
 pending : [23, 0, 24, 31, 36]
 solution : [4, 1, 2, 26, 27, 15]

After backtrack at level 11
 pending : [23, 0, 24, 31, 36, 14, 16, 34, 17, 9]
 solution : [4, 1, 2, 26, 27, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [23, 0, 24, 31, 36, 14, 16, 34, 17, 9]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [23, 0, 24, 31, 36, 14, 16, 34, 17, 9]
 solution : [4, 1, 2, 26, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 0, 24, 31, 36, 14, 16, 34, 17, 9]
 solution : [4, 1, 2, 26, 27]


Solution : [4, 1, 2, 26, 27] has cost 25.


Decide in level 11 among pending : [23, 0, 24, 31, 36, 14, 16, 34, 17, 9]

Coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [23, 0, 24, 31, 36, 16, 34, 17, 9]
 solution : [4, 1, 2, 26, 27, 14]


New level: 12
 pending : [23, 0, 24, 31, 36, 16, 34, 17, 9]
 solution : [4, 1, 2, 26, 27, 14]


Before reduction : 
 pending  : [23, 0, 24, 31, 36, 16, 34, 17, 9]
 solution : [4, 1, 2, 26, 27, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {16, 17, 34}

After reduction : 
 pending  : [23, 0, 24, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14]


Before reduction : 
 pending  : [23, 0, 24, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 0, 24, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14]


Solution : [4, 1, 2, 26, 27, 14] has cost 32.


Decide in level 12 among pending : [23, 0, 24, 31, 36, 9]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 24 with phase True at level 12

After decision at level 12
 pending : [23, 0, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14, 24]


New level: 13
 pending : [23, 0, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14, 24]


Before reduction : 
 pending  : [23, 0, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {9, 36, 31}

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 24]


Before reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 24]


Solution : [4, 1, 2, 26, 27, 14, 24] has cost 41.


Before backtrack at level 13
 pending : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 24]

After backtrack at level 13
 pending : [23, 0, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14, 24]


Invert decision for 24 at level 12


New level: 13
 pending : [23, 0, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14]


Before reduction : 
 pending  : [23, 0, 31, 36, 9]
 solution : [4, 1, 2, 26, 27, 14]

Essensial at level 13 : {9}

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {36, 31}

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 9]


Before reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 9]


Solution : [4, 1, 2, 26, 27, 14, 9] has cost 38.


Before backtrack at level 13
 pending : [23, 0]
 solution : [4, 1, 2, 26, 27, 14, 9]

After backtrack at level 13
 pending : [23, 0, 9, 31, 36]
 solution : [4, 1, 2, 26, 27, 14]


Before backtrack at level 12
 pending : [23, 0, 9, 31, 36]
 solution : [4, 1, 2, 26, 27, 14]

After backtrack at level 12
 pending : [23, 0, 9, 31, 36, 16, 34, 17, 24]
 solution : [4, 1, 2, 26, 27, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [23, 0, 9, 31, 36, 16, 34, 17, 24]
 solution : [4, 1, 2, 26, 27]


Before reduction : 
 pending  : [23, 0, 9, 31, 36, 16, 34, 17, 24]
 solution : [4, 1, 2, 26, 27]

Essensial at level 12 : {16}

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {34}

After reduction : 
 pending  : [23, 0, 9, 31, 36, 17, 24]
 solution : [4, 1, 2, 26, 27, 16]


Before reduction : 
 pending  : [23, 0, 9, 31, 36, 17, 24]
 solution : [4, 1, 2, 26, 27, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 0, 9, 31, 36, 17, 24]
 solution : [4, 1, 2, 26, 27, 16]


Solution : [4, 1, 2, 26, 27, 16] has cost 32.


Decide in level 12 among pending : [23, 0, 9, 31, 36, 17, 24]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 31 with phase True at level 12

After decision at level 12
 pending : [23, 0, 9, 36, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 31]


New level: 13
 pending : [23, 0, 9, 36, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 31]


Before reduction : 
 pending  : [23, 0, 9, 36, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 31]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 512), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 31]


Before reduction : 
 pending  : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 31]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 512), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 512), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 31]


Solution : [4, 1, 2, 26, 27, 16, 31] has cost 43.


Before backtrack at level 13
 pending : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 31]

After backtrack at level 13
 pending : [23, 0, 9, 17, 24, 36]
 solution : [4, 1, 2, 26, 27, 16, 31]


Invert decision for 31 at level 12


New level: 13
 pending : [23, 0, 9, 17, 24, 36]
 solution : [4, 1, 2, 26, 27, 16]


Before reduction : 
 pending  : [23, 0, 9, 17, 24, 36]
 solution : [4, 1, 2, 26, 27, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 512), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 0, 9, 17, 24, 36]
 solution : [4, 1, 2, 26, 27, 16]


Solution : [4, 1, 2, 26, 27, 16] has cost 32.


Decide in level 13 among pending : [23, 0, 9, 17, 24, 36]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 36 with phase True at level 13

After decision at level 13
 pending : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 36]


New level: 14
 pending : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 36]


Before reduction : 
 pending  : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 36]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 512), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 36]


Solution : [4, 1, 2, 26, 27, 16, 36] has cost 46.


Before backtrack at level 14
 pending : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 36]

After backtrack at level 14
 pending : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16, 36]


Invert decision for 36 at level 13


New level: 14
 pending : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16]


Before reduction : 
 pending  : [23, 0, 9, 17, 24]
 solution : [4, 1, 2, 26, 27, 16]

Essensial at level 14 : {17}

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 512), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 0, 9, 24]
 solution : [4, 1, 2, 26, 27, 16, 17]


Before reduction : 
 pending  : [23, 0, 9, 24]
 solution : [4, 1, 2, 26, 27, 16, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 0, 9, 24]
 solution : [4, 1, 2, 26, 27, 16, 17]


Solution : [4, 1, 2, 26, 27, 16, 17] has cost 41.


Before backtrack at level 14
 pending : [23, 0, 9, 24]
 solution : [4, 1, 2, 26, 27, 16, 17]

After backtrack at level 14
 pending : [23, 0, 9, 24, 17]
 solution : [4, 1, 2, 26, 27, 16]


Before backtrack at level 13
 pending : [23, 0, 9, 24, 17]
 solution : [4, 1, 2, 26, 27, 16]

After backtrack at level 13
 pending : [23, 0, 9, 24, 17, 36]
 solution : [4, 1, 2, 26, 27, 16]


Before backtrack at level 12
 pending : [23, 0, 9, 24, 17, 36]
 solution : [4, 1, 2, 26, 27, 16]

After backtrack at level 12
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31]
 solution : [4, 1, 2, 26, 27]


Before backtrack at level 11
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31]
 solution : [4, 1, 2, 26, 27]

After backtrack at level 11
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14]
 solution : [4, 1, 2, 26, 27]


Before backtrack at level 10
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14]
 solution : [4, 1, 2, 26, 27]

After backtrack at level 10
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15]
 solution : [4, 1, 2, 26, 27]


Before backtrack at level 9
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15]
 solution : [4, 1, 2, 26, 27]

After backtrack at level 9
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21]
 solution : [4, 1, 2, 26, 27]


Before backtrack at level 8
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21]
 solution : [4, 1, 2, 26, 27]

After backtrack at level 8
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 27]


Before backtrack at level 7
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 27]

After backtrack at level 7
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22]
 solution : [4, 1, 2, 26, 27]


Before backtrack at level 6
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22]
 solution : [4, 1, 2, 26, 27]

After backtrack at level 6
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20]
 solution : [4, 1, 2, 26, 27]


Before backtrack at level 5
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20]
 solution : [4, 1, 2, 26, 27]

After backtrack at level 5
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29, 32]
 solution : [4, 1, 2, 26, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29, 32]
 solution : [4, 1, 2, 26]


Before reduction : 
 pending  : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29, 32]
 solution : [4, 1, 2, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29, 32]
 solution : [4, 1, 2, 26]


Solution : [4, 1, 2, 26] has cost 12.


Decide in level 5 among pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29, 32]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]


New level: 6
 pending : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]


Before reduction : 
 pending  : [23, 0, 9, 24, 17, 36, 16, 34, 31, 14, 15, 21, 25, 22, 20, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]


Before reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]


Solution : [4, 1, 2, 26, 32] has cost 16.


Decide in level 6 among pending : [23, 0, 34, 5, 28, 29]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32, 23]


New level: 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32, 23]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {0, 34, 5, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 32, 23]


Solution : [4, 1, 2, 26, 32, 23] has cost 23.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 2, 26, 32, 23]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 32, 0]


Solution : [4, 1, 2, 26, 32, 0] has cost 20.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 2, 26, 32, 0]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 2, 26, 32]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [0, 34, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26]


Solution : [4, 1, 2, 26] has cost 12.


Decide in level 6 among pending : [0, 34, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26, 34]


New level: 7
 pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26, 34]


Before reduction : 
 pending  : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, 524288), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 16384), (29, 512), (30, -1), (31, 16384), (32, -1), (33, -1), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26, 34]


Solution : [4, 1, 2, 26, 34] has cost 26.


Before backtrack at level 7
 pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26, 34]

After backtrack at level 7
 pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26]


Before reduction : 
 pending  : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, 524288), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 16384), (29, 512), (30, -1), (31, 16384), (32, -1), (33, -1), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]
 solution : [4, 1, 2, 26]


Solution : [4, 1, 2, 26] has cost 12.


Decide in level 7 among pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 20, 23]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 7

After decision at level 7
 pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 23]
 solution : [4, 1, 2, 26, 20]


New level: 8
 pending : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 23]
 solution : [4, 1, 2, 26, 20]


Before reduction : 
 pending  : [0, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 23]
 solution : [4, 1, 2, 26, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [0, 5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20]


Before reduction : 
 pending  : [0, 5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20]


Solution : [4, 1, 2, 26, 20] has cost 19.


Decide in level 8 among pending : [0, 5, 28, 29, 23]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 8

After decision at level 8
 pending : [5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20, 0]


New level: 9
 pending : [5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20, 0]


Before reduction : 
 pending  : [5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {29, 28, 5, 23}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 20, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 20, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 20, 0]


Solution : [4, 1, 2, 26, 20, 0] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 2, 26, 20, 0]

After backtrack at level 9
 pending : [5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20, 0]


Invert decision for 0 at level 8


New level: 9
 pending : [5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20]


Before reduction : 
 pending  : [5, 28, 29, 23]
 solution : [4, 1, 2, 26, 20]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 20, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 20, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 20, 23]


Solution : [4, 1, 2, 26, 20, 23] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 2, 26, 20, 23]

After backtrack at level 9
 pending : [23, 5, 28, 29]
 solution : [4, 1, 2, 26, 20]


Before backtrack at level 8
 pending : [23, 5, 28, 29]
 solution : [4, 1, 2, 26, 20]

After backtrack at level 8
 pending : [23, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]
 solution : [4, 1, 2, 26, 20]


Invert decision for 20 at level 7


New level: 8
 pending : [23, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]
 solution : [4, 1, 2, 26]


Before reduction : 
 pending  : [23, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]
 solution : [4, 1, 2, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]
 solution : [4, 1, 2, 26]


Solution : [4, 1, 2, 26] has cost 12.


Decide in level 8 among pending : [23, 5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]
 solution : [4, 1, 2, 26, 23]


New level: 9
 pending : [5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]
 solution : [4, 1, 2, 26, 23]


Before reduction : 
 pending  : [5, 28, 29, 9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22, 0]
 solution : [4, 1, 2, 26, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 1048576), (23, 1048576), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {0, 29, 28, 5}

After reduction : 
 pending  : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22]
 solution : [4, 1, 2, 26, 23]


Before reduction : 
 pending  : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22]
 solution : [4, 1, 2, 26, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22]
 solution : [4, 1, 2, 26, 23]


Solution : [4, 1, 2, 26, 23] has cost 19.


Decide in level 9 among pending : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 23, 22]


New level: 10
 pending : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 23, 22]


Before reduction : 
 pending  : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 23, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 23, 22]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 23, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 23, 22]


Solution : [4, 1, 2, 26, 23, 22] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [4, 1, 2, 26, 23, 22]

After backtrack at level 10
 pending : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 23, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 23]


Before reduction : 
 pending  : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]
 solution : [4, 1, 2, 26, 23]


Solution : [4, 1, 2, 26, 23] has cost 19.


Decide in level 10 among pending : [9, 24, 17, 36, 16, 31, 14, 15, 21, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [9, 24, 17, 36, 16, 31, 14, 15, 21]
 solution : [4, 1, 2, 26, 23, 25]


New level: 11
 pending : [9, 24, 17, 36, 16, 31, 14, 15, 21]
 solution : [4, 1, 2, 26, 23, 25]


Before reduction : 
 pending  : [9, 24, 17, 36, 16, 31, 14, 15, 21]
 solution : [4, 1, 2, 26, 23, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 16, 31, 14, 15]
 solution : [4, 1, 2, 26, 23, 25]


Before reduction : 
 pending  : [36, 16, 31, 14, 15]
 solution : [4, 1, 2, 26, 23, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 16, 31, 14, 15]
 solution : [4, 1, 2, 26, 23, 25]


Solution : [4, 1, 2, 26, 23, 25] has cost 28.


Before backtrack at level 11
 pending : [36, 16, 31, 14, 15]
 solution : [4, 1, 2, 26, 23, 25]

After backtrack at level 11
 pending : [36, 16, 31, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 23, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [36, 16, 31, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 23]


Before reduction : 
 pending  : [36, 16, 31, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 16, 31, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 23]


Solution : [4, 1, 2, 26, 23] has cost 19.


Decide in level 11 among pending : [36, 16, 31, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [36, 16, 31, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 23, 15]


New level: 12
 pending : [36, 16, 31, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 23, 15]


Before reduction : 
 pending  : [36, 16, 31, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 23, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {16, 17, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 23, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 23, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 23, 15]


Solution : [4, 1, 2, 26, 23, 15] has cost 26.


Before backtrack at level 12
 pending : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 23, 15]

After backtrack at level 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 23, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 23]


Solution : [4, 1, 2, 26, 23] has cost 19.


Decide in level 12 among pending : [36, 31, 9, 24, 21, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 2, 26, 23, 21]


New level: 13
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 2, 26, 23, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 2, 26, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 23, 21]


Before reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 23, 21]


Solution : [4, 1, 2, 26, 23, 21] has cost 28.


Before backtrack at level 13
 pending : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 23, 21]

After backtrack at level 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 23]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 23]


Solution : [4, 1, 2, 26, 23] has cost 19.


Decide in level 13 among pending : [36, 31, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 14]


New level: 14
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 14]


Before reduction : 
 pending  : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : {16, 17}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 23, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 23, 14]


Solution : [4, 1, 2, 26, 23, 14] has cost 26.


Before backtrack at level 14
 pending : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 23, 14]

After backtrack at level 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 2, 26, 23, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 2, 26, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 2, 26, 23]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 16]


Solution : [4, 1, 2, 26, 23, 16] has cost 26.


Before backtrack at level 14
 pending : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 23, 16]

After backtrack at level 14
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 1, 2, 26, 23]


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 1, 2, 26, 23]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 1, 2, 26, 23]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 1, 2, 26, 23]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 1, 2, 26, 23]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 1, 2, 26, 23]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 26, 23]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 26, 23]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 23]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 23]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29, 0, 22]
 solution : [4, 1, 2, 26, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29, 0, 22]
 solution : [4, 1, 2, 26]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29, 0, 22]
 solution : [4, 1, 2, 26]

Essensial at level 9 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 26, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 26, 0]


Solution : [4, 1, 2, 26, 0] has cost 16.


Decide in level 9 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0, 22]


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0, 22]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 0, 22]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 0, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 26, 0, 22]


Solution : [4, 1, 2, 26, 0, 22] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [4, 1, 2, 26, 0, 22]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0]


Solution : [4, 1, 2, 26, 0] has cost 16.


Decide in level 10 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 26, 0, 25]


New level: 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 26, 0, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 26, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 1, 2, 26, 0, 25]


Before reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 1, 2, 26, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 1, 2, 26, 0, 25]


Solution : [4, 1, 2, 26, 0, 25] has cost 25.


Before backtrack at level 11
 pending : [36, 31, 16, 14, 15]
 solution : [4, 1, 2, 26, 0, 25]

After backtrack at level 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 0, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 0]


Solution : [4, 1, 2, 26, 0] has cost 16.


Decide in level 11 among pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 0, 15]


New level: 12
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 0, 15]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 26, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {16, 17, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 0, 15]


Solution : [4, 1, 2, 26, 0, 15] has cost 23.


Before backtrack at level 12
 pending : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 26, 0, 15]

After backtrack at level 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 0, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 2, 26, 0]


Solution : [4, 1, 2, 26, 0] has cost 16.


Decide in level 12 among pending : [36, 31, 9, 24, 21, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 2, 26, 0, 21]


New level: 13
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 2, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 2, 26, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 0, 21]


Solution : [4, 1, 2, 26, 0, 21] has cost 25.


Before backtrack at level 13
 pending : [36, 31, 16, 14]
 solution : [4, 1, 2, 26, 0, 21]

After backtrack at level 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 26, 0]


Solution : [4, 1, 2, 26, 0] has cost 16.


Decide in level 13 among pending : [36, 31, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 14]


New level: 14
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : {16, 17}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 0, 14]


Solution : [4, 1, 2, 26, 0, 14] has cost 23.


Before backtrack at level 14
 pending : [36, 31, 9, 24]
 solution : [4, 1, 2, 26, 0, 14]

After backtrack at level 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 2, 26, 0, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 2, 26, 0]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 16]


Solution : [4, 1, 2, 26, 0, 16] has cost 23.


Before backtrack at level 14
 pending : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 26, 0, 16]

After backtrack at level 14
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 1, 2, 26, 0]


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 1, 2, 26, 0]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 1, 2, 26, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 1, 2, 26, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 1, 2, 26, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 1, 2, 26, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 26, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 26, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 26, 0]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22]
 solution : [4, 1, 2, 26]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22]
 solution : [4, 1, 2, 26]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23]
 solution : [4, 1, 2, 26]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23]
 solution : [4, 1, 2, 26]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20]
 solution : [4, 1, 2, 26]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20]
 solution : [4, 1, 2, 26]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34]
 solution : [4, 1, 2, 26]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34]
 solution : [4, 1, 2, 26]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 26]


Before backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 26]

After backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27]
 solution : [4, 1, 2, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27]
 solution : [4, 1, 2]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27]
 solution : [4, 1, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27]
 solution : [4, 1, 2]


Solution : [4, 1, 2] has cost 8.


Decide in level 4 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 27]


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2048), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2048), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2048), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 27]


Solution : [4, 1, 2, 27] has cost 21.


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32]
 solution : [4, 1, 2, 27]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32, 5, 28, 29]
 solution : [4, 1, 2, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32, 5, 28, 29]
 solution : [4, 1, 2]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32, 5, 28, 29]
 solution : [4, 1, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2048), (24, 16384), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2048), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32, 5, 28, 29]
 solution : [4, 1, 2]


Solution : [4, 1, 2] has cost 8.


Decide in level 5 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 32, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]


New level: 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 22, 23, 20, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, 4194304), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [0, 23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]


Before reduction : 
 pending  : [0, 23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]


Solution : [4, 1, 2, 32] has cost 12.


Decide in level 6 among pending : [0, 23, 34, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32, 0]


New level: 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32, 0]


Before reduction : 
 pending  : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 5, 23, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 32, 0]


Solution : [4, 1, 2, 32, 0] has cost 16.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 2, 32, 0]

After backtrack at level 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]


Before reduction : 
 pending  : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 32, 23]


Solution : [4, 1, 2, 32, 23] has cost 19.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 2, 32, 23]

After backtrack at level 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]


Before backtrack at level 6
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 2, 32]

After backtrack at level 6
 pending : [23, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]
 solution : [4, 1, 2, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [23, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]
 solution : [4, 1, 2]


Before reduction : 
 pending  : [23, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]
 solution : [4, 1, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]
 solution : [4, 1, 2]


Solution : [4, 1, 2] has cost 8.


Decide in level 6 among pending : [23, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]
 solution : [4, 1, 2, 23]


New level: 7
 pending : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 0]
 solution : [4, 1, 2, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 16384), (18, -1), (19, -1), (20, 2097152), (21, 262144), (22, 1048576), (23, 2097152), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {0, 29, 28, 5}

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]
 solution : [4, 1, 2, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]
 solution : [4, 1, 2, 23]


Solution : [4, 1, 2, 23] has cost 15.


Decide in level 7 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 7

After decision at level 7
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23, 20]


New level: 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23, 20]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {34, 36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 23, 20]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 23, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 23, 20]


Solution : [4, 1, 2, 23, 20] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [4, 1, 2, 23, 20]

After backtrack at level 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23, 20]


Invert decision for 20 at level 7


New level: 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23]


Solution : [4, 1, 2, 23] has cost 15.


Decide in level 8 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 23, 22]


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 23, 22]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 23, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 23, 22]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 23, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 23, 22]


Solution : [4, 1, 2, 23, 22] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 2, 23, 22]

After backtrack at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 23, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 2, 23]


Solution : [4, 1, 2, 23] has cost 15.


Decide in level 9 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 23, 25]


New level: 10
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 23, 25]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 2, 23, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 21, 17}

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 2, 23, 25]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 2, 23, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 2, 23, 25]


Solution : [4, 1, 2, 23, 25] has cost 24.


Before backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 2, 23, 25]

After backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 23, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 23]


Solution : [4, 1, 2, 23] has cost 15.


Decide in level 10 among pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 23, 15]


New level: 11
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 23, 15]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 23, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 23, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 23, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 23, 15]


Solution : [4, 1, 2, 23, 15] has cost 22.


Before backtrack at level 11
 pending : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 23, 15]

After backtrack at level 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 2, 23, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 2, 23]


Solution : [4, 1, 2, 23] has cost 15.


Decide in level 11 among pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 1, 2, 23, 21]


New level: 12
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 1, 2, 23, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 1, 2, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 1, 2, 23, 21]


Before reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 1, 2, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 1, 2, 23, 21]


Solution : [4, 1, 2, 23, 21] has cost 24.


Before backtrack at level 12
 pending : [36, 31, 34, 16, 14]
 solution : [4, 1, 2, 23, 21]

After backtrack at level 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 23, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 2, 23]


Solution : [4, 1, 2, 23] has cost 15.


Decide in level 12 among pending : [36, 31, 34, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 1, 2, 23, 14]


New level: 13
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 1, 2, 23, 14]


Before reduction : 
 pending  : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 1, 2, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {16, 17, 34}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 23, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 23, 14]


Solution : [4, 1, 2, 23, 14] has cost 22.


Before backtrack at level 13
 pending : [36, 31, 9, 24]
 solution : [4, 1, 2, 23, 14]

After backtrack at level 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 1, 2, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 1, 2, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 1, 2, 23]

Essensial at level 13 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 23, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 23, 16]


Solution : [4, 1, 2, 23, 16] has cost 22.


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 23, 16]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 2, 23]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 2, 23]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 2, 23]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 2, 23]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 2, 23]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 2, 23]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 2, 23]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 2, 23]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 23]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 23]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 23]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 5, 28, 29, 0, 20]
 solution : [4, 1, 2, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 5, 28, 29, 0, 20]
 solution : [4, 1, 2]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 5, 28, 29, 0, 20]
 solution : [4, 1, 2]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]
 solution : [4, 1, 2, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]
 solution : [4, 1, 2, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]
 solution : [4, 1, 2, 0]


Solution : [4, 1, 2, 0] has cost 12.


Decide in level 7 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 7

After decision at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0, 20]


New level: 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0, 20]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, 2097152), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {34, 36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 0, 20]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 0, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 0, 20]


Solution : [4, 1, 2, 0, 20] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [4, 1, 2, 0, 20]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0, 20]


Invert decision for 20 at level 7


New level: 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0]


Solution : [4, 1, 2, 0] has cost 12.


Decide in level 8 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0, 22]


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0, 22]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, 1048576), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 2, 0, 22]


Before reduction : 
 pending  : []
 solution : [4, 1, 2, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 2, 0, 22]


Solution : [4, 1, 2, 0, 22] has cost 19.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 2, 0, 22]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0]


Solution : [4, 1, 2, 0] has cost 12.


Decide in level 9 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 2, 0, 25]


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 2, 0, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 2, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, 262144), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 2, 0, 25]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 2, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 2, 0, 25]


Solution : [4, 1, 2, 0, 25] has cost 21.


Before backtrack at level 10
 pending : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 2, 0, 25]

After backtrack at level 10
 pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 0, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 0]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 16384), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 2, 0]


Solution : [4, 1, 2, 0] has cost 12.


Decide in level 10 among pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 0, 15]


New level: 11
 pending : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 0, 15]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 1, 2, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 131072), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 0, 15]


Solution : [4, 1, 2, 0, 15] has cost 19.


Before backtrack at level 11
 pending : [36, 31, 9, 24, 21]
 solution : [4, 1, 2, 0, 15]

After backtrack at level 11
 pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 2, 0, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 2, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 2, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 2, 0]


Solution : [4, 1, 2, 0] has cost 12.


Decide in level 11 among pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 1, 2, 0, 21]


New level: 12
 pending : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 1, 2, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 1, 2, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 1, 2, 0, 21]


Before reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 1, 2, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 1, 2, 0, 21]


Solution : [4, 1, 2, 0, 21] has cost 21.


Before backtrack at level 12
 pending : [36, 31, 16, 34, 14]
 solution : [4, 1, 2, 0, 21]

After backtrack at level 12
 pending : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 2, 0, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 2, 0]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 2, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 2, 0]


Solution : [4, 1, 2, 0] has cost 12.


Decide in level 12 among pending : [36, 31, 16, 34, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 1, 2, 0, 14]


New level: 13
 pending : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 1, 2, 0, 14]


Before reduction : 
 pending  : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 1, 2, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, 8192), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {16, 17, 34}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 2, 0, 14]


Solution : [4, 1, 2, 0, 14] has cost 19.


Before backtrack at level 13
 pending : [36, 31, 9, 24]
 solution : [4, 1, 2, 0, 14]

After backtrack at level 13
 pending : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 1, 2, 0, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 1, 2, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 1, 2, 0]

Essensial at level 13 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 8192), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8192), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 0, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 0, 16]


Solution : [4, 1, 2, 0, 16] has cost 19.


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17]
 solution : [4, 1, 2, 0, 16]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 2, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 2, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 2, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 2, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 2, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 2, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 2, 0]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 2, 0]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 2, 0]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 2, 0]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20]
 solution : [4, 1, 2]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20]
 solution : [4, 1, 2]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23]
 solution : [4, 1, 2]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23]
 solution : [4, 1, 2]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32]
 solution : [4, 1, 2]


Before backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32]
 solution : [4, 1, 2]

After backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32, 27]
 solution : [4, 1, 2]


Before backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32, 27]
 solution : [4, 1, 2]

After backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32, 27, 26]
 solution : [4, 1, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32, 27, 26]
 solution : [4, 1]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32, 27, 26]
 solution : [4, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4096), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32, 27, 26]
 solution : [4, 1]


Solution : [4, 1] has cost 6.


Decide in level 3 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 32, 27, 26]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 3

After decision at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 27, 26]
 solution : [4, 1, 32]


New level: 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 27, 26]
 solution : [4, 1, 32]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 0, 5, 28, 29, 20, 23, 27, 26]
 solution : [4, 1, 32]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : {36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [34, 0, 5, 28, 29, 23, 27, 26]
 solution : [4, 1, 32]


Before reduction : 
 pending  : [34, 0, 5, 28, 29, 23, 27, 26]
 solution : [4, 1, 32]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [34, 0, 5, 28, 29, 23, 27, 26]
 solution : [4, 1, 32]


Solution : [4, 1, 32] has cost 10.


Decide in level 4 among pending : [34, 0, 5, 28, 29, 23, 27, 26]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [34, 0, 5, 28, 29, 23, 26]
 solution : [4, 1, 32, 27]


New level: 5
 pending : [34, 0, 5, 28, 29, 23, 26]
 solution : [4, 1, 32, 27]


Before reduction : 
 pending  : [34, 0, 5, 28, 29, 23, 26]
 solution : [4, 1, 32, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : {34, 29, 28, 5}

After reduction : 
 pending  : [0, 23, 26]
 solution : [4, 1, 32, 27]


Before reduction : 
 pending  : [0, 23, 26]
 solution : [4, 1, 32, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 23, 26]
 solution : [4, 1, 32, 27]


Solution : [4, 1, 32, 27] has cost 23.


Before backtrack at level 5
 pending : [0, 23, 26]
 solution : [4, 1, 32, 27]

After backtrack at level 5
 pending : [0, 23, 26, 34, 5, 28, 29]
 solution : [4, 1, 32, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [0, 23, 26, 34, 5, 28, 29]
 solution : [4, 1, 32]


Before reduction : 
 pending  : [0, 23, 26, 34, 5, 28, 29]
 solution : [4, 1, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1024), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 23, 26, 34, 5, 28, 29]
 solution : [4, 1, 32]


Solution : [4, 1, 32] has cost 10.


Decide in level 5 among pending : [0, 23, 26, 34, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [0, 23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]


New level: 6
 pending : [0, 23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]


Before reduction : 
 pending  : [0, 23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]


Solution : [4, 1, 32, 26] has cost 14.


Decide in level 6 among pending : [0, 23, 34, 5, 28, 29]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26, 0]


New level: 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26, 0]


Before reduction : 
 pending  : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 5, 23, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 1, 32, 26, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 32, 26, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 32, 26, 0]


Solution : [4, 1, 32, 26, 0] has cost 18.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 32, 26, 0]

After backtrack at level 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]


Before reduction : 
 pending  : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 1, 32, 26, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 32, 26, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 32, 26, 23]


Solution : [4, 1, 32, 26, 23] has cost 21.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 32, 26, 23]

After backtrack at level 7
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]


Before backtrack at level 6
 pending : [23, 34, 5, 28, 29]
 solution : [4, 1, 32, 26]

After backtrack at level 6
 pending : [23, 34, 5, 28, 29, 0]
 solution : [4, 1, 32, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [23, 34, 5, 28, 29, 0]
 solution : [4, 1, 32]


Before reduction : 
 pending  : [23, 34, 5, 28, 29, 0]
 solution : [4, 1, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 34, 5, 28, 29, 0]
 solution : [4, 1, 32]


Solution : [4, 1, 32] has cost 10.


Decide in level 6 among pending : [23, 34, 5, 28, 29, 0]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [34, 5, 28, 29, 0]
 solution : [4, 1, 32, 23]


New level: 7
 pending : [34, 5, 28, 29, 0]
 solution : [4, 1, 32, 23]


Before reduction : 
 pending  : [34, 5, 28, 29, 0]
 solution : [4, 1, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {0, 34, 5, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 1, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 32, 23]


Solution : [4, 1, 32, 23] has cost 17.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 32, 23]

After backtrack at level 7
 pending : [34, 5, 28, 29, 0]
 solution : [4, 1, 32, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [34, 5, 28, 29, 0]
 solution : [4, 1, 32]


Before reduction : 
 pending  : [34, 5, 28, 29, 0]
 solution : [4, 1, 32]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 1, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 32, 0]


Solution : [4, 1, 32, 0] has cost 14.


Before backtrack at level 7
 pending : []
 solution : [4, 1, 32, 0]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 32]


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 32]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 23]
 solution : [4, 1, 32]


Before backtrack at level 5
 pending : [0, 34, 5, 28, 29, 23]
 solution : [4, 1, 32]

After backtrack at level 5
 pending : [0, 34, 5, 28, 29, 23, 26]
 solution : [4, 1, 32]


Before backtrack at level 4
 pending : [0, 34, 5, 28, 29, 23, 26]
 solution : [4, 1, 32]

After backtrack at level 4
 pending : [0, 34, 5, 28, 29, 23, 26, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1, 32]


Invert decision for 32 at level 3


New level: 4
 pending : [0, 34, 5, 28, 29, 23, 26, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 26, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 26, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1]


Solution : [4, 1] has cost 6.


Decide in level 4 among pending : [0, 34, 5, 28, 29, 23, 26, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 26 with phase True at level 4

After decision at level 4
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1, 26]


New level: 5
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1, 26]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, 8388608), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 1, 26]


Solution : [4, 1, 26] has cost 10.


Decide in level 5 among pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 5

After decision at level 5
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 27]
 solution : [4, 1, 26, 20]


New level: 6
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 27]
 solution : [4, 1, 26, 20]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 27]
 solution : [4, 1, 26, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 1, 26, 20]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 1, 26, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 1, 26, 20]


Solution : [4, 1, 26, 20] has cost 17.


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 1, 26, 20]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 20]


Invert decision for 20 at level 5


New level: 6
 pending : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26]


Solution : [4, 1, 26] has cost 10.


Decide in level 6 among pending : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 27]


New level: 7
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 27]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, 4194304), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1024), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {29, 28, 5}

After reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 27]


Before reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1024), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1024), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 27]


Solution : [4, 1, 26, 27] has cost 23.


Before backtrack at level 7
 pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 26, 27]

After backtrack at level 7
 pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26]


Before reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1024), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26]


Solution : [4, 1, 26] has cost 10.


Decide in level 7 among pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 34 with phase True at level 7

After decision at level 7
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26, 34]


New level: 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26, 34]


Before reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, 524288), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 16384), (29, 512), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26, 34]


Solution : [4, 1, 26, 34] has cost 24.


Before backtrack at level 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26, 34]

After backtrack at level 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26, 34]


Invert decision for 34 at level 7


New level: 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26]


Before reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, 524288), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 16384), (29, 512), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 1, 26]


Solution : [4, 1, 26] has cost 10.


Decide in level 8 among pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29]
 solution : [4, 1, 26, 22]


New level: 9
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29]
 solution : [4, 1, 26, 22]


Before reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29]
 solution : [4, 1, 26, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : [0, 23, 5, 28, 29]
 solution : [4, 1, 26, 22]


Before reduction : 
 pending  : [0, 23, 5, 28, 29]
 solution : [4, 1, 26, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 1048576), (24, 0), (25, 0), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 23, 5, 28, 29]
 solution : [4, 1, 26, 22]


Solution : [4, 1, 26, 22] has cost 17.


Before backtrack at level 9
 pending : [0, 23, 5, 28, 29]
 solution : [4, 1, 26, 22]

After backtrack at level 9
 pending : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26]


Before reduction : 
 pending  : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16384), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 1048576), (24, -1), (25, -1), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26]


Solution : [4, 1, 26] has cost 10.


Decide in level 9 among pending : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 9

After decision at level 9
 pending : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 0]


New level: 10
 pending : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 0]


Before reduction : 
 pending  : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {29, 28, 5, 23}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 0]


Solution : [4, 1, 26, 0] has cost 14.


Decide in level 10 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 26, 0, 25]


New level: 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 26, 0, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 26, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 1, 26, 0, 25]


Before reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 1, 26, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 1, 26, 0, 25]


Solution : [4, 1, 26, 0, 25] has cost 23.


Before backtrack at level 11
 pending : [36, 31, 16, 14, 15]
 solution : [4, 1, 26, 0, 25]

After backtrack at level 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 26, 0, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 26, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 26, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 26, 0]


Solution : [4, 1, 26, 0] has cost 14.


Decide in level 11 among pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 26, 0, 15]


New level: 12
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 26, 0, 15]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 26, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {16, 17, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 26, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 26, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 26, 0, 15]


Solution : [4, 1, 26, 0, 15] has cost 21.


Before backtrack at level 12
 pending : [36, 31, 9, 24, 21]
 solution : [4, 1, 26, 0, 15]

After backtrack at level 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 26, 0, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 26, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 1, 26, 0]


Solution : [4, 1, 26, 0] has cost 14.


Decide in level 12 among pending : [36, 31, 9, 24, 21, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 26, 0, 21]


New level: 13
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 1, 26, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 26, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 1, 26, 0, 21]


Solution : [4, 1, 26, 0, 21] has cost 23.


Before backtrack at level 13
 pending : [36, 31, 16, 14]
 solution : [4, 1, 26, 0, 21]

After backtrack at level 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 26, 0, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 26, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 26, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 1, 26, 0]


Solution : [4, 1, 26, 0] has cost 14.


Decide in level 13 among pending : [36, 31, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 26, 0, 14]


New level: 14
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 16, 9, 24, 17]
 solution : [4, 1, 26, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : {16, 17}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 26, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 26, 0, 14]


Solution : [4, 1, 26, 0, 14] has cost 21.


Before backtrack at level 14
 pending : [36, 31, 9, 24]
 solution : [4, 1, 26, 0, 14]

After backtrack at level 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 26, 0, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 17]
 solution : [4, 1, 26, 0]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 26, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 26, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 26, 0, 16]


Solution : [4, 1, 26, 0, 16] has cost 21.


Before backtrack at level 14
 pending : [36, 31, 9, 24, 17]
 solution : [4, 1, 26, 0, 16]

After backtrack at level 14
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 1, 26, 0]


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 1, 26, 0]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 1, 26, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 1, 26, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 1, 26, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 1, 26, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 26, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 26, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 23, 5, 28, 29, 25]
 solution : [4, 1, 26, 0]


Invert decision for 0 at level 9


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 23, 5, 28, 29, 25]
 solution : [4, 1, 26]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 23, 5, 28, 29, 25]
 solution : [4, 1, 26]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 23]


Solution : [4, 1, 26, 23] has cost 17.


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 26, 23]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29]
 solution : [4, 1, 26]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29]
 solution : [4, 1, 26]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0]
 solution : [4, 1, 26]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0]
 solution : [4, 1, 26]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22]
 solution : [4, 1, 26]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22]
 solution : [4, 1, 26]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34]
 solution : [4, 1, 26]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34]
 solution : [4, 1, 26]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27]
 solution : [4, 1, 26]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27]
 solution : [4, 1, 26]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20]
 solution : [4, 1, 26]


Invert decision for 26 at level 4


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20]
 solution : [4, 1]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20]
 solution : [4, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20]
 solution : [4, 1]


Solution : [4, 1] has cost 6.


Decide in level 5 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 20]
 solution : [4, 1, 27]


New level: 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 20]
 solution : [4, 1, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 20]
 solution : [4, 1, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20]
 solution : [4, 1, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20]
 solution : [4, 1, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20]
 solution : [4, 1, 27]


Solution : [4, 1, 27] has cost 19.


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20]
 solution : [4, 1, 27]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]
 solution : [4, 1, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]
 solution : [4, 1]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]
 solution : [4, 1]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]
 solution : [4, 1]


Solution : [4, 1] has cost 6.


Decide in level 6 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 6

After decision at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 5, 28, 29]
 solution : [4, 1, 20]


New level: 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 5, 28, 29]
 solution : [4, 1, 20]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 5, 28, 29]
 solution : [4, 1, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 1, 20]


Before reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 1, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 1, 20]


Solution : [4, 1, 20] has cost 13.


Decide in level 7 among pending : [23, 0, 34, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 20, 23]


New level: 8
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 20, 23]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 1, 20, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {0, 34, 5, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 1, 20, 23]


Before reduction : 
 pending  : []
 solution : [4, 1, 20, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 20, 23]


Solution : [4, 1, 20, 23] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [4, 1, 20, 23]

After backtrack at level 8
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 20, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 20]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 1, 20]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 1, 20, 0]


Before reduction : 
 pending  : []
 solution : [4, 1, 20, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 20, 0]


Solution : [4, 1, 20, 0] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [4, 1, 20, 0]

After backtrack at level 8
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 20]


Before backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 1, 20]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 1, 20]


Invert decision for 20 at level 6


New level: 7
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 1]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 1]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 1]


Solution : [4, 1] has cost 6.


Decide in level 7 among pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 1, 0]


New level: 8
 pending : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 1, 0]


Before reduction : 
 pending  : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 1, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {29, 28, 5, 23}

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 0]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 1, 0]


Solution : [4, 1, 0] has cost 10.


Decide in level 8 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 0, 22]


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 0, 22]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 0, 22]


Before reduction : 
 pending  : []
 solution : [4, 1, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 0, 22]


Solution : [4, 1, 0, 22] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 0, 22]

After backtrack at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 0, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 0]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 1, 0]


Solution : [4, 1, 0] has cost 10.


Decide in level 9 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 0, 25]


New level: 10
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 0, 25]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 1, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 21, 17}

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 0, 25]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 0, 25]


Solution : [4, 1, 0, 25] has cost 19.


Before backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15]
 solution : [4, 1, 0, 25]

After backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 0, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 0]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 0]


Solution : [4, 1, 0] has cost 10.


Decide in level 10 among pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 0, 15]


New level: 11
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 0, 15]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 1, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 0, 15]


Solution : [4, 1, 0, 15] has cost 17.


Before backtrack at level 11
 pending : [36, 31, 9, 24, 21]
 solution : [4, 1, 0, 15]

After backtrack at level 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 0, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 1, 0]


Solution : [4, 1, 0] has cost 10.


Decide in level 11 among pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 1, 0, 21]


New level: 12
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 1, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 1, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 1, 0, 21]


Before reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 1, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 1, 0, 21]


Solution : [4, 1, 0, 21] has cost 19.


Before backtrack at level 12
 pending : [36, 31, 34, 16, 14]
 solution : [4, 1, 0, 21]

After backtrack at level 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 0, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 0]


Before reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 1, 0]


Solution : [4, 1, 0] has cost 10.


Decide in level 12 among pending : [36, 31, 34, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 1, 0, 14]


New level: 13
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 1, 0, 14]


Before reduction : 
 pending  : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 1, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {16, 17, 34}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 0, 14]


Solution : [4, 1, 0, 14] has cost 17.


Before backtrack at level 13
 pending : [36, 31, 9, 24]
 solution : [4, 1, 0, 14]

After backtrack at level 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 1, 0, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 1, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 1, 0]

Essensial at level 13 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 0), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 0, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 0), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 0, 16]


Solution : [4, 1, 0, 16] has cost 17.


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17]
 solution : [4, 1, 0, 16]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 0]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 0]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 0]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 0]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 5, 28, 29, 23, 22]
 solution : [4, 1, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 5, 28, 29, 23, 22]
 solution : [4, 1]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 5, 28, 29, 23, 22]
 solution : [4, 1]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 1, 23]


Solution : [4, 1, 23] has cost 13.


Decide in level 8 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23, 22]


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23, 22]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 1, 23, 22]


Before reduction : 
 pending  : []
 solution : [4, 1, 23, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 1, 23, 22]


Solution : [4, 1, 23, 22] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [4, 1, 23, 22]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23]


Solution : [4, 1, 23] has cost 13.


Decide in level 9 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 23, 25]


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 23, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 23, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 23, 25]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 23, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 23, 25]


Solution : [4, 1, 23, 25] has cost 22.


Before backtrack at level 10
 pending : [36, 31, 16, 34, 14, 15]
 solution : [4, 1, 23, 25]

After backtrack at level 10
 pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 23, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 23]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 1, 23]


Solution : [4, 1, 23] has cost 13.


Decide in level 10 among pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 1, 23, 15]


New level: 11
 pending : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 1, 23, 15]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 1, 23, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 23, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 23, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 1, 23, 15]


Solution : [4, 1, 23, 15] has cost 20.


Before backtrack at level 11
 pending : [36, 31, 9, 24, 21]
 solution : [4, 1, 23, 15]

After backtrack at level 11
 pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 23, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 1, 23]


Solution : [4, 1, 23] has cost 13.


Decide in level 11 among pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 1, 23, 21]


New level: 12
 pending : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 1, 23, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 1, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 1, 23, 21]


Before reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 1, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 1, 23, 21]


Solution : [4, 1, 23, 21] has cost 22.


Before backtrack at level 12
 pending : [36, 31, 16, 34, 14]
 solution : [4, 1, 23, 21]

After backtrack at level 12
 pending : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 23, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 23]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 1, 23]


Solution : [4, 1, 23] has cost 13.


Decide in level 12 among pending : [36, 31, 16, 34, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 1, 23, 14]


New level: 13
 pending : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 1, 23, 14]


Before reduction : 
 pending  : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 1, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 512), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {16, 17, 34}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 23, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 0), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 1, 23, 14]


Solution : [4, 1, 23, 14] has cost 20.


Before backtrack at level 13
 pending : [36, 31, 9, 24]
 solution : [4, 1, 23, 14]

After backtrack at level 13
 pending : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 1, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 1, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 1, 23]

Essensial at level 13 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 0), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 23, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 0), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 1, 23, 16]


Solution : [4, 1, 23, 16] has cost 20.


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17]
 solution : [4, 1, 23, 16]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 23]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 1, 23]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 23]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 1, 23]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 23]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 1, 23]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 23]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 1, 23]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 1, 23]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22]
 solution : [4, 1]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22]
 solution : [4, 1]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0]
 solution : [4, 1]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0]
 solution : [4, 1]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20]
 solution : [4, 1]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20]
 solution : [4, 1]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27]
 solution : [4, 1]


Before backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27]
 solution : [4, 1]

After backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26]
 solution : [4, 1]


Before backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26]
 solution : [4, 1]

After backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32]
 solution : [4, 1]


Before backtrack at level 2
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32]
 solution : [4, 1]

After backtrack at level 2
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32, 2]
 solution : [4, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32, 2]
 solution : [4]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32, 2]
 solution : [4]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32, 2]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 2 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32, 2]

Coverage : [(0, 4194304), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32]
 solution : [4, 2]


New level: 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32]
 solution : [4, 2]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32]
 solution : [4, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 67108864), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32]
 solution : [4, 2]


Solution : [4, 2] has cost 5.


Decide in level 3 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 26, 32]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 32]
 solution : [4, 2, 26]


New level: 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 32]
 solution : [4, 2, 26]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 32]
 solution : [4, 2, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 32]
 solution : [4, 2, 26]


Solution : [4, 2, 26] has cost 9.


Decide in level 4 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 27, 32]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 32]
 solution : [4, 2, 26, 27]


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 32]
 solution : [4, 2, 26, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 5, 28, 29, 22, 0, 20, 32]
 solution : [4, 2, 26, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32]
 solution : [4, 2, 26, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32]
 solution : [4, 2, 26, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32]
 solution : [4, 2, 26, 27]


Solution : [4, 2, 26, 27] has cost 22.


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32]
 solution : [4, 2, 26, 27]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32, 5, 28, 29]
 solution : [4, 2, 26, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32, 5, 28, 29]
 solution : [4, 2, 26]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32, 5, 28, 29]
 solution : [4, 2, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2048), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2048), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32, 5, 28, 29]
 solution : [4, 2, 26]


Solution : [4, 2, 26] has cost 9.


Decide in level 5 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 32, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 5, 28, 29]
 solution : [4, 2, 26, 32]


New level: 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 5, 28, 29]
 solution : [4, 2, 26, 32]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 23, 22, 0, 20, 5, 28, 29]
 solution : [4, 2, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [34, 23, 0, 5, 28, 29]
 solution : [4, 2, 26, 32]


Before reduction : 
 pending  : [34, 23, 0, 5, 28, 29]
 solution : [4, 2, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [34, 23, 0, 5, 28, 29]
 solution : [4, 2, 26, 32]


Solution : [4, 2, 26, 32] has cost 13.


Decide in level 6 among pending : [34, 23, 0, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 26, 32, 23]


New level: 7
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 26, 32, 23]


Before reduction : 
 pending  : [34, 0, 5, 28, 29]
 solution : [4, 2, 26, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {0, 34, 5, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 2, 26, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 2, 26, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 26, 32, 23]


Solution : [4, 2, 26, 32, 23] has cost 20.


Before backtrack at level 7
 pending : []
 solution : [4, 2, 26, 32, 23]

After backtrack at level 7
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 26, 32, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 26, 32]


Before reduction : 
 pending  : [34, 0, 5, 28, 29]
 solution : [4, 2, 26, 32]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 2, 26, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 2, 26, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 26, 32, 0]


Solution : [4, 2, 26, 32, 0] has cost 17.


Before backtrack at level 7
 pending : []
 solution : [4, 2, 26, 32, 0]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 2, 26, 32]


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 2, 26, 32]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 26, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 26]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 26]


Solution : [4, 2, 26] has cost 9.


Decide in level 6 among pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 6

After decision at level 6
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 2, 26, 20]


New level: 7
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 2, 26, 20]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 2, 26, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23]
 solution : [4, 2, 26, 20]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23]
 solution : [4, 2, 26, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23]
 solution : [4, 2, 26, 20]


Solution : [4, 2, 26, 20] has cost 16.


Before backtrack at level 7
 pending : [0, 34, 5, 28, 29, 23]
 solution : [4, 2, 26, 20]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 20]


Invert decision for 20 at level 6


New level: 7
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26]


Solution : [4, 2, 26] has cost 9.


Decide in level 7 among pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 0]


New level: 8
 pending : [34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 0]


Before reduction : 
 pending  : [34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 2097152), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 2097152), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {29, 28, 5, 23}

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 0]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 0]


Solution : [4, 2, 26, 0] has cost 13.


Decide in level 8 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 26, 0, 22]


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 26, 0, 22]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 26, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 2, 26, 0, 22]


Before reduction : 
 pending  : []
 solution : [4, 2, 26, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 26, 0, 22]


Solution : [4, 2, 26, 0, 22] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [4, 2, 26, 0, 22]

After backtrack at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 26, 0, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 26, 0]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 26, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 26, 0]


Solution : [4, 2, 26, 0] has cost 13.


Decide in level 9 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 2, 26, 0, 25]


New level: 10
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 2, 26, 0, 25]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 2, 26, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 21, 17}

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 26, 0, 25]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 26, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 26, 0, 25]


Solution : [4, 2, 26, 0, 25] has cost 22.


Before backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 26, 0, 25]

After backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 26, 0, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 26, 0]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 26, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 26, 0]


Solution : [4, 2, 26, 0] has cost 13.


Decide in level 10 among pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 2, 26, 0, 15]


New level: 11
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 2, 26, 0, 15]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 2, 26, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 26, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 26, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 26, 0, 15]


Solution : [4, 2, 26, 0, 15] has cost 20.


Before backtrack at level 11
 pending : [36, 31, 9, 24, 21]
 solution : [4, 2, 26, 0, 15]

After backtrack at level 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 26, 0, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 26, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 26, 0]


Solution : [4, 2, 26, 0] has cost 13.


Decide in level 11 among pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 2, 26, 0, 21]


New level: 12
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 2, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 2, 26, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 2, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 2, 26, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 2, 26, 0, 21]


Solution : [4, 2, 26, 0, 21] has cost 22.


Before backtrack at level 12
 pending : [36, 31, 34, 16, 14]
 solution : [4, 2, 26, 0, 21]

After backtrack at level 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 26, 0, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 26, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 26, 0]


Solution : [4, 2, 26, 0] has cost 13.


Decide in level 12 among pending : [36, 31, 34, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 2, 26, 0, 14]


New level: 13
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 2, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 2, 26, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {16, 17, 34}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 26, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 26, 0, 14]


Solution : [4, 2, 26, 0, 14] has cost 20.


Before backtrack at level 13
 pending : [36, 31, 9, 24]
 solution : [4, 2, 26, 0, 14]

After backtrack at level 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 2, 26, 0, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 2, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 2, 26, 0]

Essensial at level 13 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 26, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 26, 0, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 26, 0, 16]


Solution : [4, 2, 26, 0, 16] has cost 20.


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17]
 solution : [4, 2, 26, 0, 16]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 2, 26, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 2, 26, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 2, 26, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 2, 26, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 2, 26, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 2, 26, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 26, 0]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 26, 0]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 26, 0]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 26, 0]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 5, 28, 29, 23, 22]
 solution : [4, 2, 26, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 5, 28, 29, 23, 22]
 solution : [4, 2, 26]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 5, 28, 29, 23, 22]
 solution : [4, 2, 26]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 23]


Solution : [4, 2, 26, 23] has cost 16.


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 26, 23]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29]
 solution : [4, 2, 26]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29]
 solution : [4, 2, 26]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0]
 solution : [4, 2, 26]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0]
 solution : [4, 2, 26]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20]
 solution : [4, 2, 26]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20]
 solution : [4, 2, 26]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32]
 solution : [4, 2, 26]


Before backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32]
 solution : [4, 2, 26]

After backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32, 27]
 solution : [4, 2, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32, 27]
 solution : [4, 2]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32, 27]
 solution : [4, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32, 27]
 solution : [4, 2]


Solution : [4, 2] has cost 5.


Decide in level 4 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32, 27]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32]
 solution : [4, 2, 27]


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32]
 solution : [4, 2, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 0, 20, 32]
 solution : [4, 2, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4096), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4096), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32]
 solution : [4, 2, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32]
 solution : [4, 2, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4096), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4096), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4096), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4096), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32]
 solution : [4, 2, 27]


Solution : [4, 2, 27] has cost 18.


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32]
 solution : [4, 2, 27]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32, 5, 28, 29]
 solution : [4, 2, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32, 5, 28, 29]
 solution : [4, 2]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32, 5, 28, 29]
 solution : [4, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4096), (24, 32768), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4096), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32, 5, 28, 29]
 solution : [4, 2]


Solution : [4, 2] has cost 5.


Decide in level 5 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 32, 5, 28, 29]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 5, 28, 29]
 solution : [4, 2, 32]


New level: 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 5, 28, 29]
 solution : [4, 2, 32]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 0, 20, 5, 28, 29]
 solution : [4, 2, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, 8388608), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 4194304), (24, 0), (25, 0), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 1024), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [34, 23, 0, 5, 28, 29]
 solution : [4, 2, 32]


Before reduction : 
 pending  : [34, 23, 0, 5, 28, 29]
 solution : [4, 2, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 4194304), (24, 0), (25, 0), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 1024), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [34, 23, 0, 5, 28, 29]
 solution : [4, 2, 32]


Solution : [4, 2, 32] has cost 9.


Decide in level 6 among pending : [34, 23, 0, 5, 28, 29]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 32, 23]


New level: 7
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 32, 23]


Before reduction : 
 pending  : [34, 0, 5, 28, 29]
 solution : [4, 2, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {0, 34, 5, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 2, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 2, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 32, 23]


Solution : [4, 2, 32, 23] has cost 16.


Before backtrack at level 7
 pending : []
 solution : [4, 2, 32, 23]

After backtrack at level 7
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 32, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [34, 0, 5, 28, 29]
 solution : [4, 2, 32]


Before reduction : 
 pending  : [34, 0, 5, 28, 29]
 solution : [4, 2, 32]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 2, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 2, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 32, 0]


Solution : [4, 2, 32, 0] has cost 13.


Before backtrack at level 7
 pending : []
 solution : [4, 2, 32, 0]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 2, 32]


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 2, 32]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2]


Solution : [4, 2] has cost 5.


Decide in level 6 among pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 0]


New level: 7
 pending : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 2, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 32768), (18, -1), (19, -1), (20, 4194304), (21, 524288), (22, 2097152), (23, 4194304), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 65536), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {29, 28, 5, 23}

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]
 solution : [4, 2, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, 0), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]
 solution : [4, 2, 0]


Solution : [4, 2, 0] has cost 9.


Decide in level 7 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 7

After decision at level 7
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 0, 20]


New level: 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 0, 20]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 0, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {34, 36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 2, 0, 20]


Before reduction : 
 pending  : []
 solution : [4, 2, 0, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 0, 20]


Solution : [4, 2, 0, 20] has cost 16.


Before backtrack at level 8
 pending : []
 solution : [4, 2, 0, 20]

After backtrack at level 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 0, 20]


Invert decision for 20 at level 7


New level: 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 2, 0]


Solution : [4, 2, 0] has cost 9.


Decide in level 8 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 0, 22]


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 0, 22]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 2, 0, 22]


Before reduction : 
 pending  : []
 solution : [4, 2, 0, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 0, 22]


Solution : [4, 2, 0, 22] has cost 16.


Before backtrack at level 9
 pending : []
 solution : [4, 2, 0, 22]

After backtrack at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 0, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 2, 0]


Solution : [4, 2, 0] has cost 9.


Decide in level 9 among pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 2, 0, 25]


New level: 10
 pending : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 2, 0, 25]


Before reduction : 
 pending  : [34, 36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 2, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 21, 17}

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 0, 25]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 0, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 0, 25]


Solution : [4, 2, 0, 25] has cost 18.


Before backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15]
 solution : [4, 2, 0, 25]

After backtrack at level 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 0, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 0]


Solution : [4, 2, 0] has cost 9.


Decide in level 10 among pending : [34, 36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 2, 0, 15]


New level: 11
 pending : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 2, 0, 15]


Before reduction : 
 pending  : [34, 36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 2, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 0, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 0, 15]


Solution : [4, 2, 0, 15] has cost 16.


Before backtrack at level 11
 pending : [36, 31, 9, 24, 21]
 solution : [4, 2, 0, 15]

After backtrack at level 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 0, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 34, 16, 14, 17]
 solution : [4, 2, 0]


Solution : [4, 2, 0] has cost 9.


Decide in level 11 among pending : [36, 31, 9, 24, 21, 34, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 2, 0, 21]


New level: 12
 pending : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 2, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 14, 17]
 solution : [4, 2, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 2, 0, 21]


Before reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 2, 0, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14]
 solution : [4, 2, 0, 21]


Solution : [4, 2, 0, 21] has cost 18.


Before backtrack at level 12
 pending : [36, 31, 34, 16, 14]
 solution : [4, 2, 0, 21]

After backtrack at level 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 0, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 34, 16, 14, 9, 24, 17]
 solution : [4, 2, 0]


Solution : [4, 2, 0] has cost 9.


Decide in level 12 among pending : [36, 31, 34, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 2, 0, 14]


New level: 13
 pending : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 2, 0, 14]


Before reduction : 
 pending  : [36, 31, 34, 16, 9, 24, 17]
 solution : [4, 2, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {16, 17, 34}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 0, 14]


Solution : [4, 2, 0, 14] has cost 16.


Before backtrack at level 13
 pending : [36, 31, 9, 24]
 solution : [4, 2, 0, 14]

After backtrack at level 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 2, 0, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 2, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 34, 16, 17]
 solution : [4, 2, 0]

Essensial at level 13 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 0, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 0, 16]


Solution : [4, 2, 0, 16] has cost 16.


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17]
 solution : [4, 2, 0, 16]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 2, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 2, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 2, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 2, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 2, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 2, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 0]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 0]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 0]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 0]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 0]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 0]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 5, 28, 29, 23, 20]
 solution : [4, 2, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 5, 28, 29, 23, 20]
 solution : [4, 2]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 5, 28, 29, 23, 20]
 solution : [4, 2]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]
 solution : [4, 2, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]
 solution : [4, 2, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]
 solution : [4, 2, 23]


Solution : [4, 2, 23] has cost 12.


Decide in level 7 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 7

After decision at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23, 20]


New level: 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23, 20]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, 4194304), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {34, 36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 2, 23, 20]


Before reduction : 
 pending  : []
 solution : [4, 2, 23, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 23, 20]


Solution : [4, 2, 23, 20] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [4, 2, 23, 20]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23, 20]


Invert decision for 20 at level 7


New level: 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23]


Solution : [4, 2, 23] has cost 12.


Decide in level 8 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23, 22]


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23, 22]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, 2097152), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {34, 36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 2, 23, 22]


Before reduction : 
 pending  : []
 solution : [4, 2, 23, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, 0), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 2, 23, 22]


Solution : [4, 2, 23, 22] has cost 19.


Before backtrack at level 9
 pending : []
 solution : [4, 2, 23, 22]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23]


Solution : [4, 2, 23] has cost 12.


Decide in level 9 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 9

After decision at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 23, 25]


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 23, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 23, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 2, 23, 25]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 2, 23, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15]
 solution : [4, 2, 23, 25]


Solution : [4, 2, 23, 25] has cost 21.


Before backtrack at level 10
 pending : [36, 31, 16, 34, 14, 15]
 solution : [4, 2, 23, 25]

After backtrack at level 10
 pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 23, 25]


Invert decision for 25 at level 9


New level: 10
 pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 23]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 32768), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]
 solution : [4, 2, 23]


Solution : [4, 2, 23] has cost 12.


Decide in level 10 among pending : [36, 31, 16, 34, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 10

After decision at level 10
 pending : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 2, 23, 15]


New level: 11
 pending : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 2, 23, 15]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17, 21]
 solution : [4, 2, 23, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 262144), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {16, 17, 34, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 23, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 23, 15]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 2, 23, 15]


Solution : [4, 2, 23, 15] has cost 19.


Before backtrack at level 11
 pending : [36, 31, 9, 24, 21]
 solution : [4, 2, 23, 15]

After backtrack at level 11
 pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 2, 23, 15]


Invert decision for 15 at level 10


New level: 11
 pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 2, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 2, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 34, 14, 17]
 solution : [4, 2, 23]


Solution : [4, 2, 23] has cost 12.


Decide in level 11 among pending : [36, 31, 9, 24, 21, 16, 34, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 2, 23, 21]


New level: 12
 pending : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 2, 23, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 34, 14, 17]
 solution : [4, 2, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 2, 23, 21]


Before reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 2, 23, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14]
 solution : [4, 2, 23, 21]


Solution : [4, 2, 23, 21] has cost 21.


Before backtrack at level 12
 pending : [36, 31, 16, 34, 14]
 solution : [4, 2, 23, 21]

After backtrack at level 12
 pending : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 2, 23, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 2, 23]


Before reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 2, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, 512), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 16, 34, 14, 9, 24, 17]
 solution : [4, 2, 23]


Solution : [4, 2, 23] has cost 12.


Decide in level 12 among pending : [36, 31, 16, 34, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 2, 23, 14]


New level: 13
 pending : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 2, 23, 14]


Before reduction : 
 pending  : [36, 31, 16, 34, 9, 24, 17]
 solution : [4, 2, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, 16384), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 512), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {16, 17, 34}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 23, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 23, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, 0), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 2, 23, 14]


Solution : [4, 2, 23, 14] has cost 19.


Before backtrack at level 13
 pending : [36, 31, 9, 24]
 solution : [4, 2, 23, 14]

After backtrack at level 13
 pending : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 2, 23, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 2, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 34, 17]
 solution : [4, 2, 23]

Essensial at level 13 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 16384), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 16384), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 512), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {34}

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 23, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, 0), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 2, 23, 16]


Solution : [4, 2, 23, 16] has cost 19.


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17]
 solution : [4, 2, 23, 16]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 2, 23]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34]
 solution : [4, 2, 23]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 2, 23]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14]
 solution : [4, 2, 23]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 2, 23]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21]
 solution : [4, 2, 23]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 23]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15]
 solution : [4, 2, 23]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25]
 solution : [4, 2, 23]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22]
 solution : [4, 2, 23]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20]
 solution : [4, 2]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20]
 solution : [4, 2]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0]
 solution : [4, 2]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0]
 solution : [4, 2]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32]
 solution : [4, 2]


Before backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32]
 solution : [4, 2]

After backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27]
 solution : [4, 2]


Before backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27]
 solution : [4, 2]

After backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27, 26]
 solution : [4, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27, 26]
 solution : [4]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27, 26]
 solution : [4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8192), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32768), (32, -1), (33, -1), (34, -1), (35, -1), (36, 32768), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27, 26]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 3 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27, 26]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27]
 solution : [4, 26]


New level: 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27]
 solution : [4, 26]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27]
 solution : [4, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, 33554432), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27]
 solution : [4, 26]


Solution : [4, 26] has cost 7.


Decide in level 4 among pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 32, 27]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 27]
 solution : [4, 26, 32]


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 27]
 solution : [4, 26, 32]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 34, 14, 21, 15, 25, 22, 23, 5, 28, 29, 20, 0, 27]
 solution : [4, 26, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : {36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [34, 23, 5, 28, 29, 0, 27]
 solution : [4, 26, 32]


Before reduction : 
 pending  : [34, 23, 5, 28, 29, 0, 27]
 solution : [4, 26, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [34, 23, 5, 28, 29, 0, 27]
 solution : [4, 26, 32]


Solution : [4, 26, 32] has cost 11.


Decide in level 5 among pending : [34, 23, 5, 28, 29, 0, 27]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [34, 23, 5, 28, 29, 0]
 solution : [4, 26, 32, 27]


New level: 6
 pending : [34, 23, 5, 28, 29, 0]
 solution : [4, 26, 32, 27]


Before reduction : 
 pending  : [34, 23, 5, 28, 29, 0]
 solution : [4, 26, 32, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {34, 29, 28, 5}

After reduction : 
 pending  : [23, 0]
 solution : [4, 26, 32, 27]


Before reduction : 
 pending  : [23, 0]
 solution : [4, 26, 32, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 0]
 solution : [4, 26, 32, 27]


Solution : [4, 26, 32, 27] has cost 24.


Before backtrack at level 6
 pending : [23, 0]
 solution : [4, 26, 32, 27]

After backtrack at level 6
 pending : [23, 0, 34, 5, 28, 29]
 solution : [4, 26, 32, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [23, 0, 34, 5, 28, 29]
 solution : [4, 26, 32]


Before reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 26, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 512), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 26, 32]


Solution : [4, 26, 32] has cost 11.


Decide in level 6 among pending : [23, 0, 34, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 26, 32, 23]


New level: 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 26, 32, 23]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 26, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {0, 34, 5, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 26, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 26, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 26, 32, 23]


Solution : [4, 26, 32, 23] has cost 18.


Before backtrack at level 7
 pending : []
 solution : [4, 26, 32, 23]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 26, 32, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 26, 32]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 26, 32]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 26, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 26, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 26, 32, 0]


Solution : [4, 26, 32, 0] has cost 15.


Before backtrack at level 7
 pending : []
 solution : [4, 26, 32, 0]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 26, 32]


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 26, 32]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 23]
 solution : [4, 26, 32]


Before backtrack at level 5
 pending : [0, 34, 5, 28, 29, 23]
 solution : [4, 26, 32]

After backtrack at level 5
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 26, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 26]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]
 solution : [4, 26]


Solution : [4, 26] has cost 7.


Decide in level 5 among pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 27]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 5

After decision at level 5
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 27]
 solution : [4, 26, 20]


New level: 6
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 27]
 solution : [4, 26, 20]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 27]
 solution : [4, 26, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 26, 20]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 26, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, 512), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 26, 20]


Solution : [4, 26, 20] has cost 14.


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29, 23, 27]
 solution : [4, 26, 20]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 20]


Invert decision for 20 at level 5


New level: 6
 pending : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, 8388608), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, 512), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26]


Solution : [4, 26] has cost 7.


Decide in level 6 among pending : [0, 34, 5, 28, 29, 23, 27, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 27]


New level: 7
 pending : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 27]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, 8388608), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2048), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4096), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {29, 28, 5}

After reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 27]


Before reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2048), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4096), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2048), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4096), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 27]


Solution : [4, 26, 27] has cost 20.


Before backtrack at level 7
 pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 26, 27]

After backtrack at level 7
 pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26]


Before reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2048), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4096), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26]


Solution : [4, 26] has cost 7.


Decide in level 7 among pending : [0, 34, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 34 with phase True at level 7

After decision at level 7
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26, 34]


New level: 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26, 34]


Before reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 4194304), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26, 34]


Solution : [4, 26, 34] has cost 21.


Before backtrack at level 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26, 34]

After backtrack at level 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26, 34]


Invert decision for 34 at level 7


New level: 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26]


Before reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, 1048576), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 32768), (29, 1024), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]
 solution : [4, 26]


Solution : [4, 26] has cost 7.


Decide in level 8 among pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 5, 28, 29]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29]
 solution : [4, 26, 22]


New level: 9
 pending : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29]
 solution : [4, 26, 22]


Before reduction : 
 pending  : [0, 23, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29]
 solution : [4, 26, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : [0, 23, 5, 28, 29]
 solution : [4, 26, 22]


Before reduction : 
 pending  : [0, 23, 5, 28, 29]
 solution : [4, 26, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 2097152), (24, 0), (25, 0), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 23, 5, 28, 29]
 solution : [4, 26, 22]


Solution : [4, 26, 22] has cost 14.


Before backtrack at level 9
 pending : [0, 23, 5, 28, 29]
 solution : [4, 26, 22]

After backtrack at level 9
 pending : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26]


Before reduction : 
 pending  : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32768), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, 65536), (29, 1024), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26]


Solution : [4, 26] has cost 7.


Decide in level 9 among pending : [0, 23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 9

After decision at level 9
 pending : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 0]


New level: 10
 pending : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 0]


Before reduction : 
 pending  : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2097152), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 0), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {29, 28, 5, 23}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 0), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 0]


Solution : [4, 26, 0] has cost 11.


Decide in level 10 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 26, 0, 25]


New level: 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 26, 0, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 26, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 26, 0, 25]


Before reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 26, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 26, 0, 25]


Solution : [4, 26, 0, 25] has cost 20.


Before backtrack at level 11
 pending : [36, 31, 16, 14, 15]
 solution : [4, 26, 0, 25]

After backtrack at level 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 26, 0, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 26, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 26, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 26, 0]


Solution : [4, 26, 0] has cost 11.


Decide in level 11 among pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 26, 0, 15]


New level: 12
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 26, 0, 15]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 26, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {16, 17, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 26, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 26, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 26, 0, 15]


Solution : [4, 26, 0, 15] has cost 18.


Before backtrack at level 12
 pending : [36, 31, 9, 24, 21]
 solution : [4, 26, 0, 15]

After backtrack at level 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 26, 0, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 26, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 26, 0]


Solution : [4, 26, 0] has cost 11.


Decide in level 12 among pending : [36, 31, 9, 24, 21, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 26, 0, 21]


New level: 13
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 26, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 26, 0, 21]


Before reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 26, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 26, 0, 21]


Solution : [4, 26, 0, 21] has cost 20.


Before backtrack at level 13
 pending : [36, 31, 16, 14]
 solution : [4, 26, 0, 21]

After backtrack at level 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 26, 0, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 26, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 26, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 26, 0]


Solution : [4, 26, 0] has cost 11.


Decide in level 13 among pending : [36, 31, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 26, 0, 14]


New level: 14
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 16, 9, 24, 17]
 solution : [4, 26, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : {16, 17}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 26, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 26, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 26, 0, 14]


Solution : [4, 26, 0, 14] has cost 18.


Before backtrack at level 14
 pending : [36, 31, 9, 24]
 solution : [4, 26, 0, 14]

After backtrack at level 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 26, 0, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 26, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 17]
 solution : [4, 26, 0]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 26, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 26, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 26, 0, 16]


Solution : [4, 26, 0, 16] has cost 18.


Before backtrack at level 14
 pending : [36, 31, 9, 24, 17]
 solution : [4, 26, 0, 16]

After backtrack at level 14
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 26, 0]


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 26, 0]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 26, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 26, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 26, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 26, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 26, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 26, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 23, 5, 28, 29, 25]
 solution : [4, 26, 0]


Invert decision for 0 at level 9


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 23, 5, 28, 29, 25]
 solution : [4, 26]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 23, 5, 28, 29, 25]
 solution : [4, 26]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 23]


Solution : [4, 26, 23] has cost 14.


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 26, 23]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29]
 solution : [4, 26]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29]
 solution : [4, 26]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0]
 solution : [4, 26]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0]
 solution : [4, 26]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22]
 solution : [4, 26]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22]
 solution : [4, 26]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34]
 solution : [4, 26]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34]
 solution : [4, 26]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27]
 solution : [4, 26]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27]
 solution : [4, 26]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20]
 solution : [4, 26]


Before backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20]
 solution : [4, 26]

After backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20, 32]
 solution : [4, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20, 32]
 solution : [4]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20, 32]
 solution : [4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20, 32]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 4 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 27, 20, 32]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 20, 32]
 solution : [4, 27]


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 20, 32]
 solution : [4, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 5, 28, 29, 0, 22, 34, 20, 32]
 solution : [4, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, 16777216), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4096), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8192), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32]
 solution : [4, 27]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32]
 solution : [4, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4096), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8192), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4096), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8192), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32]
 solution : [4, 27]


Solution : [4, 27] has cost 16.


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32]
 solution : [4, 27]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32, 5, 28, 29]
 solution : [4, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32, 5, 28, 29]
 solution : [4]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32, 5, 28, 29]
 solution : [4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4096), (24, 65536), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8192), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32, 5, 28, 29]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 5 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 32, 5, 28, 29]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]
 solution : [4, 32]


New level: 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]
 solution : [4, 32]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 23, 0, 22, 34, 20, 5, 28, 29]
 solution : [4, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, 16777216), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 4194304), (24, 0), (25, 0), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 1024), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : {36, 9, 14, 15, 16, 17, 20, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 32]


Before reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 4194304), (24, 0), (25, 0), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, 1024), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 0, 34, 5, 28, 29]
 solution : [4, 32]


Solution : [4, 32] has cost 7.


Decide in level 6 among pending : [23, 0, 34, 5, 28, 29]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 32, 23]


New level: 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 32, 23]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, 1024), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {0, 34, 5, 28, 29}

After reduction : 
 pending  : []
 solution : [4, 32, 23]


Before reduction : 
 pending  : []
 solution : [4, 32, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 32, 23]


Solution : [4, 32, 23] has cost 14.


Before backtrack at level 7
 pending : []
 solution : [4, 32, 23]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 32, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 32]


Before reduction : 
 pending  : [0, 34, 5, 28, 29]
 solution : [4, 32]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : {34, 29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 32, 0]


Before reduction : 
 pending  : []
 solution : [4, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 32, 0]


Solution : [4, 32, 0] has cost 11.


Before backtrack at level 7
 pending : []
 solution : [4, 32, 0]

After backtrack at level 7
 pending : [0, 34, 5, 28, 29]
 solution : [4, 32]


Before backtrack at level 6
 pending : [0, 34, 5, 28, 29]
 solution : [4, 32]

After backtrack at level 6
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4]


Before reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 6 among pending : [0, 34, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 34]


New level: 7
 pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 34]


Before reduction : 
 pending  : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, 8388608), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, 8388608), (21, 524288), (22, 4194304), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 34]


Solution : [4, 34] has cost 17.


Before backtrack at level 7
 pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 34]

After backtrack at level 7
 pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4]


Before reduction : 
 pending  : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, 8388608), (21, 524288), (22, 4194304), (23, 2097152), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 65536), (29, 2048), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 7 among pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 20, 23]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 20 with phase True at level 7

After decision at level 7
 pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 20]


New level: 8
 pending : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 20]


Before reduction : 
 pending  : [0, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 23]
 solution : [4, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, 8388608), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 4194304), (24, 0), (25, 0), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : {36, 9, 14, 15, 16, 17, 21, 22, 24, 25, 31}

After reduction : 
 pending  : [0, 5, 28, 29, 23]
 solution : [4, 20]


Before reduction : 
 pending  : [0, 5, 28, 29, 23]
 solution : [4, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 4194304), (24, 0), (25, 0), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 5, 28, 29, 23]
 solution : [4, 20]


Solution : [4, 20] has cost 10.


Decide in level 8 among pending : [0, 5, 28, 29, 23]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 0 with phase True at level 8

After decision at level 8
 pending : [5, 28, 29, 23]
 solution : [4, 20, 0]


New level: 9
 pending : [5, 28, 29, 23]
 solution : [4, 20, 0]


Before reduction : 
 pending  : [5, 28, 29, 23]
 solution : [4, 20, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4194304), (24, -1), (25, -1), (26, -1), (27, -1), (28, 131072), (29, 2048), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {29, 28, 5, 23}

After reduction : 
 pending  : []
 solution : [4, 20, 0]


Before reduction : 
 pending  : []
 solution : [4, 20, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 20, 0]


Solution : [4, 20, 0] has cost 14.


Before backtrack at level 9
 pending : []
 solution : [4, 20, 0]

After backtrack at level 9
 pending : [5, 28, 29, 23]
 solution : [4, 20, 0]


Invert decision for 0 at level 8


New level: 9
 pending : [5, 28, 29, 23]
 solution : [4, 20]


Before reduction : 
 pending  : [5, 28, 29, 23]
 solution : [4, 20]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {29, 28, 5}

After reduction : 
 pending  : []
 solution : [4, 20, 23]


Before reduction : 
 pending  : []
 solution : [4, 20, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 20, 23]


Solution : [4, 20, 23] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [4, 20, 23]

After backtrack at level 9
 pending : [23, 5, 28, 29]
 solution : [4, 20]


Before backtrack at level 8
 pending : [23, 5, 28, 29]
 solution : [4, 20]

After backtrack at level 8
 pending : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]
 solution : [4, 20]


Invert decision for 20 at level 7


New level: 8
 pending : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]
 solution : [4]


Before reduction : 
 pending  : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]
 solution : [4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]
 solution : [4]


Solution : [4] has cost 3.


Decide in level 8 among pending : [23, 5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]

Coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]
 solution : [4, 23]


New level: 9
 pending : [5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]
 solution : [4, 23]


Before reduction : 
 pending  : [5, 28, 29, 36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22, 0]
 solution : [4, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, -1), (5, 131072), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 65536), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 4194304), (23, 4194304), (24, 131072), (25, 2097152), (26, -1), (27, -1), (28, 131072), (29, 4096), (30, -1), (31, 131072), (32, -1), (33, -1), (34, -1), (35, -1), (36, 131072), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {0, 29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 23]


Solution : [4, 23] has cost 10.


Decide in level 9 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23, 22]


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23, 22]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 23, 22]


Before reduction : 
 pending  : []
 solution : [4, 23, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 23, 22]


Solution : [4, 23, 22] has cost 17.


Before backtrack at level 10
 pending : []
 solution : [4, 23, 22]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23]


Solution : [4, 23] has cost 10.


Decide in level 10 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 23, 25]


New level: 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 23, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 23, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 23, 25]


Before reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 23, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 23, 25]


Solution : [4, 23, 25] has cost 19.


Before backtrack at level 11
 pending : [36, 31, 16, 14, 15]
 solution : [4, 23, 25]

After backtrack at level 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 23, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 23]


Before reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 23]


Solution : [4, 23] has cost 10.


Decide in level 11 among pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 23, 15]


New level: 12
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 23, 15]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 23, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {16, 17, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 23, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 23, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 23, 15]


Solution : [4, 23, 15] has cost 17.


Before backtrack at level 12
 pending : [36, 31, 9, 24, 21]
 solution : [4, 23, 15]

After backtrack at level 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 23, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 23]


Solution : [4, 23] has cost 10.


Decide in level 12 among pending : [36, 31, 9, 24, 21, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 23, 21]


New level: 13
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 23, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 23, 21]


Before reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 23, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 23, 21]


Solution : [4, 23, 21] has cost 19.


Before backtrack at level 13
 pending : [36, 31, 16, 14]
 solution : [4, 23, 21]

After backtrack at level 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 23, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 23]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 23]


Solution : [4, 23] has cost 10.


Decide in level 13 among pending : [36, 31, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 23, 14]


New level: 14
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 23, 14]


Before reduction : 
 pending  : [36, 31, 16, 9, 24, 17]
 solution : [4, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : {16, 17}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 23, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 23, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 23, 14]


Solution : [4, 23, 14] has cost 17.


Before backtrack at level 14
 pending : [36, 31, 9, 24]
 solution : [4, 23, 14]

After backtrack at level 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 23, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 23]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 17]
 solution : [4, 23]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 23, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 23, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 23, 16]


Solution : [4, 23, 16] has cost 17.


Before backtrack at level 14
 pending : [36, 31, 9, 24, 17]
 solution : [4, 23, 16]

After backtrack at level 14
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 23]


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 23]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 23]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 23]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 23]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 23]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 23]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 23]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 23]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29, 0, 22]
 solution : [4, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29, 0, 22]
 solution : [4]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 5, 28, 29, 0, 22]
 solution : [4]

Essensial at level 9 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : {29, 28, 5}

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]
 solution : [4, 0]


Solution : [4, 0] has cost 7.


Decide in level 9 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0, 22]


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0, 22]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, 4194304), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : {36, 9, 14, 15, 16, 17, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [4, 0, 22]


Before reduction : 
 pending  : []
 solution : [4, 0, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 0, 22]


Solution : [4, 0, 22] has cost 14.


Before backtrack at level 10
 pending : []
 solution : [4, 0, 22]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0]


Solution : [4, 0] has cost 7.


Decide in level 10 among pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 25 with phase True at level 10

After decision at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 0, 25]


New level: 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 0, 25]


Before reduction : 
 pending  : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, 1048576), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : {24, 9, 21, 17}

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 0, 25]


Before reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 0, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15]
 solution : [4, 0, 25]


Solution : [4, 0, 25] has cost 16.


Before backtrack at level 11
 pending : [36, 31, 16, 14, 15]
 solution : [4, 0, 25]

After backtrack at level 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 0, 25]


Invert decision for 25 at level 10


New level: 11
 pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 65536), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 15, 9, 24, 17, 21]
 solution : [4, 0]


Solution : [4, 0] has cost 7.


Decide in level 11 among pending : [36, 31, 16, 14, 15, 9, 24, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 0, 15]


New level: 12
 pending : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 0, 15]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17, 21]
 solution : [4, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 524288), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : {16, 17, 14}

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 0, 15]


Before reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 0, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21]
 solution : [4, 0, 15]


Solution : [4, 0, 15] has cost 14.


Before backtrack at level 12
 pending : [36, 31, 9, 24, 21]
 solution : [4, 0, 15]

After backtrack at level 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 0, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 21, 16, 14, 17]
 solution : [4, 0]


Solution : [4, 0] has cost 7.


Decide in level 12 among pending : [36, 31, 9, 24, 21, 16, 14, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 0, 21]


New level: 13
 pending : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 0, 21]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 14, 17]
 solution : [4, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : {24, 9, 17}

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 0, 21]


Before reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 0, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14]
 solution : [4, 0, 21]


Solution : [4, 0, 21] has cost 16.


Before backtrack at level 13
 pending : [36, 31, 16, 14]
 solution : [4, 0, 21]

After backtrack at level 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 0, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 0]


Before reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [36, 31, 16, 14, 9, 24, 17]
 solution : [4, 0]


Solution : [4, 0] has cost 7.


Decide in level 13 among pending : [36, 31, 16, 14, 9, 24, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 0, 14]


New level: 14
 pending : [36, 31, 16, 9, 24, 17]
 solution : [4, 0, 14]


Before reduction : 
 pending  : [36, 31, 16, 9, 24, 17]
 solution : [4, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, -1), (16, 32768), (17, 32768), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : {16, 17}

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 0, 14]


Before reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24]
 solution : [4, 0, 14]


Solution : [4, 0, 14] has cost 14.


Before backtrack at level 14
 pending : [36, 31, 9, 24]
 solution : [4, 0, 14]

After backtrack at level 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 0, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [36, 31, 9, 24, 16, 17]
 solution : [4, 0]


Before reduction : 
 pending  : [36, 31, 9, 24, 16, 17]
 solution : [4, 0]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32768), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1024), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 0, 16]


Before reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16384), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 65536), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 65536), (32, -1), (33, -1), (34, -1), (35, -1), (36, 65536), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [36, 31, 9, 24, 17]
 solution : [4, 0, 16]


Solution : [4, 0, 16] has cost 14.


Before backtrack at level 14
 pending : [36, 31, 9, 24, 17]
 solution : [4, 0, 16]

After backtrack at level 14
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 0]


Before backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16]
 solution : [4, 0]

After backtrack at level 13
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 0]


Before backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14]
 solution : [4, 0]

After backtrack at level 12
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 0]


Before backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21]
 solution : [4, 0]

After backtrack at level 11
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 0]


Before backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15]
 solution : [4, 0]

After backtrack at level 10
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0]


Before backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25]
 solution : [4, 0]

After backtrack at level 9
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22]
 solution : [4]


Before backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22]
 solution : [4]

After backtrack at level 8
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23]
 solution : [4]


Before backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23]
 solution : [4]

After backtrack at level 7
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20]
 solution : [4]


Before backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20]
 solution : [4]

After backtrack at level 6
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34]
 solution : [4]


Before backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34]
 solution : [4]

After backtrack at level 5
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32]
 solution : [4]


Before backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32]
 solution : [4]

After backtrack at level 4
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27]
 solution : [4]


Before backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27]
 solution : [4]

After backtrack at level 3
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27, 26]
 solution : [4]


Before backtrack at level 2
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27, 26]
 solution : [4]

After backtrack at level 2
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27, 26, 2]
 solution : [4]


Before backtrack at level 1
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27, 26, 2]
 solution : [4]

After backtrack at level 1
 pending : [36, 31, 9, 24, 17, 16, 14, 21, 15, 25, 0, 5, 28, 29, 22, 23, 20, 34, 32, 27, 26, 2, 1]
 solution : [4]


=========================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

=========================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 11

[MIN NOTE]: maximum branch and bound depth: 14

[MIN NOTE]: number of definitions: 2

invariant [def_didNotPromise] forall A. didNotPromise(A) = (forall P. ~promise(A,P)) # definition, qcost: 4

invariant [def_chosenAt] forall Q,P. chosenAt(Q,P) = (forall A. member(A,Q) -> promise(A,P)) # definition, qcost: 6

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [4, 32, 0]

[MIN NOTE]: solution length: 3

invariant [invar_4] forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0)) # qcost: 3

invariant [invar_32] forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)) # qcost: 4

invariant [invar_0] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 21




[QRM NOTE]: Time elapsed since start: 1.924 seconds

[QRM NOTE]: Time elapsed since last: 0.797 seconds

[QRM NOTE]: Peak memory: 2403385 bytes


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=2]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy -s acceptor=4,proposer=2 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=========================================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: acceptor=4,proposer=2]

=========================================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 24

[FW NOTE]: number of interpreted atoms (e.g. member,le): 16

[FW NOTE]: symmetric group order: 48

[QRM NOTE]: Time elapsed since start: 0.107 seconds

[QRM NOTE]: Time elapsed since last: 0.107 seconds

[QRM NOTE]: Peak memory: 164173 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 81


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2', 'acceptor3']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1_acceptor2', 'quorum__acceptor0_acceptor1_acceptor3', 'quorum__acceptor0_acceptor2_acceptor3', 'quorum__acceptor1_acceptor2_acceptor3']
predicate: promise('acceptor', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: chosenAt('quorum', 'proposer')
predicate: leader('proposer',)
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor3)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'didNotPromise(acceptor3)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor3,proposer0)', 'promise(acceptor3,proposer1)', 'start(proposer0)', 'start(proposer1)']

000000000000000101101011
000000000000000110011011
000000000000000110100111
000000000000001001011011
000000000000001001100111
000000000000001010010111
000000000001000101100011
000000000001000110010011
000000000001000110100011
000000000001001001010011
000000000001001001100011
000000000001001010010011
000000000010000101001011
000000000010000110000111
000000000010000110001011
000000000010001001000111
000000000010001001001011
000000000010001010000111
0000000000110001010000-1
000000000011000110000011
000000000011001001000011
00000000001100101000001-
000000000100000100011011
000000000100000100100111
000000000100000100101011
000000000100001000010111
000000000100001000011011
000000000100001000100111
0000000001010001000100-1
000000000101000100100011
000000000101001000010011
00000000010100100010001-
0000000001100001000001-1
000000000110000100001011
000000000110001000000111
00000000011000100000101-
0000000001110001000000-1
00000000011100100000001-
000000001000000001011011
000000001000000001100111
000000001000000001101011
000000001000000010010111
000000001000000010011011
000000001000000010100111
0000000010010000010100-1
000000001001000001100011
000000001001000010010011
00000000100100001010001-
0000000010100000010001-1
000000001010000001001011
000000001010000010000111
00000000101000001000101-
0000000010110000010000-1
00000000101100001000001-
0000000011000000000101-1
000000001100000000011011
000000001100000000100111
00000000110000000010101-
0000000011010000000100-1
00000000110100000010001-
0000000011100000000001-1
00000000111000000000101-
0000000011110000000000--
0000000100000-1001010111
0000000110000-00010101-1
000000100000-00110101011
000000101000-0001010101-
0000010000000-0110010111
0000010001000-01000101-1
000010000000-01001101011
000010000100-0100010101-
0001000000000-0101100111
0001000000100-01010001-1
001000000000-01010011011
001000000010-0101000101-
0100000000000-0101011011
0100000000010-01010100-1
0101010100000-01010101-1
100000000000-01010100111
100000000001-0101010001-
101010100000-0101010101-

[QRM NOTE]: Time elapsed since start: 1.692 seconds

[QRM NOTE]: Time elapsed since last: 1.585 seconds

[QRM NOTE]: Peak memory: 1499151 bytes


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: acceptor=4,proposer=2]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 2.701 seconds

[QRM NOTE]: Time elapsed since last: 1.010 seconds

[QRM NOTE]: Peak memory: 1429527 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy -s acceptor=3,proposer=3 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=========================================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: acceptor=3,proposer=3]

=========================================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[QRM NOTE]: Time elapsed since start: 0.116 seconds

[QRM NOTE]: Time elapsed since last: 0.116 seconds

[QRM NOTE]: Peak memory: 200780 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 64


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
predicate: leader('proposer',)
predicate: chosenAt('quorum', 'proposer')
predicate: member('acceptor', 'quorum')
predicate: promise('acceptor', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']

000000000000000001010100111
000000000000000001100010111
000000000000000010001100111
000000000000000010100001111
000000000000000100001010111
000000000000000100010001111
000000000001000001010000-11
0000000000010000011000001-1
000000000001000010001000-11
00000000000100001010000011-
0000000000010001000010001-1
00000000000100010001000011-
000000000010000001000010-11
0000000000100000010001001-1
000000000010000010000001-11
00000000001000001000010011-
0000000000100001000000011-1
00000000001000010000001011-
000000000011000001000000--1
000000000011000010000000-1-
0000000000110001000000001--
000000000100000000001010-11
0000000001000000000011001-1
000000000100000000010001-11
00000000010000000001010011-
0000000001000000001000011-1
00000000010000000010001011-
000000000101000000001000--1
000000000101000000010000-1-
0000000001010000001000001--
000000000110000000000001--1
000000000110000000000010-1-
0000000001100000000001001--
000000000111000000000000---
00000000100000-010001001-11
00000000100000-1000010011-1
00000000110000-000001001--1
0000000100000-0001010010-11
0000000100000-010001001011-
0000000101000-0000010010-1-
000000100000-000011001001-1
000000100000-0001010010011-
000000100100-000001001001--
00000100000000-001010001-11
00000100000000-0011000011-1
00000100001000-001000001--1
0000100000000-0010001010-11
0000100000000-001010001011-
0000100000100-0010000010-1-
000100000000-001000011001-1
000100000000-0010001010011-
000100000010-001000001001--
00100000000000-001001010-11
00100000000000-0010011001-1
00100000000100-001001000--1
00100100100000-001001001--1
0100000000000-0010010001-11
0100000000000-001001010011-
0100000000010-0010010000-1-
0100100100000-0010010010-1-
100000000000-001001000011-1
100000000000-0010010001011-
100000000001-001001000001--
100100100000-001001001001--

[QRM NOTE]: Time elapsed since start: 1.375 seconds

[QRM NOTE]: Time elapsed since last: 1.259 seconds

[QRM NOTE]: Peak memory: 1478283 bytes


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: acceptor=3,proposer=3]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 2.338 seconds

[QRM NOTE]: Time elapsed since last: 0.963 seconds

[QRM NOTE]: Peak memory: 1254648 bytes

next size: acceptor=3,proposer=3


***********************************************************************************************************

	[Synthesize Rmin]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

***********************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=3,proposer=3 -f 1 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.029 seconds

[QRM NOTE]: Time elapsed since last: 0.029 seconds

[QRM NOTE]: Peak memory: 27676 bytes


========================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

========================================================================================================================


===================================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===================================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1--0--
0     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
1     : ----------------------1--0-
1     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
2     : -----------------------1--0
2     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
3     : ------------------1-----0--
3     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
4     : -------------------1-----0-
4     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
5     : --------------------1-----0
5     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
6     : ---------------1--------0--
6     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
7     : ----------------1--------0-
7     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
8     : -----------------1--------0
8     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 9
num_suborbits: 1
9 (*) : ---------------------1-1---
9     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
10     : ---------------------11----
10     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
11     : ----------------------11---
11     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
12     : ------------------1-1------
12     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
13     : ------------------11-------
13     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
14     : -------------------11------
14     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
15     : ---------------1-1---------
15     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
16     : ---------------11----------
16     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
17     : ----------------11---------
17     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 36
num_suborbits: 1
18 (*) : -----1---------------1-----
18     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
19     : ----1----------------1-----
19     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
20     : -----1----------------1----
20     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
21     : ---1------------------1----
21     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
22     : ----1------------------1---
22     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
23     : ---1-------------------1---
23     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
24     : --1---------------1--------
24     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
25     : -1----------------1--------
25     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
26     : --1----------------1-------
26     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
27     : 1------------------1-------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
28     : -1------------------1------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
29     : 1-------------------1------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
30     : --------1------------1-----
30     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
31     : -------1-------------1-----
31     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
32     : --------1-------------1----
32     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
33     : ------1---------------1----
33     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
34     : -------1---------------1---
34     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
35     : ------1----------------1---
35     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
36     : --1------------1-----------
36     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
37     : -1-------------1-----------
37     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
38     : --1-------------1----------
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
39     : 1---------------1----------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
40     : -1---------------1---------
40     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
41     : 1----------------1---------
41     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
42     : --------1---------1--------
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
43     : -------1----------1--------
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
44     : --------1----------1-------
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
45     : ------1------------1-------
45     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
46     : -------1------------1------
46     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
47     : ------1-------------1------
47     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
48     : -----1---------1-----------
48     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
49     : ----1----------1-----------
49     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
50     : -----1----------1----------
50     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
51     : ---1------------1----------
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
52     : ----1------------1---------
52     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
53     : ---1-------------1---------
53     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 18
num_suborbits: 1
54 (*) : ---1-----------------0-----
54     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
55     : ----1-----------------0----
55     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
56     : -----1-----------------0---
56     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
57     : 1-----------------0--------
57     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
58     : -1-----------------0-------
58     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
59     : --1-----------------0------
59     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
60     : ------1--------------0-----
60     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
61     : -------1--------------0----
61     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
62     : --------1--------------0---
62     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
63     : 1--------------0-----------
63     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
64     : -1--------------0----------
64     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
65     : --1--------------0---------
65     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
66     : ------1-----------0--------
66     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
67     : -------1-----------0-------
67     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
68     : --------1-----------0------
68     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
69     : ---1-----------0-----------
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
70     : ----1-----------0----------
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
71     : -----1-----------0---------
71     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 1
72 (*) : ---1--------------------0--
72     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
73     : ----1--------------------0-
73     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
74     : -----1--------------------0
74     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
75     : 1-----------------------0--
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
76     : -1-----------------------0-
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
77     : --1-----------------------0
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
78     : ------1-----------------0--
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
79     : -------1-----------------0-
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
80     : --------1-----------------0
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
81 (*) : --11-----------------------
81     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
82     : -1-1-----------------------
82     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
83     : --1-1----------------------
83     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
84     : 1---1----------------------
84     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
85     : -1---1---------------------
85     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
86     : 1----1---------------------
86     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
87     : --1---1--------------------
87     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
88     : -1----1--------------------
88     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
89     : --1----1-------------------
89     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
90     : 1------1-------------------
90     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
91     : -1------1------------------
91     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
92     : 1-------1------------------
92     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
93     : -----11--------------------
93     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
94     : ----1-1--------------------
94     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
95     : -----1-1-------------------
95     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
96     : ---1---1-------------------
96     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
97     : ----1---1------------------
97     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
98     : ---1----1------------------
98     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 9
num_suborbits: 1
99 (*) : ---1-1---------------------
99     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
100     : ---11----------------------
100     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
101     : ----11---------------------
101     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
102     : 1-1------------------------
102     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
103     : 11-------------------------
103     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
104     : -11------------------------
104     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
105     : ------1-1------------------
105     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
106     : ------11-------------------
106     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
107     : -------11------------------
107     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 18
num_suborbits: 1
108 (*) : ---1----------1------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
109     : ---1---------1-------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
110     : ----1---------1------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
111     : ----1-------1--------------
111     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
112     : -----1-------1-------------
112     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
113     : -----1------1--------------
113     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
114     : 1-------------1------------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
115     : 1------------1-------------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
116     : -1------------1------------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
117     : -1----------1--------------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
118     : --1----------1-------------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
119     : --1---------1--------------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
120     : ------1-------1------------
120     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
121     : ------1------1-------------
121     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
122     : -------1------1------------
122     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
123     : -------1----1--------------
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
124     : --------1----1-------------
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
125     : --------1---1--------------
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
126 (*) : ------------1-----------0--
126     : ['leader(proposer0)', '~start(proposer0)']
127     : -------------1-----------0-
127     : ['leader(proposer1)', '~start(proposer1)']
128     : --------------1-----------0
128     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
129 (*) : ------------1-1------------
129     : ['leader(proposer0)', 'leader(proposer2)']
130     : ------------11-------------
130     : ['leader(proposer0)', 'leader(proposer1)']
131     : -------------11------------
131     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 18
num_suborbits: 1
132 (*) : -------1---1---------------
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
133     : --------1--1---------------
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
134     : ------1----1---------------
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
135     : -------1--1----------------
135     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
136     : --------1-1----------------
136     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
137     : ------1---1----------------
137     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
138     : ----1------1---------------
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
139     : -----1-----1---------------
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
140     : ---1-------1---------------
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
141     : ----1----1-----------------
141     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
142     : -----1---1-----------------
142     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
143     : ---1-----1-----------------
143     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
144     : -1--------1----------------
144     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
145     : --1-------1----------------
145     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
146     : 1---------1----------------
146     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
147     : -1-------1-----------------
147     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
148     : --1------1-----------------
148     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
149     : 1--------1-----------------
149     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 9
num_suborbits: 1
150 (*) : -----------1---------1-----
150     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
151     : -----------1----------1----
151     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
152     : -----------1-----------1---
152     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
153     : ----------1-------1--------
153     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
154     : ----------1--------1-------
154     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
155     : ----------1---------1------
155     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
156     : ---------1-----1-----------
156     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
157     : ---------1------1----------
157     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
158     : ---------1-------1---------
158     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
159 (*) : ------0--1--1--------------
159     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
160     : -------0-1---1-------------
160     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
161     : --------01----1------------
161     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
162     : ---0------1-1--------------
162     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
163     : ----0-----1--1-------------
163     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
164     : -----0----1---1------------
164     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
165     : 0----------11--------------
165     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
166     : -0---------1-1-------------
166     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
167     : --0--------1--1------------
167     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
168 (*) : ---------1---1--------0----
168     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
169     : ---------1----1--------0---
169     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
170     : ---------1--1--------0-----
170     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
171     : ---------1---1-----0-------
171     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
172     : ---------1----1-----0------
172     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
173     : ---------1--1-----0--------
173     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
174     : ----------1--1--------0----
174     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
175     : ----------1---1--------0---
175     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
176     : ----------1-1--------0-----
176     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
177     : ----------1--1--0----------
177     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
178     : ----------1---1--0---------
178     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
179     : ----------1-1--0-----------
179     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
180     : -----------1-1-----0-------
180     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
181     : -----------1--1-----0------
181     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
182     : -----------11-----0--------
182     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
183     : -----------1-1--0----------
183     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
184     : -----------1--1--0---------
184     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
185     : -----------11--0-----------
185     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
186 (*) : ---------1---1----1--------
186     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
187     : ---------1----1---1--------
187     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
188     : ---------1--1------1-------
188     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
189     : ---------1----1----1-------
189     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
190     : ---------1--1-------1------
190     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
191     : ---------1---1------1------
191     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
192     : ---------1---1-------1-----
192     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
193     : ---------1----1------1-----
193     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
194     : ---------1--1---------1----
194     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
195     : ---------1----1-------1----
195     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
196     : ---------1--1----------1---
196     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
197     : ---------1---1---------1---
197     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
198     : ----------1--1-1-----------
198     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
199     : ----------1---11-----------
199     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
200     : ----------1-1---1----------
200     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
201     : ----------1---1-1----------
201     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
202     : ----------1-1----1---------
202     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
203     : ----------1--1---1---------
203     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
204     : ----------1--1-------1-----
204     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
205     : ----------1---1------1-----
205     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
206     : ----------1-1---------1----
206     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
207     : ----------1---1-------1----
207     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
208     : ----------1-1----------1---
208     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
209     : ----------1--1---------1---
209     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
210     : -----------1-1-1-----------
210     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
211     : -----------1--11-----------
211     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
212     : -----------11---1----------
212     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
213     : -----------1--1-1----------
213     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
214     : -----------11----1---------
214     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
215     : -----------1-1---1---------
215     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : -----------1-1----1--------
216     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
217     : -----------1--1---1--------
217     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
218     : -----------11------1-------
218     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
219     : -----------1--1----1-------
219     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
220     : -----------11-------1------
220     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
221     : -----------1-1------1------
221     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
222 (*) : ---------11--1-------------
222     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
223     : ---------11---1------------
223     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
224     : ---------11-1--------------
224     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
225     : ---------1-1-1-------------
225     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
226     : ---------1-1--1------------
226     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
227     : ---------1-11--------------
227     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
228     : ----------11-1-------------
228     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
229     : ----------11--1------------
229     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
230     : ----------111--------------
230     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
231 (*) : --------------1--01--------
231     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
232     : -------------1--0-1--------
232     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
233     : --------------1--0-1-------
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
234     : ------------1--0---1-------
234     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
235     : -------------1--0---1------
235     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
236     : ------------1--0----1------
236     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
237     : --------------1--0---1-----
237     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
238     : -------------1--0----1-----
238     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
239     : --------------1--0----1----
239     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
240     : ------------1--0------1----
240     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
241     : -------------1--0------1---
241     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
242     : ------------1--0-------1---
242     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
243     : --------------11----0------
243     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
244     : -------------1-1---0-------
244     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
245     : --------------1-1---0------
245     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
246     : ------------1---1-0--------
246     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
247     : -------------1---1-0-------
247     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
248     : ------------1----10--------
248     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
249     : --------------1-----01-----
249     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
250     : -------------1-----0-1-----
250     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
251     : --------------1-----0-1----
251     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
252     : ------------1-----0---1----
252     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
253     : -------------1-----0---1---
253     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
254     : ------------1-----0----1---
254     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
255     : --------------11-------0---
255     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
256     : -------------1-1------0----
256     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
257     : --------------1-1------0---
257     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
258     : ------------1---1----0-----
258     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
259     : -------------1---1----0----
259     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
260     : ------------1----1---0-----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
261     : --------------1---1----0---
261     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
262     : -------------1----1---0----
262     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
263     : --------------1----1---0---
263     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
264     : ------------1------1-0-----
264     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
265     : -------------1------1-0----
265     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
266     : ------------1-------10-----
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
267 (*) : -----0--------1---1--------
267     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
268     : ----0--------1----1--------
268     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
269     : -----0--------1----1-------
269     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
270     : ---0--------1------1-------
270     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
271     : ----0--------1------1------
271     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
272     : ---0--------1-------1------
272     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
273     : --0-----------1------1-----
273     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
274     : -0-----------1-------1-----
274     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
275     : --0-----------1-------1----
275     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
276     : 0-----------1---------1----
276     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
277     : -0-----------1---------1---
277     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
278     : 0-----------1----------1---
278     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
279     : --------0-----11-----------
279     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
280     : -------0-----1-1-----------
280     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
281     : --------0-----1-1----------
281     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
282     : ------0-----1---1----------
282     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
283     : -------0-----1---1---------
283     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
284     : ------0-----1----1---------
284     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
285 (*) : -------------1----1----1---
285     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
286     : --------------1---1---1----
286     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
287     : ------------1------1---1---
287     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
288     : --------------1----1-1-----
288     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
289     : ------------1-------1-1----
289     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
290     : -------------1------11-----
290     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
291     : -------------1-1-------1---
291     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
292     : --------------11------1----
292     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
293     : ------------1---1------1---
293     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
294     : --------------1-1----1-----
294     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
295     : ------------1----1----1----
295     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
296     : -------------1---1---1-----
296     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
297     : -------------1-1----1------
297     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
298     : --------------11---1-------
298     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
299     : ------------1---1---1------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
300     : --------------1-1-1--------
300     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
301     : ------------1----1-1-------
301     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
302     : -------------1---11--------
302     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 18
num_suborbits: 1
303 (*) : 0--1--------------1--------
303     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
304     : -0--1--------------1-------
304     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
305     : --0--1--------------1------
305     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
306     : 1--0-----------------1-----
306     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
307     : -1--0-----------------1----
307     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
308     : --1--0-----------------1---
308     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
309     : 0-----1--------1-----------
309     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
310     : -0-----1--------1----------
310     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
311     : --0-----1--------1---------
311     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
312     : 1-----0--------------1-----
312     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
313     : -1-----0--------------1----
313     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
314     : --1-----0--------------1---
314     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
315     : ---0--1--------1-----------
315     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
316     : ----0--1--------1----------
316     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
317     : -----0--1--------1---------
317     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
318     : ---1--0-----------1--------
318     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
319     : ----1--0-----------1-------
319     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
320     : -----1--0-----------1------
320     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
321 (*) : ------0-----------1--1-----
321     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
322     : -------0-----------1--1----
322     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
323     : --------0-----------1--1---
323     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
324     : ---0-----------1-----1-----
324     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
325     : ----0-----------1-----1----
325     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
326     : -----0-----------1-----1---
326     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
327     : 0--------------1--1--------
327     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
328     : -0--------------1--1-------
328     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
329     : --0--------------1--1------
329     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
330 (*) : -------------1-1--1--------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
331     : --------------11--1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
332     : ------------1---1--1-------
332     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
333     : --------------1-1--1-------
333     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
334     : ------------1----1--1------
334     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
335     : -------------1---1--1------
335     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
336     : -------------1-1-----1-----
336     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
337     : --------------11-----1-----
337     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
338     : ------------1---1-----1----
338     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
339     : --------------1-1-----1----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
340     : ------------1----1-----1---
340     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
341     : -------------1---1-----1---
341     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
342     : -------------1----1--1-----
342     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
343     : --------------1---1--1-----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
344     : ------------1------1--1----
344     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
345     : --------------1----1--1----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
346     : ------------1-------1--1---
346     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
347     : -------------1------1--1---
347     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
348 (*) : -1--1--0-------------------
348     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
349     : --1--1--0------------------
349     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
350     : 1--1--0--------------------
350     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
351     : -1--0--1-------------------
351     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
352     : --1--0--1------------------
352     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
353     : 1--0--1--------------------
353     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
354     : -0--1--1-------------------
354     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
355     : --0--1--1------------------
355     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
356     : 0--1--1--------------------
356     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
357 (*) : -------0-----1--0----------
357     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
358     : --------0-----1--0---------
358     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
359     : ------0-----1--0-----------
359     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
360     : ----0--------1-----0-------
360     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
361     : -----0--------1-----0------
361     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
362     : ---0--------1-----0--------
362     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
363     : -0-----------1--------0----
363     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
364     : --0-----------1--------0---
364     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
365     : 0-----------1--------0-----
365     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
366 (*) : -------------1--0-----0----
366     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
367     : --------------1--0-----0---
367     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
368     : ------------1--0-----0-----
368     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
369     : -------------1--0--0-------
369     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
370     : --------------1--0--0------
370     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
371     : ------------1--0--0--------
371     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
372     : -------------1-----0--0----
372     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
373     : --------------1-----0--0---
373     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
374     : ------------1-----0--0-----
374     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
375 (*) : 0--0--------1--1-----------
375     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
376     : -0--0--------1--1----------
376     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
377     : --0--0--------1--1---------
377     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
378     : 0-----0-----1-----1--------
378     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : -0-----0-----1-----1-------
379     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : --0-----0-----1-----1------
380     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : ---0--0-----1--------1-----
381     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
382     : ----0--0-----1--------1----
382     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
383     : -----0--0-----1--------1---
383     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
384 (*) : 0--0--0-----1--------------
384     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
385     : -0--0--0-----1-------------
385     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
386     : --0--0--0-----1------------
386     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
387 (*) : ---------0-----000---------
387     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
388     : ----------0-------000------
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
389     : -----------0---------000---
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0-------0-0----0-
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
391     : ----------0-------00------0
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
392     : ----------0--------00---0--
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
393     : -----------0---------0-0-0-
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
394     : -----------0---------00---0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
395     : -----------0----------000--
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
396     : ---------0-----0-0-------0-
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
397     : ---------0-----00---------0
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
398     : ---------0------00------0--
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 9
num_suborbits: 1
399 (*) : ----------0-------0------00
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ----------0--------0----0-0
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ----------0---------0---00-
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : -----------0---------0---00
402     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : -----------0----------0-0-0
403     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : -----------0-----------000-
404     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
405     : ---------0-----0---------00
405     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
406     : ---------0------0-------0-0
406     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : ---------0-------0------00-
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
411 (*) : -0-----1-0-----0-0---------
411     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
412     : --0-----10-----00----------
412     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
413     : 0-----1--0------00---------
413     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
414     : ----0--1-0-----0-0---------
414     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
415     : -----0--10-----00----------
415     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
416     : ---0--1--0------00---------
416     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
417     : -0--1-----0-------0-0------
417     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
418     : --0--1----0-------00-------
418     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
419     : 0--1------0--------00------
419     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
420     : ----1--0--0-------0-0------
420     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
421     : -----1--0-0-------00-------
421     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
422     : ---1--0---0--------00------
422     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
423     : -1--0------0---------0-0---
423     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
424     : --1--0-----0---------00----
424     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
425     : 1--0-------0----------00---
425     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
426     : -1-----0---0---------0-0---
426     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
427     : --1-----0--0---------00----
427     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
428     : 1-----0----0----------00---
428     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
429 (*) : -0-----1-0-------0------0--
429     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
430     : --0-----10------0-------0--
430     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
431     : 0-----1--0-------0-------0-
431     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
432     : --0-----10-----0---------0-
432     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
433     : 0-----1--0------0---------0
433     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
434     : -0-----1-0-----0----------0
434     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
435     : ----0--1-0-------0------0--
435     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
436     : -----0--10------0-------0--
436     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
437     : ---0--1--0-------0-------0-
437     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
438     : -----0--10-----0---------0-
438     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
439     : ---0--1--0------0---------0
439     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
440     : ----0--1-0-----0----------0
440     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
441     : -0--1-----0---------0---0--
441     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
442     : --0--1----0--------0----0--
442     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
443     : 0--1------0---------0----0-
443     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
444     : --0--1----0-------0------0-
444     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
445     : 0--1------0--------0------0
445     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
446     : -0--1-----0-------0-------0
446     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
447     : ----1--0--0---------0---0--
447     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
448     : -----1--0-0--------0----0--
448     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
449     : ---1--0---0---------0----0-
449     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
450     : -----1--0-0-------0------0-
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
451     : ---1--0---0--------0------0
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
452     : ----1--0--0-------0-------0
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
453     : -1--0------0-----------00--
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
454     : --1--0-----0----------0-0--
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
455     : 1--0-------0-----------0-0-
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
456     : --1--0-----0---------0---0-
456     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
457     : 1--0-------0----------0---0
457     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
458     : -1--0------0---------0----0
458     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
459     : -1-----0---0-----------00--
459     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
460     : --1-----0--0----------0-0--
460     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
461     : 1-----0----0-----------0-0-
461     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
462     : --1-----0--0---------0---0-
462     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
463     : 1-----0----0----------0---0
463     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
464     : -1-----0---0---------0----0
464     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
465 (*) : -0-----1-0--------------0-0
465     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
466     : --0-----10--------------00-
466     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
467     : 0-----1--0---------------00
467     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
468     : ----0--1-0--------------0-0
468     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
469     : -----0--10--------------00-
469     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
470     : ---0--1--0---------------00
470     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
471     : -0--1-----0-------------0-0
471     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
472     : --0--1----0-------------00-
472     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
473     : 0--1------0--------------00
473     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
474     : ----1--0--0-------------0-0
474     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
475     : -----1--0-0-------------00-
475     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
476     : ---1--0---0--------------00
476     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
477     : -1--0------0------------0-0
477     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
478     : --1--0-----0------------00-
478     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
479     : 1--0-------0-------------00
479     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
480     : -1-----0---0------------0-0
480     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
481     : --1-----0--0------------00-
481     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
482     : 1-----0----0-------------00
482     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 36
num_suborbits: 1
483 (*) : -------0---0-------1---00--
483     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
484     : --------0--0--------1-0-0--
484     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
485     : ------0----0------1----0-0-
485     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
486     : --------0--0--------10---0-
486     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
487     : ------0----0------1---0---0
487     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
488     : -------0---0-------1-0----0
488     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
489     : -------0--0---------0-1-0--
489     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
490     : --------0-0--------0---10--
490     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
491     : ------0---0---------01---0-
491     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
492     : --------0-0-------0----1-0-
492     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
493     : ------0---0--------0-1----0
493     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
494     : -------0--0-------0---1---0
494     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
495     : ----0------0----1------00--
495     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
496     : -----0-----0-----1----0-0--
496     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
497     : ---0-------0---1-------0-0-
497     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
498     : -----0-----0-----1---0---0-
498     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
499     : ---0-------0---1------0---0
499     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
500     : ----0------0----1----0----0
500     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
501     : ----0----0-------0----1-0--
501     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
502     : -----0---0------0------10--
502     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
503     : ---0-----0-------0---1---0-
503     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
504     : -----0---0-----0-------1-0-
504     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
505     : ---0-----0------0----1----0
505     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
506     : ----0----0-----0------1---0
506     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
507     : -0--------0-----1---0---0--
507     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
508     : --0-------0------1-0----0--
508     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
509     : 0---------0----1----0----0-
509     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
510     : --0-------0------10------0-
510     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
511     : 0---------0----1---0------0
511     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
512     : -0--------0-----1-0-------0
512     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
513     : -0-------0-------0-1----0--
513     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
514     : --0------0------0---1---0--
514     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
515     : 0--------0-------01------0-
515     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
516     : --0------0-----0----1----0-
516     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
517     : 0--------0------0-1-------0
517     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
518     : -0-------0-----0---1------0
518     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
519 (*) : -------0---0-------1----0-0
519     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
520     : --------0--0--------1---00-
520     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
521     : ------0----0------1------00
521     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
522     : -------0--0-----------1-0-0
522     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
523     : --------0-0------------100-
523     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
524     : ------0---0----------1---00
524     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : ----0------0----1-------0-0
525     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : -----0-----0-----1------00-
526     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : ---0-------0---1---------00
527     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
528     : ----0----0------------1-0-0
528     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : -----0---0-------------100-
529     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : ---0-----0-----------1---00
530     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -0--------0-----1-------0-0
531     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
532     : --0-------0------1------00-
532     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
533     : 0---------0----1---------00
533     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
534     : -0-------0---------1----0-0
534     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : --0------0----------1---00-
535     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : 0--------0--------1------00
536     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
537 (*) : -------0--00------------0-0
537     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : --------0-00------------00-
538     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ------0---00-------------00
539     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : ----0----0-0------------0-0
540     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : -----0---0-0------------00-
541     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : ---0-----0-0-------------00
542     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -0-------00-------------0-0
543     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0------00-------------00-
544     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0--------00--------------00
545     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
546 (*) : -------0--0-------0-0-1----
546     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
547     : --------0-0-------00---1---
547     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
548     : ------0---0--------001-----
548     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
549     : -------0---0-------1-0-0---
549     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
550     : --------0--0--------100----
550     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
551     : ------0----0------1---00---
551     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
552     : ----0----0-----0-0----1----
552     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
553     : -----0---0-----00------1---
553     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
554     : ---0-----0------00---1-----
554     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
555     : ----0------0----1----0-0---
555     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
556     : -----0-----0-----1---00----
556     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
557     : ---0-------0---1------00---
557     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
558     : -0-------0-----0-0-1-------
558     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
559     : --0------0-----00---1------
559     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
560     : 0--------0------001--------
560     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
561     : -0--------0-----1-0-0------
561     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
562     : --0-------0------100-------
562     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
563     : 0---------0----1---00------
563     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
564 (*) : --0---0---0------1---1---0-
564     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
565     : -0----0---0-----1----1----0
565     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
566     : --0----0--0------1----1-0--
566     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
567     : 0------0--0----1------1---0
567     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
568     : -0------0-0-----1------10--
568     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
569     : 0-------0-0----1-------1-0-
569     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
570     : -----00----0-----11------0-
570     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
571     : ----0-0----0----1-1-------0
571     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
572     : -----0-0---0-----1-1----0--
572     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
573     : ---0---0---0---1---1------0
573     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
574     : ----0---0--0----1---1---0--
574     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
575     : ---0----0--0---1----1----0-
575     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
576     : --00-----0----------11---0-
576     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
577     : -0-0-----0---------1-1----0
577     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
578     : --0-0----0----------1-1-0--
578     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
579     : 0---0----0--------1---1---0
579     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
580     : -0---0---0---------1---10--
580     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
581     : 0----0---0--------1----1-0-
581     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
582 (*) : --0---0---0------1-0-1-----
582     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
583     : -0----0---0-----1---01-----
583     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
584     : --0----0--0------10---1----
584     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
585     : 0------0--0----1----0-1----
585     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
586     : -0------0-0-----1-0----1---
586     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
587     : 0-------0-0----1---0---1---
587     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
588     : -----00----0-----11---0----
588     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
589     : ----0-0----0----1-1----0---
589     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
590     : -----0-0---0-----1-1-0-----
590     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
591     : ---0---0---0---1---1---0---
591     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
592     : ----0---0--0----1---10-----
592     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
593     : ---0----0--0---1----1-0----
593     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
594     : --00-----0------0---11-----
594     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
595     : -0-0-----0-------0-1-1-----
595     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
596     : --0-0----0-----0----1-1----
596     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
597     : 0---0----0-------01---1----
597     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
598     : -0---0---0-----0---1---1---
598     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
599     : 0----0---0------0-1----1---
599     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
600 (*) : 0--0-----0--1---00---------
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
601     : -0--0----0---1-0-0---------
601     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
602     : --0--0---0----100----------
602     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
603     : 0-----0---0-1------00------
603     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
604     : -0-----0--0--1----0-0------
604     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
605     : --0-----0-0---1---00-------
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
606     : ---0--0----01---------00---
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
607     : ----0--0---0-1-------0-0---
607     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
608     : -----0--0--0--1------00----
608     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
609 (*) : 0--0-----0--1----0-------0-
609     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
610     : 0--0-----0--1---0---------0
610     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
611     : -0--0----0---1---0------0--
611     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
612     : -0--0----0---1-0----------0
612     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
613     : --0--0---0----1-0-------0--
613     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
614     : --0--0---0----10---------0-
614     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
615     : 0-----0---0-1-------0----0-
615     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
616     : 0-----0---0-1------0------0
616     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
617     : -0-----0--0--1------0---0--
617     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
618     : -0-----0--0--1----0-------0
618     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
619     : --0-----0-0---1----0----0--
619     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
620     : --0-----0-0---1---0------0-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
621     : ---0--0----01----------0-0-
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
622     : ---0--0----01---------0---0
622     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
623     : ----0--0---0-1---------00--
623     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
624     : ----0--0---0-1-------0----0
624     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
625     : -----0--0--0--1-------0-0--
625     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
626     : -----0--0--0--1------0---0-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1------------00
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
628     : -0--0----0---1----------0-0
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
629     : --0--0---0----1---------00-
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
630     : 0-----0---0-1------------00
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
631     : -0-----0--0--1----------0-0
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
632     : --0-----0-0---1---------00-
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
633     : ---0--0----01------------00
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
634     : ----0--0---0-1----------0-0
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
635     : -----0--0--0--1---------00-
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
636 (*) : --------0-00------0--0---0-
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
637     : -------0--00------0--0----0
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
638     : --------0-00-------0--0-0--
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
639     : ------0---00-------0--0---0
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
640     : -------0--00--------0--00--
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
641     : ------0---00--------0--0-0-
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --0------00----0--0------0-
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
649     : -0-------00----0--0-------0
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
650     : --0------00-----0--0----0--
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
651     : 0--------00-----0--0------0
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
652     : -0-------00------0--0---0--
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
653     : 0--------00------0--0----0-
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 18
num_suborbits: 1
654 (*) : 0----0--000------------1-0-
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
655     : 0---0--0-00-----------1---0
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
656     : -0---0--000------------10--
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
657     : -0-0--0--00----------1----0
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
658     : --0-0--0-00-----------1-0--
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
659     : --00--0--00----------1---0-
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : --0--00---00-----1-------0-
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
667     : -0--0-0---00----1---------0
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
668     : --0--0-0--00-----1------0--
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
669     : 0--0---0--00---1----------0
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
670     : -0--0---0-00----1-------0--
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
671     : 0--0----0-00---1---------0-
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 36
num_suborbits: 1
672 (*) : 0-------000------0-----1-0-
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
673     : 0------0-00-----0-----1---0
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
674     : -0------000------0-----10--
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
675     : -0----0--00----0-----1----0
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
676     : --0----0-00-----0-----1-0--
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
677     : --0---0--00----0-----1---0-
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
678     : ---0----00-0-----0--1----0-
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
679     : ---0---0-0-0----0--1------0
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
680     : ----0---00-0-----0--1---0--
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
681     : ----0-0--0-0---0--1-------0
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
682     : -----0-0-0-0----0--1----0--
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
683     : -----00--0-0---0--1------0-
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
684     : 0----0---00---------0--1-0-
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
685     : 0---0----00--------0--1---0
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
686     : -0---0---00---------0--10--
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
687     : -0-0-----00-------0--1----0
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
688     : --0-0----00--------0--1-0--
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
689     : --00-----00-------0--1---0-
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
690     : -----00---00-----1--0----0-
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
691     : ----0-0---00----1--0------0
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
692     : -----0-0--00-----1--0---0--
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
693     : ---0---0--00---1--0-------0
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
694     : ----0---0-00----1--0----0--
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
695     : ---0----0-00---1--0------0-
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
696     : --00-----0-0--------1--0-0-
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
697     : -0-0-----0-0-------1--0---0
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
698     : --0-0----0-0--------1--00--
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
699     : 0---0----0-0------1--0----0
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
700     : -0---0---0-0-------1--0-0--
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
701     : 0----0---0-0------1--0---0-
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
702     : --0---0---00-----1-----0-0-
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
703     : -0----0---00----1-----0---0
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
704     : --0----0--00-----1-----00--
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
705     : 0------0--00---1-----0----0
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
706     : -0------0-00----1-----0-0--
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
707     : 0-------0-00---1-----0---0-
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 9
num_suborbits: 1
708 (*) : 0--------00-----00-00------
708     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
709     : -0-------00----0-00-0------
709     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
710     : --0------00----00-00-------
710     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
711     : ---0-----0-0----00----00---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
712     : ----0----0-0---0-0---0-0---
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
713     : -----0---0-0---00----00----
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
714     : ------0---00-------00-00---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
715     : -------0--00------0-00-0---
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
716     : --------0-00------00-00----
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
717 (*) : 0----0--000-----0--0---1---
717     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
718     : 0---0--0-00------0--0-1----
718     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
719     : -0---0--000----0--0----1---
719     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
720     : -0-0--0--00------0--01-----
720     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
721     : --0-0--0-00----0--0---1----
721     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
722     : --00--0--00-----0--0-1-----
722     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
723     : --00----00-0----0---1-0----
723     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
724     : -0-0---0-0-0-----0-1---0---
724     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
725     : --0-0---00-0---0----10-----
725     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
726     : 0---0-0--0-0-----01----0---
726     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
727     : -0---0-0-0-0---0---1-0-----
727     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
728     : 0----00--0-0----0-1---0----
728     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
729     : --0--00---00-----1-0--0----
729     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
730     : -0--0-0---00----1---0--0---
730     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
731     : --0--0-0--00-----10--0-----
731     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
732     : 0--0---0--00---1----0--0---
732     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
733     : -0--0---0-00----1-0--0-----
733     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
734     : 0--0----0-00---1---0--0----
734     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 36
num_suborbits: 1
735 (*) : 0----0---00-----0--00--1---
735     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
736     : 0---0----00------0-00-1----
736     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
737     : -0---0---00----0--0-0--1---
737     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
738     : -0-0-----00------00-01-----
738     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
739     : --0-0----00----0--00--1----
739     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
740     : --00-----00-----0-00-1-----
740     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
741     : --00-----0-0----0---1-00---
741     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
742     : -0-0-----0-0-----0-1--00---
742     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
743     : --0-0----0-0---0----10-0---
743     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
744     : 0---0----0-0-----01--0-0---
744     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
745     : -0---0---0-0---0---1-00----
745     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
746     : 0----0---0-0----0-1--00----
746     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
747     : 0-------000-----00-0---1---
747     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
748     : 0------0-00-----00--0-1----
748     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
749     : -0------000----0-00----1---
749     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
750     : -0----0--00----0-0--01-----
750     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
751     : --0----0-00----00-0---1----
751     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
752     : --0---0--00----00--0-1-----
752     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
753     : --0---0---00-----1-0--00---
753     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
754     : -0----0---00----1---0-00---
754     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
755     : --0----0--00-----10--0-0---
755     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
756     : 0------0--00---1----00-0---
756     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
757     : -0------0-00----1-0--00----
757     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
758     : 0-------0-00---1---0-00----
758     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
759     : ---0----00-0----00--1-0----
759     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
760     : ---0---0-0-0----00-1---0---
760     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
761     : ----0---00-0---0-0--10-----
761     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
762     : ----0-0--0-0---0-01----0---
762     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
763     : -----0-0-0-0---00--1-0-----
763     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
764     : -----00--0-0---00-1---0----
764     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
765     : -----00---00-----1-00-0----
765     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
766     : ----0-0---00----1--00--0---
766     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
767     : -----0-0--00-----10-00-----
767     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
768     : ---0---0--00---1--0-0--0---
768     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
769     : ----0---0-00----1-00-0-----
769     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
770     : ---0----0-00---1--00--0----
770     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
771 (*) : --0--00--000---0---------0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
772     : -0--0-0--000---0----------0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
773     : --0--0-0-000----0-------0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
774     : 0--0---0-000----0---------0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
775     : -0--0---0000-----0------0--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
776     : 0--0----0000-----0-------0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : 0----0--0000---------0---0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
784     : 0---0--0-000---------0----0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
785     : -0---0--0000----------0-0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
786     : -0-0--0--000----------0---0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
787     : --0-0--0-000-----------00--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
788     : --00--0--000-----------0-0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
789 (*) : --0---0--000---0-------0-0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
790     : -0----0--000---0------0---0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
791     : --0----0-000----0------00--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
792     : 0------0-000----0----0----0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
793     : -0------0000-----0----0-0--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
794     : 0-------0000-----0---0---0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
795     : -----00--000---0----0----0-
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
796     : ----0-0--000---0---0------0
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
797     : -----0-0-000----0---0---0--
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
798     : ---0---0-000----0-0-------0
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
799     : ----0---0000-----0-0----0--
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
800     : ---0----0000-----00------0-
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
801     : --00-----000------0----0-0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
802     : -0-0-----000------0---0---0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
803     : --0-0----000-------0---00--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
804     : 0---0----000-------0-0----0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
805     : -0---0---000--------0-0-0--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
806     : 0----0---000--------00---0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 18
num_suborbits: 1
807 (*) : 0---0-0--000-----0-00--0---
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
808     : 0----00--000----0--00-0----
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
809     : -0-0---0-000-----00-0--0---
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
810     : -0---0-0-000---0--0-00-----
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
811     : --00----0000----0-00--0----
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
812     : --0-0---0000---0--00-0-----
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
813     : -0-0--0--000-----0--0-00---
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
814     : --00--0--000----0--0--00---
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
815     : 0---0--0-000-----0--00-0---
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
816     : --0-0--0-000---0--0--0-0---
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
817     : 0----0--0000----0--0-00----
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
818     : -0---0--0000---0--0--00----
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
819     : 0--0---0-000----00--0--0---
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
820     : 0--0----0000----00-0--0----
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
821     : -0--0-0--000---0-0--0--0---
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
822     : -0--0---0000---0-00--0-----
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
823     : --0--00--000---00--0--0----
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
824     : --0--0-0-000---00-0--0-----
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 18
num_suborbits: 1
825 (*) : ---0----0000----0000--0----
825     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
826     : ---0---0-000----000-0--0---
826     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
827     : ----0---0000---0-000-0-----
827     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
828     : ----0-0--000---0-0-00--0---
828     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
829     : -----0-0-000---00-0-00-----
829     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
830     : -----00--000---00--00-0----
830     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
831     : 0-------0000----00-0-00----
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
832     : 0------0-000----00--00-0---
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
833     : -0------0000---0-00--00----
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
834     : -0----0--000---0-0--0-00---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
835     : --0----0-000---00-0--0-0---
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
836     : --0---0--000---00--0--00---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
837     : 0----0---000----0--0000----
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
838     : 0---0----000-----0-000-0---
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
839     : -0---0---000---0--0-000----
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
840     : -0-0-----000-----00-0-00---
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
841     : --0-0----000---0--00-0-0---
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
842     : --00-----000----0-00--00---
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 53 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 54 =====================
size : 3
num_suborbits: 1
846 (*) : 0-00-00-0000----0--0--0----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
847     : 00-00-00-000-----0--0--0---
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 55

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 0.450 seconds

[QRM NOTE]: Time elapsed since last: 0.421 seconds

[QRM NOTE]: Peak memory: 2247015 bytes


=============================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=============================================================================================================

definition primes: {3, 37, 39, 10, 11, 46, 47, 48, 19, 20, 51, 22, 52, 54, 27, 31}


New level: 0
 pending : [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : []

Essensial at level 0 : {1}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, 0), (3, -1), (4, 1048576), (5, 0), (6, 0), (7, 1048576), (8, 17179869184), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 0 : {2, 5, 6}

After reduction : 
 pending  : [0, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1]


Before reduction : 
 pending  : [0, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1]

Essensial at level 0 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, 0), (3, -1), (4, 1048576), (5, 0), (6, 0), (7, 1048576), (8, 17179869184), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, 17179869184), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [0, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1]

[QRM NOTE]: Time elapsed since start: 0.546 seconds

[QRM NOTE]: Time elapsed since last: 0.096 seconds

[QRM NOTE]: Peak memory: 1037308 bytes


=================================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=================================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 1 =====================
size : 9
num_suborbits: 1
9 (*) : ---------------------1-1---
9     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
10     : ---------------------11----
10     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
11     : ----------------------11---
11     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
12     : ------------------1-1------
12     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
13     : ------------------11-------
13     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
14     : -------------------11------
14     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
15     : ---------------1-1---------
15     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
16     : ---------------11----------
16     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
17     : ----------------11---------
17     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1--0--
0     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
1     : ----------------------1--0-
1     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
2     : -----------------------1--0
2     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
3     : ------------------1-----0--
3     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
4     : -------------------1-----0-
4     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
5     : --------------------1-----0
5     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
6     : ---------------1--------0--
6     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
7     : ----------------1--------0-
7     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
8     : -----------------1--------0
8     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 1
72 (*) : ---1--------------------0--
72     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
73     : ----1--------------------0-
73     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
74     : -----1--------------------0
74     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
75     : 1-----------------------0--
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
76     : -1-----------------------0-
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
77     : --1-----------------------0
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
78     : ------1-----------------0--
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
79     : -------1-----------------0-
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
80     : --------1-----------------0
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 7 =====================
size : 18
num_suborbits: 1
108 (*) : ---1----------1------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
109     : ---1---------1-------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
110     : ----1---------1------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
111     : ----1-------1--------------
111     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
112     : -----1-------1-------------
112     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
113     : -----1------1--------------
113     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
114     : 1-------------1------------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
115     : 1------------1-------------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
116     : -1------------1------------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
117     : -1----------1--------------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
118     : --1----------1-------------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
119     : --1---------1--------------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
120     : ------1-------1------------
120     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
121     : ------1------1-------------
121     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
122     : -------1------1------------
122     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
123     : -------1----1--------------
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
124     : --------1----1-------------
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
125     : --------1---1--------------
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
126 (*) : ------------1-----------0--
126     : ['leader(proposer0)', '~start(proposer0)']
127     : -------------1-----------0-
127     : ['leader(proposer1)', '~start(proposer1)']
128     : --------------1-----------0
128     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
129 (*) : ------------1-1------------
129     : ['leader(proposer0)', 'leader(proposer2)']
130     : ------------11-------------
130     : ['leader(proposer0)', 'leader(proposer1)']
131     : -------------11------------
131     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
159 (*) : ------0--1--1--------------
159     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
160     : -------0-1---1-------------
160     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
161     : --------01----1------------
161     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
162     : ---0------1-1--------------
162     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
163     : ----0-----1--1-------------
163     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
164     : -----0----1---1------------
164     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
165     : 0----------11--------------
165     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
166     : -0---------1-1-------------
166     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
167     : --0--------1--1------------
167     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
168 (*) : ---------1---1--------0----
168     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
169     : ---------1----1--------0---
169     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
170     : ---------1--1--------0-----
170     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
171     : ---------1---1-----0-------
171     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
172     : ---------1----1-----0------
172     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
173     : ---------1--1-----0--------
173     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
174     : ----------1--1--------0----
174     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
175     : ----------1---1--------0---
175     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
176     : ----------1-1--------0-----
176     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
177     : ----------1--1--0----------
177     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
178     : ----------1---1--0---------
178     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
179     : ----------1-1--0-----------
179     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
180     : -----------1-1-----0-------
180     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
181     : -----------1--1-----0------
181     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
182     : -----------11-----0--------
182     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
183     : -----------1-1--0----------
183     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
184     : -----------1--1--0---------
184     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
185     : -----------11--0-----------
185     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
186 (*) : ---------1---1----1--------
186     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
187     : ---------1----1---1--------
187     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
188     : ---------1--1------1-------
188     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
189     : ---------1----1----1-------
189     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
190     : ---------1--1-------1------
190     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
191     : ---------1---1------1------
191     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
192     : ---------1---1-------1-----
192     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
193     : ---------1----1------1-----
193     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
194     : ---------1--1---------1----
194     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
195     : ---------1----1-------1----
195     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
196     : ---------1--1----------1---
196     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
197     : ---------1---1---------1---
197     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
198     : ----------1--1-1-----------
198     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
199     : ----------1---11-----------
199     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
200     : ----------1-1---1----------
200     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
201     : ----------1---1-1----------
201     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
202     : ----------1-1----1---------
202     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
203     : ----------1--1---1---------
203     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
204     : ----------1--1-------1-----
204     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
205     : ----------1---1------1-----
205     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
206     : ----------1-1---------1----
206     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
207     : ----------1---1-------1----
207     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
208     : ----------1-1----------1---
208     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
209     : ----------1--1---------1---
209     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
210     : -----------1-1-1-----------
210     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
211     : -----------1--11-----------
211     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
212     : -----------11---1----------
212     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
213     : -----------1--1-1----------
213     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
214     : -----------11----1---------
214     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
215     : -----------1-1---1---------
215     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : -----------1-1----1--------
216     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
217     : -----------1--1---1--------
217     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
218     : -----------11------1-------
218     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
219     : -----------1--1----1-------
219     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
220     : -----------11-------1------
220     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
221     : -----------1-1------1------
221     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,PROPOSER1,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
222 (*) : ---------11--1-------------
222     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
223     : ---------11---1------------
223     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
224     : ---------11-1--------------
224     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
225     : ---------1-1-1-------------
225     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
226     : ---------1-1--1------------
226     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
227     : ---------1-11--------------
227     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
228     : ----------11-1-------------
228     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
229     : ----------11--1------------
229     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
230     : ----------111--------------
230     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
231 (*) : --------------1--01--------
231     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
232     : -------------1--0-1--------
232     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
233     : --------------1--0-1-------
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
234     : ------------1--0---1-------
234     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
235     : -------------1--0---1------
235     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
236     : ------------1--0----1------
236     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
237     : --------------1--0---1-----
237     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
238     : -------------1--0----1-----
238     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
239     : --------------1--0----1----
239     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
240     : ------------1--0------1----
240     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
241     : -------------1--0------1---
241     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
242     : ------------1--0-------1---
242     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
243     : --------------11----0------
243     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
244     : -------------1-1---0-------
244     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
245     : --------------1-1---0------
245     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
246     : ------------1---1-0--------
246     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
247     : -------------1---1-0-------
247     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
248     : ------------1----10--------
248     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
249     : --------------1-----01-----
249     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
250     : -------------1-----0-1-----
250     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
251     : --------------1-----0-1----
251     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
252     : ------------1-----0---1----
252     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
253     : -------------1-----0---1---
253     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
254     : ------------1-----0----1---
254     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
255     : --------------11-------0---
255     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
256     : -------------1-1------0----
256     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
257     : --------------1-1------0---
257     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
258     : ------------1---1----0-----
258     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
259     : -------------1---1----0----
259     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
260     : ------------1----1---0-----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
261     : --------------1---1----0---
261     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
262     : -------------1----1---0----
262     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
263     : --------------1----1---0---
263     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
264     : ------------1------1-0-----
264     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
265     : -------------1------1-0----
265     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
266     : ------------1-------10-----
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', '~promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', '~promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,PROPOSER1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
267 (*) : -----0--------1---1--------
267     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
268     : ----0--------1----1--------
268     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
269     : -----0--------1----1-------
269     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
270     : ---0--------1------1-------
270     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
271     : ----0--------1------1------
271     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
272     : ---0--------1-------1------
272     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
273     : --0-----------1------1-----
273     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
274     : -0-----------1-------1-----
274     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
275     : --0-----------1-------1----
275     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
276     : 0-----------1---------1----
276     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
277     : -0-----------1---------1---
277     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
278     : 0-----------1----------1---
278     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
279     : --------0-----11-----------
279     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
280     : -------0-----1-1-----------
280     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
281     : --------0-----1-1----------
281     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
282     : ------0-----1---1----------
282     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
283     : -------0-----1---1---------
283     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
284     : ------0-----1----1---------
284     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
285 (*) : -------------1----1----1---
285     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
286     : --------------1---1---1----
286     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
287     : ------------1------1---1---
287     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
288     : --------------1----1-1-----
288     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
289     : ------------1-------1-1----
289     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
290     : -------------1------11-----
290     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
291     : -------------1-1-------1---
291     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
292     : --------------11------1----
292     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
293     : ------------1---1------1---
293     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
294     : --------------1-1----1-----
294     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
295     : ------------1----1----1----
295     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
296     : -------------1---1---1-----
296     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
297     : -------------1-1----1------
297     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
298     : --------------11---1-------
298     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
299     : ------------1---1---1------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
300     : --------------1-1-1--------
300     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
301     : ------------1----1-1-------
301     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
302     : -------------1---11--------
302     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR0,PROPOSER1,PROPOSER0,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
330 (*) : -------------1-1--1--------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
331     : --------------11--1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
332     : ------------1---1--1-------
332     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
333     : --------------1-1--1-------
333     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
334     : ------------1----1--1------
334     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
335     : -------------1---1--1------
335     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
336     : -------------1-1-----1-----
336     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
337     : --------------11-----1-----
337     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
338     : ------------1---1-----1----
338     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
339     : --------------1-1-----1----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
340     : ------------1----1-----1---
340     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
341     : -------------1---1-----1---
341     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
342     : -------------1----1--1-----
342     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
343     : --------------1---1--1-----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
344     : ------------1------1--1----
344     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
345     : --------------1----1--1----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
346     : ------------1-------1--1---
346     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
347     : -------------1------1--1---
347     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1; proposer$0$promise$1': [proposer$0$promise$1$0; proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1; proposer$0$promise$1': proposer$0$promise$1$0; proposer$0$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
357 (*) : -------0-----1--0----------
357     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
358     : --------0-----1--0---------
358     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
359     : ------0-----1--0-----------
359     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
360     : ----0--------1-----0-------
360     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
361     : -----0--------1-----0------
361     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
362     : ---0--------1-----0--------
362     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
363     : -0-----------1--------0----
363     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
364     : --0-----------1--------0---
364     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
365     : 0-----------1--------0-----
365     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
366 (*) : -------------1--0-----0----
366     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
367     : --------------1--0-----0---
367     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
368     : ------------1--0-----0-----
368     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
369     : -------------1--0--0-------
369     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
370     : --------------1--0--0------
370     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
371     : ------------1--0--0--------
371     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
372     : -------------1-----0--0----
372     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
373     : --------------1-----0--0---
373     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
374     : ------------1-----0--0-----
374     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
375 (*) : 0--0--------1--1-----------
375     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
376     : -0--0--------1--1----------
376     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
377     : --0--0--------1--1---------
377     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
378     : 0-----0-----1-----1--------
378     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : -0-----0-----1-----1-------
379     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : --0-----0-----1-----1------
380     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : ---0--0-----1--------1-----
381     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
382     : ----0--0-----1--------1----
382     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
383     : -----0--0-----1--------1---
383     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', 'leader(PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,QUORUM1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR0,PROPOSER0) | QUORUM0 = QUORUM1


=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
384 (*) : 0--0--0-----1--------------
384     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
385     : -0--0--0-----1-------------
385     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
386     : --0--0--0-----1------------
386     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 28 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0-------0-0----0-
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
391     : ----------0-------00------0
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
392     : ----------0--------00---0--
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
393     : -----------0---------0-0-0-
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
394     : -----------0---------00---0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
395     : -----------0----------000--
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
396     : ---------0-----0-0-------0-
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
397     : ---------0-----00---------0
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
398     : ---------0------00------0--
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 29 =====================
size : 9
num_suborbits: 1
399 (*) : ----------0-------0------00
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ----------0--------0----0-0
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ----------0---------0---00-
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : -----------0---------0---00
402     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : -----------0----------0-0-0
403     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : -----------0-----------000-
404     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
405     : ---------0-----0---------00
405     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
406     : ---------0------0-------0-0
406     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : ---------0-------0------00-
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 30 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
429 (*) : -0-----1-0-------0------0--
429     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
430     : --0-----10------0-------0--
430     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
431     : 0-----1--0-------0-------0-
431     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
432     : --0-----10-----0---------0-
432     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
433     : 0-----1--0------0---------0
433     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
434     : -0-----1-0-----0----------0
434     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
435     : ----0--1-0-------0------0--
435     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
436     : -----0--10------0-------0--
436     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
437     : ---0--1--0-------0-------0-
437     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
438     : -----0--10-----0---------0-
438     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
439     : ---0--1--0------0---------0
439     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
440     : ----0--1-0-----0----------0
440     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
441     : -0--1-----0---------0---0--
441     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
442     : --0--1----0--------0----0--
442     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
443     : 0--1------0---------0----0-
443     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
444     : --0--1----0-------0------0-
444     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
445     : 0--1------0--------0------0
445     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
446     : -0--1-----0-------0-------0
446     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
447     : ----1--0--0---------0---0--
447     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
448     : -----1--0-0--------0----0--
448     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
449     : ---1--0---0---------0----0-
449     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
450     : -----1--0-0-------0------0-
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
451     : ---1--0---0--------0------0
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
452     : ----1--0--0-------0-------0
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
453     : -1--0------0-----------00--
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
454     : --1--0-----0----------0-0--
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
455     : 1--0-------0-----------0-0-
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
456     : --1--0-----0---------0---0-
456     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
457     : 1--0-------0----------0---0
457     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
458     : -1--0------0---------0----0
458     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
459     : -1-----0---0-----------00--
459     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
460     : --1-----0--0----------0-0--
460     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
461     : 1-----0----0-----------0-0-
461     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
462     : --1-----0--0---------0---0-
462     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
463     : 1-----0----0----------0---0
463     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
464     : -1-----0---0---------0----0
464     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER0)', '~start(PROPOSER2)', 'chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | ~chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
465 (*) : -0-----1-0--------------0-0
465     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
466     : --0-----10--------------00-
466     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
467     : 0-----1--0---------------00
467     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
468     : ----0--1-0--------------0-0
468     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
469     : -----0--10--------------00-
469     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
470     : ---0--1--0---------------00
470     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
471     : -0--1-----0-------------0-0
471     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
472     : --0--1----0-------------00-
472     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
473     : 0--1------0--------------00
473     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
474     : ----1--0--0-------------0-0
474     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
475     : -----1--0-0-------------00-
475     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
476     : ---1--0---0--------------00
476     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
477     : -1--0------0------------0-0
477     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
478     : --1--0-----0------------00-
478     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
479     : 1--0-------0-------------00
479     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
480     : -1-----0---0------------0-0
480     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
481     : --1-----0--0------------00-
481     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
482     : 1-----0----0-------------00
482     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 34 =====================
size : 36
num_suborbits: 1
483 (*) : -------0---0-------1---00--
483     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
484     : --------0--0--------1-0-0--
484     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
485     : ------0----0------1----0-0-
485     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
486     : --------0--0--------10---0-
486     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
487     : ------0----0------1---0---0
487     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
488     : -------0---0-------1-0----0
488     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
489     : -------0--0---------0-1-0--
489     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
490     : --------0-0--------0---10--
490     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
491     : ------0---0---------01---0-
491     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
492     : --------0-0-------0----1-0-
492     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
493     : ------0---0--------0-1----0
493     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
494     : -------0--0-------0---1---0
494     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
495     : ----0------0----1------00--
495     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
496     : -----0-----0-----1----0-0--
496     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
497     : ---0-------0---1-------0-0-
497     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
498     : -----0-----0-----1---0---0-
498     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
499     : ---0-------0---1------0---0
499     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
500     : ----0------0----1----0----0
500     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
501     : ----0----0-------0----1-0--
501     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
502     : -----0---0------0------10--
502     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
503     : ---0-----0-------0---1---0-
503     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
504     : -----0---0-----0-------1-0-
504     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
505     : ---0-----0------0----1----0
505     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
506     : ----0----0-----0------1---0
506     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
507     : -0--------0-----1---0---0--
507     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
508     : --0-------0------1-0----0--
508     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
509     : 0---------0----1----0----0-
509     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
510     : --0-------0------10------0-
510     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
511     : 0---------0----1---0------0
511     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
512     : -0--------0-----1-0-------0
512     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
513     : -0-------0-------0-1----0--
513     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
514     : --0------0------0---1---0--
514     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
515     : 0--------0-------01------0-
515     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
516     : --0------0-----0----1----0-
516     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
517     : 0--------0------0-1-------0
517     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
518     : -0-------0-----0---1------0
518     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~promise(ACCEPTOR1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~promise(ACCEPTOR0,PROPOSER0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
519 (*) : -------0---0-------1----0-0
519     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
520     : --------0--0--------1---00-
520     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
521     : ------0----0------1------00
521     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
522     : -------0--0-----------1-0-0
522     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
523     : --------0-0------------100-
523     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
524     : ------0---0----------1---00
524     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : ----0------0----1-------0-0
525     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : -----0-----0-----1------00-
526     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : ---0-------0---1---------00
527     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
528     : ----0----0------------1-0-0
528     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : -----0---0-------------100-
529     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : ---0-----0-----------1---00
530     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -0--------0-----1-------0-0
531     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
532     : --0-------0------1------00-
532     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
533     : 0---------0----1---------00
533     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
534     : -0-------0---------1----0-0
534     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : --0------0----------1---00-
535     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : 0--------0--------1------00
536     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
537 (*) : -------0--00------------0-0
537     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : --------0-00------------00-
538     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ------0---00-------------00
539     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : ----0----0-0------------0-0
540     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : -----0---0-0------------00-
541     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : ---0-----0-0-------------00
542     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -0-------00-------------0-0
543     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0------00-------------00-
544     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0--------00--------------00
545     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
564 (*) : --0---0---0------1---1---0-
564     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
565     : -0----0---0-----1----1----0
565     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
566     : --0----0--0------1----1-0--
566     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
567     : 0------0--0----1------1---0
567     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
568     : -0------0-0-----1------10--
568     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
569     : 0-------0-0----1-------1-0-
569     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
570     : -----00----0-----11------0-
570     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
571     : ----0-0----0----1-1-------0
571     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
572     : -----0-0---0-----1-1----0--
572     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
573     : ---0---0---0---1---1------0
573     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
574     : ----0---0--0----1---1---0--
574     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
575     : ---0----0--0---1----1----0-
575     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
576     : --00-----0----------11---0-
576     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
577     : -0-0-----0---------1-1----0
577     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
578     : --0-0----0----------1-1-0--
578     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
579     : 0---0----0--------1---1---0
579     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
580     : -0---0---0---------1---10--
580     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
581     : 0----0---0--------1----1-0-
581     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$promise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR2,PROPOSER0)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR1,ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. ~promise(ACCEPTOR2,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
600 (*) : 0--0-----0--1---00---------
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
601     : -0--0----0---1-0-0---------
601     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
602     : --0--0---0----100----------
602     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
603     : 0-----0---0-1------00------
603     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
604     : -0-----0--0--1----0-0------
604     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
605     : --0-----0-0---1---00-------
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
606     : ---0--0----01---------00---
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
607     : ----0--0---0-1-------0-0---
607     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
608     : -----0--0--0--1------00----
608     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
609 (*) : 0--0-----0--1----0-------0-
609     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
610     : 0--0-----0--1---0---------0
610     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
611     : -0--0----0---1---0------0--
611     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
612     : -0--0----0---1-0----------0
612     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
613     : --0--0---0----1-0-------0--
613     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
614     : --0--0---0----10---------0-
614     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
615     : 0-----0---0-1-------0----0-
615     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
616     : 0-----0---0-1------0------0
616     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
617     : -0-----0--0--1------0---0--
617     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
618     : -0-----0--0--1----0-------0
618     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
619     : --0-----0-0---1----0----0--
619     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
620     : --0-----0-0---1---0------0-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
621     : ---0--0----01----------0-0-
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
622     : ---0--0----01---------0---0
622     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
623     : ----0--0---0-1---------00--
623     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
624     : ----0--0---0-1-------0----0
624     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
625     : -----0--0--0--1-------0-0--
625     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
626     : -----0--0--0--1------0---0-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER0)', 'leader(PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 42 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1------------00
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
628     : -0--0----0---1----------0-0
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
629     : --0--0---0----1---------00-
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
630     : 0-----0---0-1------------00
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
631     : -0-----0--0--1----------0-0
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
632     : --0-----0-0---1---------00-
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
633     : ---0--0----01------------00
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
634     : ----0--0---0-1----------0-0
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
635     : -----0--0--0--1---------00-
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
636 (*) : --------0-00------0--0---0-
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
637     : -------0--00------0--0----0
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
638     : --------0-00-------0--0-0--
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
639     : ------0---00-------0--0---0
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
640     : -------0--00--------0--00--
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
641     : ------0---00--------0--0-0-
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --0------00----0--0------0-
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
649     : -0-------00----0--0-------0
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
650     : --0------00-----0--0----0--
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
651     : 0--------00-----0--0------0
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
652     : -0-------00------0--0---0--
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
653     : 0--------00------0--0----0-
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~promise(ACCEPTOR1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)


=== Prime Orbit 44 =====================
size : 18
num_suborbits: 1
654 (*) : 0----0--000------------1-0-
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
655     : 0---0--0-00-----------1---0
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
656     : -0---0--000------------10--
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
657     : -0-0--0--00----------1----0
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
658     : --0-0--0-00-----------1-0--
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
659     : --00--0--00----------1---0-
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : --0--00---00-----1-------0-
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
667     : -0--0-0---00----1---------0
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
668     : --0--0-0--00-----1------0--
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
669     : 0--0---0--00---1----------0
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
670     : -0--0---0-00----1-------0--
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
671     : 0--0----0-00---1---------0-
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$2, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR1,ACCEPTOR0,QUORUM2,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 45 =====================
size : 36
num_suborbits: 1
672 (*) : 0-------000------0-----1-0-
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
673     : 0------0-00-----0-----1---0
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
674     : -0------000------0-----10--
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
675     : -0----0--00----0-----1----0
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
676     : --0----0-00-----0-----1-0--
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
677     : --0---0--00----0-----1---0-
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
678     : ---0----00-0-----0--1----0-
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
679     : ---0---0-0-0----0--1------0
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
680     : ----0---00-0-----0--1---0--
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
681     : ----0-0--0-0---0--1-------0
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
682     : -----0-0-0-0----0--1----0--
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
683     : -----00--0-0---0--1------0-
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
684     : 0----0---00---------0--1-0-
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
685     : 0---0----00--------0--1---0
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
686     : -0---0---00---------0--10--
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
687     : -0-0-----00-------0--1----0
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
688     : --0-0----00--------0--1-0--
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
689     : --00-----00-------0--1---0-
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
690     : -----00---00-----1--0----0-
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
691     : ----0-0---00----1--0------0
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
692     : -----0-0--00-----1--0---0--
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
693     : ---0---0--00---1--0-------0
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
694     : ----0---0-00----1--0----0--
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
695     : ---0----0-00---1--0------0-
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
696     : --00-----0-0--------1--0-0-
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
697     : -0-0-----0-0-------1--0---0
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
698     : --0-0----0-0--------1--00--
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
699     : 0---0----0-0------1--0----0
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
700     : -0---0---0-0-------1--0-0--
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
701     : 0----0---0-0------1--0---0-
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
702     : --0---0---00-----1-----0-0-
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
703     : -0----0---00----1-----0---0
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
704     : --0----0--00-----1-----00--
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
705     : 0------0--00---1-----0----0
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
706     : -0------0-00----1-----0-0--
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
707     : 0-------0-00---1-----0---0-
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '1$promise': 1, '0$promise': 1, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR1,QUORUM1)', '~promise(ACCEPTOR2,PROPOSER0)', '~didNotPromise(ACCEPTOR2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR1,ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
771 (*) : --0--00--000---0---------0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
772     : -0--0-0--000---0----------0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
773     : --0--0-0-000----0-------0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
774     : 0--0---0-000----0---------0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
775     : -0--0---0000-----0------0--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
776     : 0--0----0000-----0-------0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : 0----0--0000---------0---0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
784     : 0---0--0-000---------0----0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
785     : -0---0--0000----------0-0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
786     : -0-0--0--000----------0---0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
787     : --0-0--0-000-----------00--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
788     : --00--0--000-----------0-0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$2, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$2; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$2; proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM2)', '~promise(ACCEPTOR2,PROPOSER1)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR1,ACCEPTOR0,QUORUM2,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | promise(ACCEPTOR2,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
789 (*) : --0---0--000---0-------0-0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
790     : -0----0--000---0------0---0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
791     : --0----0-000----0------00--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
792     : 0------0-000----0----0----0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
793     : -0------0000-----0----0-0--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
794     : 0-------0000-----0---0---0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
795     : -----00--000---0----0----0-
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
796     : ----0-0--000---0---0------0
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
797     : -----0-0-000----0---0---0--
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
798     : ---0---0-000----0-0-------0
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
799     : ----0---0000-----0-0----0--
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
800     : ---0----0000-----00------0-
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
801     : --00-----000------0----0-0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
802     : -0-0-----000------0---0---0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
803     : --0-0----000-------0---00--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
804     : 0---0----000-------0-0----0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
805     : -0---0---000--------0-0-0--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
806     : 0----0---000--------00---0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$1$promise$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR2,PROPOSER1)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR1,ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. promise(ACCEPTOR2,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 53 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2, quorum$0$member$1$4, quorum$0$member$1$5], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2, acceptor$0$member$0$4], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '1$member': 3, '0$member': 6}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', 'member(ACCEPTOR1,QUORUM2)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER0)', '~chosenAt(QUORUM2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR1,ACCEPTOR0,QUORUM2,QUORUM0,PROPOSER1,ACCEPTOR2. start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)


===========================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===========================================================================================================================


=== Prime Orbit 1 =====================
size : 9
num_suborbits: 1
9 (*) : ---------------------1-1---
9     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
10     : ---------------------11----
10     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
11     : ----------------------11---
11     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
12     : ------------------1-1------
12     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
13     : ------------------11-------
13     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
14     : -------------------11------
14     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
15     : ---------------1-1---------
15     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
16     : ---------------11----------
16     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
17     : ----------------11---------
17     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : ---------------------1--0--
0     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
1     : ----------------------1--0-
1     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
2     : -----------------------1--0
2     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
3     : ------------------1-----0--
3     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
4     : -------------------1-----0-
4     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
5     : --------------------1-----0
5     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
6     : ---------------1--------0--
6     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
7     : ----------------1--------0-
7     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
8     : -----------------1--------0
8     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 4 =====================
size : 9
num_suborbits: 1
72 (*) : ---1--------------------0--
72     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
73     : ----1--------------------0-
73     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
74     : -----1--------------------0
74     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
75     : 1-----------------------0--
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
76     : -1-----------------------0-
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
77     : --1-----------------------0
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
78     : ------1-----------------0--
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
79     : -------1-----------------0-
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
80     : --------1-----------------0
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 7 =====================
size : 18
num_suborbits: 1
108 (*) : ---1----------1------------
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
109     : ---1---------1-------------
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
110     : ----1---------1------------
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
111     : ----1-------1--------------
111     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
112     : -----1-------1-------------
112     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
113     : -----1------1--------------
113     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
114     : 1-------------1------------
114     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
115     : 1------------1-------------
115     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
116     : -1------------1------------
116     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
117     : -1----------1--------------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
118     : --1----------1-------------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
119     : --1---------1--------------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
120     : ------1-------1------------
120     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
121     : ------1------1-------------
121     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
122     : -------1------1------------
122     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
123     : -------1----1--------------
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
124     : --------1----1-------------
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
125     : --------1---1--------------
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,QUORUM0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
126 (*) : ------------1-----------0--
126     : ['leader(proposer0)', '~start(proposer0)']
127     : -------------1-----------0-
127     : ['leader(proposer1)', '~start(proposer1)']
128     : --------------1-----------0
128     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
129 (*) : ------------1-1------------
129     : ['leader(proposer0)', 'leader(proposer2)']
130     : ------------11-------------
130     : ['leader(proposer0)', 'leader(proposer1)']
131     : -------------11------------
131     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
159 (*) : ------0--1--1--------------
159     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
160     : -------0-1---1-------------
160     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
161     : --------01----1------------
161     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
162     : ---0------1-1--------------
162     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
163     : ----0-----1--1-------------
163     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
164     : -----0----1---1------------
164     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
165     : 0----------11--------------
165     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
166     : -0---------1-1-------------
166     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
167     : --0--------1--1------------
167     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 13 =====================
size : 18
num_suborbits: 1
168 (*) : ---------1---1--------0----
168     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
169     : ---------1----1--------0---
169     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
170     : ---------1--1--------0-----
170     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
171     : ---------1---1-----0-------
171     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
172     : ---------1----1-----0------
172     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
173     : ---------1--1-----0--------
173     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
174     : ----------1--1--------0----
174     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
175     : ----------1---1--------0---
175     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
176     : ----------1-1--------0-----
176     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
177     : ----------1--1--0----------
177     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
178     : ----------1---1--0---------
178     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
179     : ----------1-1--0-----------
179     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
180     : -----------1-1-----0-------
180     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
181     : -----------1--1-----0------
181     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
182     : -----------11-----0--------
182     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
183     : -----------1-1--0----------
183     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
184     : -----------1--1--0---------
184     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
185     : -----------11--0-----------
185     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
186 (*) : ---------1---1----1--------
186     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
187     : ---------1----1---1--------
187     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
188     : ---------1--1------1-------
188     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
189     : ---------1----1----1-------
189     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
190     : ---------1--1-------1------
190     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
191     : ---------1---1------1------
191     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
192     : ---------1---1-------1-----
192     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
193     : ---------1----1------1-----
193     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
194     : ---------1--1---------1----
194     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
195     : ---------1----1-------1----
195     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
196     : ---------1--1----------1---
196     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
197     : ---------1---1---------1---
197     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
198     : ----------1--1-1-----------
198     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
199     : ----------1---11-----------
199     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
200     : ----------1-1---1----------
200     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
201     : ----------1---1-1----------
201     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
202     : ----------1-1----1---------
202     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
203     : ----------1--1---1---------
203     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
204     : ----------1--1-------1-----
204     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
205     : ----------1---1------1-----
205     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
206     : ----------1-1---------1----
206     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
207     : ----------1---1-------1----
207     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
208     : ----------1-1----------1---
208     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
209     : ----------1--1---------1---
209     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
210     : -----------1-1-1-----------
210     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
211     : -----------1--11-----------
211     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
212     : -----------11---1----------
212     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
213     : -----------1--1-1----------
213     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
214     : -----------11----1---------
214     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
215     : -----------1-1---1---------
215     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : -----------1-1----1--------
216     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
217     : -----------1--1---1--------
217     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
218     : -----------11------1-------
218     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
219     : -----------1--1----1-------
219     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
220     : -----------11-------1------
220     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
221     : -----------1-1------1------
221     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR1,PROPOSER1,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
222 (*) : ---------11--1-------------
222     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
223     : ---------11---1------------
223     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
224     : ---------11-1--------------
224     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
225     : ---------1-1-1-------------
225     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
226     : ---------1-1--1------------
226     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
227     : ---------1-11--------------
227     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
228     : ----------11-1-------------
228     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
229     : ----------11--1------------
229     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
230     : ----------111--------------
230     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 16 =====================
size : 36
num_suborbits: 1
231 (*) : --------------1--01--------
231     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
232     : -------------1--0-1--------
232     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
233     : --------------1--0-1-------
233     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
234     : ------------1--0---1-------
234     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
235     : -------------1--0---1------
235     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
236     : ------------1--0----1------
236     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
237     : --------------1--0---1-----
237     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
238     : -------------1--0----1-----
238     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
239     : --------------1--0----1----
239     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
240     : ------------1--0------1----
240     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
241     : -------------1--0------1---
241     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
242     : ------------1--0-------1---
242     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
243     : --------------11----0------
243     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
244     : -------------1-1---0-------
244     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
245     : --------------1-1---0------
245     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
246     : ------------1---1-0--------
246     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
247     : -------------1---1-0-------
247     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
248     : ------------1----10--------
248     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
249     : --------------1-----01-----
249     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
250     : -------------1-----0-1-----
250     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
251     : --------------1-----0-1----
251     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
252     : ------------1-----0---1----
252     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
253     : -------------1-----0---1---
253     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
254     : ------------1-----0----1---
254     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
255     : --------------11-------0---
255     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
256     : -------------1-1------0----
256     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
257     : --------------1-1------0---
257     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
258     : ------------1---1----0-----
258     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
259     : -------------1---1----0----
259     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
260     : ------------1----1---0-----
260     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
261     : --------------1---1----0---
261     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
262     : -------------1----1---0----
262     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
263     : --------------1----1---0---
263     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
264     : ------------1------1-0-----
264     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
265     : -------------1------1-0----
265     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
266     : ------------1-------10-----
266     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR1,PROPOSER1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 17 =====================
size : 18
num_suborbits: 1
267 (*) : -----0--------1---1--------
267     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
268     : ----0--------1----1--------
268     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
269     : -----0--------1----1-------
269     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
270     : ---0--------1------1-------
270     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
271     : ----0--------1------1------
271     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
272     : ---0--------1-------1------
272     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
273     : --0-----------1------1-----
273     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
274     : -0-----------1-------1-----
274     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
275     : --0-----------1-------1----
275     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
276     : 0-----------1---------1----
276     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
277     : -0-----------1---------1---
277     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
278     : 0-----------1----------1---
278     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
279     : --------0-----11-----------
279     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
280     : -------0-----1-1-----------
280     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
281     : --------0-----1-1----------
281     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
282     : ------0-----1---1----------
282     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
283     : -------0-----1---1---------
283     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
284     : ------0-----1----1---------
284     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,QUORUM0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
285 (*) : -------------1----1----1---
285     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
286     : --------------1---1---1----
286     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
287     : ------------1------1---1---
287     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
288     : --------------1----1-1-----
288     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
289     : ------------1-------1-1----
289     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
290     : -------------1------11-----
290     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
291     : -------------1-1-------1---
291     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
292     : --------------11------1----
292     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
293     : ------------1---1------1---
293     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
294     : --------------1-1----1-----
294     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
295     : ------------1----1----1----
295     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
296     : -------------1---1---1-----
296     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
297     : -------------1-1----1------
297     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
298     : --------------11---1-------
298     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
299     : ------------1---1---1------
299     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
300     : --------------1-1-1--------
300     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
301     : ------------1----1-1-------
301     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
302     : -------------1---11--------
302     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
num_forall :   5
num_exists :   0
num_literals : 7
quantified form : forall PROPOSER2,ACCEPTOR0,PROPOSER1,PROPOSER0,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 12




=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
330 (*) : -------------1-1--1--------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
331     : --------------11--1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
332     : ------------1---1--1-------
332     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
333     : --------------1-1--1-------
333     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
334     : ------------1----1--1------
334     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
335     : -------------1---1--1------
335     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
336     : -------------1-1-----1-----
336     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
337     : --------------11-----1-----
337     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
338     : ------------1---1-----1----
338     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
339     : --------------1-1-----1----
339     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
340     : ------------1----1-----1---
340     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
341     : -------------1---1-----1---
341     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
342     : -------------1----1--1-----
342     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
343     : --------------1---1--1-----
343     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
344     : ------------1------1--1----
344     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
345     : --------------1----1--1----
345     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
346     : ------------1-------1--1---
346     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
347     : -------------1------1--1---
347     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR1,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
357 (*) : -------0-----1--0----------
357     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
358     : --------0-----1--0---------
358     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
359     : ------0-----1--0-----------
359     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
360     : ----0--------1-----0-------
360     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
361     : -----0--------1-----0------
361     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
362     : ---0--------1-----0--------
362     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
363     : -0-----------1--------0----
363     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
364     : --0-----------1--------0---
364     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
365     : 0-----------1--------0-----
365     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)
qcost : 7




=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
366 (*) : -------------1--0-----0----
366     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
367     : --------------1--0-----0---
367     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
368     : ------------1--0-----0-----
368     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
369     : -------------1--0--0-------
369     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
370     : --------------1--0--0------
370     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
371     : ------------1--0--0--------
371     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
372     : -------------1-----0--0----
372     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
373     : --------------1-----0--0---
373     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
374     : ------------1-----0--0-----
374     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR1,ACCEPTOR0. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 25 =====================
size : 9
num_suborbits: 1
375 (*) : 0--0--------1--1-----------
375     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
376     : -0--0--------1--1----------
376     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
377     : --0--0--------1--1---------
377     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
378     : 0-----0-----1-----1--------
378     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : -0-----0-----1-----1-------
379     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : --0-----0-----1-----1------
380     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : ---0--0-----1--------1-----
381     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
382     : ----0--0-----1--------1----
382     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
383     : -----0--0-----1--------1---
383     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall PROPOSER0,QUORUM0,QUORUM1,ACCEPTOR0. chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR0,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 26 =====================
size : 3
num_suborbits: 1
384 (*) : 0--0--0-----1--------------
384     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
385     : -0--0--0-----1-------------
385     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
386     : --0--0--0-----1------------
386     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 28 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0-------0-0----0-
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
391     : ----------0-------00------0
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
392     : ----------0--------00---0--
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
393     : -----------0---------0-0-0-
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
394     : -----------0---------00---0
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
395     : -----------0----------000--
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
396     : ---------0-----0-0-------0-
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
397     : ---------0-----00---------0
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
398     : ---------0------00------0--
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 29 =====================
size : 9
num_suborbits: 1
399 (*) : ----------0-------0------00
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
400     : ----------0--------0----0-0
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ----------0---------0---00-
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
402     : -----------0---------0---00
402     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
403     : -----------0----------0-0-0
403     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : -----------0-----------000-
404     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
405     : ---------0-----0---------00
405     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
406     : ---------0------0-------0-0
406     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : ---------0-------0------00-
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 30 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
429 (*) : -0-----1-0-------0------0--
429     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
430     : --0-----10------0-------0--
430     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
431     : 0-----1--0-------0-------0-
431     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
432     : --0-----10-----0---------0-
432     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
433     : 0-----1--0------0---------0
433     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
434     : -0-----1-0-----0----------0
434     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
435     : ----0--1-0-------0------0--
435     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
436     : -----0--10------0-------0--
436     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
437     : ---0--1--0-------0-------0-
437     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
438     : -----0--10-----0---------0-
438     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
439     : ---0--1--0------0---------0
439     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
440     : ----0--1-0-----0----------0
440     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
441     : -0--1-----0---------0---0--
441     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
442     : --0--1----0--------0----0--
442     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
443     : 0--1------0---------0----0-
443     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
444     : --0--1----0-------0------0-
444     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
445     : 0--1------0--------0------0
445     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
446     : -0--1-----0-------0-------0
446     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
447     : ----1--0--0---------0---0--
447     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
448     : -----1--0-0--------0----0--
448     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
449     : ---1--0---0---------0----0-
449     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
450     : -----1--0-0-------0------0-
450     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
451     : ---1--0---0--------0------0
451     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
452     : ----1--0--0-------0-------0
452     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
453     : -1--0------0-----------00--
453     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
454     : --1--0-----0----------0-0--
454     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
455     : 1--0-------0-----------0-0-
455     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
456     : --1--0-----0---------0---0-
456     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
457     : 1--0-------0----------0---0
457     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
458     : -1--0------0---------0----0
458     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
459     : -1-----0---0-----------00--
459     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
460     : --1-----0--0----------0-0--
460     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
461     : 1-----0----0-----------0-0-
461     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
462     : --1-----0--0---------0---0-
462     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
463     : 1-----0----0----------0---0
463     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
464     : -1-----0---0---------0----0
464     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall QUORUM1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | ~chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 33 =====================
size : 18
num_suborbits: 1
465 (*) : -0-----1-0--------------0-0
465     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
466     : --0-----10--------------00-
466     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
467     : 0-----1--0---------------00
467     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
468     : ----0--1-0--------------0-0
468     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
469     : -----0--10--------------00-
469     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
470     : ---0--1--0---------------00
470     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
471     : -0--1-----0-------------0-0
471     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
472     : --0--1----0-------------00-
472     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
473     : 0--1------0--------------00
473     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
474     : ----1--0--0-------------0-0
474     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
475     : -----1--0-0-------------00-
475     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
476     : ---1--0---0--------------00
476     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
477     : -1--0------0------------0-0
477     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
478     : --1--0-----0------------00-
478     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
479     : 1--0-------0-------------00
479     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
480     : -1-----0---0------------0-0
480     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
481     : --1-----0--0------------00-
481     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
482     : 1-----0----0-------------00
482     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0. ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 34 =====================
size : 36
num_suborbits: 1
483 (*) : -------0---0-------1---00--
483     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
484     : --------0--0--------1-0-0--
484     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
485     : ------0----0------1----0-0-
485     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
486     : --------0--0--------10---0-
486     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
487     : ------0----0------1---0---0
487     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
488     : -------0---0-------1-0----0
488     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
489     : -------0--0---------0-1-0--
489     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
490     : --------0-0--------0---10--
490     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
491     : ------0---0---------01---0-
491     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
492     : --------0-0-------0----1-0-
492     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
493     : ------0---0--------0-1----0
493     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
494     : -------0--0-------0---1---0
494     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
495     : ----0------0----1------00--
495     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
496     : -----0-----0-----1----0-0--
496     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
497     : ---0-------0---1-------0-0-
497     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
498     : -----0-----0-----1---0---0-
498     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
499     : ---0-------0---1------0---0
499     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
500     : ----0------0----1----0----0
500     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
501     : ----0----0-------0----1-0--
501     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
502     : -----0---0------0------10--
502     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
503     : ---0-----0-------0---1---0-
503     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
504     : -----0---0-----0-------1-0-
504     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
505     : ---0-----0------0----1----0
505     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
506     : ----0----0-----0------1---0
506     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
507     : -0--------0-----1---0---0--
507     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
508     : --0-------0------1-0----0--
508     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
509     : 0---------0----1----0----0-
509     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
510     : --0-------0------10------0-
510     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
511     : 0---------0----1---0------0
511     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
512     : -0--------0-----1-0-------0
512     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
513     : -0-------0-------0-1----0--
513     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
514     : --0------0------0---1---0--
514     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
515     : 0--------0-------01------0-
515     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
516     : --0------0-----0----1----0-
516     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
517     : 0--------0------0-1-------0
517     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
518     : -0-------0-----0---1------0
518     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall ACCEPTOR1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~promise(ACCEPTOR0,PROPOSER0) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
519 (*) : -------0---0-------1----0-0
519     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
520     : --------0--0--------1---00-
520     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
521     : ------0----0------1------00
521     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
522     : -------0--0-----------1-0-0
522     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
523     : --------0-0------------100-
523     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
524     : ------0---0----------1---00
524     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
525     : ----0------0----1-------0-0
525     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
526     : -----0-----0-----1------00-
526     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
527     : ---0-------0---1---------00
527     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
528     : ----0----0------------1-0-0
528     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
529     : -----0---0-------------100-
529     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
530     : ---0-----0-----------1---00
530     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -0--------0-----1-------0-0
531     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
532     : --0-------0------1------00-
532     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
533     : 0---------0----1---------00
533     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
534     : -0-------0---------1----0-0
534     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
535     : --0------0----------1---00-
535     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
536     : 0--------0--------1------00
536     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
537 (*) : -------0--00------------0-0
537     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : --------0-00------------00-
538     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ------0---00-------------00
539     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : ----0----0-0------------0-0
540     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : -----0---0-0------------00-
541     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : ---0-----0-0-------------00
542     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -0-------00-------------0-0
543     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0------00-------------00-
544     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0--------00--------------00
545     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,QUORUM0,PROPOSER1,ACCEPTOR0. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
564 (*) : --0---0---0------1---1---0-
564     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
565     : -0----0---0-----1----1----0
565     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
566     : --0----0--0------1----1-0--
566     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
567     : 0------0--0----1------1---0
567     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
568     : -0------0-0-----1------10--
568     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
569     : 0-------0-0----1-------1-0-
569     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
570     : -----00----0-----11------0-
570     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
571     : ----0-0----0----1-1-------0
571     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
572     : -----0-0---0-----1-1----0--
572     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
573     : ---0---0---0---1---1------0
573     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
574     : ----0---0--0----1---1---0--
574     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
575     : ---0----0--0---1----1----0-
575     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
576     : --00-----0----------11---0-
576     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
577     : -0-0-----0---------1-1----0
577     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
578     : --0-0----0----------1-1-0--
578     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
579     : 0---0----0--------1---1---0
579     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
580     : -0---0---0---------1---10--
580     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
581     : 0----0---0--------1----1-0-
581     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall QUORUM1,ACCEPTOR1,ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. ~promise(ACCEPTOR2,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 27




=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
600 (*) : 0--0-----0--1---00---------
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
601     : -0--0----0---1-0-0---------
601     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
602     : --0--0---0----100----------
602     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
603     : 0-----0---0-1------00------
603     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
604     : -0-----0--0--1----0-0------
604     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
605     : --0-----0-0---1---00-------
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
606     : ---0--0----01---------00---
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
607     : ----0--0---0-1-------0-0---
607     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
608     : -----0--0--0--1------00----
608     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
609 (*) : 0--0-----0--1----0-------0-
609     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
610     : 0--0-----0--1---0---------0
610     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
611     : -0--0----0---1---0------0--
611     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
612     : -0--0----0---1-0----------0
612     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
613     : --0--0---0----1-0-------0--
613     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
614     : --0--0---0----10---------0-
614     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
615     : 0-----0---0-1-------0----0-
615     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
616     : 0-----0---0-1------0------0
616     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
617     : -0-----0--0--1------0---0--
617     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
618     : -0-----0--0--1----0-------0
618     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
619     : --0-----0-0---1----0----0--
619     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
620     : --0-----0-0---1---0------0-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
621     : ---0--0----01----------0-0-
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
622     : ---0--0----01---------0---0
622     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
623     : ----0--0---0-1---------00--
623     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
624     : ----0--0---0-1-------0----0
624     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
625     : -----0--0--0--1-------0-0--
625     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
626     : -----0--0--0--1------0---0-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall QUORUM1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 42 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1------------00
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
628     : -0--0----0---1----------0-0
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
629     : --0--0---0----1---------00-
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
630     : 0-----0---0-1------------00
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
631     : -0-----0--0--1----------0-0
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
632     : --0-----0-0---1---------00-
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
633     : ---0--0----01------------00
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
634     : ----0--0---0-1----------0-0
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
635     : -----0--0--0--1---------00-
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0. chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | ~leader(PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 43 =====================
size : 18
num_suborbits: 1
636 (*) : --------0-00------0--0---0-
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
637     : -------0--00------0--0----0
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
638     : --------0-00-------0--0-0--
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
639     : ------0---00-------0--0---0
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
640     : -------0--00--------0--00--
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
641     : ------0---00--------0--0-0-
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
642     : -----0---0-0---0-----0---0-
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
643     : ----0----0-0---0-----0----0
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
644     : -----0---0-0----0-----0-0--
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
645     : ---0-----0-0----0-----0---0
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
646     : ----0----0-0-----0-----00--
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
647     : ---0-----0-0-----0-----0-0-
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
648     : --0------00----0--0------0-
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
649     : -0-------00----0--0-------0
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
650     : --0------00-----0--0----0--
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
651     : 0--------00-----0--0------0
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
652     : -0-------00------0--0---0--
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
653     : 0--------00------0--0----0-
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall ACCEPTOR1,ACCEPTOR0,QUORUM0,PROPOSER1,PROPOSER0,PROPOSER2. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | (PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 44 =====================
size : 18
num_suborbits: 1
654 (*) : 0----0--000------------1-0-
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
655     : 0---0--0-00-----------1---0
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
656     : -0---0--000------------10--
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
657     : -0-0--0--00----------1----0
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
658     : --0-0--0-00-----------1-0--
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
659     : --00--0--00----------1---0-
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : --0--00---00-----1-------0-
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
667     : -0--0-0---00----1---------0
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
668     : --0--0-0--00-----1------0--
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
669     : 0--0---0--00---1----------0
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
670     : -0--0---0-00----1-------0--
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
671     : 0--0----0-00---1---------0-
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall QUORUM1,ACCEPTOR1,ACCEPTOR0,QUORUM2,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 34




=== Prime Orbit 45 =====================
size : 36
num_suborbits: 1
672 (*) : 0-------000------0-----1-0-
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
673     : 0------0-00-----0-----1---0
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
674     : -0------000------0-----10--
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
675     : -0----0--00----0-----1----0
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
676     : --0----0-00-----0-----1-0--
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
677     : --0---0--00----0-----1---0-
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
678     : ---0----00-0-----0--1----0-
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
679     : ---0---0-0-0----0--1------0
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
680     : ----0---00-0-----0--1---0--
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
681     : ----0-0--0-0---0--1-------0
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
682     : -----0-0-0-0----0--1----0--
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
683     : -----00--0-0---0--1------0-
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
684     : 0----0---00---------0--1-0-
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
685     : 0---0----00--------0--1---0
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
686     : -0---0---00---------0--10--
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
687     : -0-0-----00-------0--1----0
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
688     : --0-0----00--------0--1-0--
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
689     : --00-----00-------0--1---0-
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
690     : -----00---00-----1--0----0-
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
691     : ----0-0---00----1--0------0
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
692     : -----0-0--00-----1--0---0--
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
693     : ---0---0--00---1--0-------0
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
694     : ----0---0-00----1--0----0--
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
695     : ---0----0-00---1--0------0-
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
696     : --00-----0-0--------1--0-0-
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
697     : -0-0-----0-0-------1--0---0
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
698     : --0-0----0-0--------1--00--
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
699     : 0---0----0-0------1--0----0
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
700     : -0---0---0-0-------1--0-0--
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
701     : 0----0---0-0------1--0---0-
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
702     : --0---0---00-----1-----0-0-
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
703     : -0----0---00----1-----0---0
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
704     : --0----0--00-----1-----00--
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
705     : 0------0--00---1-----0----0
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
706     : -0------0-00----1-----0-0--
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
707     : 0-------0-00---1-----0---0-
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall QUORUM1,ACCEPTOR1,ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. member(ACCEPTOR1,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 28




=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
771 (*) : --0--00--000---0---------0-
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
772     : -0--0-0--000---0----------0
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
773     : --0--0-0-000----0-------0--
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
774     : 0--0---0-000----0---------0
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
775     : -0--0---0000-----0------0--
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
776     : 0--0----0000-----0-------0-
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
777     : --00----0000------0------0-
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
778     : -0-0---0-000------0-------0
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
779     : --0-0---0000-------0----0--
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
780     : 0---0-0--000-------0------0
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
781     : -0---0-0-000--------0---0--
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
782     : 0----00--000--------0----0-
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
783     : 0----0--0000---------0---0-
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
784     : 0---0--0-000---------0----0
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
785     : -0---0--0000----------0-0--
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
786     : -0-0--0--000----------0---0
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
787     : --0-0--0-000-----------00--
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
788     : --00--0--000-----------0-0-
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall QUORUM1,ACCEPTOR1,ACCEPTOR0,QUORUM2,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | promise(ACCEPTOR2,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 35




=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
789 (*) : --0---0--000---0-------0-0-
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
790     : -0----0--000---0------0---0
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
791     : --0----0-000----0------00--
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
792     : 0------0-000----0----0----0
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
793     : -0------0000-----0----0-0--
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
794     : 0-------0000-----0---0---0-
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
795     : -----00--000---0----0----0-
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
796     : ----0-0--000---0---0------0
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
797     : -----0-0-000----0---0---0--
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
798     : ---0---0-000----0-0-------0
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
799     : ----0---0000-----0-0----0--
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
800     : ---0----0000-----00------0-
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
801     : --00-----000------0----0-0-
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
802     : -0-0-----000------0---0---0
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
803     : --0-0----000-------0---00--
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
804     : 0---0----000-------0-0----0
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
805     : -0---0---000--------0-0-0--
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
806     : 0----0---000--------00---0-
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall QUORUM1,ACCEPTOR1,ACCEPTOR0,PROPOSER1,PROPOSER0,QUORUM0,PROPOSER2,ACCEPTOR2. promise(ACCEPTOR2,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | (QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 29




=== Prime Orbit 53 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM1,ACCEPTOR1,ACCEPTOR0,QUORUM2,QUORUM0,PROPOSER1,ACCEPTOR2. start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM1 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 31



[QRM NOTE]: Time elapsed since start: 0.997 seconds

[QRM NOTE]: Time elapsed since last: 0.450 seconds

[QRM NOTE]: Peak memory: 3044684 bytes


==========================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

==========================================================================================================


New level: 1
 pending : [0, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1]


Before reduction : 
 pending  : [0, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1]

Essensial at level 1 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, 17179869184), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, 17179869184), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [0, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 1 among pending : [0, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, 17179869184), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 8 with phase True at level 1

After decision at level 1
 pending : [0, 4, 7, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8]


New level: 2
 pending : [0, 4, 7, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8]


Before reduction : 
 pending  : [0, 4, 7, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8]

Essensial at level 2 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, 17179869184), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, 4294967296), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, 2147483648), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [0, 4, 7, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 2 among pending : [0, 4, 7, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, 4294967296), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, 2147483648), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 9 with phase True at level 2

After decision at level 2
 pending : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9]


New level: 3
 pending : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, 4294967296), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, 2147483648), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, 536870912), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 3 among pending : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, 536870912), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26]


New level: 4
 pending : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26]


Before reduction : 
 pending  : [0, 4, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, 536870912), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 4 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25}

After reduction : 
 pending  : [0, 4, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26]


Before reduction : 
 pending  : [0, 4, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [0, 4, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26]


Solution : [1, 8, 9, 26] has cost 18.


Decide in level 4 among pending : [0, 4, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [0, 4, 28, 29, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30]


New level: 5
 pending : [0, 4, 28, 29, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30]


Before reduction : 
 pending  : [0, 4, 28, 29, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 4, 28, 29, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30]


Solution : [1, 8, 9, 26, 30] has cost 22.


Decide in level 5 among pending : [0, 4, 28, 29, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 50, 53]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [0, 4, 28, 29, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]


New level: 6
 pending : [0, 4, 28, 29, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]


Before reduction : 
 pending  : [0, 4, 28, 29, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : {33, 42, 35}

After reduction : 
 pending  : [0, 4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]


Before reduction : 
 pending  : [0, 4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]


Solution : [1, 8, 9, 26, 30, 36] has cost 35.


Decide in level 6 among pending : [0, 4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36, 0]


New level: 7
 pending : [4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36, 0]


Before reduction : 
 pending  : [4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 7 : {32, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53, 28, 29}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 36, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 36, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 36, 0]


Solution : [1, 8, 9, 26, 30, 36, 0] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [1, 8, 9, 26, 30, 36, 0]

After backtrack at level 7
 pending : [4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]


Before reduction : 
 pending  : [4, 28, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]

Essensial at level 7 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 7 : {32, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53, 29}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 36, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 36, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 36, 28]


Solution : [1, 8, 9, 26, 30, 36, 28] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [1, 8, 9, 26, 30, 36, 28]

After backtrack at level 7
 pending : [28, 4, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]


Before backtrack at level 6
 pending : [28, 4, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 36]

After backtrack at level 6
 pending : [28, 4, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [28, 4, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30]


Before reduction : 
 pending  : [28, 4, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 4, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30]


Solution : [1, 8, 9, 26, 30] has cost 22.


Decide in level 6 among pending : [28, 4, 29, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30, 29]


New level: 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : {33, 42, 35}

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29]


Solution : [1, 8, 9, 26, 30, 29] has cost 29.


Decide in level 7 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29, 28]


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29, 28]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 0, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 29, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 29, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 29, 28]


Solution : [1, 8, 9, 26, 30, 29, 28] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 30, 29, 28]

After backtrack at level 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 30, 29]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 29, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 29, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 29, 0]


Solution : [1, 8, 9, 26, 30, 29, 0] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 30, 29, 0]

After backtrack at level 8
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 29]


Before backtrack at level 7
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 30, 29]

After backtrack at level 7
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30]


Before reduction : 
 pending  : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30]


Solution : [1, 8, 9, 26, 30] has cost 22.


Decide in level 7 among pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30, 0]


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30, 0]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 0]


Solution : [1, 8, 9, 26, 30, 0] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 30, 0]

After backtrack at level 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 30]

Essensial at level 8 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 30, 28]


Solution : [1, 8, 9, 26, 30, 28] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 30, 28]

After backtrack at level 8
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42]
 solution : [1, 8, 9, 26, 30]


Before backtrack at level 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42]
 solution : [1, 8, 9, 26, 30]

After backtrack at level 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30]


Before backtrack at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26, 30]

After backtrack at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29]
 solution : [1, 8, 9, 26, 30]


Before backtrack at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29]
 solution : [1, 8, 9, 26, 30]

After backtrack at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 9, 26, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 9, 26]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 9, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 9, 26]


Solution : [1, 8, 9, 26] has cost 18.


Decide in level 5 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29]
 solution : [1, 8, 9, 26, 36]


New level: 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29]
 solution : [1, 8, 9, 26, 36]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29]
 solution : [1, 8, 9, 26, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : {33, 42, 35}

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29]
 solution : [1, 8, 9, 26, 36]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29]
 solution : [1, 8, 9, 26, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29]
 solution : [1, 8, 9, 26, 36]


Solution : [1, 8, 9, 26, 36] has cost 31.


Before backtrack at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29]
 solution : [1, 8, 9, 26, 36]

After backtrack at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 42]
 solution : [1, 8, 9, 26, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 42]
 solution : [1, 8, 9, 26]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 42]
 solution : [1, 8, 9, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 42]
 solution : [1, 8, 9, 26]


Solution : [1, 8, 9, 26] has cost 18.


Decide in level 6 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 42]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 42]
 solution : [1, 8, 9, 26, 29]


New level: 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 42]
 solution : [1, 8, 9, 26, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 42]
 solution : [1, 8, 9, 26, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : {33, 42, 35}

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29]


Solution : [1, 8, 9, 26, 29] has cost 25.


Decide in level 7 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29, 28]


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29, 28]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 0, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 29, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 29, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 29, 28]


Solution : [1, 8, 9, 26, 29, 28] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 29, 28]

After backtrack at level 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0]
 solution : [1, 8, 9, 26, 29]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 29, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 29, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 29, 0]


Solution : [1, 8, 9, 26, 29, 0] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 29, 0]

After backtrack at level 8
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 29]


Before backtrack at level 7
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 26, 29]

After backtrack at level 7
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26]


Before reduction : 
 pending  : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26]


Solution : [1, 8, 9, 26] has cost 18.


Decide in level 7 among pending : [0, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 0]


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 0]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 0]


Solution : [1, 8, 9, 26, 0] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 0]

After backtrack at level 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 28]
 solution : [1, 8, 9, 26]

Essensial at level 8 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 26, 28]


Solution : [1, 8, 9, 26, 28] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 9, 26, 28]

After backtrack at level 8
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42]
 solution : [1, 8, 9, 26]


Before backtrack at level 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42]
 solution : [1, 8, 9, 26]

After backtrack at level 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26]


Before backtrack at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0]
 solution : [1, 8, 9, 26]

After backtrack at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29]
 solution : [1, 8, 9, 26]


Before backtrack at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29]
 solution : [1, 8, 9, 26]

After backtrack at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 9, 26]


Before backtrack at level 4
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 9, 26]

After backtrack at level 4
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 4 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 36, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 36 with phase True at level 4

After decision at level 4
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 36]


New level: 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 36]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 33, 35, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 36]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, 536870912), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 5 : {33, 35}

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 36]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 36]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, 536870912), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, 536870912), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 36]


Solution : [1, 8, 9, 36] has cost 27.


Before backtrack at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30]
 solution : [1, 8, 9, 36]

After backtrack at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30, 33, 35]
 solution : [1, 8, 9, 36]


Invert decision for 36 at level 4


New level: 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30, 33, 35]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30, 33, 35]
 solution : [1, 8, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, 536870912), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30, 33, 35]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 5 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 30, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 30 with phase True at level 5

After decision at level 5
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30]


New level: 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30]


Solution : [1, 8, 9, 30] has cost 18.


Decide in level 6 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 40, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30, 23]


New level: 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30, 23]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35]
 solution : [1, 8, 9, 30, 23]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35]
 solution : [1, 8, 9, 30, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35]
 solution : [1, 8, 9, 30, 23]


Solution : [1, 8, 9, 30, 23] has cost 25.


Before backtrack at level 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35]
 solution : [1, 8, 9, 30, 23]

After backtrack at level 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30]


Solution : [1, 8, 9, 30] has cost 18.


Decide in level 7 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 42, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 42 with phase True at level 7

After decision at level 7
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 42]


New level: 8
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 42]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 42]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 67108864), (30, -1), (31, -1), (32, 8192), (33, 2048), (34, 524288), (35, 262144), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 16777216), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 42]


Solution : [1, 8, 9, 30, 42] has cost 32.


Before backtrack at level 8
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 42]

After backtrack at level 8
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 42]


Invert decision for 42 at level 7


New level: 8
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 67108864), (30, -1), (31, -1), (32, 8192), (33, 2048), (34, 524288), (35, 262144), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 16777216), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30]


Solution : [1, 8, 9, 30] has cost 18.


Decide in level 8 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 29, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 29 with phase True at level 8

After decision at level 8
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 29]


New level: 9
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : {33, 35}

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 29]


Solution : [1, 8, 9, 30, 29] has cost 25.


Before backtrack at level 9
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40]
 solution : [1, 8, 9, 30, 29]

After backtrack at level 9
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30, 29]


Invert decision for 29 at level 8


New level: 9
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]
 solution : [1, 8, 9, 30]


Solution : [1, 8, 9, 30] has cost 18.


Decide in level 9 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 40, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40, 33, 35]
 solution : [1, 8, 9, 30, 24]


New level: 10
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40, 33, 35]
 solution : [1, 8, 9, 30, 24]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40, 33, 35]
 solution : [1, 8, 9, 30, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 33554432), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35]
 solution : [1, 8, 9, 30, 24]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35]
 solution : [1, 8, 9, 30, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 33554432), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 33554432), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35]
 solution : [1, 8, 9, 30, 24]


Solution : [1, 8, 9, 30, 24] has cost 25.


Before backtrack at level 10
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35]
 solution : [1, 8, 9, 30, 24]

After backtrack at level 10
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30]


Before reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 33554432), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30]


Solution : [1, 8, 9, 30] has cost 18.


Decide in level 10 among pending : [28, 4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 28 with phase True at level 10

After decision at level 10
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 28]


New level: 11
 pending : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 28]


Before reduction : 
 pending  : [4, 32, 34, 38, 41, 43, 44, 45, 49, 50, 53, 0, 33, 35, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 0, 34, 33, 4, 35, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 28]


Before reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 28]


Solution : [1, 8, 9, 30, 28] has cost 25.


Before backtrack at level 11
 pending : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 28]

After backtrack at level 11
 pending : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 0, 33, 35]
 solution : [1, 8, 9, 30, 28]


Invert decision for 28 at level 10


New level: 11
 pending : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 0, 33, 35]
 solution : [1, 8, 9, 30]


Before reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 0, 33, 35]
 solution : [1, 8, 9, 30]

Essensial at level 11 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 0]


Before reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 0]


Solution : [1, 8, 9, 30, 0] has cost 22.


Decide in level 11 among pending : [41, 7, 12, 13, 14, 15, 16, 17, 18, 21, 25, 40]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [41, 7, 12, 13, 14, 15, 16, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 0, 17]


New level: 12
 pending : [41, 7, 12, 13, 14, 15, 16, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 0, 17]


Before reduction : 
 pending  : [41, 7, 12, 13, 14, 15, 16, 18, 21, 25, 40]
 solution : [1, 8, 9, 30, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [41, 12, 13, 15, 25, 40]
 solution : [1, 8, 9, 30, 0, 17]


Before reduction : 
 pending  : [41, 12, 13, 15, 25, 40]
 solution : [1, 8, 9, 30, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 12, 13, 15, 25, 40]
 solution : [1, 8, 9, 30, 0, 17]


Solution : [1, 8, 9, 30, 0, 17] has cost 31.


Before backtrack at level 12
 pending : [41, 12, 13, 15, 25, 40]
 solution : [1, 8, 9, 30, 0, 17]

After backtrack at level 12
 pending : [41, 12, 13, 15, 25, 40, 7, 14, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [41, 12, 13, 15, 25, 40, 7, 14, 16, 18, 21]
 solution : [1, 8, 9, 30, 0]


Before reduction : 
 pending  : [41, 12, 13, 15, 25, 40, 7, 14, 16, 18, 21]
 solution : [1, 8, 9, 30, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 12, 13, 15, 25, 40, 7, 14, 16, 18, 21]
 solution : [1, 8, 9, 30, 0]


Solution : [1, 8, 9, 30, 0] has cost 22.


Decide in level 12 among pending : [41, 12, 13, 15, 25, 40, 7, 14, 16, 18, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [41, 13, 15, 25, 40, 7, 14, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 12]


New level: 13
 pending : [41, 13, 15, 25, 40, 7, 14, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 12]


Before reduction : 
 pending  : [41, 13, 15, 25, 40, 7, 14, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 12]


Before reduction : 
 pending  : [41, 25, 40, 7, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 12]


Solution : [1, 8, 9, 30, 0, 12] has cost 29.


Before backtrack at level 13
 pending : [41, 25, 40, 7, 16, 18, 21]
 solution : [1, 8, 9, 30, 0, 12]

After backtrack at level 13
 pending : [41, 25, 40, 7, 16, 18, 21, 13, 15, 14]
 solution : [1, 8, 9, 30, 0, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [41, 25, 40, 7, 16, 18, 21, 13, 15, 14]
 solution : [1, 8, 9, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 16, 18, 21, 13, 15, 14]
 solution : [1, 8, 9, 30, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 16, 18, 21, 13, 15, 14]
 solution : [1, 8, 9, 30, 0]


Solution : [1, 8, 9, 30, 0] has cost 22.


Decide in level 13 among pending : [41, 25, 40, 7, 16, 18, 21, 13, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [41, 25, 40, 7, 18, 21, 13, 15, 14]
 solution : [1, 8, 9, 30, 0, 16]


New level: 14
 pending : [41, 25, 40, 7, 18, 21, 13, 15, 14]
 solution : [1, 8, 9, 30, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 13, 15, 14]
 solution : [1, 8, 9, 30, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {18, 21, 14, 7}

After reduction : 
 pending  : [41, 25, 40, 13, 15]
 solution : [1, 8, 9, 30, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 13, 15]
 solution : [1, 8, 9, 30, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 13, 15]
 solution : [1, 8, 9, 30, 0, 16]


Solution : [1, 8, 9, 30, 0, 16] has cost 31.


Before backtrack at level 14
 pending : [41, 25, 40, 13, 15]
 solution : [1, 8, 9, 30, 0, 16]

After backtrack at level 14
 pending : [41, 25, 40, 13, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [41, 25, 40, 13, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 13, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 13, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0]


Solution : [1, 8, 9, 30, 0] has cost 22.


Decide in level 14 among pending : [41, 25, 40, 13, 15, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 13]


New level: 15
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 30, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 30, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 30, 0, 13]


Solution : [1, 8, 9, 30, 0, 13] has cost 29.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 30, 0, 13]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 30, 0, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 30, 0]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 15]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 15]


Solution : [1, 8, 9, 30, 0, 15] has cost 29.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 30, 0, 15]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 9, 30, 0]


Before backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 9, 30, 0]

After backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 9, 30, 0]


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 9, 30, 0]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 9, 30, 0]


Before backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 9, 30, 0]

After backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 30, 0]


Before backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 30, 0]

After backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17]
 solution : [1, 8, 9, 30]


Before backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17]
 solution : [1, 8, 9, 30]

After backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28]
 solution : [1, 8, 9, 30]


Before backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28]
 solution : [1, 8, 9, 30]

After backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24]
 solution : [1, 8, 9, 30]


Before backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24]
 solution : [1, 8, 9, 30]

After backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29]
 solution : [1, 8, 9, 30]


Before backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29]
 solution : [1, 8, 9, 30]

After backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29, 42]
 solution : [1, 8, 9, 30]


Before backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29, 42]
 solution : [1, 8, 9, 30]

After backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29, 42, 23]
 solution : [1, 8, 9, 30]


Invert decision for 30 at level 5


New level: 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29, 42, 23]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29, 42, 23]
 solution : [1, 8, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29, 42, 23]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 6 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 29, 42, 23]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 42, 23]
 solution : [1, 8, 9, 29]


New level: 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 42, 23]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 33, 35, 17, 28, 24, 42, 23]
 solution : [1, 8, 9, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : {33, 35}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 17, 28, 24, 42, 23]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 17, 28, 24, 42, 23]
 solution : [1, 8, 9, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 17, 28, 24, 42, 23]
 solution : [1, 8, 9, 29]


Solution : [1, 8, 9, 29] has cost 21.


Decide in level 7 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 17, 28, 24, 42, 23]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 17, 28, 24, 42]
 solution : [1, 8, 9, 29, 23]


New level: 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 17, 28, 24, 42]
 solution : [1, 8, 9, 29, 23]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 17, 28, 24, 42]
 solution : [1, 8, 9, 29, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 0), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : {7, 40, 42, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 23]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 0), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 23]


Solution : [1, 8, 9, 29, 23] has cost 28.


Before backtrack at level 8
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 23]

After backtrack at level 8
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 42]
 solution : [1, 8, 9, 29, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 42]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 42]
 solution : [1, 8, 9, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 42]
 solution : [1, 8, 9, 29]


Solution : [1, 8, 9, 29] has cost 21.


Decide in level 8 among pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 42]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 24]


New level: 9
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 24]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 0), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : {7, 40, 42, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 24]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 0), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 24]


Solution : [1, 8, 9, 29, 24] has cost 28.


Before backtrack at level 9
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28]
 solution : [1, 8, 9, 29, 24]

After backtrack at level 9
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29]


Solution : [1, 8, 9, 29] has cost 21.


Decide in level 9 among pending : [41, 0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 41]


New level: 10
 pending : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 41]


Before reduction : 
 pending  : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, 33554432), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, 0), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : {42}

After reduction : 
 pending  : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 29, 41]


Before reduction : 
 pending  : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 29, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, 0), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 29, 41]


Solution : [1, 8, 9, 29, 41] has cost 39.


Before backtrack at level 10
 pending : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 29, 41]

After backtrack at level 10
 pending : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29]


Solution : [1, 8, 9, 29] has cost 21.


Decide in level 10 among pending : [0, 4, 32, 34, 38, 43, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 43 with phase True at level 10

After decision at level 10
 pending : [0, 4, 32, 34, 38, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 43]


New level: 11
 pending : [0, 4, 32, 34, 38, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 43]


Before reduction : 
 pending  : [0, 4, 32, 34, 38, 44, 45, 49, 50, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 43]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 34, 4, 38, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 43]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 43]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 65536), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 43]


Solution : [1, 8, 9, 29, 43] has cost 39.


Before backtrack at level 11
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 43]

After backtrack at level 11
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 29, 43]


Invert decision for 43 at level 10


New level: 11
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 29]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 65536), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50, 53]
 solution : [1, 8, 9, 29]


Solution : [1, 8, 9, 29] has cost 21.


Decide in level 11 among pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50, 53]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 53 with phase True at level 11

After decision at level 11
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50]
 solution : [1, 8, 9, 29, 53]


New level: 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50]
 solution : [1, 8, 9, 29, 53]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 38, 44, 45, 49, 50]
 solution : [1, 8, 9, 29, 53]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 2048), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {50, 44, 45, 38}

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49]
 solution : [1, 8, 9, 29, 53]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49]
 solution : [1, 8, 9, 29, 53]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 2048), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2048), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49]
 solution : [1, 8, 9, 29, 53]


Solution : [1, 8, 9, 29, 53] has cost 52.


Before backtrack at level 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49]
 solution : [1, 8, 9, 29, 53]

After backtrack at level 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29, 53]


Invert decision for 53 at level 11


New level: 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2048), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29]


Solution : [1, 8, 9, 29] has cost 21.


Decide in level 12 among pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 0 with phase True at level 12

After decision at level 12
 pending : [28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29, 0]


New level: 13
 pending : [28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29, 0]


Before reduction : 
 pending  : [28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {32, 34, 4, 38, 44, 45, 49, 50, 28}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 0]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 0]


Solution : [1, 8, 9, 29, 0] has cost 25.


Before backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 0]

After backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29, 0]


Invert decision for 0 at level 12


New level: 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29]

Essensial at level 13 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {32, 34, 4, 38, 44, 45, 49, 50}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 28]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 28]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 28]


Solution : [1, 8, 9, 29, 28] has cost 28.


Before backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 9, 29, 28]

After backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29]


Before backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 9, 29]

After backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0]
 solution : [1, 8, 9, 29]


Before backtrack at level 11
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0]
 solution : [1, 8, 9, 29]

After backtrack at level 11
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53]
 solution : [1, 8, 9, 29]


Before backtrack at level 10
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53]
 solution : [1, 8, 9, 29]

After backtrack at level 10
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43]
 solution : [1, 8, 9, 29]


Before backtrack at level 9
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43]
 solution : [1, 8, 9, 29]

After backtrack at level 9
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41]
 solution : [1, 8, 9, 29]


Before backtrack at level 8
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41]
 solution : [1, 8, 9, 29]

After backtrack at level 8
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24]
 solution : [1, 8, 9, 29]


Before backtrack at level 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24]
 solution : [1, 8, 9, 29]

After backtrack at level 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35, 23]
 solution : [1, 8, 9, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35, 23]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35, 23]
 solution : [1, 8, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35, 23]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 7 among pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35, 23]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35]
 solution : [1, 8, 9, 23]


New level: 8
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35]
 solution : [1, 8, 9, 23]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 24, 33, 35]
 solution : [1, 8, 9, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, 268435456), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23]


Before reduction : 
 pending  : [42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23]


Solution : [1, 8, 9, 23] has cost 21.


Decide in level 8 among pending : [42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 28 with phase True at level 8

After decision at level 8
 pending : [42, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23, 28]


New level: 9
 pending : [42, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23, 28]


Before reduction : 
 pending  : [42, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 9 : {32, 0, 34, 33, 4, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 23, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 23, 28]


Solution : [1, 8, 9, 23, 28] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [1, 8, 9, 23, 28]

After backtrack at level 9
 pending : [42, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23, 28]


Invert decision for 28 at level 8


New level: 9
 pending : [42, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23]


Before reduction : 
 pending  : [42, 4, 32, 34, 49, 38, 44, 45, 50, 0, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23]

Essensial at level 9 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 9 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 23, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 23, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 23, 0]


Solution : [1, 8, 9, 23, 0] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [1, 8, 9, 23, 0]

After backtrack at level 9
 pending : [0, 42, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23]


Before backtrack at level 8
 pending : [0, 42, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 23]

After backtrack at level 8
 pending : [0, 42, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [0, 42, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [0, 42, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 42, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 8 among pending : [0, 42, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 42 with phase True at level 8

After decision at level 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9, 42]


New level: 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9, 42]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9, 42]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 16777216), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9, 42]


Solution : [1, 8, 9, 42] has cost 28.


Before backtrack at level 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9, 42]

After backtrack at level 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9, 42]


Invert decision for 42 at level 8


New level: 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 16777216), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 9 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28]
 solution : [1, 8, 9, 24]


New level: 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28]
 solution : [1, 8, 9, 24]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28]
 solution : [1, 8, 9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, 134217728), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24]


Solution : [1, 8, 9, 24] has cost 21.


Decide in level 10 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 0 with phase True at level 10

After decision at level 10
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24, 0]


New level: 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24, 0]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, -1), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 41, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 24, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 24, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 24, 0]


Solution : [1, 8, 9, 24, 0] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [1, 8, 9, 24, 0]

After backtrack at level 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24, 0]


Invert decision for 0 at level 10


New level: 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 28]
 solution : [1, 8, 9, 24]

Essensial at level 11 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 9, 24, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 9, 24, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 9, 24, 28]


Solution : [1, 8, 9, 24, 28] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [1, 8, 9, 24, 28]

After backtrack at level 11
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 24]


Before backtrack at level 10
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35]
 solution : [1, 8, 9, 24]

After backtrack at level 10
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]
 solution : [1, 8, 9, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]
 solution : [1, 8, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]
 solution : [1, 8, 9]


Solution : [1, 8, 9] has cost 14.


Decide in level 10 among pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 28 with phase True at level 10

After decision at level 10
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]
 solution : [1, 8, 9, 28]


New level: 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]
 solution : [1, 8, 9, 28]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 41, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 0]
 solution : [1, 8, 9, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 65536), (15, 32768), (16, 4194304), (17, 8388608), (18, 131072), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 524288), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 0, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 28]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 28]


Solution : [1, 8, 9, 28] has cost 21.


Decide in level 11 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 28, 17]


New level: 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 28, 17]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 28, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 28, 17]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 28, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 28, 17]


Solution : [1, 8, 9, 28, 17] has cost 30.


Before backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 28, 17]

After backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 28, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 28]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 28]


Solution : [1, 8, 9, 28] has cost 21.


Decide in level 12 among pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 28, 12]


New level: 13
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 28, 12]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 28, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 28, 12]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 28, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 28, 12]


Solution : [1, 8, 9, 28, 12] has cost 28.


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 28, 12]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 28, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 28]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 28]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 28]


Solution : [1, 8, 9, 28] has cost 21.


Decide in level 13 among pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 9, 28, 16]


New level: 14
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 9, 28, 16]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 9, 28, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {18, 21, 14, 7}

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 28, 16]


Before reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 28, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 28, 16]


Solution : [1, 8, 9, 28, 16] has cost 30.


Before backtrack at level 14
 pending : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 28, 16]

After backtrack at level 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 28]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 28]


Solution : [1, 8, 9, 28] has cost 21.


Decide in level 14 among pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 13]


New level: 15
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 13]


Before reduction : 
 pending  : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 28, 13]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 28, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 28, 13]


Solution : [1, 8, 9, 28, 13] has cost 28.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 28, 13]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 28, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 28]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 28]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 15]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 15]


Solution : [1, 8, 9, 28, 15] has cost 28.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 28, 15]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 9, 28]


Before backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 9, 28]

After backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 9, 28]


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 9, 28]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 9, 28]


Before backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 9, 28]

After backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 28]


Before backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 28]

After backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 17]
 solution : [1, 8, 9, 28]


Invert decision for 28 at level 10


New level: 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 17]
 solution : [1, 8, 9]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 17]
 solution : [1, 8, 9]

Essensial at level 11 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 9, 0]


Solution : [1, 8, 9, 0] has cost 18.


Decide in level 11 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 0, 17]


New level: 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 0, 17]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, 4194304), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 0, 17]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, 0), (15, 8192), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 0, 17]


Solution : [1, 8, 9, 0, 17] has cost 27.


Before backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 9, 0, 17]

After backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 0, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 32768), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 0]


Solution : [1, 8, 9, 0] has cost 18.


Decide in level 12 among pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 0, 12]


New level: 13
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 0, 12]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 9, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 0, 12]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 0, 12]


Solution : [1, 8, 9, 0, 12] has cost 25.


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 9, 0, 12]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 0, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 524288), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 9, 0]


Solution : [1, 8, 9, 0] has cost 18.


Decide in level 13 among pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 9, 0, 16]


New level: 14
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 9, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 9, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, 2097152), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {18, 21, 14, 7}

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, 0), (15, 8192), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 0, 16]


Solution : [1, 8, 9, 0, 16] has cost 27.


Before backtrack at level 14
 pending : [41, 25, 40, 15, 13]
 solution : [1, 8, 9, 0, 16]

After backtrack at level 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8192), (14, -1), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 9, 0]


Solution : [1, 8, 9, 0] has cost 18.


Decide in level 14 among pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 13]


New level: 15
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 1048576), (14, 32768), (15, 32768), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 0, 13]


Solution : [1, 8, 9, 0, 13] has cost 25.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 9, 0, 13]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 0, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 9, 0]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 15]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 15]


Solution : [1, 8, 9, 0, 15] has cost 25.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 9, 0, 15]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 9, 0]


Before backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 9, 0]

After backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 9, 0]


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 9, 0]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 9, 0]


Before backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 9, 0]

After backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 0]


Before backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 9, 0]

After backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17]
 solution : [1, 8, 9]


Before backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17]
 solution : [1, 8, 9]

After backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28]
 solution : [1, 8, 9]


Before backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28]
 solution : [1, 8, 9]

After backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24]
 solution : [1, 8, 9]


Before backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24]
 solution : [1, 8, 9]

After backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42]
 solution : [1, 8, 9]


Before backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42]
 solution : [1, 8, 9]

After backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23]
 solution : [1, 8, 9]


Before backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23]
 solution : [1, 8, 9]

After backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29]
 solution : [1, 8, 9]


Before backtrack at level 5
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29]
 solution : [1, 8, 9]

After backtrack at level 5
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30]
 solution : [1, 8, 9]


Before backtrack at level 4
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30]
 solution : [1, 8, 9]

After backtrack at level 4
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36]
 solution : [1, 8, 9]


Before backtrack at level 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36]
 solution : [1, 8, 9]

After backtrack at level 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36, 26]
 solution : [1, 8, 9]


Invert decision for 9 at level 2


New level: 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36, 26]
 solution : [1, 8]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36, 26]
 solution : [1, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, 2147483648), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36, 26]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 3 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36, 26]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, 2147483648), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36]
 solution : [1, 8, 26]


New level: 4
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36]
 solution : [1, 8, 26]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 28, 24, 42, 23, 29, 30, 36]
 solution : [1, 8, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, 2147483648), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 4 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 30, 36]
 solution : [1, 8, 26]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 30, 36]
 solution : [1, 8, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 30, 36]
 solution : [1, 8, 26]


Solution : [1, 8, 26] has cost 13.


Decide in level 4 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 30, 36]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 36]
 solution : [1, 8, 26, 30]


New level: 5
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 36]
 solution : [1, 8, 26, 30]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 36]
 solution : [1, 8, 26, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 36]
 solution : [1, 8, 26, 30]


Solution : [1, 8, 26, 30] has cost 17.


Decide in level 5 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29, 36]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29]
 solution : [1, 8, 26, 30, 36]


New level: 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29]
 solution : [1, 8, 26, 30, 36]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 28, 42, 29]
 solution : [1, 8, 26, 30, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : {33, 42, 35}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29]
 solution : [1, 8, 26, 30, 36]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29]
 solution : [1, 8, 26, 30, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29]
 solution : [1, 8, 26, 30, 36]


Solution : [1, 8, 26, 30, 36] has cost 30.


Before backtrack at level 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29]
 solution : [1, 8, 26, 30, 36]

After backtrack at level 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 33, 35, 42]
 solution : [1, 8, 26, 30, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 33, 35, 42]
 solution : [1, 8, 26, 30]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 33, 35, 42]
 solution : [1, 8, 26, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 33, 35, 42]
 solution : [1, 8, 26, 30]


Solution : [1, 8, 26, 30] has cost 17.


Decide in level 6 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 33, 35, 42]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 29]


New level: 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 29]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : {33, 42, 35}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28]
 solution : [1, 8, 26, 30, 29]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28]
 solution : [1, 8, 26, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28]
 solution : [1, 8, 26, 30, 29]


Solution : [1, 8, 26, 30, 29] has cost 24.


Before backtrack at level 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28]
 solution : [1, 8, 26, 30, 29]

After backtrack at level 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30]


Solution : [1, 8, 26, 30] has cost 17.


Decide in level 7 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 0]


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 0]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : []
 solution : [1, 8, 26, 30, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 26, 30, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 26, 30, 0]


Solution : [1, 8, 26, 30, 0] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 26, 30, 0]

After backtrack at level 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 42]
 solution : [1, 8, 26, 30]

Essensial at level 8 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 26, 30, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 26, 30, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 26, 30, 28]


Solution : [1, 8, 26, 30, 28] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 26, 30, 28]

After backtrack at level 8
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42]
 solution : [1, 8, 26, 30]


Before backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42]
 solution : [1, 8, 26, 30]

After backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0]
 solution : [1, 8, 26, 30]


Before backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0]
 solution : [1, 8, 26, 30]

After backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29]
 solution : [1, 8, 26, 30]


Before backtrack at level 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29]
 solution : [1, 8, 26, 30]

After backtrack at level 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 26, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 26]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 26]


Solution : [1, 8, 26] has cost 13.


Decide in level 5 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29]
 solution : [1, 8, 26, 36]


New level: 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29]
 solution : [1, 8, 26, 36]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29]
 solution : [1, 8, 26, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : {33, 42, 35}

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29]
 solution : [1, 8, 26, 36]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29]
 solution : [1, 8, 26, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29]
 solution : [1, 8, 26, 36]


Solution : [1, 8, 26, 36] has cost 26.


Before backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29]
 solution : [1, 8, 26, 36]

After backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 26, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 26]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 2097152), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 26]


Solution : [1, 8, 26] has cost 13.


Decide in level 6 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 26, 29]


New level: 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 26, 29]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 26, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : {33, 42, 35}

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29]


Solution : [1, 8, 26, 29] has cost 20.


Decide in level 7 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29, 28]


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29, 28]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 0, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 26, 29, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 26, 29, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 26, 29, 28]


Solution : [1, 8, 26, 29, 28] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 26, 29, 28]

After backtrack at level 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 26, 29]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 26, 29, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 26, 29, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 26, 29, 0]


Solution : [1, 8, 26, 29, 0] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 26, 29, 0]

After backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43]
 solution : [1, 8, 26, 29]


Before backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43]
 solution : [1, 8, 26, 29]

After backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26]


Solution : [1, 8, 26] has cost 13.


Decide in level 7 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26, 0]


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26, 0]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : []
 solution : [1, 8, 26, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 26, 0]


Solution : [1, 8, 26, 0] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 26, 0]

After backtrack at level 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 26]

Essensial at level 8 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 26, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 26, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 26, 28]


Solution : [1, 8, 26, 28] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [1, 8, 26, 28]

After backtrack at level 8
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42]
 solution : [1, 8, 26]


Before backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42]
 solution : [1, 8, 26]

After backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0]
 solution : [1, 8, 26]


Before backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0]
 solution : [1, 8, 26]

After backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29]
 solution : [1, 8, 26]


Before backtrack at level 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29]
 solution : [1, 8, 26]

After backtrack at level 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 26]


Before backtrack at level 4
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36]
 solution : [1, 8, 26]

After backtrack at level 4
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1, 8, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1, 8]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 4 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 23 with phase True at level 4

After decision at level 4
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 30]
 solution : [1, 8, 23]


New level: 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 30]
 solution : [1, 8, 23]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 30]
 solution : [1, 8, 23]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, 1073741824), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 5 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 30]
 solution : [1, 8, 23]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 30]
 solution : [1, 8, 23]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 30]
 solution : [1, 8, 23]


Solution : [1, 8, 23] has cost 16.


Decide in level 5 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 36, 30]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 30]
 solution : [1, 8, 23, 36]


New level: 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 30]
 solution : [1, 8, 23, 36]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 0, 29, 30]
 solution : [1, 8, 23, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, 536870912), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, 536870912), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 6 : {33, 42, 35}

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30]
 solution : [1, 8, 23, 36]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30]
 solution : [1, 8, 23, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, 536870912), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, 536870912), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30]
 solution : [1, 8, 23, 36]


Solution : [1, 8, 23, 36] has cost 29.


Before backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30]
 solution : [1, 8, 23, 36]

After backtrack at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30, 33, 35, 42]
 solution : [1, 8, 23, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30, 33, 35, 42]
 solution : [1, 8, 23]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30, 33, 35, 42]
 solution : [1, 8, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, 536870912), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 8388608), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 4194304), (50, 524288), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30, 33, 35, 42]
 solution : [1, 8, 23]


Solution : [1, 8, 23] has cost 16.


Decide in level 6 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 30, 33, 35, 42]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 30 with phase True at level 6

After decision at level 6
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23, 30]


New level: 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23, 30]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23, 30]


Solution : [1, 8, 23, 30] has cost 20.


Before backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23, 30]

After backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23, 30]


Invert decision for 30 at level 6


New level: 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]
 solution : [1, 8, 23]


Solution : [1, 8, 23] has cost 16.


Decide in level 7 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 33, 35, 42]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 29 with phase True at level 7

After decision at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 29]


New level: 8
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 29]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : {33, 42, 35}

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 23, 29]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 23, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 23, 29]


Solution : [1, 8, 23, 29] has cost 23.


Before backtrack at level 8
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 23, 29]

After backtrack at level 8
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 29]


Invert decision for 29 at level 7


New level: 8
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23]


Solution : [1, 8, 23] has cost 16.


Decide in level 8 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 28 with phase True at level 8

After decision at level 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 28]


New level: 9
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 28]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 9 : {32, 0, 34, 33, 4, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 23, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 23, 28]


Solution : [1, 8, 23, 28] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [1, 8, 23, 28]

After backtrack at level 9
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23, 28]


Invert decision for 28 at level 8


New level: 9
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 33, 35, 42]
 solution : [1, 8, 23]

Essensial at level 9 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 9 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 23, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 23, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 23, 0]


Solution : [1, 8, 23, 0] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [1, 8, 23, 0]

After backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42]
 solution : [1, 8, 23]


Before backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42]
 solution : [1, 8, 23]

After backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 23]


Before backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28]
 solution : [1, 8, 23]

After backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29]
 solution : [1, 8, 23]


Before backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29]
 solution : [1, 8, 23]

After backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 30]
 solution : [1, 8, 23]


Before backtrack at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 30]
 solution : [1, 8, 23]

After backtrack at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 30, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8, 23]


Invert decision for 23 at level 4


New level: 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 30, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 30, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 30, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 5 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 30, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 30 with phase True at level 5

After decision at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8, 30]


New level: 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, 536870912), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, 268435456), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]
 solution : [1, 8, 30]


Solution : [1, 8, 30] has cost 13.


Decide in level 6 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 36]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, 268435456), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 36]
 solution : [1, 8, 30, 24]


New level: 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 36]
 solution : [1, 8, 30, 24]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 36]
 solution : [1, 8, 30, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, 268435456), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36]
 solution : [1, 8, 30, 24]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36]
 solution : [1, 8, 30, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36]
 solution : [1, 8, 30, 24]


Solution : [1, 8, 30, 24] has cost 20.


Before backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36]
 solution : [1, 8, 30, 24]

After backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 524288), (36, 268435456), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, 268435456), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30]


Solution : [1, 8, 30] has cost 13.


Decide in level 7 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, 268435456), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 36 with phase True at level 7

After decision at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 36]


New level: 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 36]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 36]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, 268435456), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 8 : {33, 35}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 36]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 36]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 36]


Solution : [1, 8, 30, 36] has cost 26.


Before backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 36]

After backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 36]


Invert decision for 36 at level 7


New level: 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 4096), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]


Solution : [1, 8, 30] has cost 13.


Decide in level 8 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 42 with phase True at level 8

After decision at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 42]


New level: 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 42]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 42]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 67108864), (30, -1), (31, -1), (32, 8192), (33, 2048), (34, 524288), (35, 262144), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 42]


Solution : [1, 8, 30, 42] has cost 27.


Before backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 42]

After backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 42]


Invert decision for 42 at level 8


New level: 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 67108864), (30, -1), (31, -1), (32, 8192), (33, 2048), (34, 524288), (35, 262144), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]


Solution : [1, 8, 30] has cost 13.


Decide in level 9 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 29 with phase True at level 9

After decision at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 29]


New level: 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 134217728), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : {33, 35}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 29]


Solution : [1, 8, 30, 29] has cost 20.


Before backtrack at level 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 29]

After backtrack at level 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 29]


Invert decision for 29 at level 9


New level: 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30]


Solution : [1, 8, 30] has cost 13.


Decide in level 10 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 0 with phase True at level 10

After decision at level 10
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 0]


New level: 11
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 0]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 8, 30, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 0]


Solution : [1, 8, 30, 0] has cost 17.


Decide in level 11 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 30, 0, 17]


New level: 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 30, 0, 17]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 30, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 30, 0, 17]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 30, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 30, 0, 17]


Solution : [1, 8, 30, 0, 17] has cost 26.


Before backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12]
 solution : [1, 8, 30, 0, 17]

After backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 30, 0, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 30, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 30, 0]


Solution : [1, 8, 30, 0] has cost 17.


Decide in level 12 among pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 30, 0, 12]


New level: 13
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 30, 0, 12]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 30, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 30, 0, 12]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 30, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 30, 0, 12]


Solution : [1, 8, 30, 0, 12] has cost 24.


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 8, 30, 0, 12]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 30, 0, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 30, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 30, 0]


Solution : [1, 8, 30, 0] has cost 17.


Decide in level 13 among pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 30, 0, 16]


New level: 14
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 30, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 30, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {18, 21, 14, 7}

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 30, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 30, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 8, 30, 0, 16]


Solution : [1, 8, 30, 0, 16] has cost 26.


Before backtrack at level 14
 pending : [41, 25, 40, 15, 13]
 solution : [1, 8, 30, 0, 16]

After backtrack at level 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 30, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 30, 0]


Solution : [1, 8, 30, 0] has cost 17.


Decide in level 14 among pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 13]


New level: 15
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 30, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 30, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 30, 0, 13]


Solution : [1, 8, 30, 0, 13] has cost 24.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21]
 solution : [1, 8, 30, 0, 13]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 30, 0, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 30, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 8, 30, 0]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 15]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 15]


Solution : [1, 8, 30, 0, 15] has cost 24.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 8, 30, 0, 15]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 30, 0]


Before backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 8, 30, 0]

After backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 30, 0]


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 30, 0]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 30, 0]


Before backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 30, 0]

After backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 30, 0]


Before backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 30, 0]

After backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 17]
 solution : [1, 8, 30, 0]


Invert decision for 0 at level 10


New level: 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 17]
 solution : [1, 8, 30]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 33, 35, 17]
 solution : [1, 8, 30]

Essensial at level 11 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 28]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 28]


Solution : [1, 8, 30, 28] has cost 20.


Before backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 30, 28]

After backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35]
 solution : [1, 8, 30]


Before backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35]
 solution : [1, 8, 30]

After backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0]
 solution : [1, 8, 30]


Before backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0]
 solution : [1, 8, 30]

After backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29]
 solution : [1, 8, 30]


Before backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29]
 solution : [1, 8, 30]

After backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42]
 solution : [1, 8, 30]


Before backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42]
 solution : [1, 8, 30]

After backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 36]
 solution : [1, 8, 30]


Before backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 36]
 solution : [1, 8, 30]

After backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 36, 24]
 solution : [1, 8, 30]


Invert decision for 30 at level 5


New level: 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 36, 24]
 solution : [1, 8]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 36, 24]
 solution : [1, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 36, 24]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 6 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 36, 24]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 36 with phase True at level 6

After decision at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 24]
 solution : [1, 8, 36]


New level: 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 24]
 solution : [1, 8, 36]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 0, 29, 42, 24]
 solution : [1, 8, 36]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, 536870912), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : {33, 35}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24]
 solution : [1, 8, 36]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24]
 solution : [1, 8, 36]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24]
 solution : [1, 8, 36]


Solution : [1, 8, 36] has cost 22.


Before backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24]
 solution : [1, 8, 36]

After backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24, 33, 35]
 solution : [1, 8, 36]


Invert decision for 36 at level 6


New level: 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24, 33, 35]
 solution : [1, 8]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24, 33, 35]
 solution : [1, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 8192), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 4096), (43, 16777216), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 8388608), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24, 33, 35]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 7 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 24, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 33, 35]
 solution : [1, 8, 24]


New level: 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 33, 35]
 solution : [1, 8, 24]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 33, 35]
 solution : [1, 8, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, 536870912), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 33, 35]
 solution : [1, 8, 24]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 33, 35]
 solution : [1, 8, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 33, 35]
 solution : [1, 8, 24]


Solution : [1, 8, 24] has cost 16.


Decide in level 8 among pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 29, 42, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 29 with phase True at level 8

After decision at level 8
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 29]


New level: 9
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 29]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : {33, 42, 35}

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 24, 29]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 24, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 65536), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 24, 29]


Solution : [1, 8, 24, 29] has cost 23.


Before backtrack at level 9
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0]
 solution : [1, 8, 24, 29]

After backtrack at level 9
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 29]


Invert decision for 29 at level 8


New level: 9
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24]


Solution : [1, 8, 24] has cost 16.


Decide in level 9 among pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 28]


New level: 10
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 28]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 1048576), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 1024), (42, 2048), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 10 : {32, 0, 34, 33, 4, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 24, 28]


Before reduction : 
 pending  : []
 solution : [1, 8, 24, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 24, 28]


Solution : [1, 8, 24, 28] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [1, 8, 24, 28]

After backtrack at level 10
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 0, 42, 33, 35]
 solution : [1, 8, 24]

Essensial at level 10 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 10 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 8, 24, 0]


Before reduction : 
 pending  : []
 solution : [1, 8, 24, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [1, 8, 24, 0]


Solution : [1, 8, 24, 0] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [1, 8, 24, 0]

After backtrack at level 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35]
 solution : [1, 8, 24]


Before backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35]
 solution : [1, 8, 24]

After backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28]
 solution : [1, 8, 24]


Before backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28]
 solution : [1, 8, 24]

After backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 8, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 8]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 8 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 29 with phase True at level 8

After decision at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29]


New level: 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, 268435456), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : {33, 35}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29]


Solution : [1, 8, 29] has cost 16.


Decide in level 9 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29, 41]


New level: 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29, 41]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 42, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, 67108864), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : {42}

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29, 41]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 524288), (41, -1), (42, 0), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 524288), (41, -1), (42, -1), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29, 41]


Solution : [1, 8, 29, 41] has cost 34.


Before backtrack at level 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 29, 41]

After backtrack at level 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 4194304), (29, -1), (30, -1), (31, -1), (32, 512), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 524288), (41, -1), (42, -1), (43, 33554432), (44, 16384), (45, 16384), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 524288), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29]


Solution : [1, 8, 29] has cost 16.


Decide in level 10 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 53 with phase True at level 10

After decision at level 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 53]


New level: 11
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 53]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 53]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 2048), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : {50, 44, 45, 38}

After reduction : 
 pending  : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 53]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 53]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 2048), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2048), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 53]


Solution : [1, 8, 29, 53] has cost 47.


Before backtrack at level 11
 pending : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 53]

After backtrack at level 11
 pending : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]
 solution : [1, 8, 29, 53]


Invert decision for 53 at level 10


New level: 11
 pending : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]
 solution : [1, 8, 29]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]
 solution : [1, 8, 29]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 2048), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, 2048), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]
 solution : [1, 8, 29]


Solution : [1, 8, 29] has cost 16.


Decide in level 11 among pending : [0, 4, 32, 34, 49, 43, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 43 with phase True at level 11

After decision at level 11
 pending : [0, 4, 32, 34, 49, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]
 solution : [1, 8, 29, 43]


New level: 12
 pending : [0, 4, 32, 34, 49, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]
 solution : [1, 8, 29, 43]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 38, 44, 45, 50]
 solution : [1, 8, 29, 43]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 2048), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {32, 34, 4, 38, 44, 45, 49, 50}

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 43]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 43]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 2048), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 43]


Solution : [1, 8, 29, 43] has cost 34.


Before backtrack at level 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42]
 solution : [1, 8, 29, 43]

After backtrack at level 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 43]


Invert decision for 43 at level 11


New level: 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29]


Solution : [1, 8, 29] has cost 16.


Decide in level 12 among pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 42, 4, 32, 34, 49, 38, 44, 45, 50]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 17]


New level: 13
 pending : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 17]


Before reduction : 
 pending  : [0, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 2048), (41, -1), (42, 512), (43, -1), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 17]


Before reduction : 
 pending  : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 2048), (41, -1), (42, 512), (43, -1), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 2048), (41, -1), (42, 512), (43, -1), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 17]


Solution : [1, 8, 29, 17] has cost 25.


Before backtrack at level 13
 pending : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 17]

After backtrack at level 13
 pending : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]
 solution : [1, 8, 29]


Before reduction : 
 pending  : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]
 solution : [1, 8, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 32768), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 2048), (41, -1), (42, 512), (43, -1), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, -1), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]
 solution : [1, 8, 29]


Solution : [1, 8, 29] has cost 16.


Decide in level 13 among pending : [0, 28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]

Coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, -1), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 0 with phase True at level 13

After decision at level 13
 pending : [28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 0]


New level: 14
 pending : [28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 0]


Before reduction : 
 pending  : [28, 25, 40, 15, 13, 12, 42, 4, 32, 34, 49, 38, 44, 45, 50, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 16777216), (1, -1), (2, -1), (3, -1), (4, 131072), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, -1), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 16777216), (29, -1), (30, -1), (31, -1), (32, 2048), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {32, 34, 4, 38, 44, 45, 49, 50, 28}

After reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 0]


Solution : [1, 8, 29, 0] has cost 20.


Before backtrack at level 14
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 0]

After backtrack at level 14
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29, 0]


Invert decision for 0 at level 13


New level: 14
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29]

Essensial at level 14 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {32, 34, 4, 38, 44, 45, 49, 50}

After reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 28]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 28]


Solution : [1, 8, 29, 28] has cost 23.


Before backtrack at level 14
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16]
 solution : [1, 8, 29, 28]

After backtrack at level 14
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29]


Before backtrack at level 13
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50]
 solution : [1, 8, 29]

After backtrack at level 13
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0]
 solution : [1, 8, 29]


Before backtrack at level 12
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0]
 solution : [1, 8, 29]

After backtrack at level 12
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17]
 solution : [1, 8, 29]


Before backtrack at level 11
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17]
 solution : [1, 8, 29]

After backtrack at level 11
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43]
 solution : [1, 8, 29]


Before backtrack at level 10
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43]
 solution : [1, 8, 29]

After backtrack at level 10
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53]
 solution : [1, 8, 29]


Before backtrack at level 9
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53]
 solution : [1, 8, 29]

After backtrack at level 9
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 29]


Invert decision for 29 at level 8


New level: 9
 pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 9 among pending : [25, 40, 15, 13, 12, 42, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 42 with phase True at level 9

After decision at level 9
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 42]


New level: 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 42]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 42]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, 134217728), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 42]


Solution : [1, 8, 42] has cost 23.


Before backtrack at level 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 42]

After backtrack at level 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 42]


Invert decision for 42 at level 9


New level: 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 4096), (34, 524288), (35, 524288), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 33554432), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8]


Solution : [1, 8] has cost 9.


Decide in level 10 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 28, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]

Coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Decide 28 with phase True at level 10

After decision at level 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 28]


New level: 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 28]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 4, 32, 34, 49, 38, 44, 45, 50, 0, 17, 43, 53, 33, 35, 41]
 solution : [1, 8, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 67108864), (1, -1), (2, -1), (3, -1), (4, 524288), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 262144), (15, 131072), (16, 16777216), (17, 33554432), (18, 524288), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 67108864), (29, -1), (30, -1), (31, -1), (32, 8192), (33, 8192), (34, 524288), (35, 1048576), (36, -1), (37, -1), (38, 8192), (39, -1), (40, 2097152), (41, 67108864), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 0, 34, 33, 4, 35, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17, 41]
 solution : [1, 8, 28]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17, 41]
 solution : [1, 8, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17, 41]
 solution : [1, 8, 28]


Solution : [1, 8, 28] has cost 16.


Decide in level 11 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17, 41]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 41]
 solution : [1, 8, 28, 17]


New level: 12
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 41]
 solution : [1, 8, 28, 17]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 41]
 solution : [1, 8, 28, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [25, 40, 15, 13, 12, 41]
 solution : [1, 8, 28, 17]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 41]
 solution : [1, 8, 28, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 41]
 solution : [1, 8, 28, 17]


Solution : [1, 8, 28, 17] has cost 25.


Before backtrack at level 12
 pending : [25, 40, 15, 13, 12, 41]
 solution : [1, 8, 28, 17]

After backtrack at level 12
 pending : [25, 40, 15, 13, 12, 41, 7, 18, 21, 14, 16]
 solution : [1, 8, 28, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [25, 40, 15, 13, 12, 41, 7, 18, 21, 14, 16]
 solution : [1, 8, 28]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 41, 7, 18, 21, 14, 16]
 solution : [1, 8, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 41, 7, 18, 21, 14, 16]
 solution : [1, 8, 28]


Solution : [1, 8, 28] has cost 16.


Decide in level 12 among pending : [25, 40, 15, 13, 12, 41, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [25, 40, 15, 13, 41, 7, 18, 21, 14, 16]
 solution : [1, 8, 28, 12]


New level: 13
 pending : [25, 40, 15, 13, 41, 7, 18, 21, 14, 16]
 solution : [1, 8, 28, 12]


Before reduction : 
 pending  : [25, 40, 15, 13, 41, 7, 18, 21, 14, 16]
 solution : [1, 8, 28, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 28, 12]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 28, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 28, 12]


Solution : [1, 8, 28, 12] has cost 23.


Before backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 28, 12]

After backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 28, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 28]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 28]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 28]


Solution : [1, 8, 28] has cost 16.


Decide in level 13 among pending : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [25, 40, 41, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 28, 16]


New level: 14
 pending : [25, 40, 41, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 28, 16]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 28, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {18, 21, 14, 7}

After reduction : 
 pending  : [25, 40, 41, 15, 13]
 solution : [1, 8, 28, 16]


Before reduction : 
 pending  : [25, 40, 41, 15, 13]
 solution : [1, 8, 28, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 41, 15, 13]
 solution : [1, 8, 28, 16]


Solution : [1, 8, 28, 16] has cost 25.


Before backtrack at level 14
 pending : [25, 40, 41, 15, 13]
 solution : [1, 8, 28, 16]

After backtrack at level 14
 pending : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 28, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 28]


Before reduction : 
 pending  : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 28]


Solution : [1, 8, 28] has cost 16.


Decide in level 14 among pending : [25, 40, 41, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [25, 40, 41, 15, 7, 18, 21, 14]
 solution : [1, 8, 28, 13]


New level: 15
 pending : [25, 40, 41, 15, 7, 18, 21, 14]
 solution : [1, 8, 28, 13]


Before reduction : 
 pending  : [25, 40, 41, 15, 7, 18, 21, 14]
 solution : [1, 8, 28, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 28, 13]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 28, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 28, 13]


Solution : [1, 8, 28, 13] has cost 23.


Before backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 28, 13]

After backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21, 15, 14]
 solution : [1, 8, 28, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [25, 40, 41, 7, 18, 21, 15, 14]
 solution : [1, 8, 28]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 15, 14]
 solution : [1, 8, 28]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 28, 15]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 28, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 28, 15]


Solution : [1, 8, 28, 15] has cost 23.


Before backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 28, 15]

After backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21, 14, 15]
 solution : [1, 8, 28]


Before backtrack at level 14
 pending : [25, 40, 41, 7, 18, 21, 14, 15]
 solution : [1, 8, 28]

After backtrack at level 14
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 28]


Before backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 28]

After backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 28]


Before backtrack at level 12
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 28]

After backtrack at level 12
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 28]


Before backtrack at level 11
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 28]

After backtrack at level 11
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 0, 43, 53, 33, 35, 17]
 solution : [1, 8, 28]


Invert decision for 28 at level 10


New level: 11
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 0, 43, 53, 33, 35, 17]
 solution : [1, 8]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 0, 43, 53, 33, 35, 17]
 solution : [1, 8]

Essensial at level 11 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 524288), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 0]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 8, 0]


Solution : [1, 8, 0] has cost 13.


Decide in level 11 among pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 0, 17]


New level: 12
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 0, 17]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, 16777216), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [25, 40, 41, 15, 13, 12]
 solution : [1, 8, 0, 17]


Before reduction : 
 pending  : [25, 40, 41, 15, 13, 12]
 solution : [1, 8, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, 0), (15, 32768), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 41, 15, 13, 12]
 solution : [1, 8, 0, 17]


Solution : [1, 8, 0, 17] has cost 22.


Before backtrack at level 12
 pending : [25, 40, 41, 15, 13, 12]
 solution : [1, 8, 0, 17]

After backtrack at level 12
 pending : [25, 40, 41, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 0, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [25, 40, 41, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 0]


Before reduction : 
 pending  : [25, 40, 41, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 131072), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 41, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 8, 0]


Solution : [1, 8, 0] has cost 13.


Decide in level 12 among pending : [25, 40, 41, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [25, 40, 41, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 0, 12]


New level: 13
 pending : [25, 40, 41, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 0, 12]


Before reduction : 
 pending  : [25, 40, 41, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 8, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 0, 12]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 0, 12]


Solution : [1, 8, 0, 12] has cost 20.


Before backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 16]
 solution : [1, 8, 0, 12]

After backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 0, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 0]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2097152), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 8, 0]


Solution : [1, 8, 0] has cost 13.


Decide in level 13 among pending : [25, 40, 41, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [25, 40, 41, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 0, 16]


New level: 14
 pending : [25, 40, 41, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 0, 16]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 15, 13, 14]
 solution : [1, 8, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, 8388608), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {18, 21, 14, 7}

After reduction : 
 pending  : [25, 40, 41, 15, 13]
 solution : [1, 8, 0, 16]


Before reduction : 
 pending  : [25, 40, 41, 15, 13]
 solution : [1, 8, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 32768), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 41, 15, 13]
 solution : [1, 8, 0, 16]


Solution : [1, 8, 0, 16] has cost 22.


Before backtrack at level 14
 pending : [25, 40, 41, 15, 13]
 solution : [1, 8, 0, 16]

After backtrack at level 14
 pending : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 0, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 0]


Before reduction : 
 pending  : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 41, 15, 13, 7, 18, 21, 14]
 solution : [1, 8, 0]


Solution : [1, 8, 0] has cost 13.


Decide in level 14 among pending : [25, 40, 41, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [25, 40, 41, 15, 7, 18, 21, 14]
 solution : [1, 8, 0, 13]


New level: 15
 pending : [25, 40, 41, 15, 7, 18, 21, 14]
 solution : [1, 8, 0, 13]


Before reduction : 
 pending  : [25, 40, 41, 15, 7, 18, 21, 14]
 solution : [1, 8, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 131072), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 0, 13]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 0, 13]


Solution : [1, 8, 0, 13] has cost 20.


Before backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21]
 solution : [1, 8, 0, 13]

After backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21, 15, 14]
 solution : [1, 8, 0, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [25, 40, 41, 7, 18, 21, 15, 14]
 solution : [1, 8, 0]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 15, 14]
 solution : [1, 8, 0]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 0, 15]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 0, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 0, 15]


Solution : [1, 8, 0, 15] has cost 20.


Before backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21, 14]
 solution : [1, 8, 0, 15]

After backtrack at level 15
 pending : [25, 40, 41, 7, 18, 21, 14, 15]
 solution : [1, 8, 0]


Before backtrack at level 14
 pending : [25, 40, 41, 7, 18, 21, 14, 15]
 solution : [1, 8, 0]

After backtrack at level 14
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 0]


Before backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13]
 solution : [1, 8, 0]

After backtrack at level 13
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 0]


Before backtrack at level 12
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 8, 0]

After backtrack at level 12
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 0]


Before backtrack at level 11
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 8, 0]

After backtrack at level 11
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17]
 solution : [1, 8]


Before backtrack at level 10
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17]
 solution : [1, 8]

After backtrack at level 10
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28]
 solution : [1, 8]


Before backtrack at level 9
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28]
 solution : [1, 8]

After backtrack at level 9
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42]
 solution : [1, 8]


Before backtrack at level 8
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42]
 solution : [1, 8]

After backtrack at level 8
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29]
 solution : [1, 8]


Before backtrack at level 7
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29]
 solution : [1, 8]

After backtrack at level 7
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24]
 solution : [1, 8]


Before backtrack at level 6
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24]
 solution : [1, 8]

After backtrack at level 6
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36]
 solution : [1, 8]


Before backtrack at level 5
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36]
 solution : [1, 8]

After backtrack at level 5
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30]
 solution : [1, 8]


Before backtrack at level 4
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30]
 solution : [1, 8]

After backtrack at level 4
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23]
 solution : [1, 8]


Before backtrack at level 3
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23]
 solution : [1, 8]

After backtrack at level 3
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26]
 solution : [1, 8]


Before backtrack at level 2
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26]
 solution : [1, 8]

After backtrack at level 2
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26, 9]
 solution : [1, 8]


Invert decision for 8 at level 1


New level: 2
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26, 9]
 solution : [1]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26, 9]
 solution : [1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 65536), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26, 9]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 2 among pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26, 9]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 9 with phase True at level 2

After decision at level 2
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26]
 solution : [1, 9]


New level: 3
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26]
 solution : [1, 9]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26]
 solution : [1, 9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, 17179869184), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 3 among pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 30, 23, 26]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 30 with phase True at level 3

After decision at level 3
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 23, 26]
 solution : [1, 9, 30]


New level: 4
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 23, 26]
 solution : [1, 9, 30]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 23, 26]
 solution : [1, 9, 30]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 23, 26]
 solution : [1, 9, 30]


Solution : [1, 9, 30] has cost 15.


Decide in level 4 among pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 36, 23, 26]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 36 with phase True at level 4

After decision at level 4
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 23, 26]
 solution : [1, 9, 30, 36]


New level: 5
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 23, 26]
 solution : [1, 9, 30, 36]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 17, 28, 42, 29, 24, 23, 26]
 solution : [1, 9, 30, 36]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 4096), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 5 : {33, 35}

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26]
 solution : [1, 9, 30, 36]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26]
 solution : [1, 9, 30, 36]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 4096), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 4096), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26]
 solution : [1, 9, 30, 36]


Solution : [1, 9, 30, 36] has cost 28.


Before backtrack at level 5
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26]
 solution : [1, 9, 30, 36]

After backtrack at level 5
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26, 33, 35]
 solution : [1, 9, 30, 36]


Invert decision for 36 at level 4


New level: 5
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26, 33, 35]
 solution : [1, 9, 30]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26, 33, 35]
 solution : [1, 9, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 4096), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26, 33, 35]
 solution : [1, 9, 30]


Solution : [1, 9, 30] has cost 15.


Decide in level 5 among pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 26, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 26 with phase True at level 5

After decision at level 5
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 33, 35]
 solution : [1, 9, 30, 26]


New level: 6
 pending : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 33, 35]
 solution : [1, 9, 30, 26]


Before reduction : 
 pending  : [25, 40, 41, 7, 18, 21, 14, 15, 13, 16, 12, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 17, 28, 42, 29, 24, 23, 33, 35]
 solution : [1, 9, 30, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35]
 solution : [1, 9, 30, 26]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35]
 solution : [1, 9, 30, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35]
 solution : [1, 9, 30, 26]


Solution : [1, 9, 30, 26] has cost 19.


Before backtrack at level 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35]
 solution : [1, 9, 30, 26]

After backtrack at level 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 26]


Invert decision for 26 at level 5


New level: 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30]


Solution : [1, 9, 30] has cost 15.


Decide in level 6 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 29]


New level: 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 29]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : {33, 35}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 29]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 29]


Solution : [1, 9, 30, 29] has cost 22.


Before backtrack at level 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 9, 30, 29]

After backtrack at level 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 33, 35]
 solution : [1, 9, 30, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 33, 35]
 solution : [1, 9, 30]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 33, 35]
 solution : [1, 9, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 33554432), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 33, 35]
 solution : [1, 9, 30]


Solution : [1, 9, 30] has cost 15.


Decide in level 7 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]
 solution : [1, 9, 30, 23]


New level: 8
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]
 solution : [1, 9, 30, 23]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]
 solution : [1, 9, 30, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 23]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 23]


Solution : [1, 9, 30, 23] has cost 22.


Before backtrack at level 8
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 23]

After backtrack at level 8
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 30, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 30]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 30]


Solution : [1, 9, 30] has cost 15.


Decide in level 8 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 24]


New level: 9
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 24]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 24]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 24]


Solution : [1, 9, 30, 24] has cost 22.


Before backtrack at level 9
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35]
 solution : [1, 9, 30, 24]

After backtrack at level 9
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30]


Before reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30]


Solution : [1, 9, 30] has cost 15.


Decide in level 9 among pending : [41, 0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 0 with phase True at level 9

After decision at level 9
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 0]


New level: 10
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 0]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 42, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 134217728), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, 512), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 10 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 0]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, 512), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 0]


Solution : [1, 9, 30, 0] has cost 19.


Before backtrack at level 10
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 0]

After backtrack at level 10
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35]
 solution : [1, 9, 30, 0]


Invert decision for 0 at level 9


New level: 10
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35]
 solution : [1, 9, 30]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35]
 solution : [1, 9, 30]

Essensial at level 10 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, 512), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 10 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 28]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, 512), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 28]


Solution : [1, 9, 30, 28] has cost 22.


Before backtrack at level 10
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 30, 28]

After backtrack at level 10
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 9, 30]


Before backtrack at level 9
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 9, 30]

After backtrack at level 9
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0]
 solution : [1, 9, 30]


Before backtrack at level 8
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0]
 solution : [1, 9, 30]

After backtrack at level 8
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24]
 solution : [1, 9, 30]


Before backtrack at level 7
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24]
 solution : [1, 9, 30]

After backtrack at level 7
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23]
 solution : [1, 9, 30]


Before backtrack at level 6
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23]
 solution : [1, 9, 30]

After backtrack at level 6
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29]
 solution : [1, 9, 30]


Before backtrack at level 5
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29]
 solution : [1, 9, 30]

After backtrack at level 5
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26]
 solution : [1, 9, 30]


Before backtrack at level 4
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26]
 solution : [1, 9, 30]

After backtrack at level 4
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26, 36]
 solution : [1, 9, 30]


Invert decision for 30 at level 3


New level: 4
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26, 36]
 solution : [1, 9]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26, 36]
 solution : [1, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, 512), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26, 36]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 4 among pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26, 36]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 36 with phase True at level 4

After decision at level 4
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26]
 solution : [1, 9, 36]


New level: 5
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26]
 solution : [1, 9, 36]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 23, 29, 26]
 solution : [1, 9, 36]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 8192), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 5 : {33, 35}

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26]
 solution : [1, 9, 36]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26]
 solution : [1, 9, 36]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 8192), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 8192), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26]
 solution : [1, 9, 36]


Solution : [1, 9, 36] has cost 24.


Before backtrack at level 5
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26]
 solution : [1, 9, 36]

After backtrack at level 5
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26, 33, 35]
 solution : [1, 9, 36]


Invert decision for 36 at level 4


New level: 5
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26, 33, 35]
 solution : [1, 9]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26, 33, 35]
 solution : [1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 67108864), (42, 8192), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26, 33, 35]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 5 among pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 29, 26, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 29 with phase True at level 5

After decision at level 5
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]
 solution : [1, 9, 29]


New level: 6
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]
 solution : [1, 9, 29]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]
 solution : [1, 9, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : {33, 35}

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26]
 solution : [1, 9, 29]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26]
 solution : [1, 9, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26]
 solution : [1, 9, 29]


Solution : [1, 9, 29] has cost 18.


Before backtrack at level 6
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26]
 solution : [1, 9, 29]

After backtrack at level 6
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]
 solution : [1, 9, 29]


Invert decision for 29 at level 5


New level: 6
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]
 solution : [1, 9]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]
 solution : [1, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, 33554432), (42, 512), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 6 among pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 26, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 26 with phase True at level 6

After decision at level 6
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 33, 35]
 solution : [1, 9, 26]


New level: 7
 pending : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 33, 35]
 solution : [1, 9, 26]


Before reduction : 
 pending  : [41, 42, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 24, 23, 33, 35]
 solution : [1, 9, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, 1073741824), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 7 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25}

After reduction : 
 pending  : [41, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26]


Before reduction : 
 pending  : [41, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26]


Solution : [1, 9, 26] has cost 15.


Decide in level 7 among pending : [41, 42, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26, 28]


New level: 8
 pending : [41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26, 28]


Before reduction : 
 pending  : [41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 0, 34, 33, 4, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 9, 26, 28]


Before reduction : 
 pending  : []
 solution : [1, 9, 26, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 9, 26, 28]


Solution : [1, 9, 26, 28] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [1, 9, 26, 28]

After backtrack at level 8
 pending : [41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26]


Before reduction : 
 pending  : [41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35]
 solution : [1, 9, 26]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 9, 26, 0]


Before reduction : 
 pending  : []
 solution : [1, 9, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 9, 26, 0]


Solution : [1, 9, 26, 0] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [1, 9, 26, 0]

After backtrack at level 8
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 9, 26]


Before backtrack at level 7
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 9, 26]

After backtrack at level 7
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 28]
 solution : [1, 9, 26]


Invert decision for 26 at level 6


New level: 7
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 28]
 solution : [1, 9]


Before reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 28]
 solution : [1, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 28]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 7 among pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 28]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 9, 23]


New level: 8
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 9, 23]


Before reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 28]
 solution : [1, 9, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, 536870912), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 23]


Before reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 23]


Solution : [1, 9, 23] has cost 18.


Before backtrack at level 8
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 23]

After backtrack at level 8
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9]


Before reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 8 among pending : [0, 41, 42, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 42 with phase True at level 8

After decision at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 42]


New level: 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 42]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 42]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, 268435456), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 33554432), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 42]


Solution : [1, 9, 42] has cost 25.


Before backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 42]

After backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9, 42]


Invert decision for 42 at level 8


New level: 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 33554432), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 9 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 24]


New level: 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 24]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, 268435456), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 10 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 24]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 24]


Solution : [1, 9, 24] has cost 18.


Before backtrack at level 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28]
 solution : [1, 9, 24]

After backtrack at level 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9]


Solution : [1, 9] has cost 11.


Decide in level 10 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 0 with phase True at level 10

After decision at level 10
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 0]


New level: 11
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 0]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 131072), (15, 65536), (16, 8388608), (17, 16777216), (18, 262144), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 1048576), (41, 67108864), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 0]


Solution : [1, 9, 0] has cost 15.


Decide in level 11 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 11

After decision at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 9, 0, 17]


New level: 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 9, 0, 17]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 9, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, 0), (15, 16384), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 9, 0, 17]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 9, 0, 17]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, 0), (15, 16384), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12]
 solution : [1, 9, 0, 17]


Solution : [1, 9, 0, 17] has cost 24.


Before backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12]
 solution : [1, 9, 0, 17]

After backtrack at level 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 9, 0, 17]


Invert decision for 17 at level 11


New level: 12
 pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 9, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 65536), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 9, 0]


Solution : [1, 9, 0] has cost 15.


Decide in level 12 among pending : [41, 25, 40, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 9, 0, 12]


New level: 13
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 9, 0, 12]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 9, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 1048576), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {13, 14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 9, 0, 12]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 9, 0, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 1048576), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 9, 0, 12]


Solution : [1, 9, 0, 12] has cost 22.


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16]
 solution : [1, 9, 0, 12]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 9, 0, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 9, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 1048576), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 9, 0]


Solution : [1, 9, 0] has cost 15.


Decide in level 13 among pending : [41, 25, 40, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 9, 0, 16]


New level: 14
 pending : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 9, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 9, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 0), (15, 16384), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {18, 21, 14, 7}

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 9, 0, 16]


Before reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 9, 0, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 0), (15, 16384), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13]
 solution : [1, 9, 0, 16]


Solution : [1, 9, 0, 16] has cost 24.


Before backtrack at level 14
 pending : [41, 25, 40, 15, 13]
 solution : [1, 9, 0, 16]

After backtrack at level 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 9, 0, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 9, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, 1024), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [41, 25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 9, 0]


Solution : [1, 9, 0] has cost 15.


Decide in level 14 among pending : [41, 25, 40, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 9, 0, 13]


New level: 15
 pending : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 9, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 15, 7, 18, 21, 14]
 solution : [1, 9, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 65536), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {14, 15}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 9, 0, 13]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 9, 0, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21]
 solution : [1, 9, 0, 13]


Solution : [1, 9, 0, 13] has cost 22.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21]
 solution : [1, 9, 0, 13]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 9, 0, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 9, 0]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 15, 14]
 solution : [1, 9, 0]

Essensial at level 15 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, 131072), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 512), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 9, 0, 15]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 9, 0, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 9, 0, 15]


Solution : [1, 9, 0, 15] has cost 22.


Before backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14]
 solution : [1, 9, 0, 15]

After backtrack at level 15
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 9, 0]


Before backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15]
 solution : [1, 9, 0]

After backtrack at level 14
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 9, 0]


Before backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 9, 0]

After backtrack at level 13
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 9, 0]


Before backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 9, 0]

After backtrack at level 12
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 9, 0]


Before backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 9, 0]

After backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 17]
 solution : [1, 9, 0]


Invert decision for 0 at level 10


New level: 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 17]
 solution : [1, 9]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 28, 17]
 solution : [1, 9]

Essensial at level 11 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 32768), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 28]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 28]


Solution : [1, 9, 28] has cost 18.


Before backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 9, 28]

After backtrack at level 11
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 9]


Before backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 9]

After backtrack at level 10
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0]
 solution : [1, 9]


Before backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0]
 solution : [1, 9]

After backtrack at level 9
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24]
 solution : [1, 9]


Before backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24]
 solution : [1, 9]

After backtrack at level 8
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42]
 solution : [1, 9]


Before backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42]
 solution : [1, 9]

After backtrack at level 7
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23]
 solution : [1, 9]


Before backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23]
 solution : [1, 9]

After backtrack at level 6
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26]
 solution : [1, 9]


Before backtrack at level 5
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26]
 solution : [1, 9]

After backtrack at level 5
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29]
 solution : [1, 9]


Before backtrack at level 4
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29]
 solution : [1, 9]

After backtrack at level 4
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29, 36]
 solution : [1, 9]


Before backtrack at level 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29, 36]
 solution : [1, 9]

After backtrack at level 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29, 36, 30]
 solution : [1, 9]


Invert decision for 9 at level 2


New level: 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29, 36, 30]
 solution : [1]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29, 36, 30]
 solution : [1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 2097152), (14, 65536), (15, 65536), (16, 4194304), (17, 8388608), (18, 65536), (19, -1), (20, -1), (21, 131072), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 262144), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29, 36, 30]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 3 among pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 26, 29, 36, 30]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 26 with phase True at level 3

After decision at level 3
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 29, 36, 30]
 solution : [1, 26]


New level: 4
 pending : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 29, 36, 30]
 solution : [1, 26]


Before reduction : 
 pending  : [41, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 24, 42, 23, 29, 36, 30]
 solution : [1, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, 4294967296), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 4 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25}

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36, 30]
 solution : [1, 26]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36, 30]
 solution : [1, 26]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36, 30]
 solution : [1, 26]


Solution : [1, 26] has cost 10.


Decide in level 4 among pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36, 30]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36]
 solution : [1, 26, 30]


New level: 5
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36]
 solution : [1, 26, 30]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36]
 solution : [1, 26, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, 1073741824), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36]
 solution : [1, 26, 30]


Solution : [1, 26, 30] has cost 14.


Decide in level 5 among pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29, 36]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, 1073741824), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29]
 solution : [1, 26, 30, 36]


New level: 6
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29]
 solution : [1, 26, 30, 36]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 42, 29]
 solution : [1, 26, 30, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, 1073741824), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 6 : {33, 42, 35}

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29]
 solution : [1, 26, 30, 36]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29]
 solution : [1, 26, 30, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29]
 solution : [1, 26, 30, 36]


Solution : [1, 26, 30, 36] has cost 27.


Before backtrack at level 6
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29]
 solution : [1, 26, 30, 36]

After backtrack at level 6
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29, 33, 35, 42]
 solution : [1, 26, 30, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29, 33, 35, 42]
 solution : [1, 26, 30]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29, 33, 35, 42]
 solution : [1, 26, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 2048), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29, 33, 35, 42]
 solution : [1, 26, 30]


Solution : [1, 26, 30] has cost 14.


Decide in level 6 among pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 29, 33, 35, 42]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 29]


New level: 7
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 29]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 7 : {33, 42, 35}

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0]
 solution : [1, 26, 30, 29]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0]
 solution : [1, 26, 30, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0]
 solution : [1, 26, 30, 29]


Solution : [1, 26, 30, 29] has cost 21.


Before backtrack at level 7
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0]
 solution : [1, 26, 30, 29]

After backtrack at level 7
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30]


Before reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30]


Solution : [1, 26, 30] has cost 14.


Decide in level 7 among pending : [41, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 28]


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 28]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 0, 34, 33, 4, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 26, 30, 28]


Before reduction : 
 pending  : []
 solution : [1, 26, 30, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 26, 30, 28]


Solution : [1, 26, 30, 28] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [1, 26, 30, 28]

After backtrack at level 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 33, 35, 42]
 solution : [1, 26, 30]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 26, 30, 0]


Before reduction : 
 pending  : []
 solution : [1, 26, 30, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 26, 30, 0]


Solution : [1, 26, 30, 0] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [1, 26, 30, 0]

After backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42]
 solution : [1, 26, 30]


Before backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42]
 solution : [1, 26, 30]

After backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28]
 solution : [1, 26, 30]


Before backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28]
 solution : [1, 26, 30]

After backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29]
 solution : [1, 26, 30]


Before backtrack at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29]
 solution : [1, 26, 30]

After backtrack at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 26, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 26]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 26]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 26]


Solution : [1, 26] has cost 10.


Decide in level 5 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29]
 solution : [1, 26, 36]


New level: 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29]
 solution : [1, 26, 36]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29]
 solution : [1, 26, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, 2147483648), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 6 : {33, 42, 35}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29]
 solution : [1, 26, 36]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29]
 solution : [1, 26, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29]
 solution : [1, 26, 36]


Solution : [1, 26, 36] has cost 23.


Before backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29]
 solution : [1, 26, 36]

After backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 42]
 solution : [1, 26, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 42]
 solution : [1, 26]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 42]
 solution : [1, 26]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 4096), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 16777216), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 42]
 solution : [1, 26]


Solution : [1, 26] has cost 10.


Decide in level 6 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 42]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 42]
 solution : [1, 26, 29]


New level: 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 42]
 solution : [1, 26, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 42]
 solution : [1, 26, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 7 : {33, 42, 35}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29]


Solution : [1, 26, 29] has cost 17.


Decide in level 7 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]

Coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29, 0]


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29, 0]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 4194304), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : []
 solution : [1, 26, 29, 0]


Before reduction : 
 pending  : []
 solution : [1, 26, 29, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 26, 29, 0]


Solution : [1, 26, 29, 0] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [1, 26, 29, 0]

After backtrack at level 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28]
 solution : [1, 26, 29]

Essensial at level 8 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 34, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 26, 29, 28]


Before reduction : 
 pending  : []
 solution : [1, 26, 29, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 26, 29, 28]


Solution : [1, 26, 29, 28] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [1, 26, 29, 28]

After backtrack at level 8
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53]
 solution : [1, 26, 29]


Before backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53]
 solution : [1, 26, 29]

After backtrack at level 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26]


Before reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26]


Solution : [1, 26] has cost 10.


Decide in level 7 among pending : [28, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26, 28]


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26, 28]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 0, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 26, 28]


Before reduction : 
 pending  : []
 solution : [1, 26, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 26, 28]


Solution : [1, 26, 28] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [1, 26, 28]

After backtrack at level 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26]


Before reduction : 
 pending  : [41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 0]
 solution : [1, 26]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 8 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 26, 0]


Before reduction : 
 pending  : []
 solution : [1, 26, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [1, 26, 0]


Solution : [1, 26, 0] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [1, 26, 0]

After backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42]
 solution : [1, 26]


Before backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42]
 solution : [1, 26]

After backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28]
 solution : [1, 26]


Before backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28]
 solution : [1, 26]

After backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29]
 solution : [1, 26]


Before backtrack at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29]
 solution : [1, 26]

After backtrack at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 26]


Before backtrack at level 4
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 26]

After backtrack at level 4
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1, 26]


Invert decision for 26 at level 3


New level: 4
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 4 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23, 30]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 30 with phase True at level 4

After decision at level 4
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 30]


New level: 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 30]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, 4294967296), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]
 solution : [1, 30]


Solution : [1, 30] has cost 10.


Decide in level 5 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 23]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 23 with phase True at level 5

After decision at level 5
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 23]


New level: 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 23]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, 1073741824), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 6 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 30, 23]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 30, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, 1073741824), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, 1073741824), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 30, 23]


Solution : [1, 30, 23] has cost 17.


Before backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36]
 solution : [1, 30, 23]

After backtrack at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 23]


Invert decision for 23 at level 5


New level: 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, 1073741824), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30]


Solution : [1, 30] has cost 10.


Decide in level 6 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 36, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 36 with phase True at level 6

After decision at level 6
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 36]


New level: 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 36]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 36]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, 1073741824), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 16384), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 7 : {33, 35}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 36]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 36]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 16384), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 16384), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 36]


Solution : [1, 30, 36] has cost 23.


Before backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24]
 solution : [1, 30, 36]

After backtrack at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]
 solution : [1, 30, 36]


Invert decision for 36 at level 6


New level: 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]
 solution : [1, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]
 solution : [1, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 16384), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 16384), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]
 solution : [1, 30]


Solution : [1, 30] has cost 10.


Decide in level 7 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 24]


New level: 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 24]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35]
 solution : [1, 30, 24]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35]
 solution : [1, 30, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35]
 solution : [1, 30, 24]


Solution : [1, 30, 24] has cost 17.


Before backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35]
 solution : [1, 30, 24]

After backtrack at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 524288), (35, 2097152), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 2048), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30]


Solution : [1, 30] has cost 10.


Decide in level 8 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 42, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 42 with phase True at level 8

After decision at level 8
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 42]


New level: 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 42]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 42]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 536870912), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 268435456), (30, -1), (31, -1), (32, 16384), (33, 8192), (34, 1048576), (35, 1048576), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 42]


Solution : [1, 30, 42] has cost 24.


Before backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 42]

After backtrack at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 42]


Invert decision for 42 at level 8


New level: 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 268435456), (30, -1), (31, -1), (32, 16384), (33, 8192), (34, 1048576), (35, 1048576), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30]


Solution : [1, 30] has cost 10.


Decide in level 9 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 29, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 29 with phase True at level 9

After decision at level 9
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 29]


New level: 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 10 : {33, 35}

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 29]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 29]


Solution : [1, 30, 29] has cost 17.


Before backtrack at level 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 29]

After backtrack at level 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 29]


Invert decision for 29 at level 9


New level: 10
 pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30]


Before reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30]


Solution : [1, 30] has cost 10.


Decide in level 10 among pending : [0, 41, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 41]


New level: 11
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 41]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 2097152), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, -1), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 41]


Solution : [1, 30, 41] has cost 28.


Before backtrack at level 11
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 41]

After backtrack at level 11
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 4096), (34, 262144), (35, 2097152), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, -1), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30]


Solution : [1, 30] has cost 10.


Decide in level 11 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 0 with phase True at level 11

After decision at level 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 0]


New level: 12
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 0]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 33, 35]
 solution : [1, 30, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 12 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 0]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 0]


Solution : [1, 30, 0] has cost 14.


Decide in level 12 among pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 30, 0, 17]


New level: 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 30, 0, 17]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 30, 0, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 30, 0, 17]


Before reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 30, 0, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 30, 0, 17]


Solution : [1, 30, 0, 17] has cost 23.


Before backtrack at level 13
 pending : [25, 40, 15, 13, 12]
 solution : [1, 30, 0, 17]

After backtrack at level 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 30, 0, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 30, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 30, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 30, 0]


Solution : [1, 30, 0] has cost 14.


Decide in level 13 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 30, 0, 12]


New level: 14
 pending : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 30, 0, 12]


Before reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 30, 0, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {13, 14, 15}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 30, 0, 12]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 30, 0, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 30, 0, 12]


Solution : [1, 30, 0, 12] has cost 21.


Before backtrack at level 14
 pending : [25, 40, 7, 18, 21, 16]
 solution : [1, 30, 0, 12]

After backtrack at level 14
 pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 30, 0, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 30, 0]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 30, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 30, 0]


Solution : [1, 30, 0] has cost 14.


Decide in level 14 among pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 30, 0, 16]


New level: 15
 pending : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 30, 0, 16]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 30, 0, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {18, 21, 14, 7}

After reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 30, 0, 16]


Before reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 30, 0, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 30, 0, 16]


Solution : [1, 30, 0, 16] has cost 23.


Before backtrack at level 15
 pending : [25, 40, 15, 13]
 solution : [1, 30, 0, 16]

After backtrack at level 15
 pending : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 30, 0, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 30, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 30, 0]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 30, 0]


Solution : [1, 30, 0] has cost 14.


Decide in level 15 among pending : [25, 40, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 30, 0, 13]


New level: 16
 pending : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 30, 0, 13]


Before reduction : 
 pending  : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 30, 0, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : {14, 15}

After reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 30, 0, 13]


Before reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 30, 0, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 30, 0, 13]


Solution : [1, 30, 0, 13] has cost 21.


Before backtrack at level 16
 pending : [25, 40, 7, 18, 21]
 solution : [1, 30, 0, 13]

After backtrack at level 16
 pending : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 30, 0, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 30, 0]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 30, 0]

Essensial at level 16 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 30, 0, 15]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 30, 0, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 30, 0, 15]


Solution : [1, 30, 0, 15] has cost 21.


Before backtrack at level 16
 pending : [25, 40, 7, 18, 21, 14]
 solution : [1, 30, 0, 15]

After backtrack at level 16
 pending : [25, 40, 7, 18, 21, 14, 15]
 solution : [1, 30, 0]


Before backtrack at level 15
 pending : [25, 40, 7, 18, 21, 14, 15]
 solution : [1, 30, 0]

After backtrack at level 15
 pending : [25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 30, 0]


Before backtrack at level 14
 pending : [25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 30, 0]

After backtrack at level 14
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 30, 0]


Before backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 30, 0]

After backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 30, 0]


Before backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 30, 0]

After backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 17]
 solution : [1, 30, 0]


Invert decision for 0 at level 11


New level: 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 17]
 solution : [1, 30]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 28, 33, 35, 17]
 solution : [1, 30]

Essensial at level 12 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 12 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 28]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 28]


Solution : [1, 30, 28] has cost 17.


Before backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 30, 28]

After backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 30]


Before backtrack at level 11
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35]
 solution : [1, 30]

After backtrack at level 11
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0]
 solution : [1, 30]


Before backtrack at level 10
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0]
 solution : [1, 30]

After backtrack at level 10
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41]
 solution : [1, 30]


Before backtrack at level 9
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41]
 solution : [1, 30]

After backtrack at level 9
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29]
 solution : [1, 30]


Before backtrack at level 8
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29]
 solution : [1, 30]

After backtrack at level 8
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42]
 solution : [1, 30]


Before backtrack at level 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42]
 solution : [1, 30]

After backtrack at level 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24]
 solution : [1, 30]


Before backtrack at level 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24]
 solution : [1, 30]

After backtrack at level 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 36]
 solution : [1, 30]


Before backtrack at level 5
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 36]
 solution : [1, 30]

After backtrack at level 5
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 36, 23]
 solution : [1, 30]


Invert decision for 30 at level 4


New level: 5
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 36, 23]
 solution : [1]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 36, 23]
 solution : [1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 36, 23]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 5 among pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 36, 23]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 36 with phase True at level 5

After decision at level 5
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 23]
 solution : [1, 36]


New level: 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 23]
 solution : [1, 36]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 33, 35, 0, 41, 29, 42, 24, 23]
 solution : [1, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, 2147483648), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 32768), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : {33, 35}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23]
 solution : [1, 36]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23]
 solution : [1, 36]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 32768), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 32768), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23]
 solution : [1, 36]


Solution : [1, 36] has cost 19.


Before backtrack at level 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23]
 solution : [1, 36]

After backtrack at level 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23, 33, 35]
 solution : [1, 36]


Invert decision for 36 at level 5


New level: 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23, 33, 35]
 solution : [1]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23, 33, 35]
 solution : [1]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 32768), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 268435456), (42, 32768), (43, 33554432), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23, 33, 35]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 6 among pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 23, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 23 with phase True at level 6

After decision at level 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 33, 35]
 solution : [1, 23]


New level: 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 33, 35]
 solution : [1, 23]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 24, 33, 35]
 solution : [1, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, 2147483648), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 7 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25}

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 33, 35]
 solution : [1, 23]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 33, 35]
 solution : [1, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 33, 35]
 solution : [1, 23]


Solution : [1, 23] has cost 13.


Decide in level 7 among pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 29, 42, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 29 with phase True at level 7

After decision at level 7
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 29]


New level: 8
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 8 : {33, 42, 35}

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41]
 solution : [1, 23, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41]
 solution : [1, 23, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, 0), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41]
 solution : [1, 23, 29]


Solution : [1, 23, 29] has cost 20.


Before backtrack at level 8
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41]
 solution : [1, 23, 29]

After backtrack at level 8
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 29]


Invert decision for 29 at level 7


New level: 8
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23]


Solution : [1, 23] has cost 13.


Decide in level 8 among pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 28 with phase True at level 8

After decision at level 8
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 28]


New level: 9
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 28]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, 4096), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 9 : {32, 0, 34, 33, 4, 35, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 23, 28]


Before reduction : 
 pending  : []
 solution : [1, 23, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [1, 23, 28]


Solution : [1, 23, 28] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [1, 23, 28]

After backtrack at level 9
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23, 28]


Invert decision for 28 at level 8


New level: 9
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 41, 42, 33, 35]
 solution : [1, 23]

Essensial at level 9 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 9 : {32, 33, 34, 35, 4, 38, 41, 42, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 23, 0]


Before reduction : 
 pending  : []
 solution : [1, 23, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [1, 23, 0]


Solution : [1, 23, 0] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [1, 23, 0]

After backtrack at level 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35]
 solution : [1, 23]


Before backtrack at level 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35]
 solution : [1, 23]

After backtrack at level 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35, 28]
 solution : [1, 23]


Before backtrack at level 7
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35, 28]
 solution : [1, 23]

After backtrack at level 7
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1, 23]


Invert decision for 23 at level 6


New level: 7
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 7 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 42, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 42 with phase True at level 7

After decision at level 7
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1, 42]


New level: 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1, 42]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1, 42]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, 1073741824), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1, 42]


Solution : [1, 42] has cost 20.


Before backtrack at level 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1, 42]

After backtrack at level 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1, 42]


Invert decision for 42 at level 7


New level: 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 536870912), (30, -1), (31, -1), (32, 16384), (33, 16384), (34, 1048576), (35, 2097152), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 8 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 24, 29]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 24]


New level: 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 24]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, 1073741824), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : {7, 40, 12, 13, 14, 15, 16, 17, 18, 21, 25}

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 29]
 solution : [1, 24]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 29]
 solution : [1, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 0), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 29]
 solution : [1, 24]


Solution : [1, 24] has cost 13.


Decide in level 9 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28, 29]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 29 with phase True at level 9

After decision at level 9
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28]
 solution : [1, 24, 29]


New level: 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28]
 solution : [1, 24, 29]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 28]
 solution : [1, 24, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 10 : {33, 35}

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28]
 solution : [1, 24, 29]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28]
 solution : [1, 24, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, 0), (34, 131072), (35, 0), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28]
 solution : [1, 24, 29]


Solution : [1, 24, 29] has cost 20.


Before backtrack at level 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28]
 solution : [1, 24, 29]

After backtrack at level 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24, 29]


Invert decision for 29 at level 9


New level: 10
 pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24]


Before reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, -1), (41, 512), (42, -1), (43, 33554432), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 2097152), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24]


Solution : [1, 24] has cost 13.


Decide in level 10 among pending : [0, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 0 with phase True at level 10

After decision at level 10
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24, 0]


New level: 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24, 0]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 524288), (35, 4194304), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 2048), (42, -1), (43, 67108864), (44, 262144), (45, 262144), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 8388608), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 41, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : []
 solution : [1, 24, 0]


Before reduction : 
 pending  : []
 solution : [1, 24, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [1, 24, 0]


Solution : [1, 24, 0] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [1, 24, 0]

After backtrack at level 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24, 0]


Invert decision for 0 at level 10


New level: 11
 pending : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24]


Before reduction : 
 pending  : [4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 28, 33, 35]
 solution : [1, 24]

Essensial at level 11 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 11 : {32, 33, 34, 35, 4, 38, 41, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : []
 solution : [1, 24, 28]


Before reduction : 
 pending  : []
 solution : [1, 24, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [1, 24, 28]


Solution : [1, 24, 28] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [1, 24, 28]

After backtrack at level 11
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35]
 solution : [1, 24]


Before backtrack at level 10
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35]
 solution : [1, 24]

After backtrack at level 10
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0]
 solution : [1, 24]


Before backtrack at level 9
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0]
 solution : [1, 24]

After backtrack at level 9
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 9 among pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 29]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 29 with phase True at level 9

After decision at level 9
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]


New level: 10
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 33, 35, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, 1073741824), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 10 : {33, 35}

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 0), (34, 262144), (35, 0), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]


Solution : [1, 29] has cost 13.


Decide in level 10 among pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 41, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 41]


New level: 11
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 41]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, 134217728), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 8388608), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 8388608), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 1048576), (41, -1), (42, -1), (43, 67108864), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 41]


Solution : [1, 29, 41] has cost 31.


Before backtrack at level 11
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 41]

After backtrack at level 11
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 8388608), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 8388608), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 65536), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 1048576), (41, -1), (42, -1), (43, 67108864), (44, 32768), (45, 32768), (46, -1), (47, -1), (48, -1), (49, 8388608), (50, 1048576), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29]


Solution : [1, 29] has cost 13.


Decide in level 11 among pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 43, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 43 with phase True at level 11

After decision at level 11
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 43]


New level: 12
 pending : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 43]


Before reduction : 
 pending  : [28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 43]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 67108864), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 4096), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 12 : {32, 34, 4, 38, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 43]


Before reduction : 
 pending  : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 43]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 4096), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 4096), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 43]


Solution : [1, 29, 43] has cost 31.


Before backtrack at level 12
 pending : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 29, 43]

After backtrack at level 12
 pending : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 43]


Invert decision for 43 at level 11


New level: 12
 pending : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29]


Before reduction : 
 pending  : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 4096), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29]


Solution : [1, 29] has cost 13.


Decide in level 12 among pending : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17, 4, 32, 34, 49, 38, 44, 45, 50, 53]

Coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 17]


New level: 13
 pending : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 17]


Before reduction : 
 pending  : [28, 0, 25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 4096), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, -1), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 13 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 17]


Before reduction : 
 pending  : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 4096), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, -1), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4096), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, -1), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 17]


Solution : [1, 29, 17] has cost 22.


Before backtrack at level 13
 pending : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 17]

After backtrack at level 13
 pending : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]
 solution : [1, 29, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]
 solution : [1, 29]


Before reduction : 
 pending  : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]
 solution : [1, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 65536), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 4096), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 1024), (33, -1), (34, 131072), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 4096), (41, -1), (42, -1), (43, -1), (44, 65536), (45, 65536), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, -1), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]
 solution : [1, 29]


Solution : [1, 29] has cost 13.


Decide in level 13 among pending : [28, 0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]

Coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, -1), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

Decide 28 with phase True at level 13

After decision at level 13
 pending : [0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]
 solution : [1, 29, 28]


New level: 14
 pending : [0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]
 solution : [1, 29, 28]


Before reduction : 
 pending  : [0, 25, 40, 15, 13, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 7, 18, 21, 14, 16]
 solution : [1, 29, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, -1), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, -1), (34, 262144), (35, -1), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 16777216), (50, 4194304), (51, -1), (52, -1), (53, 16777216), (54, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 14 : {0, 32, 34, 4, 38, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 28]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 28]


Solution : [1, 29, 28] has cost 20.


Before backtrack at level 14
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 28]

After backtrack at level 14
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29, 28]


Invert decision for 28 at level 13


New level: 14
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29]

Essensial at level 14 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 14 : {32, 34, 4, 38, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 0]


Solution : [1, 29, 0] has cost 17.


Before backtrack at level 14
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 29, 0]

After backtrack at level 14
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29]


Before backtrack at level 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53]
 solution : [1, 29]

After backtrack at level 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28]
 solution : [1, 29]


Before backtrack at level 12
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28]
 solution : [1, 29]

After backtrack at level 12
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17]
 solution : [1, 29]


Before backtrack at level 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17]
 solution : [1, 29]

After backtrack at level 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43]
 solution : [1, 29]


Before backtrack at level 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43]
 solution : [1, 29]

After backtrack at level 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35, 41]
 solution : [1, 29]


Invert decision for 29 at level 9


New level: 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35, 41]
 solution : [1]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35, 41]
 solution : [1]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35, 41]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 10 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35, 41]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 41]


New level: 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 41]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, 268435456), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 4194304), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, -1), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 41]


Solution : [1, 41] has cost 24.


Before backtrack at level 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 41]

After backtrack at level 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1]

Essensial at level 11 : set()

Before removed
 coverage : [(0, 33554432), (1, -1), (2, -1), (3, -1), (4, 262144), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 1048576), (26, -1), (27, -1), (28, 33554432), (29, -1), (30, -1), (31, -1), (32, 4096), (33, 8192), (34, 262144), (35, 4194304), (36, -1), (37, -1), (38, 4096), (39, -1), (40, 1048576), (41, -1), (42, -1), (43, 134217728), (44, 131072), (45, 131072), (46, -1), (47, -1), (48, -1), (49, 33554432), (50, 4194304), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1]


Solution : [1] has cost 6.


Decide in level 11 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 0, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]

Coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

Decide 0 with phase True at level 11

After decision at level 11
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 0]


New level: 12
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 17, 43, 33, 35]
 solution : [1, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, 134217728), (1, -1), (2, -1), (3, -1), (4, 1048576), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 524288), (15, 262144), (16, 33554432), (17, 67108864), (18, 1048576), (19, -1), (20, -1), (21, 1048576), (22, -1), (23, -1), (24, -1), (25, 4194304), (26, -1), (27, -1), (28, 134217728), (29, -1), (30, -1), (31, -1), (32, 16384), (33, 32768), (34, 1048576), (35, 4194304), (36, -1), (37, -1), (38, 16384), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, 134217728), (44, 524288), (45, 524288), (46, -1), (47, -1), (48, -1), (49, 67108864), (50, 16777216), (51, -1), (52, -1), (53, 67108864), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 12 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53, 28}

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17]
 solution : [1, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17]
 solution : [1, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, 0), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17]
 solution : [1, 0]


Solution : [1, 0] has cost 10.


Decide in level 12 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 0, 17]


New level: 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 0, 17]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 0, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 0, 17]


Before reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 0, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 0, 17]


Solution : [1, 0, 17] has cost 19.


Before backtrack at level 13
 pending : [25, 40, 15, 13, 12]
 solution : [1, 0, 17]

After backtrack at level 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 0, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 0]


Solution : [1, 0] has cost 10.


Decide in level 13 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 0, 12]


New level: 14
 pending : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 0, 12]


Before reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 0, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {13, 14, 15}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 0, 12]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 0, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 0, 12]


Solution : [1, 0, 12] has cost 17.


Before backtrack at level 14
 pending : [25, 40, 7, 18, 21, 16]
 solution : [1, 0, 12]

After backtrack at level 14
 pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 0, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 0]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 0]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 0]


Solution : [1, 0] has cost 10.


Decide in level 14 among pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 0, 16]


New level: 15
 pending : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 0, 16]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 0, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {18, 21, 14, 7}

After reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 0, 16]


Before reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 0, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 0, 16]


Solution : [1, 0, 16] has cost 19.


Before backtrack at level 15
 pending : [25, 40, 15, 13]
 solution : [1, 0, 16]

After backtrack at level 15
 pending : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 0, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 0]


Before reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 0]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 0]


Solution : [1, 0] has cost 10.


Decide in level 15 among pending : [25, 40, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 0, 13]


New level: 16
 pending : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 0, 13]


Before reduction : 
 pending  : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 0, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : {14, 15}

After reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 0, 13]


Before reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 0, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 0, 13]


Solution : [1, 0, 13] has cost 17.


Before backtrack at level 16
 pending : [25, 40, 7, 18, 21]
 solution : [1, 0, 13]

After backtrack at level 16
 pending : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 0, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 0]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 0]

Essensial at level 16 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 0, 15]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 0, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 0, 15]


Solution : [1, 0, 15] has cost 17.


Before backtrack at level 16
 pending : [25, 40, 7, 18, 21, 14]
 solution : [1, 0, 15]

After backtrack at level 16
 pending : [25, 40, 7, 18, 21, 14, 15]
 solution : [1, 0]


Before backtrack at level 15
 pending : [25, 40, 7, 18, 21, 14, 15]
 solution : [1, 0]

After backtrack at level 15
 pending : [25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 0]


Before backtrack at level 14
 pending : [25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 0]

After backtrack at level 14
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 0]


Before backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 0]

After backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 0]


Before backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 0]

After backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 43, 33, 35, 17]
 solution : [1, 0]


Invert decision for 0 at level 11


New level: 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 43, 33, 35, 17]
 solution : [1]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 4, 32, 34, 49, 38, 44, 45, 50, 53, 28, 43, 33, 35, 17]
 solution : [1]

Essensial at level 12 : {28}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

Covered at level 12 : {32, 33, 34, 35, 4, 38, 43, 44, 45, 49, 50, 53}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 28]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0), (34, 0), (35, 0), (36, -1), (37, -1), (38, 0), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, 0), (44, 0), (45, 0), (46, -1), (47, -1), (48, -1), (49, 0), (50, 0), (51, -1), (52, -1), (53, 0), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]
 solution : [1, 28]


Solution : [1, 28] has cost 13.


Decide in level 12 among pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 28, 17]


New level: 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 28, 17]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 28, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, 33554432), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : {7, 14, 16, 18, 21}

After reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 28, 17]


Before reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 28, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, 0), (15, 65536), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12]
 solution : [1, 28, 17]


Solution : [1, 28, 17] has cost 22.


Before backtrack at level 13
 pending : [25, 40, 15, 13, 12]
 solution : [1, 28, 17]

After backtrack at level 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 28, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 28]


Before reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 28]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 262144), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]
 solution : [1, 28]


Solution : [1, 28] has cost 13.


Decide in level 13 among pending : [25, 40, 15, 13, 12, 7, 18, 21, 14, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 28, 12]


New level: 14
 pending : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 28, 12]


Before reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14, 16]
 solution : [1, 28, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : {13, 14, 15}

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 28, 12]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 28, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16]
 solution : [1, 28, 12]


Solution : [1, 28, 12] has cost 20.


Before backtrack at level 14
 pending : [25, 40, 7, 18, 21, 16]
 solution : [1, 28, 12]

After backtrack at level 14
 pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 28, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 28]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 28]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4194304), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 16, 15, 13, 14]
 solution : [1, 28]


Solution : [1, 28] has cost 13.


Decide in level 14 among pending : [25, 40, 7, 18, 21, 16, 15, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 28, 16]


New level: 15
 pending : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 28, 16]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 15, 13, 14]
 solution : [1, 28, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, 16777216), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : {18, 21, 14, 7}

After reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 28, 16]


Before reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 28, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 65536), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 15, 13]
 solution : [1, 28, 16]


Solution : [1, 28, 16] has cost 22.


Before backtrack at level 15
 pending : [25, 40, 15, 13]
 solution : [1, 28, 16]

After backtrack at level 15
 pending : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 28, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 28]


Before reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 28]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 2048), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [25, 40, 15, 13, 7, 18, 21, 14]
 solution : [1, 28]


Solution : [1, 28] has cost 13.


Decide in level 15 among pending : [25, 40, 15, 13, 7, 18, 21, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Decide 13 with phase True at level 15

After decision at level 15
 pending : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 28, 13]


New level: 16
 pending : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 28, 13]


Before reduction : 
 pending  : [25, 40, 15, 7, 18, 21, 14]
 solution : [1, 28, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 262144), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : {14, 15}

After reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 28, 13]


Before reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 28, 13]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21]
 solution : [1, 28, 13]


Solution : [1, 28, 13] has cost 20.


Before backtrack at level 16
 pending : [25, 40, 7, 18, 21]
 solution : [1, 28, 13]

After backtrack at level 16
 pending : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 28, 13]


Invert decision for 13 at level 15


New level: 16
 pending : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 28]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 15, 14]
 solution : [1, 28]

Essensial at level 16 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, 262144), (22, -1), (23, -1), (24, -1), (25, 524288), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 28, 15]


Before reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 28, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, -1), (21, 524288), (22, -1), (23, -1), (24, -1), (25, 2097152), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1), (53, -1), (54, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [25, 40, 7, 18, 21, 14]
 solution : [1, 28, 15]


Solution : [1, 28, 15] has cost 20.


Before backtrack at level 16
 pending : [25, 40, 7, 18, 21, 14]
 solution : [1, 28, 15]

After backtrack at level 16
 pending : [25, 40, 7, 18, 21, 14, 15]
 solution : [1, 28]


Before backtrack at level 15
 pending : [25, 40, 7, 18, 21, 14, 15]
 solution : [1, 28]

After backtrack at level 15
 pending : [25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 28]


Before backtrack at level 14
 pending : [25, 40, 7, 18, 21, 14, 15, 13]
 solution : [1, 28]

After backtrack at level 14
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 28]


Before backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16]
 solution : [1, 28]

After backtrack at level 13
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 28]


Before backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12]
 solution : [1, 28]

After backtrack at level 12
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17]
 solution : [1]


Before backtrack at level 11
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17]
 solution : [1]

After backtrack at level 11
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0]
 solution : [1]


Before backtrack at level 10
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0]
 solution : [1]

After backtrack at level 10
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41]
 solution : [1]


Before backtrack at level 9
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41]
 solution : [1]

After backtrack at level 9
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29]
 solution : [1]


Before backtrack at level 8
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29]
 solution : [1]

After backtrack at level 8
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24]
 solution : [1]


Before backtrack at level 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24]
 solution : [1]

After backtrack at level 7
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42]
 solution : [1]


Before backtrack at level 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42]
 solution : [1]

After backtrack at level 6
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23]
 solution : [1]


Before backtrack at level 5
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23]
 solution : [1]

After backtrack at level 5
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36]
 solution : [1]


Before backtrack at level 4
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36]
 solution : [1]

After backtrack at level 4
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36, 30]
 solution : [1]


Before backtrack at level 3
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36, 30]
 solution : [1]

After backtrack at level 3
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36, 30, 26]
 solution : [1]


Before backtrack at level 2
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36, 30, 26]
 solution : [1]

After backtrack at level 2
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36, 30, 26, 9]
 solution : [1]


Before backtrack at level 1
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36, 30, 26, 9]
 solution : [1]

After backtrack at level 1
 pending : [25, 40, 7, 18, 21, 14, 15, 13, 16, 12, 28, 4, 32, 34, 49, 38, 44, 45, 50, 53, 43, 33, 35, 17, 0, 41, 29, 24, 42, 23, 36, 30, 26, 9, 8]
 solution : [1]


=========================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=========================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 14

[MIN NOTE]: maximum branch and bound depth: 16

[MIN NOTE]: number of definitions: 2

invariant [def_didNotPromise] forall A. didNotPromise(A) = (forall P. ~promise(A,P)) # definition, qcost: 4

invariant [def_chosenAt] forall Q,P. chosenAt(Q,P) = (forall A. member(A,Q) -> promise(A,P)) # definition, qcost: 6

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [1, 26, 0]

[MIN NOTE]: solution length: 3

invariant [invar_1] forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_26] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_0] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 24




[QRM NOTE]: Time elapsed since start: 2.483 seconds

[QRM NOTE]: Time elapsed since last: 1.487 seconds

[QRM NOTE]: Peak memory: 2971957 bytes


**************************************************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

**************************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy -s acceptor=4,proposer=3 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=========================================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: acceptor=4,proposer=3]

=========================================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 34

[FW NOTE]: number of interpreted atoms (e.g. member,le): 16

[FW NOTE]: symmetric group order: 144

[QRM NOTE]: Time elapsed since start: 0.198 seconds

[QRM NOTE]: Time elapsed since last: 0.198 seconds

[QRM NOTE]: Peak memory: 306046 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 256


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=4,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2', 'acceptor3']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1_acceptor2', 'quorum__acceptor0_acceptor1_acceptor3', 'quorum__acceptor0_acceptor2_acceptor3', 'quorum__acceptor1_acceptor2_acceptor3']
predicate: leader('proposer',)
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: promise('acceptor', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor3)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer2)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'didNotPromise(acceptor3)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'promise(acceptor3,proposer0)', 'promise(acceptor3,proposer1)', 'promise(acceptor3,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']

0000000000000000000001001010010-11
0000000000000000000001001010100111
0000000000000000000001001100010111
00000000000000000000010011001001-1
0000000000000000000001010001010-11
0000000000000000000001010001100111
0000000000000000000001010010001-11
0000000000000000000001010010100111
0000000000000000000001010100001111
0000000000000000000001010100010111
0000000000000000000001010100100111
0000000000000000000001100001010111
00000000000000000000011000011001-1
0000000000000000000001100010001111
0000000000000000000001100010010111
0000000000000000000001100010100111
00000000000000000000011001000011-1
0000000000000000000001100100010111
0000000000000000000010001001010-11
0000000000000000000010001001100111
0000000000000000000010001010001-11
0000000000000000000010001010100111
0000000000000000000010001100001111
0000000000000000000010001100010111
0000000000000000000010001100100111
0000000000000000000010010001001-11
0000000000000000000010010001100111
0000000000000000000010010100001111
000000000000000000001001010010011-
0000000000000000000010100001001111
0000000000000000000010100001010111
0000000000000000000010100001100111
0000000000000000000010100010001111
000000000000000000001010001010011-
0000000000000000000010100100001111
000000000000000000001010010001011-
0000000000000000000100001001010111
00000000000000000001000010011001-1
0000000000000000000100001010001111
0000000000000000000100001010010111
0000000000000000000100001010100111
00000000000000000001000011000011-1
0000000000000000000100001100010111
0000000000000000000100010001001111
0000000000000000000100010001010111
0000000000000000000100010001100111
0000000000000000000100010010001111
000000000000000000010001001010011-
0000000000000000000100010100001111
000000000000000000010001010001011-
00000000000000000001001000010011-1
0000000000000000000100100001010111
0000000000000000000100100010001111
000000000000000000010010001001011-
0000000000000001000001001010000-11
00000000000000010000010011000001-1
0000000000000001000001010001000-11
0000000000000001000001010010000-11
0000000000000001000001010100000111
00000000000000010000011000010001-1
0000000000000001000001100010000111
00000000000000010000011001000001-1
0000000000000001000010001001000-11
0000000000000001000010001010000-11
0000000000000001000010001100000111
0000000000000001000010010001000-11
000000000000000100001001010000011-
0000000000000001000010100001000111
000000000000000100001010001000011-
000000000000000100001010010000011-
00000000000000010001000010010001-1
0000000000000001000100001010000111
00000000000000010001000011000001-1
0000000000000001000100010001000111
000000000000000100010001001000011-
000000000000000100010001010000011-
00000000000000010001001000010001-1
000000000000000100010010001000011-
0000000000000010000001001000010-11
00000000000000100000010010001001-1
0000000000000010000001010000001-11
0000000000000010000001010000010-11
0000000000000010000001010000100111
00000000000000100000011000000011-1
0000000000000010000001100000010111
00000000000000100000011000001001-1
0000000000000010000010001000001-11
0000000000000010000010001000010-11
0000000000000010000010001000100111
0000000000000010000010010000001-11
000000000000001000001001000010011-
0000000000000010000010100000001111
000000000000001000001010000001011-
000000000000001000001010000010011-
00000000000000100001000010000011-1
0000000000000010000100001000010111
00000000000000100001000010001001-1
0000000000000010000100010000001111
000000000000001000010001000001011-
000000000000001000010001000010011-
00000000000000100001001000000011-1
000000000000001000010010000001011-
0000000000000011000001001000000--1
0000000000000011000001010000000-11
00000000000000110000011000000001-1
0000000000000011000010001000000-11
0000000000000011000010010000000-1-
000000000000001100001010000000011-
00000000000000110001000010000001-1
000000000000001100010001000000011-
00000000000000110001001000000001--
0000000000000100000001000001010-11
00000000000001000000010000011001-1
0000000000000100000001000010001-11
0000000000000100000001000010010-11
0000000000000100000001000010100111
00000000000001000000010001000011-1
0000000000000100000001000100010111
00000000000001000000010001001001-1
0000000000000100000010000001001-11
0000000000000100000010000001010-11
0000000000000100000010000001100111
0000000000000100000010000010001-11
000000000000010000001000001010011-
0000000000000100000010000100001111
000000000000010000001000010001011-
000000000000010000001000010010011-
00000000000001000001000000010011-1
0000000000000100000100000001010111
00000000000001000001000000011001-1
0000000000000100000100000010001111
000000000000010000010000001001011-
000000000000010000010000001010011-
00000000000001000001000001000011-1
000000000000010000010000010001011-
0000000000000101000001000001000--1
0000000000000101000001000010000-11
00000000000001010000010001000001-1
0000000000000101000010000001000-11
0000000000000101000010000010000-1-
000000000000010100001000010000011-
00000000000001010001000000010001-1
000000000000010100010000001000011-
00000000000001010001000001000001--
0000000000000110000001000000001--1
0000000000000110000001000000010-11
00000000000001100000010000001001-1
0000000000000110000010000000001-11
0000000000000110000010000000010-1-
000000000000011000001000000010011-
00000000000001100001000000000011-1
000000000000011000010000000001011-
00000000000001100001000000001001--
0000000000000111000001000000000--1
0000000000000111000010000000000-1-
00000000000001110001000000000001--
0000000000001000000000001001010-11
00000000000010000000000010011001-1
0000000000001000000000001010001-11
0000000000001000000000001010010-11
0000000000001000000000001010100111
00000000000010000000000011000011-1
0000000000001000000000001100010111
00000000000010000000000011001001-1
0000000000001000000000010001001-11
0000000000001000000000010001010-11
0000000000001000000000010001100111
0000000000001000000000010010001-11
000000000000100000000001001010011-
0000000000001000000000010100001111
000000000000100000000001010001011-
000000000000100000000001010010011-
00000000000010000000001000010011-1
0000000000001000000000100001010111
00000000000010000000001000011001-1
0000000000001000000000100010001111
000000000000100000000010001001011-
000000000000100000000010001010011-
00000000000010000000001001000011-1
000000000000100000000010010001011-
0000000000001001000000001001000--1
0000000000001001000000001010000-11
00000000000010010000000011000001-1
0000000000001001000000010001000-11
0000000000001001000000010010000-1-
000000000000100100000001010000011-
00000000000010010000001000010001-1
000000000000100100000010001000011-
00000000000010010000001001000001--
0000000000001010000000001000001--1
0000000000001010000000001000010-11
00000000000010100000000010001001-1
0000000000001010000000010000001-11
0000000000001010000000010000010-1-
000000000000101000000001000010011-
00000000000010100000001000000011-1
000000000000101000000010000001011-
00000000000010100000001000001001--
0000000000001011000000001000000--1
0000000000001011000000010000000-1-
00000000000010110000001000000001--
0000000000001100000000000001001--1
0000000000001100000000000001010-11
00000000000011000000000000011001-1
0000000000001100000000000010001-11
0000000000001100000000000010010-1-
000000000000110000000000001010011-
00000000000011000000000001000011-1
000000000000110000000000010001011-
00000000000011000000000001001001--
0000000000001101000000000001000--1
0000000000001101000000000010000-1-
00000000000011010000000001000001--
0000000000001110000000000000001--1
0000000000001110000000000000010-1-
00000000000011100000000000001001--
0000000000001111000000000000000---
000000000001000000-010001001001-11
000000000001000000-1000010010011-1
000000000001100000-000001001001--1
00000000001000000-0001010010010-11
00000000001000000-010001001001011-
00000000001010000-0000010010010-1-
0000000001000000-000011001001001-1
0000000001000000-0001010010010011-
0000000001001000-000001001001001--
000000001000000000-001010001001-11
000000001000000000-0011000010011-1
000000001000010000-001000001001--1
00000001000000000-0010001010010-11
00000001000000000-001010001001011-
00000001000001000-0010000010010-1-
0000001000000000-001000011001001-1
0000001000000000-0010001010010011-
0000001000000100-001000001001001--
000001000000000000-001001010001-11
000001000000000000-0010011000011-1
000001000000001000-001001000001--1
00001000000000000-0010010001010-11
00001000000000000-001001010001011-
00001000000000100-0010010000010-1-
0001000000000000-001001000011001-1
0001000000000000-0010010001010011-
0001000000000010-001001000001001--
001000000000000000-001001001010-11
001000000000000000-0010010011001-1
001000000000000100-001001001000--1
001001001001000000-001001001001--1
01000000000000000-0010010010001-11
01000000000000000-001001001010011-
01000000000000010-0010010010000-1-
01001001001000000-0010010010010-1-
1000000000000000-001001001000011-1
1000000000000000-0010010010001011-
1000000000000001-001001001000001--
1001001001000000-001001001001001--

[QRM NOTE]: Time elapsed since start: 8.712 seconds

[QRM NOTE]: Time elapsed since last: 8.514 seconds

[QRM NOTE]: Peak memory: 1766361 bytes


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: acceptor=4,proposer=3]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 12.647 seconds

[QRM NOTE]: Time elapsed since last: 3.935 seconds

[QRM NOTE]: Peak memory: 5002100 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy -s acceptor=3,proposer=4 -f 2 -g -w -r -b -m -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=========================================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: acceptor=3,proposer=4]

=========================================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 35

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 144

[QRM NOTE]: Time elapsed since start: 0.175 seconds

[QRM NOTE]: Time elapsed since last: 0.175 seconds

[QRM NOTE]: Peak memory: 328541 bytes


===================================

	Forward reachability

===================================

building bdd for atoms

building bdd for initial action

building bdd for axioms

building bdd for actions

building bdd for action: send_1a(fml:p)

building bdd for action: send_1b(fml:a,fml:p)

building bdd for action: decide(fml:p,fml:q)

building bdd for abstractions

start symbolic image computation

start extracting cubes

[FW NOTE]: number of reachable cubes: 125


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=4]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2', 'proposer3']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
predicate: member('acceptor', 'quorum')
predicate: leader('proposer',)
predicate: didNotPromise('acceptor',)
predicate: start('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor1,proposer3)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer3)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer3)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'leader(proposer3)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor0,proposer3)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor1,proposer3)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'promise(acceptor2,proposer3)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)', 'start(proposer3)']

0000000000000000000000100100100-111
00000000000000000000001001010001-11
0000000000000000000000101000010-111
000000000000000000000010100100011-1
00000000000000000000001100000101-11
000000000000000000000011000010011-1
0000000000000000000001000010100-111
00000000000000000000010000110001-11
0000000000000000000001001000001-111
0000000000000000000001001001000111-
00000000000000000000010100000011-11
0000000000000000000001010000100111-
0000000000000000000010000010010-111
000000000000000000001000001100011-1
0000000000000000000010000100001-111
0000000000000000000010000101000111-
000000000000000000001001000000111-1
0000000000000000000010010000010111-
00000000000000000001000000100101-11
000000000000000000010000001010011-1
00000000000000000001000001000011-11
0000000000000000000100000100100111-
000000000000000000010000100000111-1
0000000000000000000100001000010111-
0000000000000010000000100100000--11
0000000000000010000000101000000-1-1
00000000000000100000001100000001--1
0000000000000010000001000010000--11
0000000000000010000001001000000-11-
00000000000000100000010100000001-1-
0000000000000010000010000010000-1-1
0000000000000010000010000100000-11-
000000000000001000001001000000011--
00000000000000100001000000100001--1
00000000000000100001000001000001-1-
000000000000001000010000100000011--
0000000000000100000000100000010--11
0000000000000100000000100000100-1-1
00000000000001000000001000010001--1
0000000000000100000001000000001--11
0000000000000100000001000000100-11-
00000000000001000000010000010001-1-
0000000000000100000010000000001-1-1
0000000000000100000010000000010-11-
000000000000010000001000000100011--
00000000000001000001000000000011--1
00000000000001000001000000000101-1-
000000000000010000010000000010011--
0000000000000110000000100000000---1
0000000000000110000001000000000--1-
0000000000000110000010000000000-1--
00000000000001100001000000000001---
0000000000001000000000000010010--11
0000000000001000000000000010100-1-1
00000000000010000000000000110001--1
0000000000001000000000000100001--11
0000000000001000000000000100100-11-
00000000000010000000000001010001-1-
0000000000001000000000001000001-1-1
0000000000001000000000001000010-11-
000000000000100000000000100100011--
00000000000010000000000100000011--1
00000000000010000000000100000101-1-
000000000000100000000001000010011--
0000000000001010000000000010000---1
0000000000001010000000000100000--1-
0000000000001010000000001000000-1--
00000000000010100000000100000001---
0000000000001100000000000000001---1
0000000000001100000000000000010--1-
0000000000001100000000000000100-1--
00000000000011000000000000010001---
0000000000001110000000000000000----
000000000001000000-001000010001--11
000000000001000000-010000010001-1-1
000000000001000000-1000000100011--1
000000000001100000-000000010001---1
00000000001000000-0000100100010--11
00000000001000000-0010000100010-11-
00000000001000000-01000001000101-1-
00000000001010000-0000000100010--1-
0000000001000000-00000101000100-1-1
0000000001000000-00001001000100-11-
0000000001000000-0010000100010011--
0000000001001000-00000001000100-1--
000000001000000-0000001100010001--1
000000001000000-0000010100010001-1-
000000001000000-00001001000100011--
000000001000100-0000000100010001---
000000010000000000-000100100001--11
000000010000000000-000101000001-1-1
000000010000000000-0001100000011--1
000000010000010000-000100000001---1
00000010000000000-0001000010010--11
00000010000000000-0001001000010-11-
00000010000000000-00010100000101-1-
00000010000001000-0001000000010--1-
0000010000000000-00010000010100-1-1
0000010000000000-00010000100100-11-
0000010000000000-0001001000010011--
0000010000000100-00010000000100-1--
000010000000000-0001000000110001--1
000010000000000-0001000001010001-1-
000010000000000-00010000100100011--
000010000000010-0001000000010001---
000100000000000000-000100010010--11
000100000000000000-000100010100-1-1
000100000000000000-0001000110001--1
000100000000001000-000100010000---1
000100010001000000-000100010001---1
00100000000000000-0001000100001--11
00100000000000000-0001000100100-11-
00100000000000000-00010001010001-1-
00100000000000100-0001000100000--1-
00100010001000000-0001000100010--1-
0100000000000000-00010001000001-1-1
0100000000000000-00010001000010-11-
0100000000000000-0001000100100011--
0100000000000010-00010001000000-1--
0100010001000000-00010001000100-1--
100000000000000-0001000100000011--1
100000000000000-0001000100000101-1-
100000000000000-00010001000010011--
100000000000001-0001000100000001---
100010001000000-0001000100010001---

[QRM NOTE]: Time elapsed since start: 2.415 seconds

[QRM NOTE]: Time elapsed since last: 2.240 seconds

[QRM NOTE]: Peak memory: 1698533 bytes


=====================================================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: acceptor=3,proposer=4]

=====================================================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 4.436 seconds

[QRM NOTE]: Time elapsed since last: 2.021 seconds

[QRM NOTE]: Peak memory: 2698509 bytes


*********************************************************************

	[IVY_CHECK]: Ivy Check for Reachability Invariant

*********************************************************************


==============================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy]

==============================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_1
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_0

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_1 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_0 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_1 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_0 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_1 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_0 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_1 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_26 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_0 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS


**********************************************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy

**********************************************************************************************

[RMIN NUM]: 1

[RMIN RESULT]: ['ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy']

[CUTOFF]: acceptor=3,proposer=3

[QRM RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 87.785 seconds

[QRM NOTE]: Time elapsed since last: 87.785 seconds

