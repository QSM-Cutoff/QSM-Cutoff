from typing import Type
from pysmt.shortcuts import TRUE, And, Or, Not, EqualsOrIff, Exists, ForAll, is_sat, Function
from frontend.vmt_parser import TransitionSystem
from frontend.vmt_parser import vmt_parse 
import frontend.common as common

def forward_reach(input : str, output : str):
    common.initialize() # ic3po setup
    ts : Type[TransitionSystem]
    ts = vmt_parse(input)
    print('sorts: ', ts._sorts    ) 
    print('sorts2fin: ', ts._sort2fin ) 
    print('enumsorts: ', ts._enumsorts) 
    print('enum2qvar: ', ts._enum2qvar) 
    print('fin2sort: ', ts._fin2sort ) 
    print('enum2inf: ', ts._enum2inf ) 

    print('quorums_symbols: ', ts._quorums_symbols) 
    print('quorums_sorts  : ', ts._quorums_sorts  ) 
    print('quorums_consts : ', ts._quorums_consts ) 
    print('quorums_parent : ', ts._quorums_parent ) 
    print('quorums_child  : ', ts._quorums_child  ) 

    print('dependent_sort_en: ', ts.dependent_sort_en)    
    print('child_sort      : ', ts._child_sort      )    
    print('parent_sort     : ', ts._parent_sort     )    
    
    print('orig._init         : ', ts.orig._init          )    
    print('orig._axiom        : ', ts.orig._axiom         )    
    print('orig._prop         : ', ts.orig._prop          )    
    print('orig._vars         : ', ts.orig._vars          )    
    print('orig._axiomvars    : ', ts.orig._axiomvars     )    
    print('orig._states       : ', ts.orig._states        )    
    print('orig._nexstates    : ', ts.orig._nexstates     )    
    print('orig._globals      : ', ts.orig._globals       )    
    print('orig._le           : ', ts.orig._le            )    
    print('orig._others       : ', ts.orig._others        )    
    print('orig._pre2nex      : ', ts.orig._pre2nex       )    
    print('orig._nex2pre      : ', ts.orig._nex2pre       )    
    print('orig._trel         : ', ts.orig._trel          )    
    print('orig._actions      : ', ts.orig._actions       )    
    print('orig._action_en2idx: ', ts.orig._action_en2idx )    
    print('orig._predicates   : ', ts.orig._predicates    )    
    print('orig._helpers      : ', ts.orig._helpers       )    
    print('orig._infers       : ', ts.orig._infers        )    
    print('orig._definitions  : ', ts.orig._definitions   )    
    print('orig._definitionMap: ', ts.orig._definitionMap )    
    print('curr._init         : ', ts.curr._init          )    
    print('curr._axiom        : ', ts.curr._axiom         )    
    print('curr._prop         : ', ts.curr._prop          )    
    print('curr._vars         : ', ts.curr._vars          )    
    print('curr._axiomvars    : ', ts.curr._axiomvars     )    
    print('curr._states       : ', ts.curr._states        )    
    print('curr._nexstates    : ', ts.curr._nexstates     )    
    print('curr._globals      : ', ts.curr._globals       )    
    print('curr._le           : ', ts.curr._le            )    
    print('curr._others       : ', ts.curr._others        )    
    print('curr._pre2nex      : ', ts.curr._pre2nex       )    
    print('curr._nex2pre      : ', ts.curr._nex2pre       )    
    print('curr._trel         : ', ts.curr._trel          )    
    print('curr._actions      : ', ts.curr._actions       )    
    print('curr._action_en2idx: ', ts.curr._action_en2idx )    
    print('curr._predicates   : ', ts.curr._predicates    )    
    print('curr._helpers      : ', ts.curr._helpers       )    
    print('curr._infers       : ', ts.curr._infers        )    
    print('curr._definitions  : ', ts.curr._definitions   )    
    print('curr._definitionMap: ', ts.curr._definitionMap )    