
Printing isolate {isolate}:
sorts      :  {UninterpretedSort('node',): 0}
pre        :  {Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort()))}
nex        :  {Const('message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Const('start_node', UninterpretedSort('node',)), Const('has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort()))}
updated    :  {Const('message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Const('has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort()))}
glo        :  {Const('start_node', UninterpretedSort('node',))}
vars       :  set()
allvars    :  {Const('start_node', UninterpretedSort('node',)), Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Const('message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Const('__start_node', UninterpretedSort('node',)), Const('has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort()))}
nex2pre    :  {Const('message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())): Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Const('has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())): Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Const('start_node', UninterpretedSort('node',)): Const('__start_node', UninterpretedSort('node',))}
pre2nex    :  {Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())): Const('message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())): Const('has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Const('__start_node', UninterpretedSort('node',)): Const('start_node', UninterpretedSort('node',))}
actions    :  {'action_ext:recv', 'action_ext:send'}
definitions:  []
defn_labels:  []
defs       :  set()
str        :  {'node': '(declare-sort node 0)', 'message': '(declare-fun message (node node) Bool)', '__message': '(declare-fun __message (node node) Bool)', '__messagemessage': '(define-fun .message ((V0 node) (V1 node)) Bool (! (__message V0 V1) :next message))', 'has_lock': '(declare-fun has_lock (node) Bool)', '__has_lock': '(declare-fun __has_lock (node) Bool)', '__has_lockhas_lock': '(define-fun .has_lock ((V0 node)) Bool (! (__has_lock V0) :next has_lock))', 'start_node': '(declare-fun start_node () node)', '__start_nodestart_node': '(define-fun .start_node () node (! start_node :global true))'}
vmt        :  {'$prop': (And(ForAll(frozenset({Var('X', UninterpretedSort('node',)), Var('Y', UninterpretedSort('node',))}), Implies(Not(Eq(Var('X', UninterpretedSort('node',)), Var('Y', UninterpretedSort('node',))),), Not(And(Apply(Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('X', UninterpretedSort('node',))), Apply(Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('Y', UninterpretedSort('node',)))),))),), 'prop', 'invar-property', '0'), '$axiom': (And(), 'axiom', 'axiom', 'true'), '$init': (And(ForAll(frozenset({Var('V1', UninterpretedSort('node',)), Var('V0', UninterpretedSort('node',))}), Iff(Apply(Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',)), Var('V1', UninterpretedSort('node',))), Or())), ForAll(frozenset({Var('V0', UninterpretedSort('node',))}), Iff(Apply(Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',))), Eq(Var('V0', UninterpretedSort('node',)), Const('start_node', UninterpretedSort('node',)))))), 'init', 'init', 'true'), 'action_ext:send': (Exists(frozenset({Var('V__fml:dst', UninterpretedSort('node',)), Var('V__fml:src', UninterpretedSort('node',))}), And(ForAll(frozenset({Var('V1', UninterpretedSort('node',)), Var('V0', UninterpretedSort('node',))}), Iff(Apply(Const('message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',)), Var('V1', UninterpretedSort('node',))), Ite(BooleanSort(), And(Eq(Var('V0', UninterpretedSort('node',)), Var('V__fml:src', UninterpretedSort('node',))), Eq(Var('V1', UninterpretedSort('node',)), Var('V__fml:dst', UninterpretedSort('node',)))), And(), Apply(Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',)), Var('V1', UninterpretedSort('node',)))))), ForAll(frozenset({Var('V0', UninterpretedSort('node',))}), Iff(Apply(Const('has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',))), Ite(BooleanSort(), And(Eq(Var('V0', UninterpretedSort('node',)), Var('V__fml:src', UninterpretedSort('node',))),), Or(), Apply(Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',)))))), Apply(Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('V__fml:src', UninterpretedSort('node',))))), 'action_ext:send', 'action', 'ext:send'), 'action_ext:recv': (Exists(frozenset({Var('V__fml:dst', UninterpretedSort('node',)), Var('V__fml:src', UninterpretedSort('node',))}), And(ForAll(frozenset({Var('V1', UninterpretedSort('node',)), Var('V0', UninterpretedSort('node',))}), Iff(Apply(Const('message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',)), Var('V1', UninterpretedSort('node',))), Ite(BooleanSort(), And(Eq(Var('V0', UninterpretedSort('node',)), Var('V__fml:src', UninterpretedSort('node',))), Eq(Var('V1', UninterpretedSort('node',)), Var('V__fml:dst', UninterpretedSort('node',)))), Or(), Apply(Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',)), Var('V1', UninterpretedSort('node',)))))), ForAll(frozenset({Var('V0', UninterpretedSort('node',))}), Iff(Apply(Const('has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',))), Ite(BooleanSort(), And(Eq(Var('V0', UninterpretedSort('node',)), Var('V__fml:dst', UninterpretedSort('node',))),), And(), Apply(Const('__has_lock', FunctionSort(UninterpretedSort('node',), BooleanSort())), Var('V0', UninterpretedSort('node',)))))), Apply(Const('__message', FunctionSort(UninterpretedSort('node',), UninterpretedSort('node',), BooleanSort())), Var('V__fml:src', UninterpretedSort('node',)), Var('V__fml:dst', UninterpretedSort('node',))))), 'action_ext:recv', 'action', 'ext:recv')}
OK
