
*******************************************************

	[QRM]: ivybench/sym/ivy/TCommit.ivy

*******************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


===========================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=2]

===========================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 8

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 2

[FW NOTE]: number of branching actions: 6

ivy_to_cpp target=qrm TCommit.resource_manager_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o TCommit.resource_manager_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 TCommit.resource_manager_2.finite.cpp TCommit.resource_manager_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared TCommit.resource_manager_2.finite.o TCommit.resource_manager_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.781 seconds

[QRM NOTE]: Time elapsed since last: 7.781 seconds

[QRM NOTE]: Peak memory: 1178059 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        12

[FW NOTE]: number of dfs representative states:     8

[FW NOTE]: number of dfs non-representative states: 4


==================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/TCommit: resource_manager=2]

==================================================================================================

sort: resource_manager=['resource_manager0', 'resource_manager1']
predicate: committed('resource_manager',)
predicate: working('resource_manager',)
predicate: prepared('resource_manager',)
predicate: aborted('resource_manager',)
interpreted atoms: {}
state atoms: ['aborted(resource_manager0)', 'aborted(resource_manager1)', 'committed(resource_manager0)', 'committed(resource_manager1)', 'prepared(resource_manager0)', 'prepared(resource_manager1)', 'working(resource_manager0)', 'working(resource_manager1)']
representative states : 3, 6, 12, 24, 48, 72, 192, 66


=== State Orbit 0 =====================
size : 1
repr state: 00000011
lex min decimal: 3
states:
00000011




=== State Orbit 1 =====================
size : 2
repr state: 00001001
lex min decimal: 6
states:
00000110
00001001




=== State Orbit 2 =====================
size : 1
repr state: 00001100
lex min decimal: 12
states:
00001100




=== State Orbit 3 =====================
size : 2
repr state: 00100100
lex min decimal: 24
states:
00011000
00100100




=== State Orbit 4 =====================
size : 1
repr state: 00110000
lex min decimal: 48
states:
00110000




=== State Orbit 5 =====================
size : 2
repr state: 10000100
lex min decimal: 72
states:
10000100
01001000




=== State Orbit 6 =====================
size : 1
repr state: 11000000
lex min decimal: 192
states:
11000000




=== State Orbit 7 =====================
size : 2
repr state: 10000001
lex min decimal: 66
states:
01000010
10000001



[QRM NOTE]: Time elapsed since start: 7.871 seconds

[QRM NOTE]: Time elapsed since last: 0.091 seconds

[QRM NOTE]: Peak memory: 1209041 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.874 seconds

[QRM NOTE]: Time elapsed since last: 0.002 seconds

[QRM NOTE]: Peak memory: 159805 bytes


==================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/TCommit: resource_manager=2]

==================================================================================================


=============================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/TCommit: resource_manager=2]

=============================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ---1-1--
0     : ['committed(resource_manager1)', 'prepared(resource_manager1)']
1     : --1-1---
1     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -----1-1
2     : ['prepared(resource_manager1)', 'working(resource_manager1)']
3     : ----1-1-
3     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : -1---1--
4     : ['aborted(resource_manager1)', 'prepared(resource_manager1)']
5     : 1---1---
5     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : -1-----1
6     : ['aborted(resource_manager1)', 'working(resource_manager1)']
7     : 1-----1-
7     : ['aborted(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 4
num_suborbits: 2
8 (*) : -11-----
8     : ['aborted(resource_manager1)', 'committed(resource_manager0)']
9     : 1--1----
9     : ['aborted(resource_manager0)', 'committed(resource_manager1)']
10 (*) : -1-1----
10     : ['aborted(resource_manager1)', 'committed(resource_manager1)']
11     : 1-1-----
11     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 4
num_suborbits: 2
12 (*) : --1---1-
12     : ['committed(resource_manager0)', 'working(resource_manager0)']
13     : ---1---1
13     : ['committed(resource_manager1)', 'working(resource_manager1)']
14 (*) : ---1--1-
14     : ['committed(resource_manager1)', 'working(resource_manager0)']
15     : --1----1
15     : ['committed(resource_manager0)', 'working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 2
num_suborbits: 1
16 (*) : --10-0--
16     : ['committed(resource_manager0)', '~committed(resource_manager1)', '~prepared(resource_manager1)']
17     : --010---
17     : ['committed(resource_manager1)', '~committed(resource_manager0)', '~prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
18 (*) : 0-0-0-0-
18     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
19     : -0-0-0-0
19     : ['~aborted(resource_manager1)', '~committed(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
20 (*) : 0---0-01
20     : ['working(resource_manager1)', '~aborted(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
21     : -0---010
21     : ['working(resource_manager0)', '~aborted(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 2
num_suborbits: 1
22 (*) : 10---0-0
22     : ['aborted(resource_manager0)', '~aborted(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
23     : 01--0-0-
23     : ['aborted(resource_manager1)', '~aborted(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
24 (*) : 0--0000-
24     : ['~aborted(resource_manager0)', '~committed(resource_manager1)', '~prepared(resource_manager0)', '~prepared(resource_manager1)', '~working(resource_manager0)']
25     : -00-00-0
25     : ['~aborted(resource_manager1)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 11

[PRIME NOTE]: number of orbits before merging: 13

[PRIME NOTE]: number of primes: 26

[QRM NOTE]: Time elapsed since start: 7.887 seconds

[QRM NOTE]: Time elapsed since last: 0.013 seconds

[QRM NOTE]: Peak memory: 1258269 bytes


=======================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/TCommit: resource_manager=2]

=======================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 solution : []

Essensial at level 0 : {0, 1, 2, 3, 4, 5, 7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, 0)]

Covered at level 0 : {8, 9, 10, 6}

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 7]


Before reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 7]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, 0), (9, 0), (10, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 7]

[QRM NOTE]: Time elapsed since start: 7.889 seconds

[QRM NOTE]: Time elapsed since last: 0.002 seconds

[QRM NOTE]: Peak memory: 208512 bytes


===========================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/TCommit: resource_manager=2]

===========================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ---1-1--
0     : ['committed(resource_manager1)', 'prepared(resource_manager1)']
1     : --1-1---
1     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager1)', 'prepared(resource_manager1)']

sign_func_name2args: {'0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$prepared': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0, resource_manager$0$prepared$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$prepared$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

part_sig: ('resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0',)


---------- SigGenerator ----------

terms:  ['committed(resource_manager1)', 'prepared(resource_manager1)']

func_name2symbol:  {'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$committed': 1, '0$prepared': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$committed$0; resource_manager$0$prepared$0': [resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0]}

	identical_single_classes: {'resource_manager$0$committed$0; resource_manager$0$prepared$0': resource_manager$0$committed$0$0; resource_manager$0$prepared$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['prepared(RESOURCE_MANAGER0)', 'committed(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER0)


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -----1-1
2     : ['prepared(resource_manager1)', 'working(resource_manager1)']
3     : ----1-1-
3     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['prepared(resource_manager1)', 'working(resource_manager1)']

sign_func_name2args: {'0$prepared': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$prepared$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$prepared$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$prepared$0$0; resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['prepared(resource_manager1)', 'working(resource_manager1)']

func_name2symbol:  {'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$prepared': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$prepared$0; resource_manager$0$working$0': [resource_manager$0$prepared$0$0; resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$prepared$0; resource_manager$0$working$0': resource_manager$0$prepared$0$0; resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['prepared(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : -1---1--
4     : ['aborted(resource_manager1)', 'prepared(resource_manager1)']
5     : 1---1---
5     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager1)', 'prepared(resource_manager1)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$prepared': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0, resource_manager$0$prepared$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$prepared$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager1)', 'prepared(resource_manager1)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$aborted': 1, '0$prepared': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0; resource_manager$0$prepared$0': [resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0; resource_manager$0$prepared$0': resource_manager$0$aborted$0$0; resource_manager$0$prepared$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'prepared(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)


=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : -1-----1
6     : ['aborted(resource_manager1)', 'working(resource_manager1)']
7     : 1-----1-
7     : ['aborted(resource_manager0)', 'working(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager1)', 'working(resource_manager1)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager1)', 'working(resource_manager1)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$aborted': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0; resource_manager$0$working$0': [resource_manager$0$aborted$0$0; resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0; resource_manager$0$working$0': resource_manager$0$aborted$0$0; resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)


=== Prime Orbit 4 =====================
size : 4
num_suborbits: 2
8 (*) : -11-----
8     : ['aborted(resource_manager1)', 'committed(resource_manager0)']
9     : 1--1----
9     : ['aborted(resource_manager0)', 'committed(resource_manager1)']
10 (*) : -1-1----
10     : ['aborted(resource_manager1)', 'committed(resource_manager1)']
11     : 1-1-----
11     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager1)', 'committed(resource_manager0)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0], Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0, resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0}

part_sig: ('resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['aborted(resource_manager1)', 'committed(resource_manager1)']

sign_func_name2args: {'0$aborted': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$aborted$0$0, resource_manager$0$committed$0$0]}

sig2const: {'resource_manager$0$aborted$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0}

part_sig: ('resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0',)


---------- SigGenerator ----------

terms:  ['aborted(resource_manager1)', 'committed(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$aborted': 1, '0$committed': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$aborted$0$0, resource_manager$0$committed$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$aborted$0': [resource_manager$0$aborted$0$0], 'resource_manager$0$committed$0': [resource_manager$0$committed$0$0]}

	identical_single_classes: {'resource_manager$0$aborted$0': resource_manager$0$aborted$0$0, 'resource_manager$0$committed$0': resource_manager$0$committed$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$committed': [[Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['aborted(RESOURCE_MANAGER0)', 'committed(RESOURCE_MANAGER1)']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0 | resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0',)[]

sort partition signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0

class signature: resource_manager$0$aborted$0$0; resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0,RESOURCE_MANAGER1. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER1)


=== Prime Orbit 5 =====================
size : 4
num_suborbits: 2
12 (*) : --1---1-
12     : ['committed(resource_manager0)', 'working(resource_manager0)']
13     : ---1---1
13     : ['committed(resource_manager1)', 'working(resource_manager1)']
14 (*) : ---1--1-
14     : ['committed(resource_manager1)', 'working(resource_manager0)']
15     : --1----1
15     : ['committed(resource_manager0)', 'working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager0)', 'working(resource_manager0)']

sign_func_name2args: {'0$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0, resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0; resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0; resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$committed$0$0; resource_manager$0$working$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['committed(resource_manager1)', 'working(resource_manager0)']

sign_func_name2args: {'0$committed': [(Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '0$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$committed$0$0], Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$0$working$0$0]}

sig2const: {'resource_manager$0$committed$0$0': Const('resource_manager1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$0$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0, resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0 | resource_manager$0$working$0$0}

part_sig: ('resource_manager$0$committed$0$0 | resource_manager$0$working$0$0',)


---------- SigGenerator ----------

terms:  ['committed(resource_manager0)', 'working(resource_manager0)']

func_name2symbol:  {'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'0$committed': 1, '0$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$0$committed$0$0, resource_manager$0$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$0$committed$0$0 | resource_manager$0$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$0$committed$0': [resource_manager$0$committed$0$0], 'resource_manager$0$working$0': [resource_manager$0$working$0$0]}

	identical_single_classes: {'resource_manager$0$committed$0': resource_manager$0$committed$0$0, 'resource_manager$0$working$0': resource_manager$0$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '0$working': [[Var('RESOURCE_MANAGER1', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['committed(RESOURCE_MANAGER0)', 'working(RESOURCE_MANAGER1)']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0; resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0 | resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0 | resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0; resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0; resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

constraint: ['RESOURCE_MANAGER0:resource_manager = RESOURCE_MANAGER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('resource_manager$0$committed$0$0 | resource_manager$0$working$0$0',)[]

sort partition signature: resource_manager$0$committed$0$0 | resource_manager$0$working$0$0

class signature: resource_manager$0$committed$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager']

eq_terms: []

class signature: resource_manager$0$working$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['RESOURCE_MANAGER1:resource_manager']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['RESOURCE_MANAGER0:resource_manager', 'RESOURCE_MANAGER1:resource_manager']

eq_terms: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']

constraint: ['RESOURCE_MANAGER0:resource_manager ~= RESOURCE_MANAGER1']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0,RESOURCE_MANAGER1. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER1)


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
18 (*) : 0-0-0-0-
18     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
19     : -0-0-0-0
19     : ['~aborted(resource_manager1)', '~committed(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']

sign_func_name2args: {'1$aborted': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '1$committed': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '1$prepared': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)], '1$working': [(Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))),)]}

const2sigs: {Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))): [resource_manager$1$aborted$0$0, resource_manager$1$committed$0$0, resource_manager$1$prepared$0$0, resource_manager$1$working$0$0]}

sig2const: {'resource_manager$1$aborted$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$1$committed$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$1$prepared$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1'))), 'resource_manager$1$working$0$0': Const('resource_manager0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

part_sig: ('resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0',)


---------- SigGenerator ----------

terms:  ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']

func_name2symbol:  {'aborted': Const('aborted', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'committed': Const('committed', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'prepared': Const('prepared', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort())), 'working': Const('working', FunctionSort(EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')), BooleanSort()))}

func_name2args_sort:  {'aborted': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'committed': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'prepared': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),), 'working': (EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')),)}

sign_func_name2count:  {'1$aborted': 1, '1$committed': 1, '1$prepared': 1, '1$working': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

sort2part_sig: {EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')): resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

	sort: resource_manager

	identical_classes: {'resource_manager$1$aborted$0; resource_manager$1$committed$0; resource_manager$1$prepared$0; resource_manager$1$working$0': [resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0]}

	identical_single_classes: {'resource_manager$1$aborted$0; resource_manager$1$committed$0; resource_manager$1$prepared$0; resource_manager$1$working$0': resource_manager$1$aborted$0$0; resource_manager$1$committed$0$0; resource_manager$1$prepared$0$0; resource_manager$1$working$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: resource_manager: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$aborted': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '1$committed': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '1$prepared': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]], '1$working': [[Var('RESOURCE_MANAGER0', EnumeratedSort('resource_manager', ('resource_manager0', 'resource_manager1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~committed(RESOURCE_MANAGER0)', '~working(RESOURCE_MANAGER0)', '~prepared(RESOURCE_MANAGER0)', '~aborted(RESOURCE_MANAGER0)']


---------- QFormula: get_qclause ----------

qclause: forall RESOURCE_MANAGER0. committed(RESOURCE_MANAGER0) | working(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0)


=====================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/TCommit: resource_manager=2]

=====================================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ---1-1--
0     : ['committed(resource_manager1)', 'prepared(resource_manager1)']
1     : --1-1---
1     : ['committed(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -----1-1
2     : ['prepared(resource_manager1)', 'working(resource_manager1)']
3     : ----1-1-
3     : ['prepared(resource_manager0)', 'working(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : -1---1--
4     : ['aborted(resource_manager1)', 'prepared(resource_manager1)']
5     : 1---1---
5     : ['aborted(resource_manager0)', 'prepared(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : -1-----1
6     : ['aborted(resource_manager1)', 'working(resource_manager1)']
7     : 1-----1-
7     : ['aborted(resource_manager0)', 'working(resource_manager0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)
qcost : 3




=== Prime Orbit 4 =====================
size : 4
num_suborbits: 2
8 (*) : -11-----
8     : ['aborted(resource_manager1)', 'committed(resource_manager0)']
9     : 1--1----
9     : ['aborted(resource_manager0)', 'committed(resource_manager1)']
10 (*) : -1-1----
10     : ['aborted(resource_manager1)', 'committed(resource_manager1)']
11     : 1-1-----
11     : ['aborted(resource_manager0)', 'committed(resource_manager0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0,RESOURCE_MANAGER1. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER1)
qcost : 4




=== Prime Orbit 5 =====================
size : 4
num_suborbits: 2
12 (*) : --1---1-
12     : ['committed(resource_manager0)', 'working(resource_manager0)']
13     : ---1---1
13     : ['committed(resource_manager1)', 'working(resource_manager1)']
14 (*) : ---1--1-
14     : ['committed(resource_manager1)', 'working(resource_manager0)']
15     : --1----1
15     : ['committed(resource_manager0)', 'working(resource_manager1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall RESOURCE_MANAGER0,RESOURCE_MANAGER1. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER1)
qcost : 4




=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
18 (*) : 0-0-0-0-
18     : ['~aborted(resource_manager0)', '~committed(resource_manager0)', '~prepared(resource_manager0)', '~working(resource_manager0)']
19     : -0-0-0-0
19     : ['~aborted(resource_manager1)', '~committed(resource_manager1)', '~prepared(resource_manager1)', '~working(resource_manager1)']
num_forall :   1
num_exists :   0
num_literals : 4
quantified form : forall RESOURCE_MANAGER0. committed(RESOURCE_MANAGER0) | working(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0)
qcost : 5



[QRM NOTE]: Time elapsed since start: 8.022 seconds

[QRM NOTE]: Time elapsed since last: 0.133 seconds

[QRM NOTE]: Peak memory: 1912891 bytes


====================================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/TCommit: resource_manager=2]

====================================================================================


New level: 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 7]


Before reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 7]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0, 1, 2, 3, 4, 5, 7]


Solution : [0, 1, 2, 3, 4, 5, 7] has cost 25.


Before backtrack at level 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 7]

After backtrack at level 1
 pending : []
 solution : [0, 1, 2, 3, 4, 5, 7]


===================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/TCommit: resource_manager=2]

===================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 25

[MIN NOTE]: maximum branch and bound depth: 1

Definitions (length=0)

Equality Relations (length=0)

Solution 0 : [0, 1, 2, 3, 4, 5, 7] (length = 7)

invariant [invar_0] forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_1] forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_2] forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_3] forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0) # qcost: 3

invariant [invar_4] forall RESOURCE_MANAGER0,RESOURCE_MANAGER1. ~aborted(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER1) # qcost: 4

invariant [invar_5] forall RESOURCE_MANAGER0,RESOURCE_MANAGER1. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER1) # qcost: 4

invariant [invar_7] forall RESOURCE_MANAGER0. committed(RESOURCE_MANAGER0) | working(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0) # qcost: 5




[QRM NOTE]: Time elapsed since start: 8.066 seconds

[QRM NOTE]: Time elapsed since last: 0.044 seconds

[QRM NOTE]: Peak memory: 1898726 bytes


=======================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym/ivy/TCommit: resource_manager=2]

=======================================================================================

ivy_check complete=fo ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_7

    The following action implementations are present:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 34: implementation of decide_abort
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 25: implementation of decide_commit
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 17: implementation of prepare

    The following initializers are present:
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
        ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_7 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide_abort
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_7 ... PASS
        (internal) ext:decide_commit
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_7 ... PASS
        (internal) ext:prepare
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 53: invar_0 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 54: invar_1 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 55: invar_2 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 56: invar_3 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 57: invar_4 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 58: invar_5 ... PASS
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 59: invar_7 ... PASS

    The following program assertions are treated as assumptions:
        in action prepare when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 18: assumption
        in action decide_commit when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 26: assumption
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 27: assumption
        in action decide_abort when called from the environment:
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 35: assumption
            ivybench/sym/ivy/TCommit.resource_manager_2.0.ivy: line 36: assumption

OK
[IVY_CHECK RESULT]: PASS

[(R & P) & T & ~(R' & P')]: unsatisfiable

[Strengthening Assertion]: ((forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~committed(RESOURCE_MANAGER0)) & (forall RESOURCE_MANAGER0. ~prepared(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)) & (forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~prepared(RESOURCE_MANAGER0)) & (forall RESOURCE_MANAGER0. ~aborted(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER0)) & (forall RESOURCE_MANAGER0,RESOURCE_MANAGER1. ~committed(RESOURCE_MANAGER0) | ~working(RESOURCE_MANAGER1)) & (forall RESOURCE_MANAGER0. committed(RESOURCE_MANAGER0) | working(RESOURCE_MANAGER0) | prepared(RESOURCE_MANAGER0) | aborted(RESOURCE_MANAGER0)))

[QRM NOTE]: Time elapsed since start: 9.971 seconds

[QRM NOTE]: Time elapsed since last: 1.905 seconds

[QRM NOTE]: Peak memory: 937505 bytes


*******************************************************

	[QRM]: ivybench/sym/ivy/TCommit.ivy

*******************************************************

[QRM RESULT]: PASS

