#lang ivy1.7

#clinet server example

after init  {
    semaphore(Y) := true ;
    link(X, Y) := false;
}

type client

type server

relation link(X: client, Y: server)
relation semaphore(X: server)


action connect(c: client, s: server) = {
    require semaphore(s);
    link(c, s) := true;
    semaphore(s) := false;
}

action disconnect(c: client, s: server) = {
    require link(c, s);
    link(c, s) := false;
    semaphore(s) := true;
}


export connect

export disconnect

#invariant [unique] forall C1, C2 : client, S: server. link(C1, S) & link(C2, S) -> C1 = C2

##invariant [manual_1] link(C, S) -> ~semaphore(S)

invariant [invar_0] forall CLIENT0,SERVER0. ~semaphore(SERVER0) | ~link(CLIENT0,SERVER0) # qcost: 4
invariant [invar_1] forall SERVER0,CLIENT0,CLIENT1. ~link(CLIENT0,SERVER0) | ~link(CLIENT1,SERVER0) | CLIENT0 = CLIENT1 # qcost: 6
invariant [invar_2] forall SERVER0. (exists CLIENT0. semaphore(SERVER0) | link(CLIENT0,SERVER0)) # qcost: 4
