
=== Prime Orbit 0 =====================
size : 9
num_suborbits: 2
0 (*) : ------1---1--
0     : ['holds_lock(node2)', 'unlock_msg(node0)']
1     : -----1----1--
1     : ['holds_lock(node1)', 'unlock_msg(node0)']
2     : ------1----1-
2     : ['holds_lock(node2)', 'unlock_msg(node1)']
3     : ----1------1-
3     : ['holds_lock(node0)', 'unlock_msg(node1)']
4     : -----1------1
4     : ['holds_lock(node1)', 'unlock_msg(node2)']
5     : ----1-------1
5     : ['holds_lock(node0)', 'unlock_msg(node2)']
42 (*) : ----1-----1--
42     : ['holds_lock(node0)', 'unlock_msg(node0)']
43     : -----1-----1-
43     : ['holds_lock(node1)', 'unlock_msg(node1)']
44     : ------1-----1
44     : ['holds_lock(node2)', 'unlock_msg(node2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall NODE1,NODE0. ~unlock_msg(NODE1) | ~holds_lock(NODE0)
qcost : 4


=== Prime Orbit 1 =====================
size : 9
num_suborbits: 2
6 (*) : -1----1------
6     : ['grant_msg(node1)', 'holds_lock(node2)']
7     : --1--1-------
7     : ['grant_msg(node2)', 'holds_lock(node1)']
8     : 1-----1------
8     : ['grant_msg(node0)', 'holds_lock(node2)']
9     : --1-1--------
9     : ['grant_msg(node2)', 'holds_lock(node0)']
10     : 1----1-------
10     : ['grant_msg(node0)', 'holds_lock(node1)']
11     : -1--1--------
11     : ['grant_msg(node1)', 'holds_lock(node0)']
12 (*) : --1---1------
12     : ['grant_msg(node2)', 'holds_lock(node2)']
13     : -1---1-------
13     : ['grant_msg(node1)', 'holds_lock(node1)']
14     : 1---1--------
14     : ['grant_msg(node0)', 'holds_lock(node0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall NODE1,NODE0. ~grant_msg(NODE0) | ~holds_lock(NODE1)
qcost : 4


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
15 (*) : ---0--1------
15     : ['holds_lock(node2)', '~held()']
16     : ---0-1-------
16     : ['holds_lock(node1)', '~held()']
17     : ---01--------
17     : ['holds_lock(node0)', '~held()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. held | ~holds_lock(NODE0)
qcost : 3


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
18 (*) : ----1-1------
18     : ['holds_lock(node0)', 'holds_lock(node2)']
19     : ----11-------
19     : ['holds_lock(node0)', 'holds_lock(node1)']
20     : -----11------
20     : ['holds_lock(node1)', 'holds_lock(node2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~holds_lock(NODE0) | ~holds_lock(NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 2
21 (*) : 1---------1--
21     : ['grant_msg(node0)', 'unlock_msg(node0)']
22     : -1---------1-
22     : ['grant_msg(node1)', 'unlock_msg(node1)']
23     : --1---------1
23     : ['grant_msg(node2)', 'unlock_msg(node2)']
27 (*) : 1----------1-
27     : ['grant_msg(node0)', 'unlock_msg(node1)']
28     : 1-----------1
28     : ['grant_msg(node0)', 'unlock_msg(node2)']
29     : -1--------1--
29     : ['grant_msg(node1)', 'unlock_msg(node0)']
30     : -1----------1
30     : ['grant_msg(node1)', 'unlock_msg(node2)']
31     : --1-------1--
31     : ['grant_msg(node2)', 'unlock_msg(node0)']
32     : --1--------1-
32     : ['grant_msg(node2)', 'unlock_msg(node1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall NODE1,NODE0. ~grant_msg(NODE0) | ~unlock_msg(NODE1)
qcost : 4


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
24 (*) : 11-----------
24     : ['grant_msg(node0)', 'grant_msg(node1)']
25     : 1-1----------
25     : ['grant_msg(node0)', 'grant_msg(node2)']
26     : -11----------
26     : ['grant_msg(node1)', 'grant_msg(node2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~grant_msg(NODE0) | ~grant_msg(NODE1) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 6 =====================
size : 3
num_suborbits: 1
33 (*) : ----------11-
33     : ['unlock_msg(node0)', 'unlock_msg(node1)']
34     : ----------1-1
34     : ['unlock_msg(node0)', 'unlock_msg(node2)']
35     : -----------11
35     : ['unlock_msg(node1)', 'unlock_msg(node2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE1,NODE0. ~unlock_msg(NODE1) | ~unlock_msg(NODE0) | NODE0 = NODE1
qcost : 5


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
36 (*) : --10---------
36     : ['grant_msg(node2)', '~held()']
37     : -1-0---------
37     : ['grant_msg(node1)', '~held()']
38     : 1--0---------
38     : ['grant_msg(node0)', '~held()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~grant_msg(NODE0) | held
qcost : 3


=== Prime Orbit 8 =====================
size : 3
num_suborbits: 1
39 (*) : ---0------1--
39     : ['unlock_msg(node0)', '~held()']
40     : ---0-------1-
40     : ['unlock_msg(node1)', '~held()']
41     : ---0--------1
41     : ['unlock_msg(node2)', '~held()']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. held | ~unlock_msg(NODE0)
qcost : 3


=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
45 (*) : 0001000---000
45     : ['held()', '~grant_msg(node0)', '~grant_msg(node1)', '~grant_msg(node2)', '~holds_lock(node0)', '~holds_lock(node1)', '~holds_lock(node2)', '~unlock_msg(node0)', '~unlock_msg(node1)', '~unlock_msg(node2)']
num_forall :   0
num_exists :   1
num_literals : 4
quantified form : exists NODE0. holds_lock(NODE0) | grant_msg(NODE0) | ~held | unlock_msg(NODE0)
qcost : 5

