
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 21

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 6.886 seconds

[QRM NOTE]: Time elapsed since last: 6.886 seconds

[QRM NOTE]: Peak memory: 1192586 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
predicate: didNotPromise('acceptor',)
predicate: chosenAt('quorum', 'proposer')
predicate: member('acceptor', 'quorum')
predicate: start('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000010
000000000111000000000000001
000000000111000000000000100




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000101
000000000111000000000000011
000000000111000000000000110




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000110000000000001111
000000000110000000000010111
000000000011000001000000111
000000000011000010000000111
000000000101000000100000111
000000000101000000010000111
000000000011000100000000111
000000000101000000001000111
000000000110000000000100111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
000100000010000100000100111
000010000010000010000010111
000000001100000000001001111
000000100100000000100100111
100000000001000100100000111
001000000001000001001000111
000000010100000000010010111
010000000001000010010000111
000001000010000001000001111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
100100100000000100100100111
001001001000000001001001111
010010010000000010010010111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
100100100000100100100100111
001001001000001001001001111
010010010000010010010010111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
000100000000000100010100111
000000100000000010100100111
010000000000000010010100111
000010000000000010100010111
000010000000000010001010111
000000001000000010001001111
001000000000000001001100111
000000010000000100010010111
010000000000000010010001111
000001000000000001010001111
000000100000000001100100111
000000010000000001010010111
000100000000000100001100111
100000000000000100100010111
001000000000000001001010111
000000001000000100001001111
000001000000000001100001111
100000000000000100100001111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
000010000000010010100010111
000001000000001001100001111
010000000000010010010100111
001000000000001001001100111
000010000000010010001010111
100000000000100100100001111
000000001000001100001001111
000000010000010001010010111
000100000000100100010100111
100000000000100100100010111
000001000000001001010001111
000100000000100100001100111
000000100000100001100100111
000000010000010100010010111
000000001000001010001001111
001000000000001001001010111
010000000000010010010001111
000000100000100010100100111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000000100100100000100100111
100000000001100100100000111
010000000001010010010000111
000001000010001001000001111
000000001100001000001001111
000100000010100100000100111
001000000001001001001000111
000010000010010010000010111
000000010100010000010010111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000100000000001010111
000000000010000010000001111
000000000100000000100010111
000000000010000001000010111
000000000010000001000100111
000000000001000100001000111
000000000001000100010000111
000000000001000001100000111
000000000010000100000001111
000000000100000000100001111
000000000100000000010001111
000000000001000010001000111
000000000100000000001100111
000000000001000001010000111
000000000010000010000100111
000000000001000010100000111
000000000100000000010100111
000000000010000100000010111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000100010001111
000000000000000010001100111
000000000000000010100001111
000000000000000001010100111
000000000000000100001010111
000000000000000001100010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000110000000000010011
000000000101000000010000011
000000000011000100000000101
000000000101000000100000101
000000000101000000001000101
000000000011000100000000110
000000000110000000000100110
000000000110000000000010110
000000000110000000000001101
000000000011000010000000011
000000000011000001000000101
000000000011000010000000110
000000000101000000100000110
000000000110000000000001011
000000000101000000010000110
000000000101000000001000011
000000000110000000000100101
000000000011000001000000011




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
100000000001000100100000101
100000000001000100100000110
000001000010000001000001101
000000001100000000001001101
000100000010000100000100101
000000100100000000100100110
010000000001000010010000011
001000000001000001001000011
000000001100000000001001011
000010000010000010000010011
010000000001000010010000110
001000000001000001001000101
000100000010000100000100110
000000010100000000010010110
000010000010000010000010110
000000010100000000010010011
000001000010000001000001011
000000100100000000100100101




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
100100100000000100100100101
010010010000000010010010110
001001001000000001001001101
100100100000000100100100110
001001001000000001001001011
010010010000000010010010011




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
100100100000100100100100110
100100100000100100100100101
001001001000001001001001011
010010010000010010010010011
010010010000010010010010110
001001001000001001001001101




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
000010000000000010100010110
100000000000000100100001101
000001000000000001100001101
000000001000000010001001011
000010000000000010001010011
100000000000000100100010110
000100000000000100001100101
010000000000000010010001011
010000000000000010010100110
000000100000000010100100110
000001000000000001010001011
000100000000000100010100110
000000001000000100001001101
001000000000000001001010011
000000100000000001100100101
001000000000000001001100101
000000010000000001010010011
000000010000000100010010110




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
100000000000100100100001101
010000000000010010010100110
000001000000001001100001101
000000010000010001010010011
000100000000100100001100101
000000010000010100010010110
000000001000001010001001011
000000001000001100001001101
001000000000001001001100101
000100000000100100010100110
000010000000010010100010110
000001000000001001010001011
000000100000100001100100101
010000000000010010010001011
100000000000100100100010110
000000100000100010100100110
001000000000001001001010011
000010000000010010001010011




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
100000000001100100100000110
000000100100100000100100110
010000000001010010010000011
000100000010100100000100101
000000100100100000100100101
000010000010010010000010011
000000001100001000001001101
100000000001100100100000101
001000000001001001001000011
000000010100010000010010011
000000001100001000001001011
010000000001010010010000110
000100000010100100000100110
000001000010001001000001101
000001000010001001000001011
001000000001001001001000101
000000010100010000010010110
000010000010010010000010110




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000010000100000001101
000000000001000010100000110
000000000100000000010100110
000000000010000001000010011
000000000001000001100000101
000000000100000000100010110
000000000100000000001100101
000000000010000010000100110
000000000001000100010000110
000000000001000100001000101
000000000010000010000001011
000000000010000001000100101
000000000100000000100001101
000000000100000000010001011
000000000100000000001010011
000000000001000001010000011
000000000010000100000010110
000000000001000010001000011




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000011000001000000001
000000000011000010000000010
000000000110000000000001001
000000000101000000010000010
000000000101000000001000001
000000000110000000000100100
000000000101000000100000100
000000000110000000000010010
000000000011000100000000100




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000001000010000001000001001
000000001100000000001001001
100000000001000100100000100
000000100100000000100100100
000010000010000010000010010
000100000010000100000100100
000000010100000000010010010
010000000001000010010000010
001000000001000001001000001




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
100100100000000100100100100
010010010000000010010010010
001001001000000001001001001




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
010010010000010010010010010
001001001000001001001001001
100100100000100100100100100




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
000000100100100000100100100
000000001100001000001001001
100000000001100100100000100
001000000001001001001000001
000001000010001001000001001
000010000010010010000010010
000100000010100100000100100
000000010100010000010010010
010000000001010010010000010



[QRM NOTE]: Time elapsed since start: 7.292 seconds

[QRM NOTE]: Time elapsed since last: 0.406 seconds

[QRM NOTE]: Peak memory: 1299179 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.302 seconds

[QRM NOTE]: Time elapsed since last: 0.011 seconds

[QRM NOTE]: Peak memory: 331201 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 9
num_suborbits: 1
0 (*) : -----------1----------1----
0     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
1     : -----------1-----------1---
1     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
2     : -----------1---------1-----
2     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
3     : ----------1--------1-------
3     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
4     : ----------1---------1------
4     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
5     : ----------1-------1--------
5     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
6     : ---------1------1----------
6     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
7     : ---------1-------1---------
7     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
8     : ---------1-----1-----------
8     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 18
num_suborbits: 1
9 (*) : ---1-------1---------------
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
10     : ----1------1---------------
10     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
11     : -----1-----1---------------
11     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
12     : 1---------1----------------
12     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
13     : -1--------1----------------
13     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
14     : --1-------1----------------
14     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
15     : ------1----1---------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
16     : -------1---1---------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
17     : --------1--1---------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
18     : 1--------1-----------------
18     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
19     : -1-------1-----------------
19     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
20     : --1------1-----------------
20     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
21     : ------1---1----------------
21     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
22     : -------1--1----------------
22     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
23     : --------1-1----------------
23     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
24     : ---1-----1-----------------
24     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
25     : ----1----1-----------------
25     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
26     : -----1---1-----------------
26     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : --------1---1--------------
27     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
28     : -------1----1--------------
28     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
29     : --------1----1-------------
29     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
30     : ------1------1-------------
30     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
31     : -------1------1------------
31     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
32     : ------1-------1------------
32     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
33     : -----1------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
34     : ----1-------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
35     : -----1-------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
36     : ---1---------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
37     : ----1---------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
38     : ---1----------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
39     : --1---------1--------------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
40     : -1----------1--------------
40     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
41     : --1----------1-------------
41     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
42     : 1------------1-------------
42     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
43     : -1------------1------------
43     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
44     : 1-------------1------------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------11-------------
45     : ['leader(proposer0)', 'leader(proposer1)']
46     : ------------1-1------------
46     : ['leader(proposer0)', 'leader(proposer2)']
47     : -------------11------------
47     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : -------------1-----------0-
48     : ['leader(proposer1)', '~start(proposer1)']
49     : --------------1-----------0
49     : ['leader(proposer2)', '~start(proposer2)']
50     : ------------1-----------0--
50     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
51 (*) : -------1-----------0-------
51     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
52     : --------1-----------0------
52     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
53     : ------1-----------0--------
53     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
54     : -------1--------------0----
54     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
55     : --------1--------------0---
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
56     : ------1--------------0-----
56     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
57     : ----1-----------0----------
57     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
58     : -----1-----------0---------
58     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
59     : ---1-----------0-----------
59     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
60     : ----1-----------------0----
60     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
61     : -----1-----------------0---
61     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
62     : ---1-----------------0-----
62     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
63     : -1--------------0----------
63     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
64     : --1--------------0---------
64     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
65     : 1--------------0-----------
65     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
66     : -1-----------------0-------
66     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
67     : --1-----------------0------
67     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
68     : 1-----------------0--------
68     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 36
num_suborbits: 1
69 (*) : -------1---------------1---
69     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
70     : --------1-------------1----
70     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
71     : ------1----------------1---
71     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
72     : --------1------------1-----
72     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
73     : ------1---------------1----
73     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
74     : -------1-------------1-----
74     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
75     : -------1------------1------
75     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
76     : --------1----------1-------
76     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
77     : ------1-------------1------
77     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
78     : --------1---------1--------
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
79     : ------1------------1-------
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
80     : -------1----------1--------
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
81     : ----1------------------1---
81     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
82     : -----1----------------1----
82     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
83     : ---1-------------------1---
83     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
84     : -----1---------------1-----
84     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
85     : ---1------------------1----
85     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
86     : ----1----------------1-----
86     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
87     : ----1------------1---------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
88     : -----1----------1----------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
89     : ---1-------------1---------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
90     : -----1---------1-----------
90     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
91     : ---1------------1----------
91     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
92     : ----1----------1-----------
92     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
93     : -1------------------1------
93     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
94     : --1----------------1-------
94     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
95     : 1-------------------1------
95     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
96     : --1---------------1--------
96     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
97     : 1------------------1-------
97     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
98     : -1----------------1--------
98     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
99     : -1---------------1---------
99     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
100     : --1-------------1----------
100     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
101     : 1----------------1---------
101     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
102     : --1------------1-----------
102     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
103     : 1---------------1----------
103     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
104     : -1-------------1-----------
104     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
105 (*) : -------1-----------------0-
105     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
106     : --------1-----------------0
106     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
107     : ------1-----------------0--
107     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
108     : ----1--------------------0-
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
109     : -----1--------------------0
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
110     : ---1--------------------0--
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
111     : -1-----------------------0-
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
112     : --1-----------------------0
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
113     : 1-----------------------0--
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 27
num_suborbits: 2
114 (*) : ---1---1-------------------
114     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
115     : ---1----1------------------
115     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
116     : ----1-1--------------------
116     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
117     : ----1---1------------------
117     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
118     : -----11--------------------
118     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
119     : -----1-1-------------------
119     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
120     : 1------1-------------------
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
121     : 1-------1------------------
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
122     : -1----1--------------------
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
123     : -1------1------------------
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
124     : --1---1--------------------
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
125     : --1----1-------------------
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
126     : 1---1----------------------
126     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
127     : 1----1---------------------
127     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
128     : -1-1-----------------------
128     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
129     : -1---1---------------------
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
130     : --11-----------------------
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
131     : --1-1----------------------
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
132 (*) : ------11-------------------
132     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
133     : ------1-1------------------
133     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
134     : -------11------------------
134     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
135     : ---11----------------------
135     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
136     : ---1-1---------------------
136     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
137     : ----11---------------------
137     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
138     : 11-------------------------
138     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
139     : 1-1------------------------
139     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
140     : -11------------------------
140     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
141 (*) : ---------------11----------
141     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ----------------11---------
143     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
144     : ------------------11-------
144     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
145     : ------------------1-1------
145     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
146     : -------------------11------
146     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
147     : ---------------------11----
147     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
148     : ---------------------1-1---
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
149     : ----------------------11---
149     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
150 (*) : ----------------------1--0-
150     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
151     : -----------------------1--0
151     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
152     : ---------------------1--0--
152     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
153     : -------------------1-----0-
153     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
154     : --------------------1-----0
154     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
155     : ------------------1-----0--
155     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
156     : ----------------1--------0-
156     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
157     : -----------------1--------0
157     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
158     : ---------------1--------0--
158     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 9
num_suborbits: 1
159 (*) : -------0-----------1--1----
159     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
160     : --------0-----------1--1---
160     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
161     : ------0-----------1--1-----
161     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
162     : ----0-----------1-----1----
162     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
163     : -----0-----------1-----1---
163     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
164     : ---0-----------1-----1-----
164     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
165     : -0--------------1--1-------
165     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
166     : --0--------------1--1------
166     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
167     : 0--------------1--1--------
167     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 18
num_suborbits: 1
168 (*) : -1--0-----------------1----
168     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
169     : --1--0-----------------1---
169     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
170     : 1--0-----------------1-----
170     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
171     : -0--1--------------1-------
171     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
172     : --0--1--------------1------
172     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
173     : 0--1--------------1--------
173     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
174     : -1-----0--------------1----
174     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
175     : --1-----0--------------1---
175     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
176     : 1-----0--------------1-----
176     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
177     : -0-----1--------1----------
177     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
178     : --0-----1--------1---------
178     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
179     : 0-----1--------1-----------
179     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
180     : ----1--0-----------1-------
180     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
181     : -----1--0-----------1------
181     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
182     : ---1--0-----------1--------
182     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
183     : ----0--1--------1----------
183     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
184     : -----0--1--------1---------
184     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
185     : ---0--1--------1-----------
185     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : -1--1--0-------------------
186     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
187     : --1--1--0------------------
187     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
188     : 1--1--0--------------------
188     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
189     : -1--0--1-------------------
189     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
190     : --1--0--1------------------
190     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
191     : 1--0--1--------------------
191     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
192     : -0--1--1-------------------
192     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
193     : --0--1--1------------------
193     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
194     : 0--1--1--------------------
194     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : -0-----------1--------0----
195     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
196     : --0-----------1--------0---
196     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
197     : 0-----------1--------0-----
197     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
198     : ----0--------1-----0-------
198     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
199     : -----0--------1-----0------
199     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
200     : ---0--------1-----0--------
200     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
201     : -------0-----1--0----------
201     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
202     : --------0-----1--0---------
202     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
203     : ------0-----1--0-----------
203     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
204 (*) : -0---------1-1-------------
204     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
205     : --0--------1--1------------
205     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
206     : 0----------11--------------
206     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
207     : ----0-----1--1-------------
207     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
208     : -----0----1---1------------
208     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
209     : ---0------1-1--------------
209     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
210     : -------0-1---1-------------
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
211     : --------01----1------------
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
212     : ------0--1--1--------------
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
213 (*) : -0-----------1-------1-----
213     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
214     : --0-----------1------1-----
214     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
215     : 0-----------1---------1----
215     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
216     : --0-----------1-------1----
216     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
217     : 0-----------1----------1---
217     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
218     : -0-----------1---------1---
218     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
219     : ----0--------1----1--------
219     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
220     : -----0--------1---1--------
220     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
221     : ---0--------1------1-------
221     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
222     : -----0--------1----1-------
222     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
223     : ---0--------1-------1------
223     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
224     : ----0--------1------1------
224     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
225     : -------0-----1-1-----------
225     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
226     : --------0-----11-----------
226     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
227     : ------0-----1---1----------
227     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
228     : --------0-----1-1----------
228     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
229     : ------0-----1----1---------
229     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
230     : -------0-----1---1---------
230     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 36
num_suborbits: 1
231 (*) : -------------1--0----1-----
231     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
232     : --------------1--0---1-----
232     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
233     : ------------1--0------1----
233     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
234     : --------------1--0----1----
234     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
235     : ------------1--0-------1---
235     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
236     : -------------1--0------1---
236     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
237     : -------------1--0-1--------
237     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
238     : --------------1--01--------
238     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
239     : ------------1--0---1-------
239     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
240     : --------------1--0-1-------
240     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
241     : ------------1--0----1------
241     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
242     : -------------1--0---1------
242     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
243     : -------------1-----0-1-----
243     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
244     : --------------1-----01-----
244     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
245     : ------------1-----0---1----
245     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
246     : --------------1-----0-1----
246     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
247     : ------------1-----0----1---
247     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
248     : -------------1-----0---1---
248     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
249     : -------------1-1---0-------
249     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
250     : --------------11----0------
250     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
251     : ------------1---1-0--------
251     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
252     : --------------1-1---0------
252     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
253     : ------------1----10--------
253     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
254     : -------------1---1-0-------
254     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
255     : -------------1----1---0----
255     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
256     : --------------1---1----0---
256     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
257     : ------------1------1-0-----
257     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
258     : --------------1----1---0---
258     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
259     : ------------1-------10-----
259     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
260     : -------------1------1-0----
260     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
261     : -------------1-1------0----
261     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
262     : --------------11-------0---
262     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
263     : ------------1---1----0-----
263     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
264     : --------------1-1------0---
264     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
265     : ------------1----1---0-----
265     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
266     : -------------1---1----0----
266     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
267 (*) : ---------1---1-------1-----
267     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
268     : ---------1----1------1-----
268     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
269     : ---------1--1---------1----
269     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
270     : ---------1----1-------1----
270     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ---------1--1----------1---
271     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
272     : ---------1---1---------1---
272     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
273     : ---------1---1----1--------
273     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
274     : ---------1----1---1--------
274     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
275     : ---------1--1------1-------
275     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
276     : ---------1----1----1-------
276     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
277     : ---------1--1-------1------
277     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
278     : ---------1---1------1------
278     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
279     : ----------1--1-------1-----
279     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
280     : ----------1---1------1-----
280     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
281     : ----------1-1---------1----
281     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
282     : ----------1---1-------1----
282     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
283     : ----------1-1----------1---
283     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
284     : ----------1--1---------1---
284     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
285     : ----------1--1-1-----------
285     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
286     : ----------1---11-----------
286     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
287     : ----------1-1---1----------
287     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
288     : ----------1---1-1----------
288     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
289     : ----------1-1----1---------
289     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
290     : ----------1--1---1---------
290     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
291     : -----------1-1----1--------
291     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
292     : -----------1--1---1--------
292     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
293     : -----------11------1-------
293     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
294     : -----------1--1----1-------
294     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
295     : -----------11-------1------
295     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
296     : -----------1-1------1------
296     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
297     : -----------1-1-1-----------
297     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
298     : -----------1--11-----------
298     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
299     : -----------11---1----------
299     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
300     : -----------1--1-1----------
300     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
301     : -----------11----1---------
301     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
302     : -----------1-1---1---------
302     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
303 (*) : -------------1--0-----0----
303     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
304     : --------------1--0-----0---
304     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
305     : ------------1--0-----0-----
305     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
306     : -------------1--0--0-------
306     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
307     : --------------1--0--0------
307     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
308     : ------------1--0--0--------
308     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
309     : -------------1-----0--0----
309     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
310     : --------------1-----0--0---
310     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
311     : ------------1-----0--0-----
311     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 18
num_suborbits: 1
312 (*) : -----------1-1--0----------
312     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
313     : -----------1--1--0---------
313     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
314     : -----------11--0-----------
314     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
315     : ----------1--1--0----------
315     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
316     : ----------1---1--0---------
316     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
317     : ----------1-1--0-----------
317     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
318     : -----------1-1-----0-------
318     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
319     : -----------1--1-----0------
319     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
320     : -----------11-----0--------
320     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
321     : ---------1---1-----0-------
321     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
322     : ---------1----1-----0------
322     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
323     : ---------1--1-----0--------
323     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
324     : ----------1--1--------0----
324     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
325     : ----------1---1--------0---
325     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
326     : ----------1-1--------0-----
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
327     : ---------1---1--------0----
327     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
328     : ---------1----1--------0---
328     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
329     : ---------1--1--------0-----
329     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
330 (*) : ---------1-1-1-------------
330     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
331     : ---------1-1--1------------
331     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
332     : ---------1-11--------------
332     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
333     : ---------11--1-------------
333     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
334     : ---------11---1------------
334     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
335     : ---------11-1--------------
335     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
336     : ----------11-1-------------
336     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
337     : ----------11--1------------
337     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
338     : ----------111--------------
338     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 36
num_suborbits: 2
339 (*) : -------------1-1-----1-----
339     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
340     : --------------11-----1-----
340     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
341     : ------------1---1-----1----
341     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
342     : --------------1-1-----1----
342     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
343     : ------------1----1-----1---
343     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
344     : -------------1---1-----1---
344     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
345     : -------------1-1--1--------
345     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
346     : --------------11--1--------
346     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
347     : ------------1---1--1-------
347     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
348     : --------------1-1--1-------
348     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
349     : ------------1----1--1------
349     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
350     : -------------1---1--1------
350     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
351     : -------------1----1--1-----
351     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
352     : --------------1---1--1-----
352     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
353     : ------------1------1--1----
353     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
354     : --------------1----1--1----
354     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
355     : ------------1-------1--1---
355     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
356     : -------------1------1--1---
356     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
357 (*) : ------------1---1---1------
357     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
358     : ------------1----1-1-------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1---11--------
360     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
361     : --------------11---1-------
361     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
362     : --------------1-1-1--------
362     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1------1---1---
369     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
370     : ------------1-------1-1----
370     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
371     : -------------1----1----1---
371     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
372     : -------------1------11-----
372     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
373     : --------------1---1---1----
373     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
374     : --------------1----1-1-----
374     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ---------0------00------0--
375     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
376     : ---------0-----0-0-------0-
376     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
377     : ---------0-----00---------0
377     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : -----------0----------000--
381     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
382     : -----------0---------0-0-0-
382     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
383     : -----------0---------00---0
383     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ---------0------0-------0-0
384     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
385     : ---------0-------0------00-
385     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
386     : ---------0-----0---------00
386     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
387     : ----------0--------0----0-0
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
388     : ----------0---------0---00-
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
389     : ----------0-------0------00
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
390     : -----------0----------0-0-0
390     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
391     : -----------0-----------000-
391     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
392     : -----------0---------0---00
392     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
393 (*) : ---------0-----000---------
393     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
394     : ----------0-------000------
394     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
395     : -----------0---------000---
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
396 (*) : ---0--0-----1--------1-----
396     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
397     : ----0--0-----1--------1----
397     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : -----0--0-----1--------1---
398     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
399     : 0-----0-----1-----1--------
399     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : --0-----0-----1-----1------
401     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
402     : 0--0--------1--1-----------
402     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
403     : -0--0--------1--1----------
403     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
404     : --0--0--------1--1---------
404     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : 0--0--0-----1--------------
405     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
406     : -0--0--0-----1-------------
406     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
407     : --0--0--0-----1------------
407     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : ------0---0---------01---0-
411     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
412     : ------0---0--------0-1----0
412     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
413     : -------0--0---------0-1-0--
413     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
414     : -------0--0-------0---1---0
414     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
415     : --------0-0--------0---10--
415     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
416     : --------0-0-------0----1-0-
416     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
417     : ------0----0------1----0-0-
417     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
418     : ------0----0------1---0---0
418     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
419     : -------0---0-------1---00--
419     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
420     : -------0---0-------1-0----0
420     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
421     : --------0--0--------1-0-0--
421     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
422     : --------0--0--------10---0-
422     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
423     : ---0-----0-------0---1---0-
423     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
424     : ---0-----0------0----1----0
424     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
425     : ----0----0-------0----1-0--
425     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
426     : ----0----0-----0------1---0
426     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
427     : -----0---0------0------10--
427     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
428     : -----0---0-----0-------1-0-
428     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
429     : ---0-------0---1-------0-0-
429     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
430     : ---0-------0---1------0---0
430     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
431     : ----0------0----1------00--
431     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
432     : ----0------0----1----0----0
432     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
433     : -----0-----0-----1----0-0--
433     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
434     : -----0-----0-----1---0---0-
434     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
435     : 0--------0-------01------0-
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
436     : 0--------0------0-1-------0
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
437     : -0-------0-------0-1----0--
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
438     : -0-------0-----0---1------0
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
439     : --0------0------0---1---0--
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
440     : --0------0-----0----1----0-
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
441     : 0---------0----1----0----0-
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
442     : 0---------0----1---0------0
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
443     : -0--------0-----1---0---0--
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
444     : -0--------0-----1-0-------0
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
445     : --0-------0------1-0----0--
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
446     : --0-------0------10------0-
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : ---0-----0-----------1---00
447     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
448     : ----0----0------------1-0-0
448     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
449     : -----0---0-------------100-
449     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
450     : 0--------0--------1------00
450     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
451     : -0-------0---------1----0-0
451     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
452     : --0------0----------1---00-
452     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
453     : ------0---0----------1---00
453     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
454     : -------0--0-----------1-0-0
454     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
455     : --------0-0------------100-
455     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
456     : 0---------0----1---------00
456     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
457     : -0--------0-----1-------0-0
457     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
458     : --0-------0------1------00-
458     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
459     : ------0----0------1------00
459     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
460     : -------0---0-------1----0-0
460     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
461     : --------0--0--------1---00-
461     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
462     : ---0-------0---1---------00
462     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
463     : ----0------0----1-------0-0
463     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
464     : -----0-----0-----1------00-
464     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : ---0-----0------00---1-----
465     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
466     : ----0----0-----0-0----1----
466     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
467     : -----0---0-----00------1---
467     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
468     : 0--------0------001--------
468     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
469     : -0-------0-----0-0-1-------
469     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
470     : --0------0-----00---1------
470     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
471     : ------0---0--------001-----
471     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
472     : -------0--0-------0-0-1----
472     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
473     : --------0-0-------00---1---
473     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
474     : 0---------0----1---00------
474     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
475     : -0--------0-----1-0-0------
475     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
476     : --0-------0------100-------
476     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
477     : ------0----0------1---00---
477     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
478     : -------0---0-------1-0-0---
478     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
479     : --------0--0--------100----
479     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
480     : ---0-------0---1------00---
480     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
481     : ----0------0----1----0-0---
481     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
482     : -----0-----0-----1---00----
482     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : --1--0-----0---------0---0-
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
484     : -1--0------0---------0----0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
485     : --1--0-----0----------0-0--
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
486     : 1--0-------0----------0---0
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
487     : -1--0------0-----------00--
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
488     : 1--0-------0-----------0-0-
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
489     : --0--1----0-------0------0-
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
490     : -0--1-----0-------0-------0
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
491     : --0--1----0--------0----0--
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
492     : 0--1------0--------0------0
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
493     : -0--1-----0---------0---0--
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
494     : 0--1------0---------0----0-
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
495     : --1-----0--0---------0---0-
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
496     : -1-----0---0---------0----0
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
497     : --1-----0--0----------0-0--
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
498     : 1-----0----0----------0---0
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
499     : -1-----0---0-----------00--
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
500     : 1-----0----0-----------0-0-
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
501     : --0-----10-----0---------0-
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
502     : -0-----1-0-----0----------0
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
503     : --0-----10------0-------0--
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
504     : 0-----1--0------0---------0
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
505     : -0-----1-0-------0------0--
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
506     : 0-----1--0-------0-------0-
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
507     : -----1--0-0-------0------0-
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
508     : ----1--0--0-------0-------0
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
509     : -----1--0-0--------0----0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
510     : ---1--0---0--------0------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
511     : ----1--0--0---------0---0--
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
512     : ---1--0---0---------0----0-
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
513     : -----0--10-----0---------0-
513     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
514     : ----0--1-0-----0----------0
514     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
515     : -----0--10------0-------0--
515     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
516     : ---0--1--0------0---------0
516     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
517     : ----0--1-0-------0------0--
517     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
518     : ---0--1--0-------0-------0-
518     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 9
num_suborbits: 1
519 (*) : --0------00-------------00-
519     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
520     : -0-------00-------------0-0
520     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
521     : 0--------00--------------00
521     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : -----0---0-0------------00-
522     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
523     : ----0----0-0------------0-0
523     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
524     : ---0-----0-0-------------00
524     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : --------0-00------------00-
525     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
526     : -------0--00------------0-0
526     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
527     : ------0---00-------------00
527     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : --0-----10--------------00-
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
529     : -0-----1-0--------------0-0
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
530     : 0-----1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -----0--10--------------00-
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
532     : ----0--1-0--------------0-0
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
533     : ---0--1--0---------------00
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : --0--1----0-------------00-
534     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
535     : -0--1-----0-------------0-0
535     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
536     : 0--1------0--------------00
536     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
537     : -----1--0-0-------------00-
537     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
538     : ----1--0--0-------------0-0
538     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
539     : ---1--0---0--------------00
539     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
540     : --1--0-----0------------00-
540     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
541     : -1--0------0------------0-0
541     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
542     : 1--0-------0-------------00
542     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : --1-----0--0------------00-
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
544     : -1-----0---0------------0-0
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
545     : 1-----0----0-------------00
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : 0--1------0--------00------
546     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
547     : -0--1-----0-------0-0------
547     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
548     : --0--1----0-------00-------
548     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
549     : 1--0-------0----------00---
549     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
550     : -1--0------0---------0-0---
550     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
551     : --1--0-----0---------00----
551     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
552     : 0-----1--0------00---------
552     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
553     : -0-----1-0-----0-0---------
553     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
554     : --0-----10-----00----------
554     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
555     : 1-----0----0----------00---
555     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
556     : -1-----0---0---------0-0---
556     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
557     : --1-----0--0---------00----
557     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
558     : ---0--1--0------00---------
558     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
559     : ----0--1-0-----0-0---------
559     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
560     : -----0--10-----00----------
560     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
561     : ---1--0---0--------00------
561     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
562     : ----1--0--0-------0-0------
562     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
563     : -----1--0-0-------00-------
563     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
564 (*) : 0-----0---0-1------------00
564     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
565     : -0-----0--0--1----------0-0
565     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
566     : --0-----0-0---1---------00-
566     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
567     : ---0--0----01------------00
567     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
568     : ----0--0---0-1----------0-0
568     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
569     : -----0--0--0--1---------00-
569     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
570     : 0--0-----0--1------------00
570     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
571     : -0--0----0---1----------0-0
571     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
572     : --0--0---0----1---------00-
572     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
573 (*) : ---0--0----01----------0-0-
573     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
574     : ---0--0----01---------0---0
574     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
575     : ----0--0---0-1---------00--
575     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
576     : ----0--0---0-1-------0----0
576     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
577     : -----0--0--0--1-------0-0--
577     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
578     : -----0--0--0--1------0---0-
578     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
579     : 0-----0---0-1-------0----0-
579     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
580     : 0-----0---0-1------0------0
580     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
581     : -0-----0--0--1------0---0--
581     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
582     : -0-----0--0--1----0-------0
582     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
583     : --0-----0-0---1----0----0--
583     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
584     : --0-----0-0---1---0------0-
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
585     : 0--0-----0--1----0-------0-
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
586     : 0--0-----0--1---0---------0
586     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
587     : -0--0----0---1---0------0--
587     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
588     : -0--0----0---1-0----------0
588     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
589     : --0--0---0----1-0-------0--
589     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
590     : --0--0---0----10---------0-
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 9
num_suborbits: 1
591 (*) : 0--0-----0--1---00---------
591     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
592     : -0--0----0---1-0-0---------
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
593     : --0--0---0----100----------
593     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
594     : 0-----0---0-1------00------
594     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
595     : -0-----0--0--1----0-0------
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
596     : --0-----0-0---1---00-------
596     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
597     : ---0--0----01---------00---
597     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
598     : ----0--0---0-1-------0-0---
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
599     : -----0--0--0--1------00----
599     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
600 (*) : --0-0----0----------1-1-0--
600     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
601     : -0---0---0---------1---10--
601     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
602     : --00-----0----------11---0-
602     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
603     : 0----0---0--------1----1-0-
603     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
604     : -0-0-----0---------1-1----0
604     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
605     : 0---0----0--------1---1---0
605     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
606     : --0----0--0------1----1-0--
606     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
607     : -0------0-0-----1------10--
607     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
608     : --0---0---0------1---1---0-
608     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
609     : 0-------0-0----1-------1-0-
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
610     : -0----0---0-----1----1----0
610     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
611     : 0------0--0----1------1---0
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
612     : -----0-0---0-----1-1----0--
612     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
613     : ----0---0--0----1---1---0--
613     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
614     : -----00----0-----11------0-
614     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
615     : ---0----0--0---1----1----0-
615     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
616     : ----0-0----0----1-1-------0
616     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
617     : ---0---0---0---1---1------0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
618 (*) : --0----0--0------10---1----
618     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
619     : -0------0-0-----1-0----1---
619     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
620     : --0---0---0------1-0-1-----
620     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
621     : 0-------0-0----1---0---1---
621     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
622     : -0----0---0-----1---01-----
622     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
623     : 0------0--0----1----0-1----
623     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
624     : -----0-0---0-----1-1-0-----
624     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
625     : ----0---0--0----1---10-----
625     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
626     : -----00----0-----11---0----
626     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
627     : ---0----0--0---1----1-0----
627     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
628     : ----0-0----0----1-1----0---
628     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
629     : ---0---0---0---1---1---0---
629     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
630     : --0-0----0-----0----1-1----
630     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
631     : -0---0---0-----0---1---1---
631     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
632     : --00-----0------0---11-----
632     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
633     : 0----0---0------0-1----1---
633     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
634     : -0-0-----0-------0-1-1-----
634     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
635     : 0---0----0-------01---1----
635     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --------0-00-------0--0-0--
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
637     : -------0--00--------0--00--
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
638     : --------0-00------0--0---0-
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
639     : ------0---00--------0--0-0-
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
640     : -------0--00------0--0----0
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
641     : ------0---00-------0--0---0
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
642     : -----0---0-0----0-----0-0--
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
643     : ----0----0-0-----0-----00--
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
644     : -----0---0-0---0-----0---0-
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
645     : ---0-----0-0-----0-----0-0-
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
646     : ----0----0-0---0-----0----0
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
647     : ---0-----0-0----0-----0---0
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
648     : --0------00-----0--0----0--
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
649     : -0-------00------0--0---0--
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
650     : --0------00----0--0------0-
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
651     : 0--------00------0--0----0-
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
652     : -0-------00----0--0-------0
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
653     : 0--------00-----0--0------0
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0--0---0-00----1-------0--
654     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
655     : --0--0-0--00-----1------0--
655     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
656     : 0--0----0-00---1---------0-
656     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
657     : --0--00---00-----1-------0-
657     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
658     : 0--0---0--00---1----------0
658     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
659     : -0--0-0---00----1---------0
659     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
660     : -0---0-0-0-0-------1----0--
660     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : --0-0---00-0--------1---0--
661     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : 0----00--0-0------1------0-
662     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : --00----00-0--------1----0-
663     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : 0---0-0--0-0------1-------0
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : -0-0---0-0-0-------1------0
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0-0--0-00-----------1-0--
666     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
667     : -0---0--000------------10--
667     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
668     : --00--0--00----------1---0-
668     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
669     : 0----0--000------------1-0-
669     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
670     : -0-0--0--00----------1----0
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
671     : 0---0--0-00-----------1---0
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : ----0---0-00----1--0----0--
672     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
673     : -----0-0--00-----1--0---0--
673     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
674     : ---0----0-00---1--0------0-
674     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
675     : -----00---00-----1--0----0-
675     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
676     : ---0---0--00---1--0-------0
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
677     : ----0-0---00----1--0------0
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
678     : -0------0-00----1-----0-0--
678     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
679     : --0----0--00-----1-----00--
679     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
680     : 0-------0-00---1-----0---0-
680     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
681     : --0---0---00-----1-----0-0-
681     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
682     : 0------0--00---1-----0----0
682     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
683     : -0----0---00----1-----0---0
683     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
684     : -----0-0-0-0----0--1----0--
684     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
685     : ----0---00-0-----0--1---0--
685     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
686     : -----00--0-0---0--1------0-
686     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
687     : ---0----00-0-----0--1----0-
687     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
688     : ----0-0--0-0---0--1-------0
688     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
689     : ---0---0-0-0----0--1------0
689     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
690     : -0---0---0-0-------1--0-0--
690     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
691     : --0-0----0-0--------1--00--
691     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
692     : 0----0---0-0------1--0---0-
692     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
693     : --00-----0-0--------1--0-0-
693     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
694     : 0---0----0-0------1--0----0
694     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
695     : -0-0-----0-0-------1--0---0
695     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
696     : --0----0-00-----0-----1-0--
696     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
697     : -0------000------0-----10--
697     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
698     : --0---0--00----0-----1---0-
698     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
699     : 0-------000------0-----1-0-
699     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
700     : -0----0--00----0-----1----0
700     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
701     : 0------0-00-----0-----1---0
701     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
702     : --0-0----00--------0--1-0--
702     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
703     : -0---0---00---------0--10--
703     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
704     : --00-----00-------0--1---0-
704     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
705     : 0----0---00---------0--1-0-
705     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
706     : -0-0-----00-------0--1----0
706     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
707     : 0---0----00--------0--1---0
707     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : ----0----0-0---0-0---0-0---
708     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
709     : -----0---0-0---00----00----
709     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
710     : ---0-----0-0----00----00---
710     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
711     : -0-------00----0-00-0------
711     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
712     : --0------00----00-00-------
712     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
713     : 0--------00-----00-00------
713     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
714     : -------0--00------0-00-0---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
715     : --------0-00------00-00----
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
716     : ------0---00-------00-00---
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : --00--0--000-----------0-0-
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
718     : -0-0--0--000----------0---0
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
719     : --0-0--0-000-----------00--
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
720     : 0---0--0-000---------0----0
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
721     : -0---0--0000----------0-0--
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
722     : 0----0--0000---------0---0-
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
723     : 0----00--000--------0----0-
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
724     : 0---0-0--000-------0------0
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
725     : -0---0-0-000--------0---0--
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
726     : -0-0---0-000------0-------0
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
727     : --0-0---0000-------0----0--
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
728     : --00----0000------0------0-
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
729     : 0--0----0000-----0-------0-
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
730     : 0--0---0-000----0---------0
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
731     : -0--0---0000-----0------0--
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
732     : -0--0-0--000---0----------0
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
733     : --0--0-0-000----0-------0--
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
734     : --0--00--000---0---------0-
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : 0-------0000-----0---0---0-
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
736     : 0------0-000----0----0----0
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
737     : -0------0000-----0----0-0--
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
738     : -0----0--000---0------0---0
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
739     : --0----0-000----0------00--
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
740     : --0---0--000---0-------0-0-
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
741     : ---0----0000-----00------0-
741     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
742     : ---0---0-000----0-0-------0
742     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
743     : ----0---0000-----0-0----0--
743     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
744     : ----0-0--000---0---0------0
744     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
745     : -----0-0-000----0---0---0--
745     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
746     : -----00--000---0----0----0-
746     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
747     : 0----0---000--------00---0-
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
748     : 0---0----000-------0-0----0
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
749     : -0---0---000--------0-0-0--
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
750     : -0-0-----000------0---0---0
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
751     : --0-0----000-------0---00--
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
752     : --00-----000------0----0-0-
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 36
num_suborbits: 1
753 (*) : ---0----00-0----00--1-0----
753     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
754     : ---0---0-0-0----00-1---0---
754     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
755     : ----0---00-0---0-0--10-----
755     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
756     : ----0-0--0-0---0-01----0---
756     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
757     : -----0-0-0-0---00--1-0-----
757     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
758     : -----00--0-0---00-1---0----
758     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
759     : 0-------000-----00-0---1---
759     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
760     : 0------0-00-----00--0-1----
760     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
761     : -0------000----0-00----1---
761     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
762     : -0----0--00----0-0--01-----
762     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
763     : --0----0-00----00-0---1----
763     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
764     : --0---0--00----00--0-1-----
764     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
765     : -----00---00-----1-00-0----
765     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
766     : ----0-0---00----1--00--0---
766     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
767     : -----0-0--00-----10-00-----
767     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
768     : ---0---0--00---1--0-0--0---
768     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
769     : ----0---0-00----1-00-0-----
769     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
770     : ---0----0-00---1--00--0----
770     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
771     : 0----0---00-----0--00--1---
771     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
772     : 0---0----00------0-00-1----
772     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
773     : -0---0---00----0--0-0--1---
773     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
774     : -0-0-----00------00-01-----
774     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
775     : --0-0----00----0--00--1----
775     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
776     : --00-----00-----0-00-1-----
776     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
777     : --0---0---00-----1-0--00---
777     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
778     : -0----0---00----1---0-00---
778     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
779     : --0----0--00-----10--0-0---
779     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
780     : 0------0--00---1----00-0---
780     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
781     : -0------0-00----1-0--00----
781     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
782     : 0-------0-00---1---0-00----
782     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
783     : --00-----0-0----0---1-00---
783     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
784     : -0-0-----0-0-----0-1--00---
784     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
785     : --0-0----0-0---0----10-0---
785     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
786     : 0---0----0-0-----01--0-0---
786     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
787     : -0---0---0-0---0---1-00----
787     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
788     : 0----0---0-0----0-1--00----
788     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : --00----00-0----0---1-0----
789     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
790     : -0-0---0-0-0-----0-1---0---
790     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
791     : --0-0---00-0---0----10-----
791     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
792     : 0---0-0--0-0-----01----0---
792     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
793     : -0---0-0-0-0---0---1-0-----
793     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
794     : 0----00--0-0----0-1---0----
794     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
795     : 0----0--000-----0--0---1---
795     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
796     : 0---0--0-00------0--0-1----
796     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
797     : -0---0--000----0--0----1---
797     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
798     : -0-0--0--00------0--01-----
798     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
799     : --0-0--0-00----0--0---1----
799     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
800     : --00--0--00-----0--0-1-----
800     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
801     : --0--00---00-----1-0--0----
801     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
802     : -0--0-0---00----1---0--0---
802     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
803     : --0--0-0--00-----10--0-----
803     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
804     : 0--0---0--00---1----0--0---
804     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
805     : -0--0---0-00----1-0--0-----
805     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
806     : 0--0----0-00---1---0--0----
806     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
807 (*) : --0-0--0-000---0--0--0-0---
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
808     : -0---0--0000---0--0--00----
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
809     : --00--0--000----0--0--00---
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
810     : 0----0--0000----0--0-00----
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
811     : -0-0--0--000-----0--0-00---
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
812     : 0---0--0-000-----0--00-0---
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
813     : -0---0-0-000---0--0-00-----
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
814     : --0-0---0000---0--00-0-----
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
815     : 0----00--000----0--00-0----
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
816     : --00----0000----0-00--0----
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
817     : 0---0-0--000-----0-00--0---
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
818     : -0-0---0-000-----00-0--0---
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
819     : -0--0---0000---0-00--0-----
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
820     : --0--0-0-000---00-0--0-----
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
821     : 0--0----0000----00-0--0----
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
822     : --0--00--000---00--0--0----
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
823     : 0--0---0-000----00--0--0---
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
824     : -0--0-0--000---0-0--0--0---
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
825 (*) : --0----0-000---00-0--0-0---
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
826     : -0------0000---0-00--00----
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
827     : --0---0--000---00--0--00---
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
828     : 0-------0000----00-0-00----
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
829     : -0----0--000---0-0--0-00---
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
830     : 0------0-000----00--00-0---
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
831     : -----0-0-000---00-0-00-----
831     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
832     : ----0---0000---0-000-0-----
832     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
833     : -----00--000---00--00-0----
833     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
834     : ---0----0000----0000--0----
834     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
835     : ----0-0--000---0-0-00--0---
835     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
836     : ---0---0-000----000-0--0---
836     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
837     : --0-0----000---0--00-0-0---
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
838     : -0---0---000---0--0-000----
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
839     : --00-----000----0-00--00---
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
840     : 0----0---000----0--0000----
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
841     : -0-0-----000-----00-0-00---
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
842     : 0---0----000-----0-000-0---
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : -00-00-00000------------0--
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
844     : 0-00-00-0000-------------0-
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
845     : 00-00-00-000--------------0
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 00-00-00-000-----0--0--0---
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
847     : 0-00-00-0000----0--0--0----
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 7.721 seconds

[QRM NOTE]: Time elapsed since last: 0.418 seconds

[QRM NOTE]: Peak memory: 2524944 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {0, 1, 35, 5, 40, 11, 12, 13, 44, 47, 48, 49, 50, 52, 25, 31}


New level: 0
 pending : [2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : []


Before reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : []

Essensial at level 0 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, -1), (6, 0), (7, 1048576), (8, 0), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : {8, 6}

After reduction : 
 pending  : [2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9]


Before reduction : 
 pending  : [2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, -1), (6, 0), (7, 1048576), (8, 0), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9]

[QRM NOTE]: Time elapsed since start: 7.832 seconds

[QRM NOTE]: Time elapsed since last: 0.112 seconds

[QRM NOTE]: Peak memory: 1299581 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
141 (*) : ---------------11----------
141     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ----------------11---------
143     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
144     : ------------------11-------
144     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
145     : ------------------1-1------
145     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
146     : -------------------11------
146     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
147     : ---------------------11----
147     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
148     : ---------------------1-1---
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
149     : ----------------------11---
149     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : --------1---1--------------
27     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
28     : -------1----1--------------
28     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
29     : --------1----1-------------
29     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
30     : ------1------1-------------
30     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
31     : -------1------1------------
31     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
32     : ------1-------1------------
32     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
33     : -----1------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
34     : ----1-------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
35     : -----1-------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
36     : ---1---------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
37     : ----1---------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
38     : ---1----------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
39     : --1---------1--------------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
40     : -1----------1--------------
40     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
41     : --1----------1-------------
41     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
42     : 1------------1-------------
42     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
43     : -1------------1------------
43     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
44     : 1-------------1------------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------11-------------
45     : ['leader(proposer0)', 'leader(proposer1)']
46     : ------------1-1------------
46     : ['leader(proposer0)', 'leader(proposer2)']
47     : -------------11------------
47     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : -------------1-----------0-
48     : ['leader(proposer1)', '~start(proposer1)']
49     : --------------1-----------0
49     : ['leader(proposer2)', '~start(proposer2)']
50     : ------------1-----------0--
50     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~start(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
105 (*) : -------1-----------------0-
105     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
106     : --------1-----------------0
106     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
107     : ------1-----------------0--
107     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
108     : ----1--------------------0-
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
109     : -----1--------------------0
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
110     : ---1--------------------0--
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
111     : -1-----------------------0-
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
112     : --1-----------------------0
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
113     : 1-----------------------0--
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
150 (*) : ----------------------1--0-
150     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
151     : -----------------------1--0
151     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
152     : ---------------------1--0--
152     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
153     : -------------------1-----0-
153     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
154     : --------------------1-----0
154     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
155     : ------------------1-----0--
155     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
156     : ----------------1--------0-
156     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
157     : -----------------1--------0
157     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
158     : ---------------1--------0--
158     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor2,proposer1)', '~start(proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor2,proposer1)', '~start(proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : -0-----------1--------0----
195     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
196     : --0-----------1--------0---
196     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
197     : 0-----------1--------0-----
197     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
198     : ----0--------1-----0-------
198     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
199     : -----0--------1-----0------
199     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
200     : ---0--------1-----0--------
200     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
201     : -------0-----1--0----------
201     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
202     : --------0-----1--0---------
202     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
203     : ------0-----1--0-----------
203     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,PROPOSER0. member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
204 (*) : -0---------1-1-------------
204     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
205     : --0--------1--1------------
205     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
206     : 0----------11--------------
206     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
207     : ----0-----1--1-------------
207     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
208     : -----0----1---1------------
208     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
209     : ---0------1-1--------------
209     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
210     : -------0-1---1-------------
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
211     : --------01----1------------
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
212     : ------0--1--1--------------
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor2)', 'leader(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor2)', 'leader(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,PROPOSER0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0)


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
213 (*) : -0-----------1-------1-----
213     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
214     : --0-----------1------1-----
214     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
215     : 0-----------1---------1----
215     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
216     : --0-----------1-------1----
216     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
217     : 0-----------1----------1---
217     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
218     : -0-----------1---------1---
218     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
219     : ----0--------1----1--------
219     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
220     : -----0--------1---1--------
220     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
221     : ---0--------1------1-------
221     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
222     : -----0--------1----1-------
222     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
223     : ---0--------1-------1------
223     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
224     : ----0--------1------1------
224     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
225     : -------0-----1-1-----------
225     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
226     : --------0-----11-----------
226     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
227     : ------0-----1---1----------
227     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
228     : --------0-----1-1----------
228     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
229     : ------0-----1----1---------
229     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
230     : -------0-----1---1---------
230     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 17 =====================
size : 36
num_suborbits: 1
231 (*) : -------------1--0----1-----
231     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
232     : --------------1--0---1-----
232     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
233     : ------------1--0------1----
233     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
234     : --------------1--0----1----
234     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
235     : ------------1--0-------1---
235     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
236     : -------------1--0------1---
236     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
237     : -------------1--0-1--------
237     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
238     : --------------1--01--------
238     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
239     : ------------1--0---1-------
239     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
240     : --------------1--0-1-------
240     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
241     : ------------1--0----1------
241     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
242     : -------------1--0---1------
242     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
243     : -------------1-----0-1-----
243     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
244     : --------------1-----01-----
244     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
245     : ------------1-----0---1----
245     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
246     : --------------1-----0-1----
246     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
247     : ------------1-----0----1---
247     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
248     : -------------1-----0---1---
248     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
249     : -------------1-1---0-------
249     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
250     : --------------11----0------
250     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
251     : ------------1---1-0--------
251     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
252     : --------------1-1---0------
252     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
253     : ------------1----10--------
253     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
254     : -------------1---1-0-------
254     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
255     : -------------1----1---0----
255     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
256     : --------------1---1----0---
256     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
257     : ------------1------1-0-----
257     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
258     : --------------1----1---0---
258     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
259     : ------------1-------10-----
259     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
260     : -------------1------1-0----
260     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
261     : -------------1-1------0----
261     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
262     : --------------11-------0---
262     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
263     : ------------1---1----0-----
263     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
264     : --------------1-1------0---
264     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
265     : ------------1----1---0-----
265     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
266     : -------------1---1----0----
266     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', '~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
267 (*) : ---------1---1-------1-----
267     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
268     : ---------1----1------1-----
268     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
269     : ---------1--1---------1----
269     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
270     : ---------1----1-------1----
270     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ---------1--1----------1---
271     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
272     : ---------1---1---------1---
272     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
273     : ---------1---1----1--------
273     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
274     : ---------1----1---1--------
274     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
275     : ---------1--1------1-------
275     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
276     : ---------1----1----1-------
276     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
277     : ---------1--1-------1------
277     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
278     : ---------1---1------1------
278     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
279     : ----------1--1-------1-----
279     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
280     : ----------1---1------1-----
280     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
281     : ----------1-1---------1----
281     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
282     : ----------1---1-------1----
282     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
283     : ----------1-1----------1---
283     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
284     : ----------1--1---------1---
284     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
285     : ----------1--1-1-----------
285     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
286     : ----------1---11-----------
286     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
287     : ----------1-1---1----------
287     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
288     : ----------1---1-1----------
288     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
289     : ----------1-1----1---------
289     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
290     : ----------1--1---1---------
290     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
291     : -----------1-1----1--------
291     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
292     : -----------1--1---1--------
292     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
293     : -----------11------1-------
293     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
294     : -----------1--1----1-------
294     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
295     : -----------11-------1------
295     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
296     : -----------1-1------1------
296     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
297     : -----------1-1-1-----------
297     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
298     : -----------1--11-----------
298     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
299     : -----------11---1----------
299     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
300     : -----------1--1-1----------
300     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
301     : -----------11----1---------
301     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
302     : -----------1-1---1---------
302     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
303 (*) : -------------1--0-----0----
303     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
304     : --------------1--0-----0---
304     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
305     : ------------1--0-----0-----
305     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
306     : -------------1--0--0-------
306     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
307     : --------------1--0--0------
307     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
308     : ------------1--0--0--------
308     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
309     : -------------1-----0--0----
309     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
310     : --------------1-----0--0---
310     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
311     : ------------1-----0--0-----
311     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 20 =====================
size : 18
num_suborbits: 1
312 (*) : -----------1-1--0----------
312     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
313     : -----------1--1--0---------
313     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
314     : -----------11--0-----------
314     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
315     : ----------1--1--0----------
315     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
316     : ----------1---1--0---------
316     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
317     : ----------1-1--0-----------
317     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
318     : -----------1-1-----0-------
318     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
319     : -----------1--1-----0------
319     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
320     : -----------11-----0--------
320     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
321     : ---------1---1-----0-------
321     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
322     : ---------1----1-----0------
322     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
323     : ---------1--1-----0--------
323     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
324     : ----------1--1--------0----
324     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
325     : ----------1---1--------0---
325     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
326     : ----------1-1--------0-----
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
327     : ---------1---1--------0----
327     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
328     : ---------1----1--------0---
328     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
329     : ---------1--1--------0-----
329     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
330 (*) : ---------1-1-1-------------
330     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
331     : ---------1-1--1------------
331     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
332     : ---------1-11--------------
332     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
333     : ---------11--1-------------
333     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
334     : ---------11---1------------
334     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
335     : ---------11-1--------------
335     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
336     : ----------11-1-------------
336     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
337     : ----------11--1------------
337     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
338     : ----------111--------------
338     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 22 =====================
size : 36
num_suborbits: 2
339 (*) : -------------1-1-----1-----
339     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
340     : --------------11-----1-----
340     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
341     : ------------1---1-----1----
341     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
342     : --------------1-1-----1----
342     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
343     : ------------1----1-----1---
343     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
344     : -------------1---1-----1---
344     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
345     : -------------1-1--1--------
345     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
346     : --------------11--1--------
346     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
347     : ------------1---1--1-------
347     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
348     : --------------1-1--1-------
348     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
349     : ------------1----1--1------
349     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
350     : -------------1---1--1------
350     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
351     : -------------1----1--1-----
351     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
352     : --------------1---1--1-----
352     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
353     : ------------1------1--1----
353     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
354     : --------------1----1--1----
354     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
355     : ------------1-------1--1---
355     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
356     : -------------1------1--1---
356     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
357 (*) : ------------1---1---1------
357     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
358     : ------------1----1-1-------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1---11--------
360     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
361     : --------------11---1-------
361     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
362     : --------------1-1-1--------
362     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1------1---1---
369     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
370     : ------------1-------1-1----
370     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
371     : -------------1----1----1---
371     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
372     : -------------1------11-----
372     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
373     : --------------1---1---1----
373     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
374     : --------------1----1-1-----
374     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER2)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER0:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR1,PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2))


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ---------0------00------0--
375     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
376     : ---------0-----0-0-------0-
376     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
377     : ---------0-----00---------0
377     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : -----------0----------000--
381     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
382     : -----------0---------0-0-0-
382     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
383     : -----------0---------00---0
383     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ---------0------0-------0-0
384     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
385     : ---------0-------0------00-
385     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
386     : ---------0-----0---------00
386     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
387     : ----------0--------0----0-0
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
388     : ----------0---------0---00-
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
389     : ----------0-------0------00
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
390     : -----------0----------0-0-0
390     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
391     : -----------0-----------000-
391     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
392     : -----------0---------0---00
392     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
396 (*) : ---0--0-----1--------1-----
396     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
397     : ----0--0-----1--------1----
397     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : -----0--0-----1--------1---
398     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
399     : 0-----0-----1-----1--------
399     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : --0-----0-----1-----1------
401     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
402     : 0--0--------1--1-----------
402     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
403     : -0--0--------1--1----------
403     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
404     : --0--0--------1--1---------
404     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor2,proposer0)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor2,proposer0)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,ACCEPTOR0,QUORUM0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | QUORUM0 = QUORUM1


=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : 0--0--0-----1--------------
405     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
406     : -0--0--0-----1-------------
406     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
407     : --0--0--0-----1------------
407     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : ------0---0---------01---0-
411     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
412     : ------0---0--------0-1----0
412     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
413     : -------0--0---------0-1-0--
413     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
414     : -------0--0-------0---1---0
414     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
415     : --------0-0--------0---10--
415     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
416     : --------0-0-------0----1-0-
416     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
417     : ------0----0------1----0-0-
417     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
418     : ------0----0------1---0---0
418     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
419     : -------0---0-------1---00--
419     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
420     : -------0---0-------1-0----0
420     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
421     : --------0--0--------1-0-0--
421     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
422     : --------0--0--------10---0-
422     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
423     : ---0-----0-------0---1---0-
423     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
424     : ---0-----0------0----1----0
424     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
425     : ----0----0-------0----1-0--
425     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
426     : ----0----0-----0------1---0
426     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
427     : -----0---0------0------10--
427     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
428     : -----0---0-----0-------1-0-
428     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
429     : ---0-------0---1-------0-0-
429     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
430     : ---0-------0---1------0---0
430     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
431     : ----0------0----1------00--
431     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
432     : ----0------0----1----0----0
432     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
433     : -----0-----0-----1----0-0--
433     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
434     : -----0-----0-----1---0---0-
434     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
435     : 0--------0-------01------0-
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
436     : 0--------0------0-1-------0
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
437     : -0-------0-------0-1----0--
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
438     : -0-------0-----0---1------0
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
439     : --0------0------0---1---0--
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
440     : --0------0-----0----1----0-
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
441     : 0---------0----1----0----0-
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
442     : 0---------0----1---0------0
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
443     : -0--------0-----1---0---0--
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
444     : -0--------0-----1-0-------0
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
445     : --0-------0------1-0----0--
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
446     : --0-------0------10------0-
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : ---0-----0-----------1---00
447     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
448     : ----0----0------------1-0-0
448     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
449     : -----0---0-------------100-
449     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
450     : 0--------0--------1------00
450     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
451     : -0-------0---------1----0-0
451     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
452     : --0------0----------1---00-
452     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
453     : ------0---0----------1---00
453     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
454     : -------0--0-----------1-0-0
454     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
455     : --------0-0------------100-
455     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
456     : 0---------0----1---------00
456     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
457     : -0--------0-----1-------0-0
457     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
458     : --0-------0------1------00-
458     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
459     : ------0----0------1------00
459     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
460     : -------0---0-------1----0-0
460     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
461     : --------0--0--------1---00-
461     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
462     : ---0-------0---1---------00
462     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
463     : ----0------0----1-------0-0
463     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
464     : -----0-----0-----1------00-
464     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : --1--0-----0---------0---0-
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
484     : -1--0------0---------0----0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
485     : --1--0-----0----------0-0--
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
486     : 1--0-------0----------0---0
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
487     : -1--0------0-----------00--
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
488     : 1--0-------0-----------0-0-
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
489     : --0--1----0-------0------0-
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
490     : -0--1-----0-------0-------0
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
491     : --0--1----0--------0----0--
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
492     : 0--1------0--------0------0
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
493     : -0--1-----0---------0---0--
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
494     : 0--1------0---------0----0-
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
495     : --1-----0--0---------0---0-
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
496     : -1-----0---0---------0----0
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
497     : --1-----0--0----------0-0--
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
498     : 1-----0----0----------0---0
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
499     : -1-----0---0-----------00--
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
500     : 1-----0----0-----------0-0-
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
501     : --0-----10-----0---------0-
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
502     : -0-----1-0-----0----------0
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
503     : --0-----10------0-------0--
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
504     : 0-----1--0------0---------0
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
505     : -0-----1-0-------0------0--
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
506     : 0-----1--0-------0-------0-
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
507     : -----1--0-0-------0------0-
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
508     : ----1--0--0-------0-------0
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
509     : -----1--0-0--------0----0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
510     : ---1--0---0--------0------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
511     : ----1--0--0---------0---0--
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
512     : ---1--0---0---------0----0-
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
513     : -----0--10-----0---------0-
513     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
514     : ----0--1-0-----0----------0
514     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
515     : -----0--10------0-------0--
515     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
516     : ---0--1--0------0---------0
516     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
517     : ----0--1-0-------0------0--
517     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
518     : ---0--1--0-------0-------0-
518     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1)


=== Prime Orbit 33 =====================
size : 9
num_suborbits: 1
519 (*) : --0------00-------------00-
519     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
520     : -0-------00-------------0-0
520     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
521     : 0--------00--------------00
521     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : -----0---0-0------------00-
522     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
523     : ----0----0-0------------0-0
523     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
524     : ---0-----0-0-------------00
524     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : --------0-00------------00-
525     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
526     : -------0--00------------0-0
526     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
527     : ------0---00-------------00
527     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,ACCEPTOR1,PROPOSER1. ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : --0-----10--------------00-
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
529     : -0-----1-0--------------0-0
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
530     : 0-----1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -----0--10--------------00-
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
532     : ----0--1-0--------------0-0
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
533     : ---0--1--0---------------00
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : --0--1----0-------------00-
534     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
535     : -0--1-----0-------------0-0
535     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
536     : 0--1------0--------------00
536     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
537     : -----1--0-0-------------00-
537     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
538     : ----1--0--0-------------0-0
538     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
539     : ---1--0---0--------------00
539     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
540     : --1--0-----0------------00-
540     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
541     : -1--0------0------------0-0
541     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
542     : 1--0-------0-------------00
542     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : --1-----0--0------------00-
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
544     : -1-----0---0------------0-0
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
545     : 1-----0----0-------------00
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
564 (*) : 0-----0---0-1------------00
564     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
565     : -0-----0--0--1----------0-0
565     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
566     : --0-----0-0---1---------00-
566     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
567     : ---0--0----01------------00
567     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
568     : ----0--0---0-1----------0-0
568     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
569     : -----0--0--0--1---------00-
569     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
570     : 0--0-----0--1------------00
570     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
571     : -0--0----0---1----------0-0
571     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
572     : --0--0---0----1---------00-
572     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', 'leader(PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER1)', '~start(PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
573 (*) : ---0--0----01----------0-0-
573     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
574     : ---0--0----01---------0---0
574     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
575     : ----0--0---0-1---------00--
575     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
576     : ----0--0---0-1-------0----0
576     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
577     : -----0--0--0--1-------0-0--
577     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
578     : -----0--0--0--1------0---0-
578     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
579     : 0-----0---0-1-------0----0-
579     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
580     : 0-----0---0-1------0------0
580     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
581     : -0-----0--0--1------0---0--
581     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
582     : -0-----0--0--1----0-------0
582     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
583     : --0-----0-0---1----0----0--
583     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
584     : --0-----0-0---1---0------0-
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
585     : 0--0-----0--1----0-------0-
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
586     : 0--0-----0--1---0---------0
586     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
587     : -0--0----0---1---0------0--
587     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
588     : -0--0----0---1-0----------0
588     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
589     : --0--0---0----1-0-------0--
589     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
590     : --0--0---0----10---------0-
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1)


=== Prime Orbit 38 =====================
size : 9
num_suborbits: 1
591 (*) : 0--0-----0--1---00---------
591     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
592     : -0--0----0---1-0-0---------
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
593     : --0--0---0----100----------
593     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
594     : 0-----0---0-1------00------
594     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
595     : -0-----0--0--1----0-0------
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
596     : --0-----0-0---1---00-------
596     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
597     : ---0--0----01---------00---
597     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
598     : ----0--0---0-1-------0-0---
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
599     : -----0--0--0--1------00----
599     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', 'leader(PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
600 (*) : --0-0----0----------1-1-0--
600     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
601     : -0---0---0---------1---10--
601     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
602     : --00-----0----------11---0-
602     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
603     : 0----0---0--------1----1-0-
603     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
604     : -0-0-----0---------1-1----0
604     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
605     : 0---0----0--------1---1---0
605     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
606     : --0----0--0------1----1-0--
606     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
607     : -0------0-0-----1------10--
607     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
608     : --0---0---0------1---1---0-
608     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
609     : 0-------0-0----1-------1-0-
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
610     : -0----0---0-----1----1----0
610     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
611     : 0------0--0----1------1---0
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
612     : -----0-0---0-----1-1----0--
612     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
613     : ----0---0--0----1---1---0--
613     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
614     : -----00----0-----11------0-
614     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
615     : ---0----0--0---1----1----0-
615     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
616     : ----0-0----0----1-1-------0
616     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
617     : ---0---0---0---1---1------0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR1,QUORUM1)', '~start(PROPOSER2)', '~member(ACCEPTOR2,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER1)', 'promise(ACCEPTOR2,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --------0-00-------0--0-0--
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
637     : -------0--00--------0--00--
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
638     : --------0-00------0--0---0-
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
639     : ------0---00--------0--0-0-
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
640     : -------0--00------0--0----0
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
641     : ------0---00-------0--0---0
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
642     : -----0---0-0----0-----0-0--
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
643     : ----0----0-0-----0-----00--
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
644     : -----0---0-0---0-----0---0-
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
645     : ---0-----0-0-----0-----0-0-
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
646     : ----0----0-0---0-----0----0
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
647     : ---0-----0-0----0-----0---0
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
648     : --0------00-----0--0----0--
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
649     : -0-------00------0--0---0--
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
650     : --0------00----0--0------0-
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
651     : 0--------00------0--0----0-
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
652     : -0-------00----0--0-------0
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
653     : 0--------00-----0--0------0
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0--0---0-00----1-------0--
654     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
655     : --0--0-0--00-----1------0--
655     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
656     : 0--0----0-00---1---------0-
656     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
657     : --0--00---00-----1-------0-
657     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
658     : 0--0---0--00---1----------0
658     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
659     : -0--0-0---00----1---------0
659     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
660     : -0---0-0-0-0-------1----0--
660     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : --0-0---00-0--------1---0--
661     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : 0----00--0-0------1------0-
662     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : --00----00-0--------1----0-
663     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : 0---0-0--0-0------1-------0
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : -0-0---0-0-0-------1------0
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0-0--0-00-----------1-0--
666     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
667     : -0---0--000------------10--
667     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
668     : --00--0--00----------1---0-
668     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
669     : 0----0--000------------1-0-
669     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
670     : -0-0--0--00----------1----0
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
671     : 0---0--0-00-----------1---0
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$2, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$3, acceptor$1$member$0$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$0, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$0$promise$0$0; acceptor$1$member$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$2, acceptor$0$member$0$2, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER2)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR0,QUORUM2)', '~chosenAt(QUORUM2,PROPOSER0)', '~member(ACCEPTOR0,QUORUM1)', '~member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,QUORUM2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM2,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2)


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : ----0---0-00----1--0----0--
672     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
673     : -----0-0--00-----1--0---0--
673     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
674     : ---0----0-00---1--0------0-
674     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
675     : -----00---00-----1--0----0-
675     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
676     : ---0---0--00---1--0-------0
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
677     : ----0-0---00----1--0------0
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
678     : -0------0-00----1-----0-0--
678     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
679     : --0----0--00-----1-----00--
679     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
680     : 0-------0-00---1-----0---0-
680     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
681     : --0---0---00-----1-----0-0-
681     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
682     : 0------0--00---1-----0----0
682     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
683     : -0----0---00----1-----0---0
683     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
684     : -----0-0-0-0----0--1----0--
684     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
685     : ----0---00-0-----0--1---0--
685     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
686     : -----00--0-0---0--1------0-
686     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
687     : ---0----00-0-----0--1----0-
687     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
688     : ----0-0--0-0---0--1-------0
688     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
689     : ---0---0-0-0----0--1------0
689     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
690     : -0---0---0-0-------1--0-0--
690     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
691     : --0-0----0-0--------1--00--
691     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
692     : 0----0---0-0------1--0---0-
692     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
693     : --00-----0-0--------1--0-0-
693     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
694     : 0---0----0-0------1--0----0
694     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
695     : -0-0-----0-0-------1--0---0
695     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
696     : --0----0-00-----0-----1-0--
696     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
697     : -0------000------0-----10--
697     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
698     : --0---0--00----0-----1---0-
698     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
699     : 0-------000------0-----1-0-
699     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
700     : -0----0--00----0-----1----0
700     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
701     : 0------0-00-----0-----1---0
701     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
702     : --0-0----00--------0--1-0--
702     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
703     : -0---0---00---------0--10--
703     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
704     : --00-----00-------0--1---0-
704     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
705     : 0----0---00---------0--1-0-
705     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
706     : -0-0-----00-------0--1----0
706     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
707     : 0---0----00--------0--1---0
707     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0, proposer$1$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$2, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', '~promise(ACCEPTOR2,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : --00--0--000-----------0-0-
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
718     : -0-0--0--000----------0---0
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
719     : --0-0--0-000-----------00--
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
720     : 0---0--0-000---------0----0
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
721     : -0---0--0000----------0-0--
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
722     : 0----0--0000---------0---0-
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
723     : 0----00--000--------0----0-
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
724     : 0---0-0--000-------0------0
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
725     : -0---0-0-000--------0---0--
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
726     : -0-0---0-000------0-------0
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
727     : --0-0---0000-------0----0--
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
728     : --00----0000------0------0-
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
729     : 0--0----0000-----0-------0-
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
730     : 0--0---0-000----0---------0
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
731     : -0--0---0000-----0------0--
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
732     : -0--0-0--000---0----------0
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
733     : --0--0-0-000----0-------0--
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
734     : --0--00--000---0---------0-
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$3, acceptor$1$member$0$2], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2; acceptor$1$promise$0$0, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2; acceptor$1$promise$0$0, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2; acceptor$1$promise$0$0 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$2; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$2, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$0, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$2, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER2)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM1)', 'member(ACCEPTOR0,QUORUM2)', '~chosenAt(QUORUM2,PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)', '~member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,QUORUM2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM2,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2)


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : 0-------0000-----0---0---0-
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
736     : 0------0-000----0----0----0
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
737     : -0------0000-----0----0-0--
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
738     : -0----0--000---0------0---0
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
739     : --0----0-000----0------00--
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
740     : --0---0--000---0-------0-0-
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
741     : ---0----0000-----00------0-
741     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
742     : ---0---0-000----0-0-------0
742     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
743     : ----0---0000-----0-0----0--
743     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
744     : ----0-0--000---0---0------0
744     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
745     : -----0-0-000----0---0---0--
745     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
746     : -----00--000---0----0----0-
746     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
747     : 0----0---000--------00---0-
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
748     : 0---0----000-------0-0----0
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
749     : -0---0---000--------0-0-0--
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
750     : -0-0-----000------0---0---0
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
751     : --0-0----000-------0---00--
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
752     : --00-----000------0----0-0-
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$2, quorum$0$member$1$3], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$3], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '1$member': 2, '0$member': 4}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$1$promise$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR2,PROPOSER1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR1,QUORUM1)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~promise(ACCEPTOR1,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | promise(ACCEPTOR1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : -00-00-00000------------0--
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
844     : 0-00-00-0000-------------0-
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
845     : 00-00-00-000--------------0
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2, acceptor$0$member$0$5, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$3, acceptor$1$member$0$2], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2 | acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$2, acceptor$0$member$0$2; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$1, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$2, acceptor$0$member$0$2, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR2,QUORUM2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~start(PROPOSER1)', 'member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM2)', '~member(ACCEPTOR0,QUORUM1)', '~member(ACCEPTOR1,QUORUM2)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,QUORUM2,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR1,QUORUM2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2)


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
141 (*) : ---------------11----------
141     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
142     : ---------------1-1---------
142     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
143     : ----------------11---------
143     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
144     : ------------------11-------
144     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
145     : ------------------1-1------
145     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
146     : -------------------11------
146     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
147     : ---------------------11----
147     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
148     : ---------------------1-1---
148     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
149     : ----------------------11---
149     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : --------1---1--------------
27     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
28     : -------1----1--------------
28     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
29     : --------1----1-------------
29     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
30     : ------1------1-------------
30     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
31     : -------1------1------------
31     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
32     : ------1-------1------------
32     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
33     : -----1------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
34     : ----1-------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
35     : -----1-------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
36     : ---1---------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
37     : ----1---------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
38     : ---1----------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
39     : --1---------1--------------
39     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
40     : -1----------1--------------
40     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
41     : --1----------1-------------
41     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
42     : 1------------1-------------
42     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
43     : -1------------1------------
43     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
44     : 1-------------1------------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall QUORUM0,PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------11-------------
45     : ['leader(proposer0)', 'leader(proposer1)']
46     : ------------1-1------------
46     : ['leader(proposer0)', 'leader(proposer2)']
47     : -------------11------------
47     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1. ~leader(PROPOSER1) | ~leader(PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : -------------1-----------0-
48     : ['leader(proposer1)', '~start(proposer1)']
49     : --------------1-----------0
49     : ['leader(proposer2)', '~start(proposer2)']
50     : ------------1-----------0--
50     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
105 (*) : -------1-----------------0-
105     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
106     : --------1-----------------0
106     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
107     : ------1-----------------0--
107     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
108     : ----1--------------------0-
108     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
109     : -----1--------------------0
109     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
110     : ---1--------------------0--
110     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
111     : -1-----------------------0-
111     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
112     : --1-----------------------0
112     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
113     : 1-----------------------0--
113     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 10 =====================
size : 9
num_suborbits: 1
150 (*) : ----------------------1--0-
150     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
151     : -----------------------1--0
151     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
152     : ---------------------1--0--
152     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
153     : -------------------1-----0-
153     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
154     : --------------------1-----0
154     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
155     : ------------------1-----0--
155     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
156     : ----------------1--------0-
156     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
157     : -----------------1--------0
157     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
158     : ---------------1--------0--
158     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
195 (*) : -0-----------1--------0----
195     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
196     : --0-----------1--------0---
196     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
197     : 0-----------1--------0-----
197     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
198     : ----0--------1-----0-------
198     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
199     : -----0--------1-----0------
199     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
200     : ---0--------1-----0--------
200     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
201     : -------0-----1--0----------
201     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
202     : --------0-----1--0---------
202     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
203     : ------0-----1--0-----------
203     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,QUORUM0,PROPOSER0. member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 15 =====================
size : 9
num_suborbits: 1
204 (*) : -0---------1-1-------------
204     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
205     : --0--------1--1------------
205     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
206     : 0----------11--------------
206     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
207     : ----0-----1--1-------------
207     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
208     : -----0----1---1------------
208     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
209     : ---0------1-1--------------
209     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
210     : -------0-1---1-------------
210     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
211     : --------01----1------------
211     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
212     : ------0--1--1--------------
212     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall ACCEPTOR0,QUORUM0,PROPOSER0. member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0)
qcost : 7




=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
213 (*) : -0-----------1-------1-----
213     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
214     : --0-----------1------1-----
214     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
215     : 0-----------1---------1----
215     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
216     : --0-----------1-------1----
216     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
217     : 0-----------1----------1---
217     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
218     : -0-----------1---------1---
218     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
219     : ----0--------1----1--------
219     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
220     : -----0--------1---1--------
220     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
221     : ---0--------1------1-------
221     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
222     : -----0--------1----1-------
222     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
223     : ---0--------1-------1------
223     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
224     : ----0--------1------1------
224     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
225     : -------0-----1-1-----------
225     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
226     : --------0-----11-----------
226     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
227     : ------0-----1---1----------
227     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
228     : --------0-----1-1----------
228     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
229     : ------0-----1----1---------
229     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
230     : -------0-----1---1---------
230     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall ACCEPTOR0,QUORUM0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 17 =====================
size : 36
num_suborbits: 1
231 (*) : -------------1--0----1-----
231     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
232     : --------------1--0---1-----
232     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
233     : ------------1--0------1----
233     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
234     : --------------1--0----1----
234     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
235     : ------------1--0-------1---
235     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
236     : -------------1--0------1---
236     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
237     : -------------1--0-1--------
237     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
238     : --------------1--01--------
238     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
239     : ------------1--0---1-------
239     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
240     : --------------1--0-1-------
240     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
241     : ------------1--0----1------
241     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
242     : -------------1--0---1------
242     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
243     : -------------1-----0-1-----
243     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
244     : --------------1-----01-----
244     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
245     : ------------1-----0---1----
245     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
246     : --------------1-----0-1----
246     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
247     : ------------1-----0----1---
247     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
248     : -------------1-----0---1---
248     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
249     : -------------1-1---0-------
249     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
250     : --------------11----0------
250     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
251     : ------------1---1-0--------
251     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
252     : --------------1-1---0------
252     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
253     : ------------1----10--------
253     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
254     : -------------1---1-0-------
254     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
255     : -------------1----1---0----
255     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
256     : --------------1---1----0---
256     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
257     : ------------1------1-0-----
257     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
258     : --------------1----1---0---
258     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
259     : ------------1-------10-----
259     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
260     : -------------1------1-0----
260     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
261     : -------------1-1------0----
261     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
262     : --------------11-------0---
262     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
263     : ------------1---1----0-----
263     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
264     : --------------1-1------0---
264     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
265     : ------------1----1---0-----
265     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
266     : -------------1---1----0----
266     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 18 =====================
size : 36
num_suborbits: 1
267 (*) : ---------1---1-------1-----
267     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
268     : ---------1----1------1-----
268     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
269     : ---------1--1---------1----
269     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
270     : ---------1----1-------1----
270     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ---------1--1----------1---
271     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
272     : ---------1---1---------1---
272     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
273     : ---------1---1----1--------
273     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
274     : ---------1----1---1--------
274     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
275     : ---------1--1------1-------
275     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
276     : ---------1----1----1-------
276     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
277     : ---------1--1-------1------
277     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
278     : ---------1---1------1------
278     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
279     : ----------1--1-------1-----
279     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
280     : ----------1---1------1-----
280     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
281     : ----------1-1---------1----
281     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
282     : ----------1---1-------1----
282     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
283     : ----------1-1----------1---
283     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
284     : ----------1--1---------1---
284     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
285     : ----------1--1-1-----------
285     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
286     : ----------1---11-----------
286     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
287     : ----------1-1---1----------
287     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
288     : ----------1---1-1----------
288     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
289     : ----------1-1----1---------
289     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
290     : ----------1--1---1---------
290     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
291     : -----------1-1----1--------
291     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
292     : -----------1--1---1--------
292     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
293     : -----------11------1-------
293     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
294     : -----------1--1----1-------
294     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
295     : -----------11-------1------
295     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
296     : -----------1-1------1------
296     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
297     : -----------1-1-1-----------
297     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
298     : -----------1--11-----------
298     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
299     : -----------11---1----------
299     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
300     : -----------1--1-1----------
300     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
301     : -----------11----1---------
301     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
302     : -----------1-1---1---------
302     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1,PROPOSER1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
303 (*) : -------------1--0-----0----
303     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
304     : --------------1--0-----0---
304     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
305     : ------------1--0-----0-----
305     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
306     : -------------1--0--0-------
306     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
307     : --------------1--0--0------
307     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
308     : ------------1--0--0--------
308     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
309     : -------------1-----0--0----
309     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
310     : --------------1-----0--0---
310     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
311     : ------------1-----0--0-----
311     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 20 =====================
size : 18
num_suborbits: 1
312 (*) : -----------1-1--0----------
312     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
313     : -----------1--1--0---------
313     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
314     : -----------11--0-----------
314     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
315     : ----------1--1--0----------
315     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
316     : ----------1---1--0---------
316     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
317     : ----------1-1--0-----------
317     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
318     : -----------1-1-----0-------
318     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
319     : -----------1--1-----0------
319     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
320     : -----------11-----0--------
320     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
321     : ---------1---1-----0-------
321     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
322     : ---------1----1-----0------
322     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
323     : ---------1--1-----0--------
323     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
324     : ----------1--1--------0----
324     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
325     : ----------1---1--------0---
325     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
326     : ----------1-1--------0-----
326     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
327     : ---------1---1--------0----
327     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
328     : ---------1----1--------0---
328     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
329     : ---------1--1--------0-----
329     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
330 (*) : ---------1-1-1-------------
330     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
331     : ---------1-1--1------------
331     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
332     : ---------1-11--------------
332     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
333     : ---------11--1-------------
333     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
334     : ---------11---1------------
334     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
335     : ---------11-1--------------
335     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
336     : ----------11-1-------------
336     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
337     : ----------11--1------------
337     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
338     : ----------111--------------
338     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 22 =====================
size : 36
num_suborbits: 2
339 (*) : -------------1-1-----1-----
339     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
340     : --------------11-----1-----
340     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
341     : ------------1---1-----1----
341     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
342     : --------------1-1-----1----
342     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
343     : ------------1----1-----1---
343     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
344     : -------------1---1-----1---
344     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
345     : -------------1-1--1--------
345     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
346     : --------------11--1--------
346     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
347     : ------------1---1--1-------
347     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
348     : --------------1-1--1-------
348     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
349     : ------------1----1--1------
349     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
350     : -------------1---1--1------
350     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
351     : -------------1----1--1-----
351     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
352     : --------------1---1--1-----
352     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
353     : ------------1------1--1----
353     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
354     : --------------1----1--1----
354     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
355     : ------------1-------1--1---
355     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
356     : -------------1------1--1---
356     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
357 (*) : ------------1---1---1------
357     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
358     : ------------1----1-1-------
358     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
359     : -------------1-1----1------
359     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
360     : -------------1---11--------
360     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
361     : --------------11---1-------
361     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
362     : --------------1-1-1--------
362     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1------1---1---
369     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
370     : ------------1-------1-1----
370     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
371     : -------------1----1----1---
371     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
372     : -------------1------11-----
372     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
373     : --------------1---1---1----
373     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
374     : --------------1----1-1-----
374     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall PROPOSER2,ACCEPTOR1,PROPOSER1,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER2) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2))
qcost : 15




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : ---------0------00------0--
375     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
376     : ---------0-----0-0-------0-
376     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
377     : ---------0-----00---------0
377     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
378     : ----------0--------00---0--
378     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
379     : ----------0-------0-0----0-
379     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
380     : ----------0-------00------0
380     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
381     : -----------0----------000--
381     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
382     : -----------0---------0-0-0-
382     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
383     : -----------0---------00---0
383     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
384 (*) : ---------0------0-------0-0
384     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
385     : ---------0-------0------00-
385     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
386     : ---------0-----0---------00
386     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
387     : ----------0--------0----0-0
387     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
388     : ----------0---------0---00-
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
389     : ----------0-------0------00
389     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
390     : -----------0----------0-0-0
390     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
391     : -----------0-----------000-
391     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
392     : -----------0---------0---00
392     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
396 (*) : ---0--0-----1--------1-----
396     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
397     : ----0--0-----1--------1----
397     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
398     : -----0--0-----1--------1---
398     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
399     : 0-----0-----1-----1--------
399     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
400     : -0-----0-----1-----1-------
400     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
401     : --0-----0-----1-----1------
401     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
402     : 0--0--------1--1-----------
402     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
403     : -0--0--------1--1----------
403     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
404     : --0--0--------1--1---------
404     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,ACCEPTOR0,QUORUM0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 27 =====================
size : 3
num_suborbits: 1
405 (*) : 0--0--0-----1--------------
405     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
406     : -0--0--0-----1-------------
406     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
407     : --0--0--0-----1------------
407     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : ------0---0---------01---0-
411     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
412     : ------0---0--------0-1----0
412     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
413     : -------0--0---------0-1-0--
413     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
414     : -------0--0-------0---1---0
414     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
415     : --------0-0--------0---10--
415     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
416     : --------0-0-------0----1-0-
416     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
417     : ------0----0------1----0-0-
417     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
418     : ------0----0------1---0---0
418     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
419     : -------0---0-------1---00--
419     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
420     : -------0---0-------1-0----0
420     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
421     : --------0--0--------1-0-0--
421     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
422     : --------0--0--------10---0-
422     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
423     : ---0-----0-------0---1---0-
423     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
424     : ---0-----0------0----1----0
424     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
425     : ----0----0-------0----1-0--
425     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
426     : ----0----0-----0------1---0
426     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
427     : -----0---0------0------10--
427     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
428     : -----0---0-----0-------1-0-
428     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
429     : ---0-------0---1-------0-0-
429     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
430     : ---0-------0---1------0---0
430     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
431     : ----0------0----1------00--
431     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
432     : ----0------0----1----0----0
432     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
433     : -----0-----0-----1----0-0--
433     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
434     : -----0-----0-----1---0---0-
434     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
435     : 0--------0-------01------0-
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
436     : 0--------0------0-1-------0
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
437     : -0-------0-------0-1----0--
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
438     : -0-------0-----0---1------0
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
439     : --0------0------0---1---0--
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
440     : --0------0-----0----1----0-
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
441     : 0---------0----1----0----0-
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
442     : 0---------0----1---0------0
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
443     : -0--------0-----1---0---0--
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
444     : -0--------0-----1-0-------0
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
445     : --0-------0------1-0----0--
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
446     : --0-------0------10------0-
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)
qcost : 17




=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : ---0-----0-----------1---00
447     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
448     : ----0----0------------1-0-0
448     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
449     : -----0---0-------------100-
449     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
450     : 0--------0--------1------00
450     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
451     : -0-------0---------1----0-0
451     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
452     : --0------0----------1---00-
452     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
453     : ------0---0----------1---00
453     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
454     : -------0--0-----------1-0-0
454     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
455     : --------0-0------------100-
455     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
456     : 0---------0----1---------00
456     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
457     : -0--------0-----1-------0-0
457     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
458     : --0-------0------1------00-
458     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
459     : ------0----0------1------00
459     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
460     : -------0---0-------1----0-0
460     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
461     : --------0--0--------1---00-
461     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
462     : ---0-------0---1---------00
462     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
463     : ----0------0----1-------0-0
463     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
464     : -----0-----0-----1------00-
464     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR0,QUORUM0,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 32 =====================
size : 36
num_suborbits: 1
483 (*) : --1--0-----0---------0---0-
483     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
484     : -1--0------0---------0----0
484     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
485     : --1--0-----0----------0-0--
485     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
486     : 1--0-------0----------0---0
486     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
487     : -1--0------0-----------00--
487     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
488     : 1--0-------0-----------0-0-
488     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
489     : --0--1----0-------0------0-
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
490     : -0--1-----0-------0-------0
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
491     : --0--1----0--------0----0--
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
492     : 0--1------0--------0------0
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
493     : -0--1-----0---------0---0--
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
494     : 0--1------0---------0----0-
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
495     : --1-----0--0---------0---0-
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
496     : -1-----0---0---------0----0
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
497     : --1-----0--0----------0-0--
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
498     : 1-----0----0----------0---0
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
499     : -1-----0---0-----------00--
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
500     : 1-----0----0-----------0-0-
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
501     : --0-----10-----0---------0-
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
502     : -0-----1-0-----0----------0
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
503     : --0-----10------0-------0--
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
504     : 0-----1--0------0---------0
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
505     : -0-----1-0-------0------0--
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
506     : 0-----1--0-------0-------0-
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
507     : -----1--0-0-------0------0-
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
508     : ----1--0--0-------0-------0
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
509     : -----1--0-0--------0----0--
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
510     : ---1--0---0--------0------0
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
511     : ----1--0--0---------0---0--
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
512     : ---1--0---0---------0----0-
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
513     : -----0--10-----0---------0-
513     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
514     : ----0--1-0-----0----------0
514     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
515     : -----0--10------0-------0--
515     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
516     : ---0--1--0------0---------0
516     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
517     : ----0--1-0-------0------0--
517     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
518     : ---0--1--0-------0-------0-
518     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER2,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER0. ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1)
qcost : 17




=== Prime Orbit 33 =====================
size : 9
num_suborbits: 1
519 (*) : --0------00-------------00-
519     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
520     : -0-------00-------------0-0
520     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
521     : 0--------00--------------00
521     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
522     : -----0---0-0------------00-
522     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
523     : ----0----0-0------------0-0
523     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
524     : ---0-----0-0-------------00
524     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
525     : --------0-00------------00-
525     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
526     : -------0--00------------0-0
526     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
527     : ------0---00-------------00
527     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR0,QUORUM0,ACCEPTOR1,PROPOSER1. ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 34 =====================
size : 18
num_suborbits: 1
528 (*) : --0-----10--------------00-
528     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
529     : -0-----1-0--------------0-0
529     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
530     : 0-----1--0---------------00
530     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
531     : -----0--10--------------00-
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
532     : ----0--1-0--------------0-0
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
533     : ---0--1--0---------------00
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
534     : --0--1----0-------------00-
534     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
535     : -0--1-----0-------------0-0
535     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
536     : 0--1------0--------------00
536     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
537     : -----1--0-0-------------00-
537     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
538     : ----1--0--0-------------0-0
538     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
539     : ---1--0---0--------------00
539     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
540     : --1--0-----0------------00-
540     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
541     : -1--0------0------------0-0
541     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
542     : 1--0-------0-------------00
542     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : --1-----0--0------------00-
543     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
544     : -1-----0---0------------0-0
544     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
545     : 1-----0----0-------------00
545     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 36 =====================
size : 9
num_suborbits: 1
564 (*) : 0-----0---0-1------------00
564     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
565     : -0-----0--0--1----------0-0
565     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
566     : --0-----0-0---1---------00-
566     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
567     : ---0--0----01------------00
567     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
568     : ----0--0---0-1----------0-0
568     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
569     : -----0--0--0--1---------00-
569     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
570     : 0--0-----0--1------------00
570     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
571     : -0--0----0---1----------0-0
571     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
572     : --0--0---0----1---------00-
572     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
573 (*) : ---0--0----01----------0-0-
573     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
574     : ---0--0----01---------0---0
574     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
575     : ----0--0---0-1---------00--
575     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
576     : ----0--0---0-1-------0----0
576     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
577     : -----0--0--0--1-------0-0--
577     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
578     : -----0--0--0--1------0---0-
578     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
579     : 0-----0---0-1-------0----0-
579     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
580     : 0-----0---0-1------0------0
580     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
581     : -0-----0--0--1------0---0--
581     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
582     : -0-----0--0--1----0-------0
582     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
583     : --0-----0-0---1----0----0--
583     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
584     : --0-----0-0---1---0------0-
584     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
585     : 0--0-----0--1----0-------0-
585     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
586     : 0--0-----0--1---0---------0
586     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
587     : -0--0----0---1---0------0--
587     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
588     : -0--0----0---1-0----------0
588     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
589     : --0--0---0----1-0-------0--
589     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
590     : --0--0---0----10---------0-
590     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER2,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | QUORUM0 = QUORUM1)
qcost : 18




=== Prime Orbit 38 =====================
size : 9
num_suborbits: 1
591 (*) : 0--0-----0--1---00---------
591     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
592     : -0--0----0---1-0-0---------
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
593     : --0--0---0----100----------
593     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
594     : 0-----0---0-1------00------
594     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
595     : -0-----0--0--1----0-0------
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
596     : --0-----0-0---1---00-------
596     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
597     : ---0--0----01---------00---
597     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
598     : ----0--0---0-1-------0-0---
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
599     : -----0--0--0--1------00----
599     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall ACCEPTOR0,QUORUM0,QUORUM1,PROPOSER1. ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | ~leader(PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 39 =====================
size : 18
num_suborbits: 1
600 (*) : --0-0----0----------1-1-0--
600     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
601     : -0---0---0---------1---10--
601     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
602     : --00-----0----------11---0-
602     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
603     : 0----0---0--------1----1-0-
603     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
604     : -0-0-----0---------1-1----0
604     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
605     : 0---0----0--------1---1---0
605     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
606     : --0----0--0------1----1-0--
606     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
607     : -0------0-0-----1------10--
607     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
608     : --0---0---0------1---1---0-
608     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
609     : 0-------0-0----1-------1-0-
609     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
610     : -0----0---0-----1----1----0
610     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
611     : 0------0--0----1------1---0
611     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
612     : -----0-0---0-----1-1----0--
612     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
613     : ----0---0--0----1---1---0--
613     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
614     : -----00----0-----11------0-
614     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
615     : ---0----0--0---1----1----0-
615     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
616     : ----0-0----0----1-1-------0
616     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
617     : ---0---0---0---1---1------0
617     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. ~promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR1,QUORUM1) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 27




=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --------0-00-------0--0-0--
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
637     : -------0--00--------0--00--
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
638     : --------0-00------0--0---0-
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
639     : ------0---00--------0--0-0-
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
640     : -------0--00------0--0----0
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
641     : ------0---00-------0--0---0
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
642     : -----0---0-0----0-----0-0--
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
643     : ----0----0-0-----0-----00--
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
644     : -----0---0-0---0-----0---0-
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
645     : ---0-----0-0-----0-----0-0-
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
646     : ----0----0-0---0-----0----0
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
647     : ---0-----0-0----0-----0---0
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
648     : --0------00-----0--0----0--
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
649     : -0-------00------0--0---0--
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
650     : --0------00----0--0------0-
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
651     : 0--------00------0--0----0-
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
652     : -0-------00----0--0-------0
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
653     : 0--------00-----0--0------0
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2)
qcost : 18




=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0--0---0-00----1-------0--
654     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
655     : --0--0-0--00-----1------0--
655     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
656     : 0--0----0-00---1---------0-
656     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
657     : --0--00---00-----1-------0-
657     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
658     : 0--0---0--00---1----------0
658     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
659     : -0--0-0---00----1---------0
659     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
660     : -0---0-0-0-0-------1----0--
660     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : --0-0---00-0--------1---0--
661     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : 0----00--0-0------1------0-
662     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : --00----00-0--------1----0-
663     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : 0---0-0--0-0------1-------0
664     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : -0-0---0-0-0-------1------0
665     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0-0--0-00-----------1-0--
666     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
667     : -0---0--000------------10--
667     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
668     : --00--0--00----------1---0-
668     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
669     : 0----0--000------------1-0-
669     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
670     : -0-0--0--00----------1----0
670     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
671     : 0---0--0-00-----------1---0
671     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall PROPOSER2,QUORUM2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM2,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2)
qcost : 34




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : ----0---0-00----1--0----0--
672     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
673     : -----0-0--00-----1--0---0--
673     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
674     : ---0----0-00---1--0------0-
674     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
675     : -----00---00-----1--0----0-
675     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
676     : ---0---0--00---1--0-------0
676     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
677     : ----0-0---00----1--0------0
677     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
678     : -0------0-00----1-----0-0--
678     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
679     : --0----0--00-----1-----00--
679     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
680     : 0-------0-00---1-----0---0-
680     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
681     : --0---0---00-----1-----0-0-
681     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
682     : 0------0--00---1-----0----0
682     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
683     : -0----0---00----1-----0---0
683     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
684     : -----0-0-0-0----0--1----0--
684     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
685     : ----0---00-0-----0--1---0--
685     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
686     : -----00--0-0---0--1------0-
686     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
687     : ---0----00-0-----0--1----0-
687     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
688     : ----0-0--0-0---0--1-------0
688     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
689     : ---0---0-0-0----0--1------0
689     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
690     : -0---0---0-0-------1--0-0--
690     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
691     : --0-0----0-0--------1--00--
691     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
692     : 0----0---0-0------1--0---0-
692     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
693     : --00-----0-0--------1--0-0-
693     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
694     : 0---0----0-0------1--0----0
694     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
695     : -0-0-----0-0-------1--0---0
695     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
696     : --0----0-00-----0-----1-0--
696     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
697     : -0------000------0-----10--
697     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
698     : --0---0--00----0-----1---0-
698     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
699     : 0-------000------0-----1-0-
699     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
700     : -0----0--00----0-----1----0
700     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
701     : 0------0-00-----0-----1---0
701     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
702     : --0-0----00--------0--1-0--
702     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
703     : -0---0---00---------0--10--
703     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
704     : --00-----00-------0--1---0-
704     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
705     : 0----0---00---------0--1-0-
705     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
706     : -0-0-----00-------0--1----0
706     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
707     : 0---0----00--------0--1---0
707     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | promise(ACCEPTOR2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 28




=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : --00--0--000-----------0-0-
717     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
718     : -0-0--0--000----------0---0
718     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
719     : --0-0--0-000-----------00--
719     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
720     : 0---0--0-000---------0----0
720     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
721     : -0---0--0000----------0-0--
721     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
722     : 0----0--0000---------0---0-
722     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
723     : 0----00--000--------0----0-
723     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
724     : 0---0-0--000-------0------0
724     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
725     : -0---0-0-000--------0---0--
725     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
726     : -0-0---0-000------0-------0
726     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
727     : --0-0---0000-------0----0--
727     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
728     : --00----0000------0------0-
728     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
729     : 0--0----0000-----0-------0-
729     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
730     : 0--0---0-000----0---------0
730     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
731     : -0--0---0000-----0------0--
731     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
732     : -0--0-0--000---0----------0
732     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
733     : --0--0-0-000----0-------0--
733     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
734     : --0--00--000---0---------0-
734     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall PROPOSER2,QUORUM2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER2) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM2) | chosenAt(QUORUM2,PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2)
qcost : 35




=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
735 (*) : 0-------0000-----0---0---0-
735     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
736     : 0------0-000----0----0----0
736     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
737     : -0------0000-----0----0-0--
737     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
738     : -0----0--000---0------0---0
738     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
739     : --0----0-000----0------00--
739     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
740     : --0---0--000---0-------0-0-
740     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
741     : ---0----0000-----00------0-
741     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
742     : ---0---0-000----0-0-------0
742     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
743     : ----0---0000-----0-0----0--
743     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
744     : ----0-0--000---0---0------0
744     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
745     : -----0-0-000----0---0---0--
745     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
746     : -----00--000---0----0----0-
746     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
747     : 0----0---000--------00---0-
747     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
748     : 0---0----000-------0-0----0
748     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
749     : -0---0---000--------0-0-0--
749     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
750     : -0-0-----000------0---0---0
750     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
751     : --0-0----000-------0---00--
751     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
752     : --00-----000------0----0-0-
752     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall PROPOSER2,ACCEPTOR1,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0,PROPOSER0. promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | promise(ACCEPTOR1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2)
qcost : 29




=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : -00-00-00000------------0--
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
844     : 0-00-00-0000-------------0-
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
845     : 00-00-00-000--------------0
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall ACCEPTOR1,QUORUM2,PROPOSER1,QUORUM0,QUORUM1,ACCEPTOR2,ACCEPTOR0. ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR2,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR2) | start(PROPOSER1) | ~member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR1,QUORUM2) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (QUORUM0 = QUORUM1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR2 | QUORUM0 = QUORUM2)
qcost : 31



[QRM NOTE]: Time elapsed since start: 8.330 seconds

[QRM NOTE]: Time elapsed since last: 0.498 seconds

[QRM NOTE]: Peak memory: 3261383 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9]


Before reduction : 
 pending  : [2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 1 among pending : [2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 3 with phase True at level 1

After decision at level 1
 pending : [2, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3]


New level: 2
 pending : [2, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3]


Before reduction : 
 pending  : [2, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, 4294967296), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 2 among pending : [2, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, 4294967296), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 4 with phase True at level 2

After decision at level 2
 pending : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4]


New level: 3
 pending : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, 4294967296), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, 536870912), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 3 among pending : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, 536870912), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 3

After decision at level 3
 pending : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27]


New level: 4
 pending : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27]


Before reduction : 
 pending  : [2, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, 536870912), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {2, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [7, 10, 23, 24, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27]


Before reduction : 
 pending  : [7, 10, 23, 24, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [7, 10, 23, 24, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27]


Solution : [9, 3, 4, 27] has cost 18.


Decide in level 4 among pending : [7, 10, 23, 24, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [7, 10, 23, 24, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28]


New level: 5
 pending : [7, 10, 23, 24, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28]


Before reduction : 
 pending  : [7, 10, 23, 24, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 268435456), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [7, 10, 23, 24, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28]


Solution : [9, 3, 4, 27, 28] has cost 22.


Decide in level 5 among pending : [7, 10, 23, 24, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 268435456), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [7, 10, 23, 24, 29, 30, 32, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]


New level: 6
 pending : [7, 10, 23, 24, 29, 30, 32, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]


Before reduction : 
 pending  : [7, 10, 23, 24, 29, 30, 32, 34, 36, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 268435456), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {34, 36, 30}

After reduction : 
 pending  : [7, 10, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]


Before reduction : 
 pending  : [7, 10, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [7, 10, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]


Solution : [9, 3, 4, 27, 28, 33] has cost 35.


Decide in level 6 among pending : [7, 10, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [7, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33, 10]


New level: 7
 pending : [7, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33, 10]


Before reduction : 
 pending  : [7, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {32, 37, 7, 39, 41, 42, 43, 45, 46, 51, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 33, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 33, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 33, 10]


Solution : [9, 3, 4, 27, 28, 33, 10] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [9, 3, 4, 27, 28, 33, 10]

After backtrack at level 7
 pending : [7, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [7, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]


Before reduction : 
 pending  : [7, 23, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]

Essensial at level 7 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {32, 37, 7, 39, 41, 42, 43, 45, 46, 51, 24, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 33, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 33, 23]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 33, 23]


Solution : [9, 3, 4, 27, 28, 33, 23] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [9, 3, 4, 27, 28, 33, 23]

After backtrack at level 7
 pending : [23, 7, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]


Before backtrack at level 6
 pending : [23, 7, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 33]

After backtrack at level 6
 pending : [23, 7, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [23, 7, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28]


Before reduction : 
 pending  : [23, 7, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 7, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28]


Solution : [9, 3, 4, 27, 28] has cost 22.


Decide in level 6 among pending : [23, 7, 24, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28, 24]


New level: 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24]


Solution : [9, 3, 4, 27, 28, 24] has cost 29.


Decide in level 7 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24, 23]


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24, 23]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 24, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 24, 23]


Solution : [9, 3, 4, 27, 28, 24, 23] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 28, 24, 23]

After backtrack at level 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 28, 24]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 24, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 24, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 24, 10]


Solution : [9, 3, 4, 27, 28, 24, 10] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 28, 24, 10]

After backtrack at level 8
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 24]


Before backtrack at level 7
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 28, 24]

After backtrack at level 7
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28]


Before reduction : 
 pending  : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28]


Solution : [9, 3, 4, 27, 28] has cost 22.


Decide in level 7 among pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28, 10]


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28, 10]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 10]


Solution : [9, 3, 4, 27, 28, 10] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 28, 10]

After backtrack at level 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 28]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 28, 23]


Solution : [9, 3, 4, 27, 28, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 28, 23]

After backtrack at level 8
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36]
 solution : [9, 3, 4, 27, 28]


Before backtrack at level 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36]
 solution : [9, 3, 4, 27, 28]

After backtrack at level 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28]


Before backtrack at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27, 28]

After backtrack at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24]
 solution : [9, 3, 4, 27, 28]


Before backtrack at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24]
 solution : [9, 3, 4, 27, 28]

After backtrack at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33]
 solution : [9, 3, 4, 27, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33]
 solution : [9, 3, 4, 27]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33]
 solution : [9, 3, 4, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33]
 solution : [9, 3, 4, 27]


Solution : [9, 3, 4, 27] has cost 18.


Decide in level 5 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24]
 solution : [9, 3, 4, 27, 33]


New level: 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24]
 solution : [9, 3, 4, 27, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24]
 solution : [9, 3, 4, 27, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {34, 36, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24]
 solution : [9, 3, 4, 27, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24]
 solution : [9, 3, 4, 27, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24]
 solution : [9, 3, 4, 27, 33]


Solution : [9, 3, 4, 27, 33] has cost 31.


Before backtrack at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24]
 solution : [9, 3, 4, 27, 33]

After backtrack at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 36]
 solution : [9, 3, 4, 27, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 36]
 solution : [9, 3, 4, 27]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 36]
 solution : [9, 3, 4, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 36]
 solution : [9, 3, 4, 27]


Solution : [9, 3, 4, 27] has cost 18.


Decide in level 6 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 36]
 solution : [9, 3, 4, 27, 24]


New level: 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 36]
 solution : [9, 3, 4, 27, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 36]
 solution : [9, 3, 4, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24]


Solution : [9, 3, 4, 27, 24] has cost 25.


Decide in level 7 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24, 23]


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24, 23]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 24, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 24, 23]


Solution : [9, 3, 4, 27, 24, 23] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 24, 23]

After backtrack at level 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 27, 24]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 24, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 24, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 24, 10]


Solution : [9, 3, 4, 27, 24, 10] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 24, 10]

After backtrack at level 8
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 24]


Before backtrack at level 7
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 27, 24]

After backtrack at level 7
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27]


Before reduction : 
 pending  : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27]


Solution : [9, 3, 4, 27] has cost 18.


Decide in level 7 among pending : [10, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 10]


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 10]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 10]


Solution : [9, 3, 4, 27, 10] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 10]

After backtrack at level 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 23]
 solution : [9, 3, 4, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 27, 23]


Solution : [9, 3, 4, 27, 23] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 4, 27, 23]

After backtrack at level 8
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36]
 solution : [9, 3, 4, 27]


Before backtrack at level 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36]
 solution : [9, 3, 4, 27]

After backtrack at level 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27]


Before backtrack at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10]
 solution : [9, 3, 4, 27]

After backtrack at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24]
 solution : [9, 3, 4, 27]


Before backtrack at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24]
 solution : [9, 3, 4, 27]

After backtrack at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33]
 solution : [9, 3, 4, 27]


Before backtrack at level 4
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33]
 solution : [9, 3, 4, 27]

After backtrack at level 4
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 27]


Invert decision for 27 at level 3


New level: 4
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 4 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 33, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 33 with phase True at level 4

After decision at level 4
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 33]


New level: 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 30, 34, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : {34, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 33]


Solution : [9, 3, 4, 33] has cost 27.


Before backtrack at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28]
 solution : [9, 3, 4, 33]

After backtrack at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28, 30, 34]
 solution : [9, 3, 4, 33]


Invert decision for 33 at level 4


New level: 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28, 30, 34]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28, 30, 34]
 solution : [9, 3, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 8192), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28, 30, 34]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 5 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 28, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28]


New level: 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28]


Solution : [9, 3, 4, 28] has cost 18.


Decide in level 6 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28, 14]


New level: 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28, 14]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {2, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34]
 solution : [9, 3, 4, 28, 14]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34]
 solution : [9, 3, 4, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 134217728), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34]
 solution : [9, 3, 4, 28, 14]


Solution : [9, 3, 4, 28, 14] has cost 25.


Before backtrack at level 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34]
 solution : [9, 3, 4, 28, 14]

After backtrack at level 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]


Solution : [9, 3, 4, 28] has cost 18.


Decide in level 7 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 36, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 7

After decision at level 7
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 36]


New level: 8
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 36]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 36]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 67108864), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, -1), (34, 2048), (35, -1), (36, -1), (37, 16777216), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 36]


Solution : [9, 3, 4, 28, 36] has cost 32.


Before backtrack at level 8
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 36]

After backtrack at level 8
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 36]


Invert decision for 36 at level 7


New level: 8
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 67108864), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, -1), (34, 2048), (35, -1), (36, -1), (37, 16777216), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]


Solution : [9, 3, 4, 28] has cost 18.


Decide in level 8 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 24, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 24]


New level: 9
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 134217728), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {34, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 24]


Solution : [9, 3, 4, 28, 24] has cost 25.


Before backtrack at level 9
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 24]

After backtrack at level 9
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28]


Solution : [9, 3, 4, 28] has cost 18.


Decide in level 9 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 19, 20, 21, 22, 26, 38, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28, 19]


New level: 10
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28, 19]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38, 30, 34]
 solution : [9, 3, 4, 28, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34]
 solution : [9, 3, 4, 28, 19]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34]
 solution : [9, 3, 4, 28, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34]
 solution : [9, 3, 4, 28, 19]


Solution : [9, 3, 4, 28, 19] has cost 25.


Before backtrack at level 10
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34]
 solution : [9, 3, 4, 28, 19]

After backtrack at level 10
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]


Before reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28]


Solution : [9, 3, 4, 28] has cost 18.


Decide in level 10 among pending : [23, 7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 23]


New level: 11
 pending : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 23]


Before reduction : 
 pending  : [7, 29, 32, 37, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 262144), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 23]


Before reduction : 
 pending  : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 262144), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 23]


Solution : [9, 3, 4, 28, 23] has cost 25.


Before backtrack at level 11
 pending : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 23]

After backtrack at level 11
 pending : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34]
 solution : [9, 3, 4, 28, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34]
 solution : [9, 3, 4, 28]


Before reduction : 
 pending  : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 10, 30, 34]
 solution : [9, 3, 4, 28]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 10]


Before reduction : 
 pending  : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 10]


Solution : [9, 3, 4, 28, 10] has cost 22.


Decide in level 11 among pending : [37, 2, 15, 16, 17, 18, 20, 21, 22, 26, 38]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [37, 2, 15, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 10, 16]


New level: 12
 pending : [37, 2, 15, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 10, 16]


Before reduction : 
 pending  : [37, 2, 15, 17, 18, 20, 21, 22, 26, 38]
 solution : [9, 3, 4, 28, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, 0), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 15, 20, 21, 26, 38]
 solution : [9, 3, 4, 28, 10, 16]


Before reduction : 
 pending  : [37, 15, 20, 21, 26, 38]
 solution : [9, 3, 4, 28, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, 0), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 15, 20, 21, 26, 38]
 solution : [9, 3, 4, 28, 10, 16]


Solution : [9, 3, 4, 28, 10, 16] has cost 31.


Before backtrack at level 12
 pending : [37, 15, 20, 21, 26, 38]
 solution : [9, 3, 4, 28, 10, 16]

After backtrack at level 12
 pending : [37, 15, 20, 21, 26, 38, 2, 17, 18, 22]
 solution : [9, 3, 4, 28, 10, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [37, 15, 20, 21, 26, 38, 2, 17, 18, 22]
 solution : [9, 3, 4, 28, 10]


Before reduction : 
 pending  : [37, 15, 20, 21, 26, 38, 2, 17, 18, 22]
 solution : [9, 3, 4, 28, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 15, 20, 21, 26, 38, 2, 17, 18, 22]
 solution : [9, 3, 4, 28, 10]


Solution : [9, 3, 4, 28, 10] has cost 22.


Decide in level 12 among pending : [37, 15, 20, 21, 26, 38, 2, 17, 18, 22]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [37, 20, 21, 26, 38, 2, 17, 18, 22]
 solution : [9, 3, 4, 28, 10, 15]


New level: 13
 pending : [37, 20, 21, 26, 38, 2, 17, 18, 22]
 solution : [9, 3, 4, 28, 10, 15]


Before reduction : 
 pending  : [37, 20, 21, 26, 38, 2, 17, 18, 22]
 solution : [9, 3, 4, 28, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, 0), (19, -1), (20, 0), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 17, 22]
 solution : [9, 3, 4, 28, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 17, 22]
 solution : [9, 3, 4, 28, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, 0), (19, -1), (20, 0), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 17, 22]
 solution : [9, 3, 4, 28, 10, 15]


Solution : [9, 3, 4, 28, 10, 15] has cost 29.


Before backtrack at level 13
 pending : [37, 26, 38, 2, 17, 22]
 solution : [9, 3, 4, 28, 10, 15]

After backtrack at level 13
 pending : [37, 26, 38, 2, 17, 22, 20, 21, 18]
 solution : [9, 3, 4, 28, 10, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [37, 26, 38, 2, 17, 22, 20, 21, 18]
 solution : [9, 3, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 17, 22, 20, 21, 18]
 solution : [9, 3, 4, 28, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 17, 22, 20, 21, 18]
 solution : [9, 3, 4, 28, 10]


Solution : [9, 3, 4, 28, 10] has cost 22.


Decide in level 13 among pending : [37, 26, 38, 2, 17, 22, 20, 21, 18]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 2, 22, 20, 21, 18]
 solution : [9, 3, 4, 28, 10, 17]


New level: 14
 pending : [37, 26, 38, 2, 22, 20, 21, 18]
 solution : [9, 3, 4, 28, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 20, 21, 18]
 solution : [9, 3, 4, 28, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 20, 21]
 solution : [9, 3, 4, 28, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 20, 21]
 solution : [9, 3, 4, 28, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 20, 21]
 solution : [9, 3, 4, 28, 10, 17]


Solution : [9, 3, 4, 28, 10, 17] has cost 31.


Before backtrack at level 14
 pending : [37, 26, 38, 20, 21]
 solution : [9, 3, 4, 28, 10, 17]

After backtrack at level 14
 pending : [37, 26, 38, 20, 21, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [37, 26, 38, 20, 21, 2, 22, 18]
 solution : [9, 3, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 20, 21, 2, 22, 18]
 solution : [9, 3, 4, 28, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 20, 21, 2, 22, 18]
 solution : [9, 3, 4, 28, 10]


Solution : [9, 3, 4, 28, 10] has cost 22.


Decide in level 14 among pending : [37, 26, 38, 20, 21, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 20]


New level: 15
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 28, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 28, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 28, 10, 20]


Solution : [9, 3, 4, 28, 10, 20] has cost 29.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 28, 10, 20]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 28, 10, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 28, 10]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 21]


Solution : [9, 3, 4, 28, 10, 21] has cost 29.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 28, 10, 21]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 4, 28, 10]


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 4, 28, 10]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 4, 28, 10]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 4, 28, 10]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 4, 28, 10]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 4, 28, 10]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 28, 10]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 28, 10]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16]
 solution : [9, 3, 4, 28]


Before backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16]
 solution : [9, 3, 4, 28]

After backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23]
 solution : [9, 3, 4, 28]


Before backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23]
 solution : [9, 3, 4, 28]

After backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19]
 solution : [9, 3, 4, 28]


Before backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19]
 solution : [9, 3, 4, 28]

After backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24]
 solution : [9, 3, 4, 28]


Before backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24]
 solution : [9, 3, 4, 28]

After backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24, 36]
 solution : [9, 3, 4, 28]


Before backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24, 36]
 solution : [9, 3, 4, 28]

After backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24, 36, 14]
 solution : [9, 3, 4, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24, 36, 14]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24, 36, 14]
 solution : [9, 3, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24, 36, 14]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 6 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 24, 36, 14]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 36, 14]
 solution : [9, 3, 4, 24]


New level: 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 36, 14]
 solution : [9, 3, 4, 24]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 30, 34, 16, 23, 19, 36, 14]
 solution : [9, 3, 4, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, 268435456), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {34, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 16, 23, 19, 36, 14]
 solution : [9, 3, 4, 24]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 16, 23, 19, 36, 14]
 solution : [9, 3, 4, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 16, 23, 19, 36, 14]
 solution : [9, 3, 4, 24]


Solution : [9, 3, 4, 24] has cost 21.


Decide in level 7 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 16, 23, 19, 36, 14]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 16, 23, 19, 36]
 solution : [9, 3, 4, 24, 14]


New level: 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 16, 23, 19, 36]
 solution : [9, 3, 4, 24, 14]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 16, 23, 19, 36]
 solution : [9, 3, 4, 24, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {2, 36, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 14]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 14]


Solution : [9, 3, 4, 24, 14] has cost 28.


Before backtrack at level 8
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 14]

After backtrack at level 8
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 36]
 solution : [9, 3, 4, 24, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 36]
 solution : [9, 3, 4, 24]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 36]
 solution : [9, 3, 4, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 36]
 solution : [9, 3, 4, 24]


Solution : [9, 3, 4, 24] has cost 21.


Decide in level 8 among pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 36]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 19]


New level: 9
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 19]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {2, 36, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 19]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 19]


Solution : [9, 3, 4, 24, 19] has cost 28.


Before backtrack at level 9
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23]
 solution : [9, 3, 4, 24, 19]

After backtrack at level 9
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24]


Solution : [9, 3, 4, 24] has cost 21.


Decide in level 9 among pending : [37, 10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 37]


New level: 10
 pending : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 37]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 131072), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {36}

After reduction : 
 pending  : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 24, 37]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 24, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 131072), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 24, 37]


Solution : [9, 3, 4, 24, 37] has cost 39.


Before backtrack at level 10
 pending : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 24, 37]

After backtrack at level 10
 pending : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 4194304), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24]


Solution : [9, 3, 4, 24] has cost 21.


Decide in level 10 among pending : [10, 7, 29, 32, 39, 41, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 41]


New level: 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 41]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 41]


Before reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 41]


Solution : [9, 3, 4, 24, 41] has cost 39.


Before backtrack at level 11
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 41]

After backtrack at level 11
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24]


Before reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 65536), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24]


Solution : [9, 3, 4, 24] has cost 21.


Decide in level 11 among pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24, 10]


New level: 12
 pending : [23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24, 10]


Before reduction : 
 pending  : [23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 16777216), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 39, 7, 42, 43, 45, 46, 51, 23, 29}

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 10]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 10]


Solution : [9, 3, 4, 24, 10] has cost 25.


Before backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 10]

After backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 23]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 23]


Solution : [9, 3, 4, 24, 23] has cost 28.


Before backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36]
 solution : [9, 3, 4, 24, 23]

After backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24]


Before backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 4, 24]

After backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 24]


Before backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 4, 24]

After backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41]
 solution : [9, 3, 4, 24]


Before backtrack at level 9
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41]
 solution : [9, 3, 4, 24]

After backtrack at level 9
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37]
 solution : [9, 3, 4, 24]


Before backtrack at level 8
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37]
 solution : [9, 3, 4, 24]

After backtrack at level 8
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19]
 solution : [9, 3, 4, 24]


Before backtrack at level 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19]
 solution : [9, 3, 4, 24]

After backtrack at level 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34, 14]
 solution : [9, 3, 4, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34, 14]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34, 14]
 solution : [9, 3, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34, 14]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 7 among pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34, 14]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34]
 solution : [9, 3, 4, 14]


New level: 8
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34]
 solution : [9, 3, 4, 14]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 19, 30, 34]
 solution : [9, 3, 4, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 268435456), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {2, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14]


Before reduction : 
 pending  : [36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14]


Solution : [9, 3, 4, 14] has cost 21.


Decide in level 8 among pending : [36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14, 23]


New level: 9
 pending : [36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14, 23]


Before reduction : 
 pending  : [36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 14, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 14, 23]


Solution : [9, 3, 4, 14, 23] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [9, 3, 4, 14, 23]

After backtrack at level 9
 pending : [36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14]


Before reduction : 
 pending  : [36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 3, 4, 14]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 14, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 14, 10]


Solution : [9, 3, 4, 14, 10] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [9, 3, 4, 14, 10]

After backtrack at level 9
 pending : [10, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34]
 solution : [9, 3, 4, 14]


Before backtrack at level 8
 pending : [10, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34]
 solution : [9, 3, 4, 14]

After backtrack at level 8
 pending : [10, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [10, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [10, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 8 among pending : [10, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 8

After decision at level 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4, 36]


New level: 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4, 36]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4, 36]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 16777216), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4, 36]


Solution : [9, 3, 4, 36] has cost 28.


Before backtrack at level 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4, 36]

After backtrack at level 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4, 36]


Invert decision for 36 at level 8


New level: 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 16777216), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 9 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 4, 19]


New level: 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 4, 19]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 4, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, 134217728), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19]


Solution : [9, 3, 4, 19] has cost 21.


Decide in level 10 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19, 10]


New level: 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19, 10]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 19, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 19, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 19, 10]


Solution : [9, 3, 4, 19, 10] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [9, 3, 4, 19, 10]

After backtrack at level 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 23]
 solution : [9, 3, 4, 19]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 4, 19, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 4, 19, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 4, 19, 23]


Solution : [9, 3, 4, 19, 23] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [9, 3, 4, 19, 23]

After backtrack at level 11
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34]
 solution : [9, 3, 4, 19]


Before backtrack at level 10
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34]
 solution : [9, 3, 4, 19]

After backtrack at level 10
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 4, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 4]


Solution : [9, 3, 4] has cost 14.


Decide in level 10 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 4, 23]


New level: 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 4, 23]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 1048576), (21, 32768), (22, 139264), (23, 67108864), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 33554432), (38, 524288), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 23]


Solution : [9, 3, 4, 23] has cost 21.


Decide in level 11 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 23, 16]


New level: 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 23, 16]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, 0), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 23, 16]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, 0), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 23, 16]


Solution : [9, 3, 4, 23, 16] has cost 30.


Before backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 23, 16]

After backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 23, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 23]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 23]


Solution : [9, 3, 4, 23] has cost 21.


Decide in level 12 among pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 4, 23, 15]


New level: 13
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 4, 23, 15]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 4, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, 0), (19, -1), (20, 0), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 23, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, 0), (19, -1), (20, 0), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 23, 15]


Solution : [9, 3, 4, 23, 15] has cost 28.


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 23, 15]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 23, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 23]


Solution : [9, 3, 4, 23] has cost 21.


Decide in level 13 among pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 4, 23, 17]


New level: 14
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 4, 23, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 4, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 23, 17]


Before reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 23, 17]


Solution : [9, 3, 4, 23, 17] has cost 30.


Before backtrack at level 14
 pending : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 23, 17]

After backtrack at level 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 23, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 23]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 23]


Solution : [9, 3, 4, 23] has cost 21.


Decide in level 14 among pending : [37, 26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 23, 20]


New level: 15
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 23, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 23, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 23, 20]


Solution : [9, 3, 4, 23, 20] has cost 28.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 23, 20]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 23, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 23]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 23, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 23, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 23, 21]


Solution : [9, 3, 4, 23, 21] has cost 28.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 23, 21]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 4, 23]


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 4, 23]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 4, 23]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 4, 23]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 4, 23]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 4, 23]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 23]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 23]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 16]
 solution : [9, 3, 4, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 16]
 solution : [9, 3, 4]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 16]
 solution : [9, 3, 4]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 4, 10]


Solution : [9, 3, 4, 10] has cost 18.


Decide in level 11 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 10, 16]


New level: 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, 4194304), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, 0), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, 0), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 10, 16]


Solution : [9, 3, 4, 10, 16] has cost 27.


Before backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 4, 10, 16]

After backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 10, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 4, 10]


Solution : [9, 3, 4, 10] has cost 18.


Decide in level 12 among pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 4, 10, 15]


New level: 13
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 4, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 4, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 2097152), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, 0), (19, -1), (20, 0), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, 0), (19, -1), (20, 0), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 10, 15]


Solution : [9, 3, 4, 10, 15] has cost 25.


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 4, 10, 15]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 10, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 524288), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 4, 10]


Solution : [9, 3, 4, 10] has cost 18.


Decide in level 13 among pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 4, 10, 17]


New level: 14
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 4, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 4, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 8192), (21, 8192), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 10, 17]


Solution : [9, 3, 4, 10, 17] has cost 27.


Before backtrack at level 14
 pending : [37, 26, 38, 21, 20]
 solution : [9, 3, 4, 10, 17]

After backtrack at level 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 10, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 4, 10]


Solution : [9, 3, 4, 10] has cost 18.


Decide in level 14 among pending : [37, 26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 10, 20]


New level: 15
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 4, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, 1048576), (21, 32768), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 10, 20]


Solution : [9, 3, 4, 10, 20] has cost 25.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 4, 10, 20]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 10, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 4, 10]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 33280), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 10, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 10, 21]


Solution : [9, 3, 4, 10, 21] has cost 25.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 4, 10, 21]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 4, 10]


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 4, 10]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 4, 10]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 4, 10]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 4, 10]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 4, 10]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 10]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 4, 10]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 3, 4]


Before backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 3, 4]

After backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23]
 solution : [9, 3, 4]


Before backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23]
 solution : [9, 3, 4]

After backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19]
 solution : [9, 3, 4]


Before backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19]
 solution : [9, 3, 4]

After backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36]
 solution : [9, 3, 4]


Before backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36]
 solution : [9, 3, 4]

After backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14]
 solution : [9, 3, 4]


Before backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14]
 solution : [9, 3, 4]

After backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24]
 solution : [9, 3, 4]


Before backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24]
 solution : [9, 3, 4]

After backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28]
 solution : [9, 3, 4]


Before backtrack at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28]
 solution : [9, 3, 4]

After backtrack at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28, 33]
 solution : [9, 3, 4]


Before backtrack at level 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28, 33]
 solution : [9, 3, 4]

After backtrack at level 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28, 33, 27]
 solution : [9, 3, 4]


Invert decision for 4 at level 2


New level: 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28, 33, 27]
 solution : [9, 3]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28, 33, 27]
 solution : [9, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 16384), (19, -1), (20, -1), (21, -1), (22, 67584), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28, 33, 27]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 3 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 28, 33, 27]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 33, 27]
 solution : [9, 3, 28]


New level: 4
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 33, 27]
 solution : [9, 3, 28]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 33, 27]
 solution : [9, 3, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 33, 27]
 solution : [9, 3, 28]


Solution : [9, 3, 28] has cost 15.


Decide in level 4 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 33, 27]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 33 with phase True at level 4

After decision at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 27]
 solution : [9, 3, 28, 33]


New level: 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 27]
 solution : [9, 3, 28, 33]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 19, 36, 14, 24, 27]
 solution : [9, 3, 28, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {34, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27]
 solution : [9, 3, 28, 33]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27]
 solution : [9, 3, 28, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27]
 solution : [9, 3, 28, 33]


Solution : [9, 3, 28, 33] has cost 28.


Before backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27]
 solution : [9, 3, 28, 33]

After backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27, 30, 34]
 solution : [9, 3, 28, 33]


Invert decision for 33 at level 4


New level: 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27, 30, 34]
 solution : [9, 3, 28]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27, 30, 34]
 solution : [9, 3, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 16384), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27, 30, 34]
 solution : [9, 3, 28]


Solution : [9, 3, 28] has cost 15.


Decide in level 5 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 27, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 30, 34]
 solution : [9, 3, 28, 27]


New level: 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 30, 34]
 solution : [9, 3, 28, 27]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 19, 36, 14, 24, 30, 34]
 solution : [9, 3, 28, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : {2, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 24, 30, 34]
 solution : [9, 3, 28, 27]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 24, 30, 34]
 solution : [9, 3, 28, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 24, 30, 34]
 solution : [9, 3, 28, 27]


Solution : [9, 3, 28, 27] has cost 19.


Decide in level 6 among pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 24, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 24]


New level: 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 24]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 27, 24]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 27, 24]


Solution : [9, 3, 28, 27, 24] has cost 26.


Before backtrack at level 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 27, 24]

After backtrack at level 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27]


Solution : [9, 3, 28, 27] has cost 19.


Decide in level 7 among pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 10]


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 10]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 28, 27, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 28, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 28, 27, 10]


Solution : [9, 3, 28, 27, 10] has cost 23.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 28, 27, 10]

After backtrack at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 3, 28, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 28, 27, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 28, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 28, 27, 23]


Solution : [9, 3, 28, 27, 23] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 28, 27, 23]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34]
 solution : [9, 3, 28, 27]


Before backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34]
 solution : [9, 3, 28, 27]

After backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10]
 solution : [9, 3, 28, 27]


Before backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10]
 solution : [9, 3, 28, 27]

After backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 24]
 solution : [9, 3, 28, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 24]
 solution : [9, 3, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 24]
 solution : [9, 3, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 24]
 solution : [9, 3, 28]


Solution : [9, 3, 28] has cost 15.


Decide in level 6 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 24]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]
 solution : [9, 3, 28, 14]


New level: 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]
 solution : [9, 3, 28, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]
 solution : [9, 3, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : {2, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24]
 solution : [9, 3, 28, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24]
 solution : [9, 3, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24]
 solution : [9, 3, 28, 14]


Solution : [9, 3, 28, 14] has cost 22.


Decide in level 7 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10]
 solution : [9, 3, 28, 14, 24]


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10]
 solution : [9, 3, 28, 14, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10]
 solution : [9, 3, 28, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {34, 36, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 28, 14, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 28, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 28, 14, 24]


Solution : [9, 3, 28, 14, 24] has cost 29.


Before backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 28, 14, 24]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14]


Solution : [9, 3, 28, 14] has cost 22.


Decide in level 8 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14, 23]


New level: 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14, 23]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 28, 14, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 28, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 28, 14, 23]


Solution : [9, 3, 28, 14, 23] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [9, 3, 28, 14, 23]

After backtrack at level 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 36, 30, 34]
 solution : [9, 3, 28, 14]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 28, 14, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 28, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 28, 14, 10]


Solution : [9, 3, 28, 14, 10] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [9, 3, 28, 14, 10]

After backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34]
 solution : [9, 3, 28, 14]


Before backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34]
 solution : [9, 3, 28, 14]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23]
 solution : [9, 3, 28, 14]


Before backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23]
 solution : [9, 3, 28, 14]

After backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]
 solution : [9, 3, 28, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]
 solution : [9, 3, 28]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]
 solution : [9, 3, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]
 solution : [9, 3, 28]


Solution : [9, 3, 28] has cost 15.


Decide in level 7 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 24]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 3, 28, 24]


New level: 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 3, 28, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 3, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 536870912), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {34, 30}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 3, 28, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 3, 28, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 3, 28, 24]


Solution : [9, 3, 28, 24] has cost 22.


Decide in level 8 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 19]


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {2, 36, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 24, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 24, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 24, 19]


Solution : [9, 3, 28, 24, 19] has cost 29.


Before backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 28, 24, 19]

After backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24]


Solution : [9, 3, 28, 24] has cost 22.


Decide in level 9 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 41]


New level: 10
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 41]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 41]


Before reduction : 
 pending  : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 41]


Solution : [9, 3, 28, 24, 41] has cost 40.


Before backtrack at level 10
 pending : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 41]

After backtrack at level 10
 pending : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24]


Before reduction : 
 pending  : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24]


Solution : [9, 3, 28, 24] has cost 22.


Decide in level 10 among pending : [10, 37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24, 10]


New level: 11
 pending : [37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24, 10]


Before reduction : 
 pending  : [37, 23, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 39, 7, 42, 43, 45, 46, 51, 23, 29}

After reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 10]


Before reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 10]


Solution : [9, 3, 28, 24, 10] has cost 26.


Before backtrack at level 11
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 10]

After backtrack at level 11
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24]


Before reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 23]


Before reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 23]


Solution : [9, 3, 28, 24, 23] has cost 29.


Before backtrack at level 11
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 24, 23]

After backtrack at level 11
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24]


Before backtrack at level 10
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 28, 24]

After backtrack at level 10
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 28, 24]


Before backtrack at level 9
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 28, 24]

After backtrack at level 9
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41]
 solution : [9, 3, 28, 24]


Before backtrack at level 8
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41]
 solution : [9, 3, 28, 24]

After backtrack at level 8
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 19]
 solution : [9, 3, 28, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 19]
 solution : [9, 3, 28]


Before reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 19]
 solution : [9, 3, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 19]
 solution : [9, 3, 28]


Solution : [9, 3, 28] has cost 15.


Decide in level 8 among pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 19]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]


New level: 9
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]


Before reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]


Before reduction : 
 pending  : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]


Solution : [9, 3, 28, 19] has cost 22.


Decide in level 9 among pending : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19, 23]


New level: 10
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19, 23]


Before reduction : 
 pending  : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 36, 37, 7, 39, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 28, 19, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 28, 19, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 28, 19, 23]


Solution : [9, 3, 28, 19, 23] has cost 29.


Before backtrack at level 10
 pending : []
 solution : [9, 3, 28, 19, 23]

After backtrack at level 10
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]


Before reduction : 
 pending  : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 28, 19]

Essensial at level 10 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 36, 37, 7, 39, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 28, 19, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 28, 19, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 28, 19, 10]


Solution : [9, 3, 28, 19, 10] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [9, 3, 28, 19, 10]

After backtrack at level 10
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 28, 19]


Before backtrack at level 9
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 28, 19]

After backtrack at level 9
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 28, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 28]


Before reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 28]


Solution : [9, 3, 28] has cost 15.


Decide in level 9 among pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 28, 10]


New level: 10
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 28, 10]


Before reduction : 
 pending  : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 28, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 134217728), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 10]


Before reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 28, 10]


Solution : [9, 3, 28, 10] has cost 19.


Decide in level 10 among pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 28, 10, 16]


New level: 11
 pending : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 28, 10, 16]


Before reduction : 
 pending  : [37, 36, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 28, 10, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 36, 26, 38, 21, 20, 15]
 solution : [9, 3, 28, 10, 16]


Before reduction : 
 pending  : [37, 36, 26, 38, 21, 20, 15]
 solution : [9, 3, 28, 10, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 36, 26, 38, 21, 20, 15]
 solution : [9, 3, 28, 10, 16]


Solution : [9, 3, 28, 10, 16] has cost 28.


Before backtrack at level 11
 pending : [37, 36, 26, 38, 21, 20, 15]
 solution : [9, 3, 28, 10, 16]

After backtrack at level 11
 pending : [37, 36, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 10, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [37, 36, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 10]


Before reduction : 
 pending  : [37, 36, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 36, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 10]


Solution : [9, 3, 28, 10] has cost 19.


Decide in level 11 among pending : [37, 36, 26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [37, 36, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 28, 10, 15]


New level: 12
 pending : [37, 36, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 28, 10, 15]


Before reduction : 
 pending  : [37, 36, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 28, 10, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {20, 18, 36, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 10, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 10, 15]


Solution : [9, 3, 28, 10, 15] has cost 26.


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 10, 15]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 17, 36, 21, 20, 18]
 solution : [9, 3, 28, 10, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [37, 26, 38, 2, 22, 17, 36, 21, 20, 18]
 solution : [9, 3, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 36, 21, 20, 18]
 solution : [9, 3, 28, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 36, 21, 20, 18]
 solution : [9, 3, 28, 10]


Solution : [9, 3, 28, 10] has cost 19.


Decide in level 12 among pending : [37, 26, 38, 2, 22, 17, 36, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 2, 22, 36, 21, 20, 18]
 solution : [9, 3, 28, 10, 17]


New level: 13
 pending : [37, 26, 38, 2, 22, 36, 21, 20, 18]
 solution : [9, 3, 28, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 36, 21, 20, 18]
 solution : [9, 3, 28, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 36, 21, 20]
 solution : [9, 3, 28, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 36, 21, 20]
 solution : [9, 3, 28, 10, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 36, 21, 20]
 solution : [9, 3, 28, 10, 17]


Solution : [9, 3, 28, 10, 17] has cost 28.


Before backtrack at level 13
 pending : [37, 26, 38, 36, 21, 20]
 solution : [9, 3, 28, 10, 17]

After backtrack at level 13
 pending : [37, 26, 38, 36, 21, 20, 2, 22, 18]
 solution : [9, 3, 28, 10, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [37, 26, 38, 36, 21, 20, 2, 22, 18]
 solution : [9, 3, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 36, 21, 20, 2, 22, 18]
 solution : [9, 3, 28, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 36, 21, 20, 2, 22, 18]
 solution : [9, 3, 28, 10]


Solution : [9, 3, 28, 10] has cost 19.


Decide in level 13 among pending : [37, 26, 38, 36, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 36, 21, 2, 22, 18]
 solution : [9, 3, 28, 10, 20]


New level: 14
 pending : [37, 26, 38, 36, 21, 2, 22, 18]
 solution : [9, 3, 28, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 36, 21, 2, 22, 18]
 solution : [9, 3, 28, 10, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 36, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 10, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 10, 20]


Solution : [9, 3, 28, 10, 20] has cost 26.


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 10, 20]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 36, 21, 18]
 solution : [9, 3, 28, 10, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [37, 26, 38, 2, 22, 36, 21, 18]
 solution : [9, 3, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 36, 21, 18]
 solution : [9, 3, 28, 10]

Essensial at level 14 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {36}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 10, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 10, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 10, 21]


Solution : [9, 3, 28, 10, 21] has cost 26.


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 10, 21]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 36]
 solution : [9, 3, 28, 10]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 36]
 solution : [9, 3, 28, 10]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20]
 solution : [9, 3, 28, 10]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20]
 solution : [9, 3, 28, 10]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17]
 solution : [9, 3, 28, 10]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17]
 solution : [9, 3, 28, 10]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 28, 10]


Before backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 28, 10]

After backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9, 3, 28, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9, 3, 28]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9, 3, 28]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 28, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 28, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 28, 23]


Solution : [9, 3, 28, 23] has cost 22.


Decide in level 10 among pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 28, 23, 16]


New level: 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 28, 23, 16]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 28, 23, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 28, 23, 16]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 28, 23, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 28, 23, 16]


Solution : [9, 3, 28, 23, 16] has cost 31.


Before backtrack at level 11
 pending : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 28, 23, 16]

After backtrack at level 11
 pending : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 23, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 23]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 28, 23]


Solution : [9, 3, 28, 23] has cost 22.


Decide in level 11 among pending : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 11

After decision at level 11
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18, 17]
 solution : [9, 3, 28, 23, 15]


New level: 12
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18, 17]
 solution : [9, 3, 28, 23, 15]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 2, 22, 18, 17]
 solution : [9, 3, 28, 23, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {20, 18, 36, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 23, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 23, 15]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 23, 15]


Solution : [9, 3, 28, 23, 15] has cost 29.


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 28, 23, 15]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 28, 23, 15]


Invert decision for 15 at level 11


New level: 12
 pending : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 28, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 28, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 28, 23]


Solution : [9, 3, 28, 23] has cost 22.


Decide in level 12 among pending : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 2, 22, 21, 36, 20, 18]
 solution : [9, 3, 28, 23, 17]


New level: 13
 pending : [37, 26, 38, 2, 22, 21, 36, 20, 18]
 solution : [9, 3, 28, 23, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 36, 20, 18]
 solution : [9, 3, 28, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 28, 23, 17]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 28, 23, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 28, 23, 17]


Solution : [9, 3, 28, 23, 17] has cost 31.


Before backtrack at level 13
 pending : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 28, 23, 17]

After backtrack at level 13
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 28, 23, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 28, 23]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 28, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 28, 23]


Solution : [9, 3, 28, 23] has cost 22.


Decide in level 13 among pending : [37, 26, 38, 21, 36, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 21, 36, 2, 22, 18]
 solution : [9, 3, 28, 23, 20]


New level: 14
 pending : [37, 26, 38, 21, 36, 2, 22, 18]
 solution : [9, 3, 28, 23, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 2, 22, 18]
 solution : [9, 3, 28, 23, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 36, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 23, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 23, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 23, 20]


Solution : [9, 3, 28, 23, 20] has cost 29.


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 28, 23, 20]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 21, 36, 18]
 solution : [9, 3, 28, 23, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [37, 26, 38, 2, 22, 21, 36, 18]
 solution : [9, 3, 28, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 36, 18]
 solution : [9, 3, 28, 23]

Essensial at level 14 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {36}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 23, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 23, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 23, 21]


Solution : [9, 3, 28, 23, 21] has cost 29.


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 28, 23, 21]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 36]
 solution : [9, 3, 28, 23]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 36]
 solution : [9, 3, 28, 23]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20]
 solution : [9, 3, 28, 23]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20]
 solution : [9, 3, 28, 23]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17]
 solution : [9, 3, 28, 23]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17]
 solution : [9, 3, 28, 23]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 28, 23]


Before backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 28, 23]

After backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 3, 28]


Before backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 3, 28]

After backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9, 3, 28]


Before backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9, 3, 28]

After backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19]
 solution : [9, 3, 28]


Before backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19]
 solution : [9, 3, 28]

After backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24]
 solution : [9, 3, 28]


Before backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24]
 solution : [9, 3, 28]

After backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14]
 solution : [9, 3, 28]


Before backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14]
 solution : [9, 3, 28]

After backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 28]


Before backtrack at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 28]

After backtrack at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27, 33]
 solution : [9, 3, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27, 33]
 solution : [9, 3]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27, 33]
 solution : [9, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27, 33]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 4 among pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27, 33]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 33 with phase True at level 4

After decision at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 33]


New level: 5
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 33]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 8192), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {34, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 33]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 8192), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 8192), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 33]


Solution : [9, 3, 33] has cost 24.


Before backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27]
 solution : [9, 3, 33]

After backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27, 30, 34]
 solution : [9, 3, 33]


Invert decision for 33 at level 4


New level: 5
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27, 30, 34]
 solution : [9, 3]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27, 30, 34]
 solution : [9, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 32768), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 8192), (37, 67108864), (38, 1048576), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27, 30, 34]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 5 among pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 24, 14, 27, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 5

After decision at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14, 27, 30, 34]
 solution : [9, 3, 24]


New level: 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14, 27, 30, 34]
 solution : [9, 3, 24]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14, 27, 30, 34]
 solution : [9, 3, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, 1073741824), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : {34, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14, 27]
 solution : [9, 3, 24]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14, 27]
 solution : [9, 3, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14, 27]
 solution : [9, 3, 24]


Solution : [9, 3, 24] has cost 18.


Decide in level 6 among pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14, 27]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14]
 solution : [9, 3, 24, 27]


New level: 7
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14]
 solution : [9, 3, 24, 27]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 10, 19, 14]
 solution : [9, 3, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {2, 36, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27]


Solution : [9, 3, 24, 27] has cost 22.


Decide in level 7 among pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27, 23]


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27, 23]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 24, 27, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 24, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 24, 27, 23]


Solution : [9, 3, 24, 27, 23] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 24, 27, 23]

After backtrack at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 3, 24, 27]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 3, 24, 27, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 24, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 24, 27, 10]


Solution : [9, 3, 24, 27, 10] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 24, 27, 10]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41]
 solution : [9, 3, 24, 27]


Before backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41]
 solution : [9, 3, 24, 27]

After backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3, 24]


Solution : [9, 3, 24] has cost 18.


Decide in level 7 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 14, 23]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 24, 14]


New level: 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 24, 14]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 24, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {2, 36, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 14]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 14]


Solution : [9, 3, 24, 14] has cost 25.


Before backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 14]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19]
 solution : [9, 3, 24, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19]
 solution : [9, 3, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19]
 solution : [9, 3, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19]
 solution : [9, 3, 24]


Solution : [9, 3, 24] has cost 18.


Decide in level 8 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 19]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 19]


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {2, 36, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 19]


Solution : [9, 3, 24, 19] has cost 25.


Before backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 3, 24, 19]

After backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24]


Solution : [9, 3, 24] has cost 18.


Decide in level 9 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 41 with phase True at level 9

After decision at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 41]


New level: 10
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 41]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 41]


Before reduction : 
 pending  : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 41]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 41]


Solution : [9, 3, 24, 41] has cost 36.


Before backtrack at level 10
 pending : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 41]

After backtrack at level 10
 pending : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24, 41]


Invert decision for 41 at level 9


New level: 10
 pending : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24]


Before reduction : 
 pending  : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 131072), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 4096), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24]


Solution : [9, 3, 24] has cost 18.


Decide in level 10 among pending : [10, 37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24, 10]


New level: 11
 pending : [37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24, 10]


Before reduction : 
 pending  : [37, 23, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 512), (37, 33554432), (38, 1048576), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 39, 7, 42, 43, 45, 46, 51, 23, 29}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 10]


Solution : [9, 3, 24, 10] has cost 22.


Decide in level 11 among pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 24, 10, 16]


New level: 12
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 24, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 24, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 24, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 24, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 24, 10, 16]


Solution : [9, 3, 24, 10, 16] has cost 31.


Before backtrack at level 12
 pending : [37, 26, 38, 21, 36, 20, 15]
 solution : [9, 3, 24, 10, 16]

After backtrack at level 12
 pending : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 24, 10, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 24, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 24, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 24, 10]


Solution : [9, 3, 24, 10] has cost 22.


Decide in level 12 among pending : [37, 26, 38, 21, 36, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18, 17]
 solution : [9, 3, 24, 10, 15]


New level: 13
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18, 17]
 solution : [9, 3, 24, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 2, 22, 18, 17]
 solution : [9, 3, 24, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {20, 18, 36, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 24, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 24, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 24, 10, 15]


Solution : [9, 3, 24, 10, 15] has cost 29.


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 24, 10, 15]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 24, 10, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 24, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 24, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]
 solution : [9, 3, 24, 10]


Solution : [9, 3, 24, 10] has cost 22.


Decide in level 13 among pending : [37, 26, 38, 2, 22, 17, 21, 36, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 2, 22, 21, 36, 20, 18]
 solution : [9, 3, 24, 10, 17]


New level: 14
 pending : [37, 26, 38, 2, 22, 21, 36, 20, 18]
 solution : [9, 3, 24, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 36, 20, 18]
 solution : [9, 3, 24, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 24, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 24, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 24, 10, 17]


Solution : [9, 3, 24, 10, 17] has cost 31.


Before backtrack at level 14
 pending : [37, 26, 38, 21, 36, 20]
 solution : [9, 3, 24, 10, 17]

After backtrack at level 14
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 24, 10, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 24, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 24, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 36, 20, 2, 22, 18]
 solution : [9, 3, 24, 10]


Solution : [9, 3, 24, 10] has cost 22.


Decide in level 14 among pending : [37, 26, 38, 21, 36, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [37, 26, 38, 21, 36, 2, 22, 18]
 solution : [9, 3, 24, 10, 20]


New level: 15
 pending : [37, 26, 38, 21, 36, 2, 22, 18]
 solution : [9, 3, 24, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 36, 2, 22, 18]
 solution : [9, 3, 24, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 36, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 24, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 24, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 24, 10, 20]


Solution : [9, 3, 24, 10, 20] has cost 29.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 24, 10, 20]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 21, 36, 18]
 solution : [9, 3, 24, 10, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [37, 26, 38, 2, 22, 21, 36, 18]
 solution : [9, 3, 24, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 36, 18]
 solution : [9, 3, 24, 10]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {36}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 24, 10, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 24, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 24, 10, 21]


Solution : [9, 3, 24, 10, 21] has cost 29.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 24, 10, 21]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18, 21, 36]
 solution : [9, 3, 24, 10]


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 36]
 solution : [9, 3, 24, 10]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20]
 solution : [9, 3, 24, 10]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20]
 solution : [9, 3, 24, 10]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17]
 solution : [9, 3, 24, 10]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17]
 solution : [9, 3, 24, 10]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 24, 10]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15]
 solution : [9, 3, 24, 10]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 16]
 solution : [9, 3, 24, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 16]
 solution : [9, 3, 24]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 16]
 solution : [9, 3, 24]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 23]


Solution : [9, 3, 24, 23] has cost 25.


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16]
 solution : [9, 3, 24, 23]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24]


Before backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 3, 24]

After backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 24]


Before backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 3, 24]

After backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41]
 solution : [9, 3, 24]


Before backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41]
 solution : [9, 3, 24]

After backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19]
 solution : [9, 3, 24]


Before backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19]
 solution : [9, 3, 24]

After backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14]
 solution : [9, 3, 24]


Before backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14]
 solution : [9, 3, 24]

After backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34, 27]
 solution : [9, 3, 24]


Invert decision for 24 at level 5


New level: 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34, 27]
 solution : [9, 3]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34, 27]
 solution : [9, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34, 27]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 6 among pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34, 27]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34]
 solution : [9, 3, 27]


New level: 7
 pending : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34]
 solution : [9, 3, 27]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 36, 20, 17, 15, 16, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 19, 14, 30, 34]
 solution : [9, 3, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {2, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27]


Before reduction : 
 pending  : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27]


Solution : [9, 3, 27] has cost 15.


Decide in level 7 among pending : [37, 36, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27, 23]


New level: 8
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27, 23]


Before reduction : 
 pending  : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 7, 39, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 27, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 27, 23]


Solution : [9, 3, 27, 23] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 27, 23]

After backtrack at level 8
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27]


Before reduction : 
 pending  : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34]
 solution : [9, 3, 27]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 7, 39, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 27, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 27, 10]


Solution : [9, 3, 27, 10] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [9, 3, 27, 10]

After backtrack at level 8
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 27]


Before backtrack at level 7
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 27]

After backtrack at level 7
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3]


Before reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 23]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 7 among pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 23]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 7

After decision at level 7
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 14]


New level: 8
 pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 14]


Before reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 23]
 solution : [9, 3, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 536870912), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {2, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14]


Before reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14]


Solution : [9, 3, 14] has cost 18.


Decide in level 8 among pending : [10, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 8

After decision at level 8
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14, 10]


New level: 9
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14, 10]


Before reduction : 
 pending  : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 7, 39, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 14, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 14, 10]


Solution : [9, 3, 14, 10] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [9, 3, 14, 10]

After backtrack at level 9
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14, 10]


Invert decision for 10 at level 8


New level: 9
 pending : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14]


Before reduction : 
 pending  : [37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23]
 solution : [9, 3, 14]

Essensial at level 9 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 7, 39, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 14, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 14, 23]


Solution : [9, 3, 14, 23] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [9, 3, 14, 23]

After backtrack at level 9
 pending : [23, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 14]


Before backtrack at level 8
 pending : [23, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 14]

After backtrack at level 8
 pending : [23, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3, 14]


Invert decision for 14 at level 7


New level: 8
 pending : [23, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3]


Before reduction : 
 pending  : [23, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 8 among pending : [23, 37, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 36 with phase True at level 8

After decision at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3, 36]


New level: 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3, 36]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3, 36]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 268435456), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 33554432), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3, 36]


Solution : [9, 3, 36] has cost 25.


Before backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3, 36]

After backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3, 36]


Invert decision for 36 at level 8


New level: 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 33554432), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 9 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 10]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 19]


New level: 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 19]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 10]
 solution : [9, 3, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, 268435456), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19]


Solution : [9, 3, 19] has cost 18.


Decide in level 10 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19, 23]


New level: 11
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19, 23]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 19, 23]


Before reduction : 
 pending  : []
 solution : [9, 3, 19, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 19, 23]


Solution : [9, 3, 19, 23] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [9, 3, 19, 23]

After backtrack at level 11
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10]
 solution : [9, 3, 19]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 3, 19, 10]


Before reduction : 
 pending  : []
 solution : [9, 3, 19, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 3, 19, 10]


Solution : [9, 3, 19, 10] has cost 22.


Before backtrack at level 11
 pending : []
 solution : [9, 3, 19, 10]

After backtrack at level 11
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 19]


Before backtrack at level 10
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34]
 solution : [9, 3, 19]

After backtrack at level 10
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3]


Solution : [9, 3] has cost 11.


Decide in level 10 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 10]


New level: 11
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 10]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 23]
 solution : [9, 3, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 2097152), (21, 65536), (22, 278528), (23, 134217728), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 67108864), (38, 1048576), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, 0), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 10]


Solution : [9, 3, 10] has cost 15.


Decide in level 11 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 10, 16]


New level: 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 10, 16]


Solution : [9, 3, 10, 16] has cost 24.


Before backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 10, 16]

After backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 10, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 10]


Solution : [9, 3, 10] has cost 15.


Decide in level 12 among pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 10, 15]


New level: 13
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 10, 15]


Solution : [9, 3, 10, 15] has cost 22.


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 10, 15]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 10, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 10]


Solution : [9, 3, 10] has cost 15.


Decide in level 13 among pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 10, 17]


New level: 14
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 10, 17]


Solution : [9, 3, 10, 17] has cost 24.


Before backtrack at level 14
 pending : [37, 26, 38, 21, 20]
 solution : [9, 3, 10, 17]

After backtrack at level 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 10, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 10]


Solution : [9, 3, 10] has cost 15.


Decide in level 14 among pending : [37, 26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 10, 20]


New level: 15
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 10, 20]


Solution : [9, 3, 10, 20] has cost 22.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 10, 20]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 10, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 10]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 10, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 10, 21]


Solution : [9, 3, 10, 21] has cost 22.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 10, 21]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 10]


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 10]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 10]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 10]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 10]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 10]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 10]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 10]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9, 3, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9, 3]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9, 3]

Essensial at level 11 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 32768), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 3, 23]


Solution : [9, 3, 23] has cost 18.


Decide in level 11 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 23, 16]


New level: 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 23, 16]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, 8388608), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 23, 16]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, 0), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 23, 16]


Solution : [9, 3, 23, 16] has cost 27.


Before backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15]
 solution : [9, 3, 23, 16]

After backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 23, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 23]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 3, 23]


Solution : [9, 3, 23] has cost 18.


Decide in level 12 among pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 23, 15]


New level: 13
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 23, 15]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 3, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 4194304), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 23, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, 0), (19, -1), (20, 0), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 23, 15]


Solution : [9, 3, 23, 15] has cost 25.


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 3, 23, 15]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 23, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 1048576), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 3, 23]


Solution : [9, 3, 23] has cost 18.


Decide in level 13 among pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 23, 17]


New level: 14
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 23, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 3, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 23, 17]


Before reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 16384), (21, 16384), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 3, 23, 17]


Solution : [9, 3, 23, 17] has cost 27.


Before backtrack at level 14
 pending : [37, 26, 38, 21, 20]
 solution : [9, 3, 23, 17]

After backtrack at level 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 23, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 23]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 3, 23]


Solution : [9, 3, 23] has cost 18.


Decide in level 14 among pending : [37, 26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 23, 20]


New level: 15
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 23, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 3, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, 2097152), (21, 65536), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 23, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 3, 23, 20]


Solution : [9, 3, 23, 20] has cost 25.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22]
 solution : [9, 3, 23, 20]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 23, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 3, 23]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 66048), (23, -1), (24, -1), (25, -1), (26, 131072), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 131072), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 23, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 23, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 23, 21]


Solution : [9, 3, 23, 21] has cost 25.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 3, 23, 21]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 23]


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 3, 23]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 23]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 3, 23]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 23]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 3, 23]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 23]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 3, 23]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 3]


Before backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 3]

After backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9, 3]


Before backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9, 3]

After backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19]
 solution : [9, 3]


Before backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19]
 solution : [9, 3]

After backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36]
 solution : [9, 3]


Before backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36]
 solution : [9, 3]

After backtrack at level 7
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14]
 solution : [9, 3]


Before backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14]
 solution : [9, 3]

After backtrack at level 6
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27]
 solution : [9, 3]


Before backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27]
 solution : [9, 3]

After backtrack at level 5
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24]
 solution : [9, 3]


Before backtrack at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24]
 solution : [9, 3]

After backtrack at level 4
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33]
 solution : [9, 3]


Before backtrack at level 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33]
 solution : [9, 3]

After backtrack at level 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28]
 solution : [9, 3]


Before backtrack at level 2
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28]
 solution : [9, 3]

After backtrack at level 2
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28, 4]
 solution : [9, 3]


Invert decision for 3 at level 1


New level: 2
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28, 4]
 solution : [9]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28, 4]
 solution : [9]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 32768), (19, -1), (20, -1), (21, -1), (22, 135168), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28, 4]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 2 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28, 4]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 4 with phase True at level 2

After decision at level 2
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28]
 solution : [9, 4]


New level: 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28]
 solution : [9, 4]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28]
 solution : [9, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, 2147483648), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 3 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 27, 24, 33, 28]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, 2147483648), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 3

After decision at level 3
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 24, 33, 28]
 solution : [9, 4, 27]


New level: 4
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 24, 33, 28]
 solution : [9, 4, 27]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 19, 36, 14, 24, 33, 28]
 solution : [9, 4, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, 2147483648), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {2, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 36, 24, 33, 28]
 solution : [9, 4, 27]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 36, 24, 33, 28]
 solution : [9, 4, 27]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 36, 24, 33, 28]
 solution : [9, 4, 27]


Solution : [9, 4, 27] has cost 13.


Decide in level 4 among pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 36, 24, 33, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 33 with phase True at level 4

After decision at level 4
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 36, 24, 28]
 solution : [9, 4, 27, 33]


New level: 5
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 36, 24, 28]
 solution : [9, 4, 27, 33]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 36, 24, 28]
 solution : [9, 4, 27, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 5 : {34, 36, 30}

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28]
 solution : [9, 4, 27, 33]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28]
 solution : [9, 4, 27, 33]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28]
 solution : [9, 4, 27, 33]


Solution : [9, 4, 27, 33] has cost 26.


Before backtrack at level 5
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28]
 solution : [9, 4, 27, 33]

After backtrack at level 5
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28, 30, 34, 36]
 solution : [9, 4, 27, 33]


Invert decision for 33 at level 4


New level: 5
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28, 30, 34, 36]
 solution : [9, 4, 27]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28, 30, 34, 36]
 solution : [9, 4, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28, 30, 34, 36]
 solution : [9, 4, 27]


Solution : [9, 4, 27] has cost 13.


Decide in level 5 among pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 28, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 27, 28]


New level: 6
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 27, 28]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 27, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 27, 28]


Solution : [9, 4, 27, 28] has cost 17.


Decide in level 6 among pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 24]


New level: 7
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 24]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 27, 28, 24]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 27, 28, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 27, 28, 24]


Solution : [9, 4, 27, 28, 24] has cost 24.


Before backtrack at level 7
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 27, 28, 24]

After backtrack at level 7
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28]


Before reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28]


Solution : [9, 4, 27, 28] has cost 17.


Decide in level 7 among pending : [37, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 23]


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 23]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 27, 28, 23]


Before reduction : 
 pending  : []
 solution : [9, 4, 27, 28, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 27, 28, 23]


Solution : [9, 4, 27, 28, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [9, 4, 27, 28, 23]

After backtrack at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 27, 28]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 27, 28, 10]


Before reduction : 
 pending  : []
 solution : [9, 4, 27, 28, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 27, 28, 10]


Solution : [9, 4, 27, 28, 10] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 4, 27, 28, 10]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 4, 27, 28]


Before backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 4, 27, 28]

After backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 4, 27, 28]


Before backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 4, 27, 28]

After backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 4, 27, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 4, 27]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 4, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 4, 27]


Solution : [9, 4, 27] has cost 13.


Decide in level 6 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 4, 27, 24]


New level: 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 4, 27, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 4, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 27, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 27, 24]


Solution : [9, 4, 27, 24] has cost 20.


Before backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 27, 24]

After backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27]


Solution : [9, 4, 27] has cost 13.


Decide in level 7 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27, 10]


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27, 10]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 27, 10]


Before reduction : 
 pending  : []
 solution : [9, 4, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 27, 10]


Solution : [9, 4, 27, 10] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [9, 4, 27, 10]

After backtrack at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 4, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 27, 23]


Before reduction : 
 pending  : []
 solution : [9, 4, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 27, 23]


Solution : [9, 4, 27, 23] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [9, 4, 27, 23]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 4, 27]


Before backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 4, 27]

After backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10]
 solution : [9, 4, 27]


Before backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10]
 solution : [9, 4, 27]

After backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 4, 27]


Before backtrack at level 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 4, 27]

After backtrack at level 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28]
 solution : [9, 4, 27]


Before backtrack at level 4
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28]
 solution : [9, 4, 27]

After backtrack at level 4
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 4, 27]


Invert decision for 27 at level 3


New level: 4
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 4]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 4 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 14 with phase True at level 4

After decision at level 4
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 4, 14]


New level: 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 4, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 4, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, 1073741824), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : {2, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 33]
 solution : [9, 4, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 33]
 solution : [9, 4, 14]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 33]
 solution : [9, 4, 14]


Solution : [9, 4, 14] has cost 16.


Decide in level 5 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 28, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14, 28]


New level: 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 268435456), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14, 28]


Solution : [9, 4, 14, 28] has cost 20.


Before backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14, 28]

After backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 268435456), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 4, 14]


Solution : [9, 4, 14] has cost 16.


Decide in level 6 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 33 with phase True at level 6

After decision at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 4, 14, 33]


New level: 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 4, 14, 33]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 4, 14, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, 536870912), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 4, 14, 33]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 4, 14, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 4, 14, 33]


Solution : [9, 4, 14, 33] has cost 29.


Before backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 4, 14, 33]

After backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 14, 33]


Invert decision for 33 at level 6


New level: 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 4, 14]


Solution : [9, 4, 14] has cost 16.


Decide in level 7 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 24]


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {34, 36, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 14, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 14, 24]


Solution : [9, 4, 14, 24] has cost 23.


Before backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 4, 14, 24]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, 8388608), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14]


Solution : [9, 4, 14] has cost 16.


Decide in level 8 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 23]


New level: 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 23]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 14, 23]


Before reduction : 
 pending  : []
 solution : [9, 4, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 14, 23]


Solution : [9, 4, 14, 23] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [9, 4, 14, 23]

After backtrack at level 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 4, 14]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 14, 10]


Before reduction : 
 pending  : []
 solution : [9, 4, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 14, 10]


Solution : [9, 4, 14, 10] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [9, 4, 14, 10]

After backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 4, 14]


Before backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 4, 14]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 4, 14]


Before backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 4, 14]

After backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 4, 14]


Before backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 4, 14]

After backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33]
 solution : [9, 4, 14]


Before backtrack at level 5
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33]
 solution : [9, 4, 14]

After backtrack at level 5
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 14]


Invert decision for 14 at level 4


New level: 5
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 5 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 33]


New level: 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 33]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 536870912), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : {34, 30}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 33]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 4096), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 33]


Solution : [9, 4, 33] has cost 22.


Before backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28]
 solution : [9, 4, 33]

After backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28, 30, 34]
 solution : [9, 4, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28, 30, 34]
 solution : [9, 4]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28, 30, 34]
 solution : [9, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 8192), (25, -1), (26, 2097152), (27, -1), (28, 524288), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 4096), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28, 30, 34]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 6 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 28, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28, 30, 34]
 solution : [9, 4, 19]


New level: 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28, 30, 34]
 solution : [9, 4, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28, 30, 34]
 solution : [9, 4, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, 536870912), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 28, 30, 34]
 solution : [9, 4, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 28, 30, 34]
 solution : [9, 4, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 67108864), (24, 268435456), (25, -1), (26, 0), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, 0), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 28, 30, 34]
 solution : [9, 4, 19]


Solution : [9, 4, 19] has cost 16.


Decide in level 7 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 28, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19, 28]


New level: 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19, 28]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19, 28]


Solution : [9, 4, 19, 28] has cost 20.


Before backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19, 28]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 134217728), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]
 solution : [9, 4, 19]


Solution : [9, 4, 19] has cost 16.


Decide in level 8 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 24, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 30, 34]
 solution : [9, 4, 19, 24]


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 30, 34]
 solution : [9, 4, 19, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 23, 30, 34]
 solution : [9, 4, 19, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, 268435456), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {34, 36, 30}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 19, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 19, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 19, 24]


Solution : [9, 4, 19, 24] has cost 23.


Before backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 4, 19, 24]

After backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19]


Solution : [9, 4, 19] has cost 16.


Decide in level 9 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19, 10]


New level: 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19, 10]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 67108864), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 2048), (37, 1024), (38, -1), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 19, 10]


Before reduction : 
 pending  : []
 solution : [9, 4, 19, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 19, 10]


Solution : [9, 4, 19, 10] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [9, 4, 19, 10]

After backtrack at level 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 36, 30, 34]
 solution : [9, 4, 19]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 4, 19, 23]


Before reduction : 
 pending  : []
 solution : [9, 4, 19, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 4, 19, 23]


Solution : [9, 4, 19, 23] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [9, 4, 19, 23]

After backtrack at level 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34]
 solution : [9, 4, 19]


Before backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34]
 solution : [9, 4, 19]

After backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10]
 solution : [9, 4, 19]


Before backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10]
 solution : [9, 4, 19]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24]
 solution : [9, 4, 19]


Before backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24]
 solution : [9, 4, 19]

After backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28]
 solution : [9, 4, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28]
 solution : [9, 4]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28]
 solution : [9, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 7 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 28]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28]


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28]


Solution : [9, 4, 28] has cost 13.


Decide in level 8 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 8

After decision at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 36]


New level: 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 36]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 36]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 67108864), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, -1), (34, 2048), (35, -1), (36, -1), (37, 33554432), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 36]


Solution : [9, 4, 28, 36] has cost 27.


Before backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 36]

After backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 36]


Invert decision for 36 at level 8


New level: 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 67108864), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 8192), (33, -1), (34, 2048), (35, -1), (36, -1), (37, 33554432), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28]


Solution : [9, 4, 28] has cost 13.


Decide in level 9 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 24]


New level: 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 134217728), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {34, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 24]


Solution : [9, 4, 28, 24] has cost 20.


Before backtrack at level 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 24]

After backtrack at level 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 4, 28, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 4, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 4, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 4, 28]


Solution : [9, 4, 28] has cost 13.


Decide in level 10 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 4, 28, 23]


New level: 11
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 4, 28, 23]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 4, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 23]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 23]


Solution : [9, 4, 28, 23] has cost 20.


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 23]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34]
 solution : [9, 4, 28, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34]
 solution : [9, 4, 28]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34]
 solution : [9, 4, 28]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 28, 10]


Solution : [9, 4, 28, 10] has cost 17.


Decide in level 11 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 28, 10, 16]


New level: 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 28, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 28, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 4, 28, 10, 16]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 4, 28, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15]
 solution : [9, 4, 28, 10, 16]


Solution : [9, 4, 28, 10, 16] has cost 26.


Before backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15]
 solution : [9, 4, 28, 10, 16]

After backtrack at level 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 28, 10, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 28, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 28, 10]


Solution : [9, 4, 28, 10] has cost 17.


Decide in level 12 among pending : [37, 26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 4, 28, 10, 15]


New level: 13
 pending : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 4, 28, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 4, 28, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 0), (19, -1), (20, 0), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 4, 28, 10, 15]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 4, 28, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 0), (19, -1), (20, 0), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17]
 solution : [9, 4, 28, 10, 15]


Solution : [9, 4, 28, 10, 15] has cost 24.


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17]
 solution : [9, 4, 28, 10, 15]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 28, 10, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 28, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 28, 10]


Solution : [9, 4, 28, 10] has cost 17.


Decide in level 13 among pending : [37, 26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 4, 28, 10, 17]


New level: 14
 pending : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 4, 28, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 20, 18]
 solution : [9, 4, 28, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 4, 28, 10, 17]


Before reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 4, 28, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20]
 solution : [9, 4, 28, 10, 17]


Solution : [9, 4, 28, 10, 17] has cost 26.


Before backtrack at level 14
 pending : [37, 26, 38, 21, 20]
 solution : [9, 4, 28, 10, 17]

After backtrack at level 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 4, 28, 10, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 4, 28, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [37, 26, 38, 21, 20, 2, 22, 18]
 solution : [9, 4, 28, 10]


Solution : [9, 4, 28, 10] has cost 17.


Decide in level 14 among pending : [37, 26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 4, 28, 10, 20]


New level: 15
 pending : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 4, 28, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 21, 2, 22, 18]
 solution : [9, 4, 28, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 4, 28, 10, 20]


Before reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 4, 28, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22]
 solution : [9, 4, 28, 10, 20]


Solution : [9, 4, 28, 10, 20] has cost 24.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22]
 solution : [9, 4, 28, 10, 20]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 4, 28, 10, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 4, 28, 10]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 21, 18]
 solution : [9, 4, 28, 10]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 4, 28, 10, 21]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 4, 28, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18]
 solution : [9, 4, 28, 10, 21]


Solution : [9, 4, 28, 10, 21] has cost 24.


Before backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18]
 solution : [9, 4, 28, 10, 21]

After backtrack at level 15
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 4, 28, 10]


Before backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21]
 solution : [9, 4, 28, 10]

After backtrack at level 14
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 4, 28, 10]


Before backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20]
 solution : [9, 4, 28, 10]

After backtrack at level 13
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 4, 28, 10]


Before backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 4, 28, 10]

After backtrack at level 12
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 28, 10]


Before backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 28, 10]

After backtrack at level 11
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 4, 28]


Before backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 4, 28]

After backtrack at level 10
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23]
 solution : [9, 4, 28]


Before backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23]
 solution : [9, 4, 28]

After backtrack at level 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 24]
 solution : [9, 4, 28]


Before backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 24]
 solution : [9, 4, 28]

After backtrack at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 24, 36]
 solution : [9, 4, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 24, 36]
 solution : [9, 4]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 24, 36]
 solution : [9, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 24, 36]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 8 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 24, 36]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36]
 solution : [9, 4, 24]


New level: 9
 pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36]
 solution : [9, 4, 24]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36]
 solution : [9, 4, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, 268435456), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 512), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {34, 30}

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24]


Before reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 2048), (33, -1), (34, 0), (35, -1), (36, 512), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24]


Solution : [9, 4, 24] has cost 16.


Decide in level 9 among pending : [37, 26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24, 37]


New level: 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24, 37]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, 67108864), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 524288), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {36}

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23]
 solution : [9, 4, 24, 37]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23]
 solution : [9, 4, 24, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, 524288), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23]
 solution : [9, 4, 24, 37]


Solution : [9, 4, 24, 37] has cost 34.


Before backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23]
 solution : [9, 4, 24, 37]

After backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 4194304), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 4194304), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, 512), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, 512), (40, -1), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, 4194304), (46, 524288), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]
 solution : [9, 4, 24]


Solution : [9, 4, 24] has cost 16.


Decide in level 10 among pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 16, 23, 36]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 16, 23, 36]
 solution : [9, 4, 24, 41]


New level: 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 16, 23, 36]
 solution : [9, 4, 24, 41]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 16, 23, 36]
 solution : [9, 4, 24, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 2048), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36]
 solution : [9, 4, 24, 41]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36]
 solution : [9, 4, 24, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 2048), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 2048), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36]
 solution : [9, 4, 24, 41]


Solution : [9, 4, 24, 41] has cost 34.


Before backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36]
 solution : [9, 4, 24, 41]

After backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 65536), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 2048), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24]


Solution : [9, 4, 24] has cost 16.


Decide in level 11 among pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 16, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 16]


New level: 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 16]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2048), (39, 512), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2048), (39, 512), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2048), (39, 512), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 16]


Solution : [9, 4, 24, 16] has cost 25.


Before backtrack at level 12
 pending : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 16]

After backtrack at level 12
 pending : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 4, 24, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 4, 24]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 4, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 32768), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, 16777216), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2048), (39, 512), (40, -1), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 4, 24]


Solution : [9, 4, 24] has cost 16.


Decide in level 12 among pending : [26, 38, 21, 20, 15, 10, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [26, 38, 21, 20, 15, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 4, 24, 10]


New level: 13
 pending : [26, 38, 21, 20, 15, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 4, 24, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 23, 36, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 4, 24, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 131072), (8, -1), (9, -1), (10, 16777216), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 16777216), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 2048), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 2048), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 8388608), (46, 2097152), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {32, 39, 7, 42, 43, 45, 46, 51, 23, 29}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 10]


Solution : [9, 4, 24, 10] has cost 20.


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 10]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24]

Essensial at level 13 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 23]


Solution : [9, 4, 24, 23] has cost 23.


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17]
 solution : [9, 4, 24, 23]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24]


Before backtrack at level 12
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 4, 24]

After backtrack at level 12
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 4, 24]


Before backtrack at level 11
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 4, 24]

After backtrack at level 11
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16]
 solution : [9, 4, 24]


Before backtrack at level 10
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16]
 solution : [9, 4, 24]

After backtrack at level 10
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41]
 solution : [9, 4, 24]


Before backtrack at level 9
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41]
 solution : [9, 4, 24]

After backtrack at level 9
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 9 among pending : [26, 38, 21, 20, 15, 36, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 9

After decision at level 9
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 36]


New level: 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 36]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 36]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, 134217728), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 36]


Solution : [9, 4, 36] has cost 23.


Before backtrack at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 36]

After backtrack at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 36]


Invert decision for 36 at level 9


New level: 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 8192), (33, -1), (34, 4096), (35, -1), (36, -1), (37, 33554432), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4]


Solution : [9, 4] has cost 9.


Decide in level 10 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 23]


New level: 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 30, 34, 37]
 solution : [9, 4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 524288), (8, -1), (9, -1), (10, 67108864), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 4194304), (21, 131072), (22, 557056), (23, 67108864), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 67108864), (38, 2097152), (39, 8192), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 33554432), (46, 8388608), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 37]
 solution : [9, 4, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 37]
 solution : [9, 4, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 37]
 solution : [9, 4, 23]


Solution : [9, 4, 23] has cost 16.


Decide in level 11 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 37]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 37]
 solution : [9, 4, 23, 16]


New level: 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 37]
 solution : [9, 4, 23, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 37]
 solution : [9, 4, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 37]
 solution : [9, 4, 23, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 37]
 solution : [9, 4, 23, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 37]
 solution : [9, 4, 23, 16]


Solution : [9, 4, 23, 16] has cost 25.


Before backtrack at level 12
 pending : [26, 38, 21, 20, 15, 37]
 solution : [9, 4, 23, 16]

After backtrack at level 12
 pending : [26, 38, 21, 20, 15, 37, 2, 22, 18, 17]
 solution : [9, 4, 23, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [26, 38, 21, 20, 15, 37, 2, 22, 18, 17]
 solution : [9, 4, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 37, 2, 22, 18, 17]
 solution : [9, 4, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 37, 2, 22, 18, 17]
 solution : [9, 4, 23]


Solution : [9, 4, 23] has cost 16.


Decide in level 12 among pending : [26, 38, 21, 20, 15, 37, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [26, 38, 21, 20, 37, 2, 22, 18, 17]
 solution : [9, 4, 23, 15]


New level: 13
 pending : [26, 38, 21, 20, 37, 2, 22, 18, 17]
 solution : [9, 4, 23, 15]


Before reduction : 
 pending  : [26, 38, 21, 20, 37, 2, 22, 18, 17]
 solution : [9, 4, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 0), (19, -1), (20, 0), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 23, 15]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 23, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 0), (19, -1), (20, 0), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 23, 15]


Solution : [9, 4, 23, 15] has cost 23.


Before backtrack at level 13
 pending : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 23, 15]

After backtrack at level 13
 pending : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 23, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 23]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 23]


Solution : [9, 4, 23] has cost 16.


Decide in level 13 among pending : [26, 38, 37, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [26, 38, 37, 2, 22, 21, 20, 18]
 solution : [9, 4, 23, 17]


New level: 14
 pending : [26, 38, 37, 2, 22, 21, 20, 18]
 solution : [9, 4, 23, 17]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 21, 20, 18]
 solution : [9, 4, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [26, 38, 37, 21, 20]
 solution : [9, 4, 23, 17]


Before reduction : 
 pending  : [26, 38, 37, 21, 20]
 solution : [9, 4, 23, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 37, 21, 20]
 solution : [9, 4, 23, 17]


Solution : [9, 4, 23, 17] has cost 25.


Before backtrack at level 14
 pending : [26, 38, 37, 21, 20]
 solution : [9, 4, 23, 17]

After backtrack at level 14
 pending : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 23, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 23]


Before reduction : 
 pending  : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 23]


Solution : [9, 4, 23] has cost 16.


Decide in level 14 among pending : [26, 38, 37, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [26, 38, 37, 21, 2, 22, 18]
 solution : [9, 4, 23, 20]


New level: 15
 pending : [26, 38, 37, 21, 2, 22, 18]
 solution : [9, 4, 23, 20]


Before reduction : 
 pending  : [26, 38, 37, 21, 2, 22, 18]
 solution : [9, 4, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [26, 38, 37, 2, 22]
 solution : [9, 4, 23, 20]


Before reduction : 
 pending  : [26, 38, 37, 2, 22]
 solution : [9, 4, 23, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22]
 solution : [9, 4, 23, 20]


Solution : [9, 4, 23, 20] has cost 23.


Before backtrack at level 15
 pending : [26, 38, 37, 2, 22]
 solution : [9, 4, 23, 20]

After backtrack at level 15
 pending : [26, 38, 37, 2, 22, 21, 18]
 solution : [9, 4, 23, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [26, 38, 37, 2, 22, 21, 18]
 solution : [9, 4, 23]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 21, 18]
 solution : [9, 4, 23]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 23, 21]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 23, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 23, 21]


Solution : [9, 4, 23, 21] has cost 23.


Before backtrack at level 15
 pending : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 23, 21]

After backtrack at level 15
 pending : [26, 38, 37, 2, 22, 18, 21]
 solution : [9, 4, 23]


Before backtrack at level 14
 pending : [26, 38, 37, 2, 22, 18, 21]
 solution : [9, 4, 23]

After backtrack at level 14
 pending : [26, 38, 37, 2, 22, 18, 21, 20]
 solution : [9, 4, 23]


Before backtrack at level 13
 pending : [26, 38, 37, 2, 22, 18, 21, 20]
 solution : [9, 4, 23]

After backtrack at level 13
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17]
 solution : [9, 4, 23]


Before backtrack at level 12
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17]
 solution : [9, 4, 23]

After backtrack at level 12
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 23]


Before backtrack at level 11
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 23]

After backtrack at level 11
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 16]
 solution : [9, 4, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 16]
 solution : [9, 4]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 30, 34, 16]
 solution : [9, 4]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 131072), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 10]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 4, 10]


Solution : [9, 4, 10] has cost 13.


Decide in level 11 among pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 11

After decision at level 11
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 10, 16]


New level: 12
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 10, 16]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, 16777216), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {17, 2, 18, 22}

After reduction : 
 pending  : [26, 38, 37, 21, 20, 15]
 solution : [9, 4, 10, 16]


Before reduction : 
 pending  : [26, 38, 37, 21, 20, 15]
 solution : [9, 4, 10, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, 0), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 37, 21, 20, 15]
 solution : [9, 4, 10, 16]


Solution : [9, 4, 10, 16] has cost 22.


Before backtrack at level 12
 pending : [26, 38, 37, 21, 20, 15]
 solution : [9, 4, 10, 16]

After backtrack at level 12
 pending : [26, 38, 37, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 10, 16]


Invert decision for 16 at level 11


New level: 12
 pending : [26, 38, 37, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 10]


Before reduction : 
 pending  : [26, 38, 37, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 37, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 4, 10]


Solution : [9, 4, 10] has cost 13.


Decide in level 12 among pending : [26, 38, 37, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [26, 38, 37, 21, 20, 2, 22, 18, 17]
 solution : [9, 4, 10, 15]


New level: 13
 pending : [26, 38, 37, 21, 20, 2, 22, 18, 17]
 solution : [9, 4, 10, 15]


Before reduction : 
 pending  : [26, 38, 37, 21, 20, 2, 22, 18, 17]
 solution : [9, 4, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8388608), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 0), (19, -1), (20, 0), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {18, 20, 21}

After reduction : 
 pending  : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 10, 15]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 10, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, 0), (19, -1), (20, 0), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 10, 15]


Solution : [9, 4, 10, 15] has cost 20.


Before backtrack at level 13
 pending : [26, 38, 37, 2, 22, 17]
 solution : [9, 4, 10, 15]

After backtrack at level 13
 pending : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 10, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 10]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2097152), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 17, 21, 20, 18]
 solution : [9, 4, 10]


Solution : [9, 4, 10] has cost 13.


Decide in level 13 among pending : [26, 38, 37, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [26, 38, 37, 2, 22, 21, 20, 18]
 solution : [9, 4, 10, 17]


New level: 14
 pending : [26, 38, 37, 2, 22, 21, 20, 18]
 solution : [9, 4, 10, 17]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 21, 20, 18]
 solution : [9, 4, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8388608), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 18, 22}

After reduction : 
 pending  : [26, 38, 37, 21, 20]
 solution : [9, 4, 10, 17]


Before reduction : 
 pending  : [26, 38, 37, 21, 20]
 solution : [9, 4, 10, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 32768), (21, 32768), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 37, 21, 20]
 solution : [9, 4, 10, 17]


Solution : [9, 4, 10, 17] has cost 22.


Before backtrack at level 14
 pending : [26, 38, 37, 21, 20]
 solution : [9, 4, 10, 17]

After backtrack at level 14
 pending : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 10, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 10]


Before reduction : 
 pending  : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 37, 21, 20, 2, 22, 18]
 solution : [9, 4, 10]


Solution : [9, 4, 10] has cost 13.


Decide in level 14 among pending : [26, 38, 37, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 14

After decision at level 14
 pending : [26, 38, 37, 21, 2, 22, 18]
 solution : [9, 4, 10, 20]


New level: 15
 pending : [26, 38, 37, 21, 2, 22, 18]
 solution : [9, 4, 10, 20]


Before reduction : 
 pending  : [26, 38, 37, 21, 2, 22, 18]
 solution : [9, 4, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, 4194304), (21, 131072), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {18, 21}

After reduction : 
 pending  : [26, 38, 37, 2, 22]
 solution : [9, 4, 10, 20]


Before reduction : 
 pending  : [26, 38, 37, 2, 22]
 solution : [9, 4, 10, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22]
 solution : [9, 4, 10, 20]


Solution : [9, 4, 10, 20] has cost 20.


Before backtrack at level 15
 pending : [26, 38, 37, 2, 22]
 solution : [9, 4, 10, 20]

After backtrack at level 15
 pending : [26, 38, 37, 2, 22, 21, 18]
 solution : [9, 4, 10, 20]


Invert decision for 20 at level 14


New level: 15
 pending : [26, 38, 37, 2, 22, 21, 18]
 solution : [9, 4, 10]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 21, 18]
 solution : [9, 4, 10]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 133120), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 1024), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 10, 21]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 10, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 10, 21]


Solution : [9, 4, 10, 21] has cost 20.


Before backtrack at level 15
 pending : [26, 38, 37, 2, 22, 18]
 solution : [9, 4, 10, 21]

After backtrack at level 15
 pending : [26, 38, 37, 2, 22, 18, 21]
 solution : [9, 4, 10]


Before backtrack at level 14
 pending : [26, 38, 37, 2, 22, 18, 21]
 solution : [9, 4, 10]

After backtrack at level 14
 pending : [26, 38, 37, 2, 22, 18, 21, 20]
 solution : [9, 4, 10]


Before backtrack at level 13
 pending : [26, 38, 37, 2, 22, 18, 21, 20]
 solution : [9, 4, 10]

After backtrack at level 13
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17]
 solution : [9, 4, 10]


Before backtrack at level 12
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17]
 solution : [9, 4, 10]

After backtrack at level 12
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 10]


Before backtrack at level 11
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 4, 10]

After backtrack at level 11
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 4]


Before backtrack at level 10
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 4]

After backtrack at level 10
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23]
 solution : [9, 4]


Before backtrack at level 9
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23]
 solution : [9, 4]

After backtrack at level 9
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36]
 solution : [9, 4]


Before backtrack at level 8
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36]
 solution : [9, 4]

After backtrack at level 8
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24]
 solution : [9, 4]


Before backtrack at level 7
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24]
 solution : [9, 4]

After backtrack at level 7
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28]
 solution : [9, 4]


Before backtrack at level 6
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28]
 solution : [9, 4]

After backtrack at level 6
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19]
 solution : [9, 4]


Before backtrack at level 5
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19]
 solution : [9, 4]

After backtrack at level 5
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33]
 solution : [9, 4]


Before backtrack at level 4
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33]
 solution : [9, 4]

After backtrack at level 4
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33, 14]
 solution : [9, 4]


Before backtrack at level 3
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33, 14]
 solution : [9, 4]

After backtrack at level 3
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33, 14, 27]
 solution : [9, 4]


Invert decision for 4 at level 2


New level: 3
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33, 14, 27]
 solution : [9]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33, 14, 27]
 solution : [9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 65536), (19, -1), (20, -1), (21, -1), (22, 270336), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 65536), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33, 14, 27]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 3 among pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 28, 19, 33, 14, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14, 27]
 solution : [9, 28]


New level: 4
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14, 27]
 solution : [9, 28]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14, 27]
 solution : [9, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14, 27]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 4 among pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14]
 solution : [9, 28, 27]


New level: 5
 pending : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14]
 solution : [9, 28, 27]


Before reduction : 
 pending  : [26, 38, 37, 2, 22, 18, 21, 20, 17, 15, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 23, 36, 24, 19, 33, 14]
 solution : [9, 28, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {2, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 36, 24, 33]
 solution : [9, 28, 27]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 36, 24, 33]
 solution : [9, 28, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 36, 24, 33]
 solution : [9, 28, 27]


Solution : [9, 28, 27] has cost 14.


Decide in level 5 among pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 36, 24, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 36, 24]
 solution : [9, 28, 27, 33]


New level: 6
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 36, 24]
 solution : [9, 28, 27, 33]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 36, 24]
 solution : [9, 28, 27, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {34, 36, 30}

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 27, 33]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 27, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 27, 33]


Solution : [9, 28, 27, 33] has cost 27.


Before backtrack at level 6
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 27, 33]

After backtrack at level 6
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 27, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 27]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 27]


Solution : [9, 28, 27] has cost 14.


Decide in level 6 among pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 24]


New level: 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 24]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 27, 24]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 27, 24]


Solution : [9, 28, 27, 24] has cost 21.


Before backtrack at level 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 27, 24]

After backtrack at level 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27]


Before reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27]


Solution : [9, 28, 27] has cost 14.


Decide in level 7 among pending : [37, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 10]


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 10]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 27, 10]


Before reduction : 
 pending  : []
 solution : [9, 28, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 27, 10]


Solution : [9, 28, 27, 10] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 27, 10]

After backtrack at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 27, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 27, 23]


Solution : [9, 28, 27, 23] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 28, 27, 23]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 28, 27]


Before backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 28, 27]

After backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10]
 solution : [9, 28, 27]


Before backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10]
 solution : [9, 28, 27]

After backtrack at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 28, 27]


Before backtrack at level 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 28, 27]

After backtrack at level 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 28, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 5 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 5

After decision at level 5
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 28, 14]


New level: 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 28, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 28, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : {2, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 28, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 28, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]
 solution : [9, 28, 14]


Solution : [9, 28, 14] has cost 17.


Decide in level 6 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 33 with phase True at level 6

After decision at level 6
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 28, 14, 33]


New level: 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 28, 14, 33]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 28, 14, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 28, 14, 33]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 28, 14, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 28, 14, 33]


Solution : [9, 28, 14, 33] has cost 30.


Before backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24]
 solution : [9, 28, 14, 33]

After backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 28, 14, 33]


Invert decision for 33 at level 6


New level: 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 28, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 28, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]
 solution : [9, 28, 14]


Solution : [9, 28, 14] has cost 17.


Decide in level 7 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 24]


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {34, 36, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 28, 14, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 28, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 28, 14, 24]


Solution : [9, 28, 14, 24] has cost 24.


Before backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10]
 solution : [9, 28, 14, 24]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14]


Solution : [9, 28, 14] has cost 17.


Decide in level 8 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 23]


New level: 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 23]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 14, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 14, 23]


Solution : [9, 28, 14, 23] has cost 24.


Before backtrack at level 9
 pending : []
 solution : [9, 28, 14, 23]

After backtrack at level 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 30, 34, 36]
 solution : [9, 28, 14]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 14, 10]


Before reduction : 
 pending  : []
 solution : [9, 28, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 14, 10]


Solution : [9, 28, 14, 10] has cost 21.


Before backtrack at level 9
 pending : []
 solution : [9, 28, 14, 10]

After backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 28, 14]


Before backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 28, 14]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 28, 14]


Before backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23]
 solution : [9, 28, 14]

After backtrack at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 28, 14]


Before backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 28, 14]

After backtrack at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 28, 14]


Invert decision for 14 at level 5


New level: 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 28]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 6 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]
 solution : [9, 28, 19]


New level: 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]
 solution : [9, 28, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]
 solution : [9, 28, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33]
 solution : [9, 28, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33]
 solution : [9, 28, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 536870912), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33]
 solution : [9, 28, 19]


Solution : [9, 28, 19] has cost 17.


Decide in level 7 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 33 with phase True at level 7

After decision at level 7
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 28, 19, 33]


New level: 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 28, 19, 33]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 23, 24]
 solution : [9, 28, 19, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 1073741824), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {34, 36, 30}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 19, 33]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 19, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 19, 33]


Solution : [9, 28, 19, 33] has cost 30.


Before backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24]
 solution : [9, 28, 19, 33]

After backtrack at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 19, 33]


Invert decision for 33 at level 7


New level: 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]
 solution : [9, 28, 19]


Solution : [9, 28, 19] has cost 17.


Decide in level 8 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 24]


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 536870912), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {34, 36, 30}

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 19, 24]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 19, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 19, 24]


Solution : [9, 28, 19, 24] has cost 24.


Before backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23]
 solution : [9, 28, 19, 24]

After backtrack at level 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19]


Before reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19]


Solution : [9, 28, 19] has cost 17.


Decide in level 9 among pending : [10, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 10]


New level: 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 10]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, 2048), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 19, 10]


Before reduction : 
 pending  : []
 solution : [9, 28, 19, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 19, 10]


Solution : [9, 28, 19, 10] has cost 21.


Before backtrack at level 10
 pending : []
 solution : [9, 28, 19, 10]

After backtrack at level 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19]


Before reduction : 
 pending  : [37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 30, 34, 36]
 solution : [9, 28, 19]

Essensial at level 10 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 28, 19, 23]


Before reduction : 
 pending  : []
 solution : [9, 28, 19, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [9, 28, 19, 23]


Solution : [9, 28, 19, 23] has cost 24.


Before backtrack at level 10
 pending : []
 solution : [9, 28, 19, 23]

After backtrack at level 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 28, 19]


Before backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36]
 solution : [9, 28, 19]

After backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10]
 solution : [9, 28, 19]


Before backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10]
 solution : [9, 28, 19]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 28, 19]


Before backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24]
 solution : [9, 28, 19]

After backtrack at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]
 solution : [9, 28, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]
 solution : [9, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]
 solution : [9, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 7 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 33]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 33 with phase True at level 7

After decision at level 7
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 33]


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 33]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 1073741824), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 16384), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {34, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 33]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 16384), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 16384), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 33]


Solution : [9, 28, 33] has cost 23.


Before backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 33]

After backtrack at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 33]


Invert decision for 33 at level 7


New level: 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 16384), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 16384), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 8 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 36 with phase True at level 8

After decision at level 8
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 36]


New level: 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 36]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 36]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, 536870912), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 268435456), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 1048576), (31, -1), (32, 16384), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 36]


Solution : [9, 28, 36] has cost 24.


Before backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 36]

After backtrack at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 36]


Invert decision for 36 at level 8


New level: 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 268435456), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 1048576), (31, -1), (32, 16384), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 9 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 24]


New level: 10
 pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 30, 34]
 solution : [9, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {34, 30}

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24]


Solution : [9, 28, 24] has cost 17.


Decide in level 10 among pending : [23, 37, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 37]


New level: 11
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 37]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 1024), (40, -1), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 37]


Solution : [9, 28, 24, 37] has cost 35.


Before backtrack at level 11
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 37]

After backtrack at level 11
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 1024), (40, -1), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24]


Solution : [9, 28, 24] has cost 17.


Decide in level 11 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 41]


New level: 12
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 41]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 41]


Before reduction : 
 pending  : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 41]


Solution : [9, 28, 24, 41] has cost 35.


Before backtrack at level 12
 pending : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 24, 41]

After backtrack at level 12
 pending : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24]


Solution : [9, 28, 24] has cost 17.


Decide in level 12 among pending : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 16]


New level: 13
 pending : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 16]


Before reduction : 
 pending  : [23, 10, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : {17, 2, 18, 22}

After reduction : 
 pending  : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 16]


Before reduction : 
 pending  : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 16]


Solution : [9, 28, 24, 16] has cost 26.


Before backtrack at level 13
 pending : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 16]

After backtrack at level 13
 pending : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 28, 24, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 28, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 28, 24]


Solution : [9, 28, 24] has cost 17.


Decide in level 13 among pending : [23, 10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 23 with phase True at level 13

After decision at level 13
 pending : [10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 28, 24, 23]


New level: 14
 pending : [10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 28, 24, 23]


Before reduction : 
 pending  : [10, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 28, 24, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {32, 39, 7, 10, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 23]


Solution : [9, 28, 24, 23] has cost 24.


Before backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 23]

After backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24, 23]


Invert decision for 23 at level 13


New level: 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 10]


Solution : [9, 28, 24, 10] has cost 21.


Before backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 24, 10]

After backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24]


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 28, 24]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23]
 solution : [9, 28, 24]


Before backtrack at level 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23]
 solution : [9, 28, 24]

After backtrack at level 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16]
 solution : [9, 28, 24]


Before backtrack at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16]
 solution : [9, 28, 24]

After backtrack at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41]
 solution : [9, 28, 24]


Before backtrack at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41]
 solution : [9, 28, 24]

After backtrack at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34, 37]
 solution : [9, 28, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34, 37]
 solution : [9, 28]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34, 37]
 solution : [9, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34, 37]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 10 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34, 37]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 37]


New level: 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 37]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 4096), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 37]


Solution : [9, 28, 37] has cost 28.


Before backtrack at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 37]

After backtrack at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 2097152), (31, -1), (32, 4096), (33, -1), (34, 4096), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 4096), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28]


Solution : [9, 28] has cost 10.


Decide in level 11 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 10]


New level: 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 16, 41, 30, 34]
 solution : [9, 28, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]
 solution : [9, 28, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]
 solution : [9, 28, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]
 solution : [9, 28, 10]


Solution : [9, 28, 10] has cost 14.


Decide in level 12 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 10, 16]


New level: 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 10, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 10, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 28, 10, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 28, 10, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 28, 10, 16]


Solution : [9, 28, 10, 16] has cost 23.


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15]
 solution : [9, 28, 10, 16]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 10, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 10]


Solution : [9, 28, 10] has cost 14.


Decide in level 13 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 28, 10, 15]


New level: 14
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 28, 10, 15]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 28, 10, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 20, 21}

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 28, 10, 15]


Before reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 28, 10, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 28, 10, 15]


Solution : [9, 28, 10, 15] has cost 21.


Before backtrack at level 14
 pending : [26, 38, 2, 22, 17]
 solution : [9, 28, 10, 15]

After backtrack at level 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 10, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 10]


Before reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 10]


Solution : [9, 28, 10] has cost 14.


Decide in level 14 among pending : [26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 28, 10, 17]


New level: 15
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 28, 10, 17]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 28, 10, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 28, 10, 17]


Before reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 28, 10, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 28, 10, 17]


Solution : [9, 28, 10, 17] has cost 23.


Before backtrack at level 15
 pending : [26, 38, 21, 20]
 solution : [9, 28, 10, 17]

After backtrack at level 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 10, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 10]


Solution : [9, 28, 10] has cost 14.


Decide in level 15 among pending : [26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 28, 10, 20]


New level: 16
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 28, 10, 20]


Before reduction : 
 pending  : [26, 38, 21, 2, 22, 18]
 solution : [9, 28, 10, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {18, 21}

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 28, 10, 20]


Before reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 28, 10, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 28, 10, 20]


Solution : [9, 28, 10, 20] has cost 21.


Before backtrack at level 16
 pending : [26, 38, 2, 22]
 solution : [9, 28, 10, 20]

After backtrack at level 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 28, 10, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 28, 10]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 18]
 solution : [9, 28, 10]

Essensial at level 16 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 28, 10, 21]


Before reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 28, 10, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 28, 10, 21]


Solution : [9, 28, 10, 21] has cost 21.


Before backtrack at level 16
 pending : [26, 38, 2, 22, 18]
 solution : [9, 28, 10, 21]

After backtrack at level 16
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 28, 10]


Before backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 28, 10]

After backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 28, 10]


Before backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 28, 10]

After backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 28, 10]


Before backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 28, 10]

After backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 28, 10]


Before backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 28, 10]

After backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 41, 30, 34, 16]
 solution : [9, 28, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 41, 30, 34, 16]
 solution : [9, 28]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 41, 30, 34, 16]
 solution : [9, 28]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 23]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 28, 23]


Solution : [9, 28, 23] has cost 17.


Decide in level 12 among pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 28, 23, 16]


New level: 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 28, 23, 16]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 28, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 28, 23, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 28, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 28, 23, 16]


Solution : [9, 28, 23, 16] has cost 26.


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15]
 solution : [9, 28, 23, 16]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 23, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 28, 23]


Solution : [9, 28, 23] has cost 17.


Decide in level 13 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 28, 23, 15]


New level: 14
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 28, 23, 15]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 28, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 20, 21}

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 28, 23, 15]


Before reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 28, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 28, 23, 15]


Solution : [9, 28, 23, 15] has cost 24.


Before backtrack at level 14
 pending : [26, 38, 2, 22, 17]
 solution : [9, 28, 23, 15]

After backtrack at level 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 23, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 23]


Before reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 28, 23]


Solution : [9, 28, 23] has cost 17.


Decide in level 14 among pending : [26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 28, 23, 17]


New level: 15
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 28, 23, 17]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 28, 23, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 28, 23, 17]


Before reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 28, 23, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 28, 23, 17]


Solution : [9, 28, 23, 17] has cost 26.


Before backtrack at level 15
 pending : [26, 38, 21, 20]
 solution : [9, 28, 23, 17]

After backtrack at level 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 23, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 28, 23]


Solution : [9, 28, 23] has cost 17.


Decide in level 15 among pending : [26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 28, 23, 20]


New level: 16
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 28, 23, 20]


Before reduction : 
 pending  : [26, 38, 21, 2, 22, 18]
 solution : [9, 28, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {18, 21}

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 28, 23, 20]


Before reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 28, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 28, 23, 20]


Solution : [9, 28, 23, 20] has cost 24.


Before backtrack at level 16
 pending : [26, 38, 2, 22]
 solution : [9, 28, 23, 20]

After backtrack at level 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 28, 23, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 28, 23]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 18]
 solution : [9, 28, 23]

Essensial at level 16 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 28, 23, 21]


Before reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 28, 23, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 28, 23, 21]


Solution : [9, 28, 23, 21] has cost 24.


Before backtrack at level 16
 pending : [26, 38, 2, 22, 18]
 solution : [9, 28, 23, 21]

After backtrack at level 16
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 28, 23]


Before backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 28, 23]

After backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 28, 23]


Before backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 28, 23]

After backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 28, 23]


Before backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 28, 23]

After backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 28, 23]


Before backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 28, 23]

After backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 28]


Before backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9, 28]

After backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9, 28]


Before backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9, 28]

After backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37]
 solution : [9, 28]


Before backtrack at level 9
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37]
 solution : [9, 28]

After backtrack at level 9
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24]
 solution : [9, 28]


Before backtrack at level 8
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24]
 solution : [9, 28]

After backtrack at level 8
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36]
 solution : [9, 28]


Before backtrack at level 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36]
 solution : [9, 28]

After backtrack at level 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33]
 solution : [9, 28]


Before backtrack at level 6
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33]
 solution : [9, 28]

After backtrack at level 6
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19]
 solution : [9, 28]


Before backtrack at level 5
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19]
 solution : [9, 28]

After backtrack at level 5
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14]
 solution : [9, 28]


Before backtrack at level 4
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14]
 solution : [9, 28]

After backtrack at level 4
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14, 27]
 solution : [9, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14, 27]
 solution : [9]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14, 27]
 solution : [9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14, 27]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 4 among pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 4

After decision at level 4
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14]
 solution : [9, 27]


New level: 5
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14]
 solution : [9, 27]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 24, 36, 33, 19, 14]
 solution : [9, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, 4294967296), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {2, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 37, 24, 36, 33]
 solution : [9, 27]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 37, 24, 36, 33]
 solution : [9, 27]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 37, 24, 36, 33]
 solution : [9, 27]


Solution : [9, 27] has cost 10.


Decide in level 5 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 37, 24, 36, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 37, 24, 36]
 solution : [9, 27, 33]


New level: 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 37, 24, 36]
 solution : [9, 27, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 10, 37, 24, 36]
 solution : [9, 27, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {34, 36, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24]
 solution : [9, 27, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24]
 solution : [9, 27, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24]
 solution : [9, 27, 33]


Solution : [9, 27, 33] has cost 23.


Before backtrack at level 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24]
 solution : [9, 27, 33]

After backtrack at level 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24, 30, 34, 36]
 solution : [9, 27, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24, 30, 34, 36]
 solution : [9, 27]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24, 30, 34, 36]
 solution : [9, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24, 30, 34, 36]
 solution : [9, 27]


Solution : [9, 27] has cost 10.


Decide in level 6 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 30, 34, 36]
 solution : [9, 27, 24]


New level: 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 30, 34, 36]
 solution : [9, 27, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37, 30, 34, 36]
 solution : [9, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24]


Solution : [9, 27, 24] has cost 17.


Decide in level 7 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24, 23]


New level: 8
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24, 23]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 27, 24, 23]


Before reduction : 
 pending  : []
 solution : [9, 27, 24, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 27, 24, 23]


Solution : [9, 27, 24, 23] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [9, 27, 24, 23]

After backtrack at level 8
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 10, 37]
 solution : [9, 27, 24]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : []
 solution : [9, 27, 24, 10]


Before reduction : 
 pending  : []
 solution : [9, 27, 24, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 27, 24, 10]


Solution : [9, 27, 24, 10] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [9, 27, 24, 10]

After backtrack at level 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37]
 solution : [9, 27, 24]


Before backtrack at level 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37]
 solution : [9, 27, 24]

After backtrack at level 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27]


Solution : [9, 27] has cost 10.


Decide in level 7 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27, 10]


New level: 8
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27, 10]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 27, 10]


Before reduction : 
 pending  : []
 solution : [9, 27, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 27, 10]


Solution : [9, 27, 10] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [9, 27, 10]

After backtrack at level 8
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 27]

Essensial at level 8 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 27, 23]


Before reduction : 
 pending  : []
 solution : [9, 27, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [9, 27, 23]


Solution : [9, 27, 23] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [9, 27, 23]

After backtrack at level 8
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36]
 solution : [9, 27]


Before backtrack at level 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36]
 solution : [9, 27]

After backtrack at level 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10]
 solution : [9, 27]


Before backtrack at level 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10]
 solution : [9, 27]

After backtrack at level 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24]
 solution : [9, 27]


Before backtrack at level 5
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24]
 solution : [9, 27]

After backtrack at level 5
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9, 27]


Invert decision for 27 at level 4


New level: 5
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 5 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 14, 33]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 14 with phase True at level 5

After decision at level 5
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 14]


New level: 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 14]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, 2147483648), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : {2, 38, 15, 16, 17, 18, 19, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 33]
 solution : [9, 14]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 33]
 solution : [9, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, 1073741824), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 33]
 solution : [9, 14]


Solution : [9, 14] has cost 13.


Decide in level 6 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 33 with phase True at level 6

After decision at level 6
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24]
 solution : [9, 14, 33]


New level: 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24]
 solution : [9, 14, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 10, 24]
 solution : [9, 14, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, 2147483648), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {34, 36, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24]
 solution : [9, 14, 33]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24]
 solution : [9, 14, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24]
 solution : [9, 14, 33]


Solution : [9, 14, 33] has cost 26.


Before backtrack at level 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24]
 solution : [9, 14, 33]

After backtrack at level 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24, 30, 34, 36]
 solution : [9, 14, 33]


Invert decision for 33 at level 6


New level: 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24, 30, 34, 36]
 solution : [9, 14]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24, 30, 34, 36]
 solution : [9, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24, 30, 34, 36]
 solution : [9, 14]


Solution : [9, 14] has cost 13.


Decide in level 7 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 24, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 24]


New level: 8
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, 1073741824), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {34, 36, 30}

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10]
 solution : [9, 14, 24]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10]
 solution : [9, 14, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 1024), (33, -1), (34, 0), (35, -1), (36, 0), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10]
 solution : [9, 14, 24]


Solution : [9, 14, 24] has cost 20.


Before backtrack at level 8
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10]
 solution : [9, 14, 24]

After backtrack at level 8
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14]


Solution : [9, 14] has cost 13.


Decide in level 8 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 23]


New level: 9
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 23]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, 4096), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 14, 23]


Before reduction : 
 pending  : []
 solution : [9, 14, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 14, 23]


Solution : [9, 14, 23] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [9, 14, 23]

After backtrack at level 9
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 10, 30, 34, 36]
 solution : [9, 14]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {32, 34, 36, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 14, 10]


Before reduction : 
 pending  : []
 solution : [9, 14, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, 0), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [9, 14, 10]


Solution : [9, 14, 10] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [9, 14, 10]

After backtrack at level 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36]
 solution : [9, 14]


Before backtrack at level 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36]
 solution : [9, 14]

After backtrack at level 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 14]


Before backtrack at level 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23]
 solution : [9, 14]

After backtrack at level 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24]
 solution : [9, 14]


Before backtrack at level 6
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24]
 solution : [9, 14]

After backtrack at level 6
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9, 14]


Invert decision for 14 at level 5


New level: 6
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 6 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 33]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 33 with phase True at level 6

After decision at level 6
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 33]


New level: 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 33]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, 2147483648), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 32768), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {34, 30}

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 33]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, 32768), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 33]


Solution : [9, 33] has cost 19.


Before backtrack at level 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 33]

After backtrack at level 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 33]


Invert decision for 33 at level 6


New level: 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 32768), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, 32768), (37, 268435456), (38, 4194304), (39, 4096), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 7 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 36, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 36 with phase True at level 7

After decision at level 7
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 36]


New level: 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 36]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 36]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, 1073741824), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 36]


Solution : [9, 36] has cost 20.


Before backtrack at level 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 36]

After backtrack at level 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 36]


Invert decision for 36 at level 7


New level: 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 536870912), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, -1), (34, 16384), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 8 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 24, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 24]


New level: 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 24]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19, 30, 34]
 solution : [9, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, 1073741824), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {34, 30}

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 24]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 4096), (33, -1), (34, 0), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 9 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 19]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 19]


New level: 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 19]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23]
 solution : [9, 24, 19]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23]
 solution : [9, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 0), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23]
 solution : [9, 24, 19]


Solution : [9, 24, 19] has cost 20.


Before backtrack at level 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23]
 solution : [9, 24, 19]

After backtrack at level 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 512), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 10 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 37]


New level: 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 37]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, 134217728), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 1024), (40, -1), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 37]


Solution : [9, 24, 37] has cost 31.


Before backtrack at level 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 37]

After backtrack at level 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 8388608), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 8388608), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 1024), (40, -1), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, 8388608), (46, 1048576), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 11 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 41]


New level: 12
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 41]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 41]


Before reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 41]


Solution : [9, 24, 41] has cost 31.


Before backtrack at level 12
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 24, 41]

After backtrack at level 12
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24]


Before reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 4096), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 4096), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 12 among pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 16, 7, 29, 32, 39, 42, 43, 45, 46, 51]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 16]


New level: 13
 pending : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 16]


Before reduction : 
 pending  : [10, 23, 26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : {17, 2, 18, 22}

After reduction : 
 pending  : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 16]


Before reduction : 
 pending  : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 16]


Solution : [9, 24, 16] has cost 22.


Before backtrack at level 13
 pending : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 16]

After backtrack at level 13
 pending : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 24, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 24]


Before reduction : 
 pending  : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 65536), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, 33554432), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, 1024), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4096), (39, 512), (40, -1), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 24]


Solution : [9, 24] has cost 13.


Decide in level 13 among pending : [10, 23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 24, 10]


New level: 14
 pending : [23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 24, 10]


Before reduction : 
 pending  : [23, 26, 38, 21, 20, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 2, 22, 18, 17]
 solution : [9, 24, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 33554432), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, 4096), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 4096), (40, -1), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, 16777216), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {32, 39, 7, 42, 43, 45, 46, 51, 23, 29}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 10]


Solution : [9, 24, 10] has cost 17.


Before backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 10]

After backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24]

Essensial at level 14 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 14 : {32, 39, 7, 42, 43, 45, 46, 51, 29}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, 0), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, -1), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 23]


Solution : [9, 24, 23] has cost 20.


Before backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 24, 23]

After backtrack at level 14
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24]


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51]
 solution : [9, 24]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 24]


Before backtrack at level 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10]
 solution : [9, 24]

After backtrack at level 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16]
 solution : [9, 24]


Before backtrack at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16]
 solution : [9, 24]

After backtrack at level 11
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41]
 solution : [9, 24]


Before backtrack at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41]
 solution : [9, 24]

After backtrack at level 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37]
 solution : [9, 24]


Before backtrack at level 9
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37]
 solution : [9, 24]

After backtrack at level 9
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34, 19]
 solution : [9, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34, 19]
 solution : [9]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34, 19]
 solution : [9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34, 19]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 9 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34, 19]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34]
 solution : [9, 19]


New level: 10
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34]
 solution : [9, 19]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 16, 41, 37, 30, 34]
 solution : [9, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, 1073741824), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : {2, 38, 15, 16, 17, 18, 20, 21, 22, 26}

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19]


Before reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 134217728), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, 0), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19]


Solution : [9, 19] has cost 13.


Decide in level 10 among pending : [23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19, 23]


New level: 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19, 23]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 134217728), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, 2048), (38, -1), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 37, 39, 7, 41, 42, 43, 10, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 19, 23]


Before reduction : 
 pending  : []
 solution : [9, 19, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 19, 23]


Solution : [9, 19, 23] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [9, 19, 23]

After backtrack at level 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 10, 41, 37, 30, 34]
 solution : [9, 19]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {32, 34, 37, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : []
 solution : [9, 19, 10]


Before reduction : 
 pending  : []
 solution : [9, 19, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, 0), (38, -1), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [9, 19, 10]


Solution : [9, 19, 10] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [9, 19, 10]

After backtrack at level 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34]
 solution : [9, 19]


Before backtrack at level 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34]
 solution : [9, 19]

After backtrack at level 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 10 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 37, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 10

After decision at level 10
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 37]


New level: 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 37]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 37]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, 268435456), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 4096), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 37]


Solution : [9, 37] has cost 24.


Before backtrack at level 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 37]

After backtrack at level 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 37]


Invert decision for 37 at level 10


New level: 11
 pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9]


Before reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 262144), (8, -1), (9, -1), (10, 33554432), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 33554432), (24, -1), (25, -1), (26, 1048576), (27, -1), (28, -1), (29, 262144), (30, 4194304), (31, -1), (32, 4096), (33, -1), (34, 8192), (35, -1), (36, -1), (37, -1), (38, 1048576), (39, 4096), (40, -1), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, 33554432), (46, 4194304), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9]


Solution : [9] has cost 6.


Decide in level 11 among pending : [10, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 10]


New level: 12
 pending : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 10]


Before reduction : 
 pending  : [7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 26, 38, 21, 20, 15, 2, 22, 18, 17, 16, 23]
 solution : [9, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1048576), (8, -1), (9, -1), (10, 134217728), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 67108864), (17, 33554432), (18, 524288), (19, -1), (20, 8388608), (21, 262144), (22, 1114112), (23, 134217728), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 16384), (33, -1), (34, 32768), (35, -1), (36, -1), (37, -1), (38, 4194304), (39, 16384), (40, -1), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, 67108864), (46, 16777216), (47, -1), (48, -1), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 23, 29, 30}

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]
 solution : [9, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]
 solution : [9, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, 0), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 12 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17, 16]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 10, 16]


New level: 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 10, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 10, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 10, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 10, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 10, 16]


Solution : [9, 10, 16] has cost 19.


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15]
 solution : [9, 10, 16]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 10, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 13 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 10, 15]


New level: 14
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 10, 15]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 10, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 20, 21}

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 10, 15]


Before reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 10, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 10, 15]


Solution : [9, 10, 15] has cost 17.


Before backtrack at level 14
 pending : [26, 38, 2, 22, 17]
 solution : [9, 10, 15]

After backtrack at level 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 10, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 10]


Before reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 14 among pending : [26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 10, 17]


New level: 15
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 10, 17]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 10, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 10, 17]


Before reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 10, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 10, 17]


Solution : [9, 10, 17] has cost 19.


Before backtrack at level 15
 pending : [26, 38, 21, 20]
 solution : [9, 10, 17]

After backtrack at level 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 10, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 10]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 10]


Solution : [9, 10] has cost 10.


Decide in level 15 among pending : [26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 10, 20]


New level: 16
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 10, 20]


Before reduction : 
 pending  : [26, 38, 21, 2, 22, 18]
 solution : [9, 10, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {18, 21}

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 10, 20]


Before reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 10, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 10, 20]


Solution : [9, 10, 20] has cost 17.


Before backtrack at level 16
 pending : [26, 38, 2, 22]
 solution : [9, 10, 20]

After backtrack at level 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 10, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 10]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 18]
 solution : [9, 10]

Essensial at level 16 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 10, 21]


Before reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 10, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 10, 21]


Solution : [9, 10, 21] has cost 17.


Before backtrack at level 16
 pending : [26, 38, 2, 22, 18]
 solution : [9, 10, 21]

After backtrack at level 16
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 10]


Before backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 10]

After backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 10]


Before backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 10]

After backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 10]


Before backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 10]

After backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 10]


Before backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 10]

After backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 23, 16]
 solution : [9]

Essensial at level 12 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {32, 34, 39, 7, 41, 42, 43, 45, 46, 51, 29, 30}

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 23]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, -1), (34, 0), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, 0), (46, 0), (47, -1), (48, -1), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 12 among pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 16]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 23, 16]


New level: 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 23, 16]


Before reduction : 
 pending  : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, 33554432), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {17, 2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 23, 16]


Before reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 23, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, 0), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15]
 solution : [9, 23, 16]


Solution : [9, 23, 16] has cost 22.


Before backtrack at level 13
 pending : [26, 38, 21, 20, 15]
 solution : [9, 23, 16]

After backtrack at level 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 23, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 15, 2, 22, 18, 17]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 13 among pending : [26, 38, 21, 20, 15, 2, 22, 18, 17]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 23, 15]


New level: 14
 pending : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 23, 15]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18, 17]
 solution : [9, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16777216), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {18, 20, 21}

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 23, 15]


Before reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 23, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, 0), (19, -1), (20, 0), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17]
 solution : [9, 23, 15]


Solution : [9, 23, 15] has cost 20.


Before backtrack at level 14
 pending : [26, 38, 2, 22, 17]
 solution : [9, 23, 15]

After backtrack at level 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 23, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 23]


Before reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 23]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4194304), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 17, 21, 20, 18]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 14 among pending : [26, 38, 2, 22, 17, 21, 20, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 23, 17]


New level: 15
 pending : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 23, 17]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 20, 18]
 solution : [9, 23, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 16777216), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 18, 22}

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 23, 17]


Before reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 23, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 65536), (21, 65536), (22, 0), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20]
 solution : [9, 23, 17]


Solution : [9, 23, 17] has cost 22.


Before backtrack at level 15
 pending : [26, 38, 21, 20]
 solution : [9, 23, 17]

After backtrack at level 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 23, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 23]


Before reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2048), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [26, 38, 21, 20, 2, 22, 18]
 solution : [9, 23]


Solution : [9, 23] has cost 13.


Decide in level 15 among pending : [26, 38, 21, 20, 2, 22, 18]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 15

After decision at level 15
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 23, 20]


New level: 16
 pending : [26, 38, 21, 2, 22, 18]
 solution : [9, 23, 20]


Before reduction : 
 pending  : [26, 38, 21, 2, 22, 18]
 solution : [9, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 262144), (19, -1), (20, 8388608), (21, 262144), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {18, 21}

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 23, 20]


Before reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 23, 20]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22]
 solution : [9, 23, 20]


Solution : [9, 23, 20] has cost 20.


Before backtrack at level 16
 pending : [26, 38, 2, 22]
 solution : [9, 23, 20]

After backtrack at level 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 23, 20]


Invert decision for 20 at level 15


New level: 16
 pending : [26, 38, 2, 22, 21, 18]
 solution : [9, 23]


Before reduction : 
 pending  : [26, 38, 2, 22, 21, 18]
 solution : [9, 23]

Essensial at level 16 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 264192), (23, -1), (24, -1), (25, -1), (26, 524288), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 524288), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 23, 21]


Before reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 23, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 131072), (19, -1), (20, -1), (21, -1), (22, 540672), (23, -1), (24, -1), (25, -1), (26, 2097152), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 2097152), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [26, 38, 2, 22, 18]
 solution : [9, 23, 21]


Solution : [9, 23, 21] has cost 20.


Before backtrack at level 16
 pending : [26, 38, 2, 22, 18]
 solution : [9, 23, 21]

After backtrack at level 16
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 23]


Before backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21]
 solution : [9, 23]

After backtrack at level 15
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 23]


Before backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20]
 solution : [9, 23]

After backtrack at level 14
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 23]


Before backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17]
 solution : [9, 23]

After backtrack at level 13
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 23]


Before backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15]
 solution : [9, 23]

After backtrack at level 12
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9]


Before backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16]
 solution : [9]

After backtrack at level 11
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9]


Before backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10]
 solution : [9]

After backtrack at level 10
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37]
 solution : [9]


Before backtrack at level 9
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37]
 solution : [9]

After backtrack at level 9
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19]
 solution : [9]


Before backtrack at level 8
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19]
 solution : [9]

After backtrack at level 8
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24]
 solution : [9]


Before backtrack at level 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24]
 solution : [9]

After backtrack at level 7
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36]
 solution : [9]


Before backtrack at level 6
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36]
 solution : [9]

After backtrack at level 6
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33]
 solution : [9]


Before backtrack at level 5
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33]
 solution : [9]

After backtrack at level 5
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14]
 solution : [9]


Before backtrack at level 4
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14]
 solution : [9]

After backtrack at level 4
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14, 27]
 solution : [9]


Before backtrack at level 3
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14, 27]
 solution : [9]

After backtrack at level 3
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14, 27, 28]
 solution : [9]


Before backtrack at level 2
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14, 27, 28]
 solution : [9]

After backtrack at level 2
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14, 27, 28, 4]
 solution : [9]


Before backtrack at level 1
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14, 27, 28, 4]
 solution : [9]

After backtrack at level 1
 pending : [26, 38, 2, 22, 18, 21, 20, 17, 15, 23, 7, 29, 32, 39, 42, 43, 45, 46, 51, 41, 30, 34, 16, 10, 37, 19, 24, 36, 33, 14, 27, 28, 4, 3]
 solution : [9]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [9, 27, 10] (length = 3)

invariant [invar_9] forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_27] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_10] forall ACCEPTOR0,PROPOSER0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 10.160 seconds

[QRM NOTE]: Time elapsed since last: 1.829 seconds

[QRM NOTE]: Peak memory: 3180889 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_27 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_10 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall P,Q. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall Q2,Q1. (exists A. (member(A,Q1) & member(A,Q2)))) & (forall ACCEPTOR0,PROPOSER0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))))

[QRM NOTE]: Time elapsed since start: 11.984 seconds

[QRM NOTE]: Time elapsed since last: 1.825 seconds

[QRM NOTE]: Peak memory: 2181698 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

